//////////////////////////////////////////
//
// NOTE: This is *not* a valid shader file
//
///////////////////////////////////////////
Shader "Legacy Shaders/Reflective/Diffuse" {
Properties {
_Color ("Main Color", Color) = (1,1,1,1)
_ReflectColor ("Reflection Color", Color) = (1,1,1,0.5)
_MainTex ("Base (RGB) RefStrength (A)", 2D) = "white" { }
_Cube ("Reflection Cubemap", Cube) = "_Skybox" { }
}
SubShader {
 LOD 200
 Tags { "RenderType" = "Opaque" }
 Pass {
  Name "FORWARD"
  LOD 200
  Tags { "LIGHTMODE" = "FORWARDBASE" "RenderType" = "Opaque" "SHADOWSUPPORT" = "true" }
  GpuProgramID 53350
Program "vp" {
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_3;
  tmpvar_3 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_glesNormal * tmpvar_4));
  highp vec3 tmpvar_6;
  highp vec3 I_7;
  I_7 = (tmpvar_3 - _WorldSpaceCameraPos);
  tmpvar_6 = (I_7 - (2.0 * (
    dot (tmpvar_5, I_7)
   * tmpvar_5)));
  tmpvar_1 = tmpvar_6;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_5;
  xlv_TEXCOORD3 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec4 c_3;
  lowp vec3 tmpvar_4;
  lowp vec3 lightDir_5;
  highp vec3 tmpvar_6;
  mediump vec3 tmpvar_7;
  tmpvar_7 = _WorldSpaceLightPos0.xyz;
  lightDir_5 = tmpvar_7;
  tmpvar_6 = xlv_TEXCOORD1;
  tmpvar_4 = xlv_TEXCOORD2;
  lowp vec4 reflcol_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_8 = (textureCube (_Cube, tmpvar_6) * tmpvar_9.w);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_5;
  lowp vec4 c_10;
  lowp float diff_11;
  mediump float tmpvar_12;
  tmpvar_12 = max (0.0, dot (tmpvar_4, tmpvar_2));
  diff_11 = tmpvar_12;
  c_10.xyz = (((tmpvar_9 * _Color).xyz * tmpvar_1) * diff_11);
  c_10.w = (reflcol_8.w * _ReflectColor.w);
  c_3.xyz = (c_10.xyz + (reflcol_8.xyz * _ReflectColor.xyz));
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_3;
  tmpvar_3 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_glesNormal * tmpvar_4));
  highp vec3 tmpvar_6;
  highp vec3 I_7;
  I_7 = (tmpvar_3 - _WorldSpaceCameraPos);
  tmpvar_6 = (I_7 - (2.0 * (
    dot (tmpvar_5, I_7)
   * tmpvar_5)));
  tmpvar_1 = tmpvar_6;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_5;
  xlv_TEXCOORD3 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec4 c_3;
  lowp vec3 tmpvar_4;
  lowp vec3 lightDir_5;
  highp vec3 tmpvar_6;
  mediump vec3 tmpvar_7;
  tmpvar_7 = _WorldSpaceLightPos0.xyz;
  lightDir_5 = tmpvar_7;
  tmpvar_6 = xlv_TEXCOORD1;
  tmpvar_4 = xlv_TEXCOORD2;
  lowp vec4 reflcol_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_8 = (textureCube (_Cube, tmpvar_6) * tmpvar_9.w);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_5;
  lowp vec4 c_10;
  lowp float diff_11;
  mediump float tmpvar_12;
  tmpvar_12 = max (0.0, dot (tmpvar_4, tmpvar_2));
  diff_11 = tmpvar_12;
  c_10.xyz = (((tmpvar_9 * _Color).xyz * tmpvar_1) * diff_11);
  c_10.w = (reflcol_8.w * _ReflectColor.w);
  c_3.xyz = (c_10.xyz + (reflcol_8.xyz * _ReflectColor.xyz));
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_3;
  tmpvar_3 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_glesNormal * tmpvar_4));
  highp vec3 tmpvar_6;
  highp vec3 I_7;
  I_7 = (tmpvar_3 - _WorldSpaceCameraPos);
  tmpvar_6 = (I_7 - (2.0 * (
    dot (tmpvar_5, I_7)
   * tmpvar_5)));
  tmpvar_1 = tmpvar_6;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_5;
  xlv_TEXCOORD3 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec4 c_3;
  lowp vec3 tmpvar_4;
  lowp vec3 lightDir_5;
  highp vec3 tmpvar_6;
  mediump vec3 tmpvar_7;
  tmpvar_7 = _WorldSpaceLightPos0.xyz;
  lightDir_5 = tmpvar_7;
  tmpvar_6 = xlv_TEXCOORD1;
  tmpvar_4 = xlv_TEXCOORD2;
  lowp vec4 reflcol_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_8 = (textureCube (_Cube, tmpvar_6) * tmpvar_9.w);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_5;
  lowp vec4 c_10;
  lowp float diff_11;
  mediump float tmpvar_12;
  tmpvar_12 = max (0.0, dot (tmpvar_4, tmpvar_2));
  diff_11 = tmpvar_12;
  c_10.xyz = (((tmpvar_9 * _Color).xyz * tmpvar_1) * diff_11);
  c_10.w = (reflcol_8.w * _ReflectColor.w);
  c_3.xyz = (c_10.xyz + (reflcol_8.xyz * _ReflectColor.xyz));
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD4;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_3;
  tmpvar_3 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_glesNormal * tmpvar_4));
  highp vec3 tmpvar_6;
  highp vec3 I_7;
  I_7 = (tmpvar_3 - _WorldSpaceCameraPos);
  tmpvar_6 = (I_7 - (2.0 * (
    dot (tmpvar_5, I_7)
   * tmpvar_5)));
  tmpvar_1 = tmpvar_6;
  mediump vec3 normal_8;
  normal_8 = tmpvar_5;
  mediump vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = normal_8;
  mediump vec3 res_10;
  mediump vec3 x_11;
  x_11.x = dot (unity_SHAr, tmpvar_9);
  x_11.y = dot (unity_SHAg, tmpvar_9);
  x_11.z = dot (unity_SHAb, tmpvar_9);
  mediump vec3 x1_12;
  mediump vec4 tmpvar_13;
  tmpvar_13 = (normal_8.xyzz * normal_8.yzzx);
  x1_12.x = dot (unity_SHBr, tmpvar_13);
  x1_12.y = dot (unity_SHBg, tmpvar_13);
  x1_12.z = dot (unity_SHBb, tmpvar_13);
  res_10 = (x_11 + (x1_12 + (unity_SHC.xyz * 
    ((normal_8.x * normal_8.x) - (normal_8.y * normal_8.y))
  )));
  mediump vec3 tmpvar_14;
  tmpvar_14 = max (((1.055 * 
    pow (max (res_10, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_10 = tmpvar_14;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_5;
  xlv_TEXCOORD3 = tmpvar_3;
  xlv_TEXCOORD4 = max (vec3(0.0, 0.0, 0.0), tmpvar_14);
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD4;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec4 c_3;
  lowp vec3 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  mediump vec3 tmpvar_8;
  tmpvar_8 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_8;
  tmpvar_7 = xlv_TEXCOORD1;
  tmpvar_5 = xlv_TEXCOORD2;
  lowp vec4 reflcol_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_9 = (textureCube (_Cube, tmpvar_7) * tmpvar_10.w);
  tmpvar_4 = (tmpvar_10 * _Color).xyz;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  lowp vec4 c_11;
  lowp vec4 c_12;
  lowp float diff_13;
  mediump float tmpvar_14;
  tmpvar_14 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_13 = tmpvar_14;
  c_12.xyz = ((tmpvar_4 * tmpvar_1) * diff_13);
  c_12.w = (reflcol_9.w * _ReflectColor.w);
  c_11.w = c_12.w;
  c_11.xyz = (c_12.xyz + (tmpvar_4 * xlv_TEXCOORD4));
  c_3.xyz = (c_11.xyz + (reflcol_9.xyz * _ReflectColor.xyz));
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD4;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_3;
  tmpvar_3 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_glesNormal * tmpvar_4));
  highp vec3 tmpvar_6;
  highp vec3 I_7;
  I_7 = (tmpvar_3 - _WorldSpaceCameraPos);
  tmpvar_6 = (I_7 - (2.0 * (
    dot (tmpvar_5, I_7)
   * tmpvar_5)));
  tmpvar_1 = tmpvar_6;
  mediump vec3 normal_8;
  normal_8 = tmpvar_5;
  mediump vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = normal_8;
  mediump vec3 res_10;
  mediump vec3 x_11;
  x_11.x = dot (unity_SHAr, tmpvar_9);
  x_11.y = dot (unity_SHAg, tmpvar_9);
  x_11.z = dot (unity_SHAb, tmpvar_9);
  mediump vec3 x1_12;
  mediump vec4 tmpvar_13;
  tmpvar_13 = (normal_8.xyzz * normal_8.yzzx);
  x1_12.x = dot (unity_SHBr, tmpvar_13);
  x1_12.y = dot (unity_SHBg, tmpvar_13);
  x1_12.z = dot (unity_SHBb, tmpvar_13);
  res_10 = (x_11 + (x1_12 + (unity_SHC.xyz * 
    ((normal_8.x * normal_8.x) - (normal_8.y * normal_8.y))
  )));
  mediump vec3 tmpvar_14;
  tmpvar_14 = max (((1.055 * 
    pow (max (res_10, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_10 = tmpvar_14;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_5;
  xlv_TEXCOORD3 = tmpvar_3;
  xlv_TEXCOORD4 = max (vec3(0.0, 0.0, 0.0), tmpvar_14);
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD4;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec4 c_3;
  lowp vec3 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  mediump vec3 tmpvar_8;
  tmpvar_8 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_8;
  tmpvar_7 = xlv_TEXCOORD1;
  tmpvar_5 = xlv_TEXCOORD2;
  lowp vec4 reflcol_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_9 = (textureCube (_Cube, tmpvar_7) * tmpvar_10.w);
  tmpvar_4 = (tmpvar_10 * _Color).xyz;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  lowp vec4 c_11;
  lowp vec4 c_12;
  lowp float diff_13;
  mediump float tmpvar_14;
  tmpvar_14 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_13 = tmpvar_14;
  c_12.xyz = ((tmpvar_4 * tmpvar_1) * diff_13);
  c_12.w = (reflcol_9.w * _ReflectColor.w);
  c_11.w = c_12.w;
  c_11.xyz = (c_12.xyz + (tmpvar_4 * xlv_TEXCOORD4));
  c_3.xyz = (c_11.xyz + (reflcol_9.xyz * _ReflectColor.xyz));
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD4;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_3;
  tmpvar_3 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_glesNormal * tmpvar_4));
  highp vec3 tmpvar_6;
  highp vec3 I_7;
  I_7 = (tmpvar_3 - _WorldSpaceCameraPos);
  tmpvar_6 = (I_7 - (2.0 * (
    dot (tmpvar_5, I_7)
   * tmpvar_5)));
  tmpvar_1 = tmpvar_6;
  mediump vec3 normal_8;
  normal_8 = tmpvar_5;
  mediump vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = normal_8;
  mediump vec3 res_10;
  mediump vec3 x_11;
  x_11.x = dot (unity_SHAr, tmpvar_9);
  x_11.y = dot (unity_SHAg, tmpvar_9);
  x_11.z = dot (unity_SHAb, tmpvar_9);
  mediump vec3 x1_12;
  mediump vec4 tmpvar_13;
  tmpvar_13 = (normal_8.xyzz * normal_8.yzzx);
  x1_12.x = dot (unity_SHBr, tmpvar_13);
  x1_12.y = dot (unity_SHBg, tmpvar_13);
  x1_12.z = dot (unity_SHBb, tmpvar_13);
  res_10 = (x_11 + (x1_12 + (unity_SHC.xyz * 
    ((normal_8.x * normal_8.x) - (normal_8.y * normal_8.y))
  )));
  mediump vec3 tmpvar_14;
  tmpvar_14 = max (((1.055 * 
    pow (max (res_10, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_10 = tmpvar_14;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_5;
  xlv_TEXCOORD3 = tmpvar_3;
  xlv_TEXCOORD4 = max (vec3(0.0, 0.0, 0.0), tmpvar_14);
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD4;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec4 c_3;
  lowp vec3 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  mediump vec3 tmpvar_8;
  tmpvar_8 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_8;
  tmpvar_7 = xlv_TEXCOORD1;
  tmpvar_5 = xlv_TEXCOORD2;
  lowp vec4 reflcol_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_9 = (textureCube (_Cube, tmpvar_7) * tmpvar_10.w);
  tmpvar_4 = (tmpvar_10 * _Color).xyz;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  lowp vec4 c_11;
  lowp vec4 c_12;
  lowp float diff_13;
  mediump float tmpvar_14;
  tmpvar_14 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_13 = tmpvar_14;
  c_12.xyz = ((tmpvar_4 * tmpvar_1) * diff_13);
  c_12.w = (reflcol_9.w * _ReflectColor.w);
  c_11.w = c_12.w;
  c_11.xyz = (c_12.xyz + (tmpvar_4 * xlv_TEXCOORD4));
  c_3.xyz = (c_11.xyz + (reflcol_9.xyz * _ReflectColor.xyz));
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_3;
  tmpvar_3 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_glesNormal * tmpvar_4));
  highp vec3 tmpvar_6;
  highp vec3 I_7;
  I_7 = (tmpvar_3 - _WorldSpaceCameraPos);
  tmpvar_6 = (I_7 - (2.0 * (
    dot (tmpvar_5, I_7)
   * tmpvar_5)));
  tmpvar_1 = tmpvar_6;
  mediump vec3 normal_8;
  normal_8 = tmpvar_5;
  mediump vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = normal_8;
  mediump vec3 res_10;
  mediump vec3 x_11;
  x_11.x = dot (unity_SHAr, tmpvar_9);
  x_11.y = dot (unity_SHAg, tmpvar_9);
  x_11.z = dot (unity_SHAb, tmpvar_9);
  mediump vec3 x1_12;
  mediump vec4 tmpvar_13;
  tmpvar_13 = (normal_8.xyzz * normal_8.yzzx);
  x1_12.x = dot (unity_SHBr, tmpvar_13);
  x1_12.y = dot (unity_SHBg, tmpvar_13);
  x1_12.z = dot (unity_SHBb, tmpvar_13);
  res_10 = (x_11 + (x1_12 + (unity_SHC.xyz * 
    ((normal_8.x * normal_8.x) - (normal_8.y * normal_8.y))
  )));
  mediump vec3 tmpvar_14;
  tmpvar_14 = max (((1.055 * 
    pow (max (res_10, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_10 = tmpvar_14;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_5;
  xlv_TEXCOORD3 = tmpvar_3;
  xlv_TEXCOORD4 = max (vec3(0.0, 0.0, 0.0), tmpvar_14);
  xlv_TEXCOORD5 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 unity_OcclusionMaskSelector;
uniform sampler2D unity_ShadowMask;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp float atten_5;
  lowp vec3 tmpvar_6;
  lowp vec3 tmpvar_7;
  lowp vec3 lightDir_8;
  highp vec3 tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = _WorldSpaceLightPos0.xyz;
  lightDir_8 = tmpvar_10;
  tmpvar_9 = xlv_TEXCOORD1;
  tmpvar_7 = xlv_TEXCOORD2;
  lowp vec4 reflcol_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_11 = (textureCube (_Cube, tmpvar_9) * tmpvar_12.w);
  tmpvar_6 = (tmpvar_12 * _Color).xyz;
  mediump float shadowMaskAttenuation_13;
  lowp float tmpvar_14;
  tmpvar_14 = clamp (dot (texture2D (unity_ShadowMask, xlv_TEXCOORD5), unity_OcclusionMaskSelector), 0.0, 1.0);
  shadowMaskAttenuation_13 = tmpvar_14;
  atten_5 = shadowMaskAttenuation_13;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_8;
  tmpvar_1 = atten_5;
  mediump vec3 tmpvar_15;
  tmpvar_15 = (tmpvar_2 * tmpvar_1);
  tmpvar_2 = tmpvar_15;
  lowp vec4 c_16;
  lowp vec4 c_17;
  lowp float diff_18;
  mediump float tmpvar_19;
  tmpvar_19 = max (0.0, dot (tmpvar_7, tmpvar_3));
  diff_18 = tmpvar_19;
  c_17.xyz = ((tmpvar_6 * tmpvar_15) * diff_18);
  c_17.w = (reflcol_11.w * _ReflectColor.w);
  c_16.w = c_17.w;
  c_16.xyz = (c_17.xyz + (tmpvar_6 * xlv_TEXCOORD4));
  c_4.xyz = (c_16.xyz + (reflcol_11.xyz * _ReflectColor.xyz));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_3;
  tmpvar_3 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_glesNormal * tmpvar_4));
  highp vec3 tmpvar_6;
  highp vec3 I_7;
  I_7 = (tmpvar_3 - _WorldSpaceCameraPos);
  tmpvar_6 = (I_7 - (2.0 * (
    dot (tmpvar_5, I_7)
   * tmpvar_5)));
  tmpvar_1 = tmpvar_6;
  mediump vec3 normal_8;
  normal_8 = tmpvar_5;
  mediump vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = normal_8;
  mediump vec3 res_10;
  mediump vec3 x_11;
  x_11.x = dot (unity_SHAr, tmpvar_9);
  x_11.y = dot (unity_SHAg, tmpvar_9);
  x_11.z = dot (unity_SHAb, tmpvar_9);
  mediump vec3 x1_12;
  mediump vec4 tmpvar_13;
  tmpvar_13 = (normal_8.xyzz * normal_8.yzzx);
  x1_12.x = dot (unity_SHBr, tmpvar_13);
  x1_12.y = dot (unity_SHBg, tmpvar_13);
  x1_12.z = dot (unity_SHBb, tmpvar_13);
  res_10 = (x_11 + (x1_12 + (unity_SHC.xyz * 
    ((normal_8.x * normal_8.x) - (normal_8.y * normal_8.y))
  )));
  mediump vec3 tmpvar_14;
  tmpvar_14 = max (((1.055 * 
    pow (max (res_10, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_10 = tmpvar_14;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_5;
  xlv_TEXCOORD3 = tmpvar_3;
  xlv_TEXCOORD4 = max (vec3(0.0, 0.0, 0.0), tmpvar_14);
  xlv_TEXCOORD5 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 unity_OcclusionMaskSelector;
uniform sampler2D unity_ShadowMask;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp float atten_5;
  lowp vec3 tmpvar_6;
  lowp vec3 tmpvar_7;
  lowp vec3 lightDir_8;
  highp vec3 tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = _WorldSpaceLightPos0.xyz;
  lightDir_8 = tmpvar_10;
  tmpvar_9 = xlv_TEXCOORD1;
  tmpvar_7 = xlv_TEXCOORD2;
  lowp vec4 reflcol_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_11 = (textureCube (_Cube, tmpvar_9) * tmpvar_12.w);
  tmpvar_6 = (tmpvar_12 * _Color).xyz;
  mediump float shadowMaskAttenuation_13;
  lowp float tmpvar_14;
  tmpvar_14 = clamp (dot (texture2D (unity_ShadowMask, xlv_TEXCOORD5), unity_OcclusionMaskSelector), 0.0, 1.0);
  shadowMaskAttenuation_13 = tmpvar_14;
  atten_5 = shadowMaskAttenuation_13;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_8;
  tmpvar_1 = atten_5;
  mediump vec3 tmpvar_15;
  tmpvar_15 = (tmpvar_2 * tmpvar_1);
  tmpvar_2 = tmpvar_15;
  lowp vec4 c_16;
  lowp vec4 c_17;
  lowp float diff_18;
  mediump float tmpvar_19;
  tmpvar_19 = max (0.0, dot (tmpvar_7, tmpvar_3));
  diff_18 = tmpvar_19;
  c_17.xyz = ((tmpvar_6 * tmpvar_15) * diff_18);
  c_17.w = (reflcol_11.w * _ReflectColor.w);
  c_16.w = c_17.w;
  c_16.xyz = (c_17.xyz + (tmpvar_6 * xlv_TEXCOORD4));
  c_4.xyz = (c_16.xyz + (reflcol_11.xyz * _ReflectColor.xyz));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_3;
  tmpvar_3 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_glesNormal * tmpvar_4));
  highp vec3 tmpvar_6;
  highp vec3 I_7;
  I_7 = (tmpvar_3 - _WorldSpaceCameraPos);
  tmpvar_6 = (I_7 - (2.0 * (
    dot (tmpvar_5, I_7)
   * tmpvar_5)));
  tmpvar_1 = tmpvar_6;
  mediump vec3 normal_8;
  normal_8 = tmpvar_5;
  mediump vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = normal_8;
  mediump vec3 res_10;
  mediump vec3 x_11;
  x_11.x = dot (unity_SHAr, tmpvar_9);
  x_11.y = dot (unity_SHAg, tmpvar_9);
  x_11.z = dot (unity_SHAb, tmpvar_9);
  mediump vec3 x1_12;
  mediump vec4 tmpvar_13;
  tmpvar_13 = (normal_8.xyzz * normal_8.yzzx);
  x1_12.x = dot (unity_SHBr, tmpvar_13);
  x1_12.y = dot (unity_SHBg, tmpvar_13);
  x1_12.z = dot (unity_SHBb, tmpvar_13);
  res_10 = (x_11 + (x1_12 + (unity_SHC.xyz * 
    ((normal_8.x * normal_8.x) - (normal_8.y * normal_8.y))
  )));
  mediump vec3 tmpvar_14;
  tmpvar_14 = max (((1.055 * 
    pow (max (res_10, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_10 = tmpvar_14;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_5;
  xlv_TEXCOORD3 = tmpvar_3;
  xlv_TEXCOORD4 = max (vec3(0.0, 0.0, 0.0), tmpvar_14);
  xlv_TEXCOORD5 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 unity_OcclusionMaskSelector;
uniform sampler2D unity_ShadowMask;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp float atten_5;
  lowp vec3 tmpvar_6;
  lowp vec3 tmpvar_7;
  lowp vec3 lightDir_8;
  highp vec3 tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = _WorldSpaceLightPos0.xyz;
  lightDir_8 = tmpvar_10;
  tmpvar_9 = xlv_TEXCOORD1;
  tmpvar_7 = xlv_TEXCOORD2;
  lowp vec4 reflcol_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_11 = (textureCube (_Cube, tmpvar_9) * tmpvar_12.w);
  tmpvar_6 = (tmpvar_12 * _Color).xyz;
  mediump float shadowMaskAttenuation_13;
  lowp float tmpvar_14;
  tmpvar_14 = clamp (dot (texture2D (unity_ShadowMask, xlv_TEXCOORD5), unity_OcclusionMaskSelector), 0.0, 1.0);
  shadowMaskAttenuation_13 = tmpvar_14;
  atten_5 = shadowMaskAttenuation_13;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_8;
  tmpvar_1 = atten_5;
  mediump vec3 tmpvar_15;
  tmpvar_15 = (tmpvar_2 * tmpvar_1);
  tmpvar_2 = tmpvar_15;
  lowp vec4 c_16;
  lowp vec4 c_17;
  lowp float diff_18;
  mediump float tmpvar_19;
  tmpvar_19 = max (0.0, dot (tmpvar_7, tmpvar_3));
  diff_18 = tmpvar_19;
  c_17.xyz = ((tmpvar_6 * tmpvar_15) * diff_18);
  c_17.w = (reflcol_11.w * _ReflectColor.w);
  c_16.w = c_17.w;
  c_16.xyz = (c_17.xyz + (tmpvar_6 * xlv_TEXCOORD4));
  c_4.xyz = (c_16.xyz + (reflcol_11.xyz * _ReflectColor.xyz));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_4;
  tmpvar_4 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_5;
  tmpvar_5[0] = unity_WorldToObject[0].xyz;
  tmpvar_5[1] = unity_WorldToObject[1].xyz;
  tmpvar_5[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_glesNormal * tmpvar_5));
  highp vec3 tmpvar_7;
  highp vec3 I_8;
  I_8 = (tmpvar_4 - _WorldSpaceCameraPos);
  tmpvar_7 = (I_8 - (2.0 * (
    dot (tmpvar_6, I_8)
   * tmpvar_6)));
  tmpvar_1 = tmpvar_7;
  tmpvar_2.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = tmpvar_2;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec4 c_3;
  lowp vec3 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  mediump vec3 tmpvar_8;
  tmpvar_8 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_8;
  tmpvar_7 = xlv_TEXCOORD1;
  tmpvar_5 = xlv_TEXCOORD2;
  lowp vec4 reflcol_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_9 = (textureCube (_Cube, tmpvar_7) * tmpvar_10.w);
  tmpvar_4 = (tmpvar_10 * _Color).xyz;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  mediump vec3 tmpvar_11;
  mediump vec4 tmpvar_12;
  tmpvar_12 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_13;
  color_13 = tmpvar_12;
  tmpvar_11 = (unity_Lightmap_HDR.x * color_13.xyz);
  lowp vec4 c_14;
  lowp vec4 c_15;
  lowp float diff_16;
  mediump float tmpvar_17;
  tmpvar_17 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_16 = tmpvar_17;
  c_15.xyz = ((tmpvar_4 * tmpvar_1) * diff_16);
  c_15.w = (reflcol_9.w * _ReflectColor.w);
  c_14.w = c_15.w;
  c_14.xyz = (c_15.xyz + (tmpvar_4 * tmpvar_11));
  c_3.xyz = (c_14.xyz + (reflcol_9.xyz * _ReflectColor.xyz));
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_4;
  tmpvar_4 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_5;
  tmpvar_5[0] = unity_WorldToObject[0].xyz;
  tmpvar_5[1] = unity_WorldToObject[1].xyz;
  tmpvar_5[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_glesNormal * tmpvar_5));
  highp vec3 tmpvar_7;
  highp vec3 I_8;
  I_8 = (tmpvar_4 - _WorldSpaceCameraPos);
  tmpvar_7 = (I_8 - (2.0 * (
    dot (tmpvar_6, I_8)
   * tmpvar_6)));
  tmpvar_1 = tmpvar_7;
  tmpvar_2.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = tmpvar_2;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec4 c_3;
  lowp vec3 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  mediump vec3 tmpvar_8;
  tmpvar_8 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_8;
  tmpvar_7 = xlv_TEXCOORD1;
  tmpvar_5 = xlv_TEXCOORD2;
  lowp vec4 reflcol_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_9 = (textureCube (_Cube, tmpvar_7) * tmpvar_10.w);
  tmpvar_4 = (tmpvar_10 * _Color).xyz;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  mediump vec3 tmpvar_11;
  mediump vec4 tmpvar_12;
  tmpvar_12 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_13;
  color_13 = tmpvar_12;
  tmpvar_11 = (unity_Lightmap_HDR.x * color_13.xyz);
  lowp vec4 c_14;
  lowp vec4 c_15;
  lowp float diff_16;
  mediump float tmpvar_17;
  tmpvar_17 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_16 = tmpvar_17;
  c_15.xyz = ((tmpvar_4 * tmpvar_1) * diff_16);
  c_15.w = (reflcol_9.w * _ReflectColor.w);
  c_14.w = c_15.w;
  c_14.xyz = (c_15.xyz + (tmpvar_4 * tmpvar_11));
  c_3.xyz = (c_14.xyz + (reflcol_9.xyz * _ReflectColor.xyz));
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_4;
  tmpvar_4 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_5;
  tmpvar_5[0] = unity_WorldToObject[0].xyz;
  tmpvar_5[1] = unity_WorldToObject[1].xyz;
  tmpvar_5[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_glesNormal * tmpvar_5));
  highp vec3 tmpvar_7;
  highp vec3 I_8;
  I_8 = (tmpvar_4 - _WorldSpaceCameraPos);
  tmpvar_7 = (I_8 - (2.0 * (
    dot (tmpvar_6, I_8)
   * tmpvar_6)));
  tmpvar_1 = tmpvar_7;
  tmpvar_2.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = tmpvar_2;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec4 c_3;
  lowp vec3 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  mediump vec3 tmpvar_8;
  tmpvar_8 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_8;
  tmpvar_7 = xlv_TEXCOORD1;
  tmpvar_5 = xlv_TEXCOORD2;
  lowp vec4 reflcol_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_9 = (textureCube (_Cube, tmpvar_7) * tmpvar_10.w);
  tmpvar_4 = (tmpvar_10 * _Color).xyz;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  mediump vec3 tmpvar_11;
  mediump vec4 tmpvar_12;
  tmpvar_12 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_13;
  color_13 = tmpvar_12;
  tmpvar_11 = (unity_Lightmap_HDR.x * color_13.xyz);
  lowp vec4 c_14;
  lowp vec4 c_15;
  lowp float diff_16;
  mediump float tmpvar_17;
  tmpvar_17 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_16 = tmpvar_17;
  c_15.xyz = ((tmpvar_4 * tmpvar_1) * diff_16);
  c_15.w = (reflcol_9.w * _ReflectColor.w);
  c_14.w = c_15.w;
  c_14.xyz = (c_15.xyz + (tmpvar_4 * tmpvar_11));
  c_3.xyz = (c_14.xyz + (reflcol_9.xyz * _ReflectColor.xyz));
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTPROBE_SH" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_4;
  tmpvar_4 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_5;
  tmpvar_5[0] = unity_WorldToObject[0].xyz;
  tmpvar_5[1] = unity_WorldToObject[1].xyz;
  tmpvar_5[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_glesNormal * tmpvar_5));
  highp vec3 tmpvar_7;
  highp vec3 I_8;
  I_8 = (tmpvar_4 - _WorldSpaceCameraPos);
  tmpvar_7 = (I_8 - (2.0 * (
    dot (tmpvar_6, I_8)
   * tmpvar_6)));
  tmpvar_1 = tmpvar_7;
  tmpvar_2.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = tmpvar_2;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec4 c_3;
  lowp vec3 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  mediump vec3 tmpvar_8;
  tmpvar_8 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_8;
  tmpvar_7 = xlv_TEXCOORD1;
  tmpvar_5 = xlv_TEXCOORD2;
  lowp vec4 reflcol_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_9 = (textureCube (_Cube, tmpvar_7) * tmpvar_10.w);
  tmpvar_4 = (tmpvar_10 * _Color).xyz;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  mediump vec3 normalWorld_11;
  normalWorld_11 = tmpvar_5;
  mediump vec3 tmpvar_12;
  mediump vec3 ambient_13;
  mediump vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = normalWorld_11;
  mediump vec3 x_15;
  x_15.x = dot (unity_SHAr, tmpvar_14);
  x_15.y = dot (unity_SHAg, tmpvar_14);
  x_15.z = dot (unity_SHAb, tmpvar_14);
  mediump vec3 x1_16;
  mediump vec4 tmpvar_17;
  tmpvar_17 = (normalWorld_11.xyzz * normalWorld_11.yzzx);
  x1_16.x = dot (unity_SHBr, tmpvar_17);
  x1_16.y = dot (unity_SHBg, tmpvar_17);
  x1_16.z = dot (unity_SHBb, tmpvar_17);
  ambient_13 = max (vec3(0.0, 0.0, 0.0), (x_15 + (x1_16 + 
    (unity_SHC.xyz * ((normalWorld_11.x * normalWorld_11.x) - (normalWorld_11.y * normalWorld_11.y)))
  )));
  mediump vec3 tmpvar_18;
  tmpvar_18 = max (((1.055 * 
    pow (max (ambient_13, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  ambient_13 = tmpvar_18;
  mediump vec4 tmpvar_19;
  tmpvar_19 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_20;
  color_20 = tmpvar_19;
  tmpvar_12 = (tmpvar_18 + (unity_Lightmap_HDR.x * color_20.xyz));
  lowp vec4 c_21;
  lowp vec4 c_22;
  lowp float diff_23;
  mediump float tmpvar_24;
  tmpvar_24 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_23 = tmpvar_24;
  c_22.xyz = ((tmpvar_4 * tmpvar_1) * diff_23);
  c_22.w = (reflcol_9.w * _ReflectColor.w);
  c_21.w = c_22.w;
  c_21.xyz = (c_22.xyz + (tmpvar_4 * tmpvar_12));
  c_3.xyz = (c_21.xyz + (reflcol_9.xyz * _ReflectColor.xyz));
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTPROBE_SH" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_4;
  tmpvar_4 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_5;
  tmpvar_5[0] = unity_WorldToObject[0].xyz;
  tmpvar_5[1] = unity_WorldToObject[1].xyz;
  tmpvar_5[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_glesNormal * tmpvar_5));
  highp vec3 tmpvar_7;
  highp vec3 I_8;
  I_8 = (tmpvar_4 - _WorldSpaceCameraPos);
  tmpvar_7 = (I_8 - (2.0 * (
    dot (tmpvar_6, I_8)
   * tmpvar_6)));
  tmpvar_1 = tmpvar_7;
  tmpvar_2.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = tmpvar_2;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec4 c_3;
  lowp vec3 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  mediump vec3 tmpvar_8;
  tmpvar_8 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_8;
  tmpvar_7 = xlv_TEXCOORD1;
  tmpvar_5 = xlv_TEXCOORD2;
  lowp vec4 reflcol_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_9 = (textureCube (_Cube, tmpvar_7) * tmpvar_10.w);
  tmpvar_4 = (tmpvar_10 * _Color).xyz;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  mediump vec3 normalWorld_11;
  normalWorld_11 = tmpvar_5;
  mediump vec3 tmpvar_12;
  mediump vec3 ambient_13;
  mediump vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = normalWorld_11;
  mediump vec3 x_15;
  x_15.x = dot (unity_SHAr, tmpvar_14);
  x_15.y = dot (unity_SHAg, tmpvar_14);
  x_15.z = dot (unity_SHAb, tmpvar_14);
  mediump vec3 x1_16;
  mediump vec4 tmpvar_17;
  tmpvar_17 = (normalWorld_11.xyzz * normalWorld_11.yzzx);
  x1_16.x = dot (unity_SHBr, tmpvar_17);
  x1_16.y = dot (unity_SHBg, tmpvar_17);
  x1_16.z = dot (unity_SHBb, tmpvar_17);
  ambient_13 = max (vec3(0.0, 0.0, 0.0), (x_15 + (x1_16 + 
    (unity_SHC.xyz * ((normalWorld_11.x * normalWorld_11.x) - (normalWorld_11.y * normalWorld_11.y)))
  )));
  mediump vec3 tmpvar_18;
  tmpvar_18 = max (((1.055 * 
    pow (max (ambient_13, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  ambient_13 = tmpvar_18;
  mediump vec4 tmpvar_19;
  tmpvar_19 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_20;
  color_20 = tmpvar_19;
  tmpvar_12 = (tmpvar_18 + (unity_Lightmap_HDR.x * color_20.xyz));
  lowp vec4 c_21;
  lowp vec4 c_22;
  lowp float diff_23;
  mediump float tmpvar_24;
  tmpvar_24 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_23 = tmpvar_24;
  c_22.xyz = ((tmpvar_4 * tmpvar_1) * diff_23);
  c_22.w = (reflcol_9.w * _ReflectColor.w);
  c_21.w = c_22.w;
  c_21.xyz = (c_22.xyz + (tmpvar_4 * tmpvar_12));
  c_3.xyz = (c_21.xyz + (reflcol_9.xyz * _ReflectColor.xyz));
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTPROBE_SH" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_4;
  tmpvar_4 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_5;
  tmpvar_5[0] = unity_WorldToObject[0].xyz;
  tmpvar_5[1] = unity_WorldToObject[1].xyz;
  tmpvar_5[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_glesNormal * tmpvar_5));
  highp vec3 tmpvar_7;
  highp vec3 I_8;
  I_8 = (tmpvar_4 - _WorldSpaceCameraPos);
  tmpvar_7 = (I_8 - (2.0 * (
    dot (tmpvar_6, I_8)
   * tmpvar_6)));
  tmpvar_1 = tmpvar_7;
  tmpvar_2.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = tmpvar_2;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec4 c_3;
  lowp vec3 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  mediump vec3 tmpvar_8;
  tmpvar_8 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_8;
  tmpvar_7 = xlv_TEXCOORD1;
  tmpvar_5 = xlv_TEXCOORD2;
  lowp vec4 reflcol_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_9 = (textureCube (_Cube, tmpvar_7) * tmpvar_10.w);
  tmpvar_4 = (tmpvar_10 * _Color).xyz;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  mediump vec3 normalWorld_11;
  normalWorld_11 = tmpvar_5;
  mediump vec3 tmpvar_12;
  mediump vec3 ambient_13;
  mediump vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = normalWorld_11;
  mediump vec3 x_15;
  x_15.x = dot (unity_SHAr, tmpvar_14);
  x_15.y = dot (unity_SHAg, tmpvar_14);
  x_15.z = dot (unity_SHAb, tmpvar_14);
  mediump vec3 x1_16;
  mediump vec4 tmpvar_17;
  tmpvar_17 = (normalWorld_11.xyzz * normalWorld_11.yzzx);
  x1_16.x = dot (unity_SHBr, tmpvar_17);
  x1_16.y = dot (unity_SHBg, tmpvar_17);
  x1_16.z = dot (unity_SHBb, tmpvar_17);
  ambient_13 = max (vec3(0.0, 0.0, 0.0), (x_15 + (x1_16 + 
    (unity_SHC.xyz * ((normalWorld_11.x * normalWorld_11.x) - (normalWorld_11.y * normalWorld_11.y)))
  )));
  mediump vec3 tmpvar_18;
  tmpvar_18 = max (((1.055 * 
    pow (max (ambient_13, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  ambient_13 = tmpvar_18;
  mediump vec4 tmpvar_19;
  tmpvar_19 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_20;
  color_20 = tmpvar_19;
  tmpvar_12 = (tmpvar_18 + (unity_Lightmap_HDR.x * color_20.xyz));
  lowp vec4 c_21;
  lowp vec4 c_22;
  lowp float diff_23;
  mediump float tmpvar_24;
  tmpvar_24 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_23 = tmpvar_24;
  c_22.xyz = ((tmpvar_4 * tmpvar_1) * diff_23);
  c_22.w = (reflcol_9.w * _ReflectColor.w);
  c_21.w = c_22.w;
  c_21.xyz = (c_22.xyz + (tmpvar_4 * tmpvar_12));
  c_3.xyz = (c_21.xyz + (reflcol_9.xyz * _ReflectColor.xyz));
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_4;
  tmpvar_4 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_5;
  tmpvar_5[0] = unity_WorldToObject[0].xyz;
  tmpvar_5[1] = unity_WorldToObject[1].xyz;
  tmpvar_5[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_glesNormal * tmpvar_5));
  highp vec3 tmpvar_7;
  highp vec3 I_8;
  I_8 = (tmpvar_4 - _WorldSpaceCameraPos);
  tmpvar_7 = (I_8 - (2.0 * (
    dot (tmpvar_6, I_8)
   * tmpvar_6)));
  tmpvar_1 = tmpvar_7;
  tmpvar_2.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = tmpvar_2;
}


#endif
#ifdef FRAGMENT
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 c_1;
  highp vec3 tmpvar_2;
  tmpvar_2 = xlv_TEXCOORD1;
  lowp vec4 reflcol_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_3 = (textureCube (_Cube, tmpvar_2) * tmpvar_4.w);
  mediump vec3 tmpvar_5;
  mediump vec4 tmpvar_6;
  tmpvar_6 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_7;
  color_7 = tmpvar_6;
  tmpvar_5 = (unity_Lightmap_HDR.x * color_7.xyz);
  lowp vec4 c_8;
  lowp vec4 c_9;
  c_9.xyz = vec3(0.0, 0.0, 0.0);
  c_9.w = (reflcol_3.w * _ReflectColor.w);
  c_8.w = c_9.w;
  c_8.xyz = ((tmpvar_4 * _Color).xyz * tmpvar_5);
  c_1.xyz = (c_8.xyz + (reflcol_3.xyz * _ReflectColor.xyz));
  c_1.w = 1.0;
  gl_FragData[0] = c_1;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_4;
  tmpvar_4 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_5;
  tmpvar_5[0] = unity_WorldToObject[0].xyz;
  tmpvar_5[1] = unity_WorldToObject[1].xyz;
  tmpvar_5[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_glesNormal * tmpvar_5));
  highp vec3 tmpvar_7;
  highp vec3 I_8;
  I_8 = (tmpvar_4 - _WorldSpaceCameraPos);
  tmpvar_7 = (I_8 - (2.0 * (
    dot (tmpvar_6, I_8)
   * tmpvar_6)));
  tmpvar_1 = tmpvar_7;
  tmpvar_2.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = tmpvar_2;
}


#endif
#ifdef FRAGMENT
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 c_1;
  highp vec3 tmpvar_2;
  tmpvar_2 = xlv_TEXCOORD1;
  lowp vec4 reflcol_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_3 = (textureCube (_Cube, tmpvar_2) * tmpvar_4.w);
  mediump vec3 tmpvar_5;
  mediump vec4 tmpvar_6;
  tmpvar_6 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_7;
  color_7 = tmpvar_6;
  tmpvar_5 = (unity_Lightmap_HDR.x * color_7.xyz);
  lowp vec4 c_8;
  lowp vec4 c_9;
  c_9.xyz = vec3(0.0, 0.0, 0.0);
  c_9.w = (reflcol_3.w * _ReflectColor.w);
  c_8.w = c_9.w;
  c_8.xyz = ((tmpvar_4 * _Color).xyz * tmpvar_5);
  c_1.xyz = (c_8.xyz + (reflcol_3.xyz * _ReflectColor.xyz));
  c_1.w = 1.0;
  gl_FragData[0] = c_1;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_4;
  tmpvar_4 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_5;
  tmpvar_5[0] = unity_WorldToObject[0].xyz;
  tmpvar_5[1] = unity_WorldToObject[1].xyz;
  tmpvar_5[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_glesNormal * tmpvar_5));
  highp vec3 tmpvar_7;
  highp vec3 I_8;
  I_8 = (tmpvar_4 - _WorldSpaceCameraPos);
  tmpvar_7 = (I_8 - (2.0 * (
    dot (tmpvar_6, I_8)
   * tmpvar_6)));
  tmpvar_1 = tmpvar_7;
  tmpvar_2.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = tmpvar_2;
}


#endif
#ifdef FRAGMENT
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 c_1;
  highp vec3 tmpvar_2;
  tmpvar_2 = xlv_TEXCOORD1;
  lowp vec4 reflcol_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_3 = (textureCube (_Cube, tmpvar_2) * tmpvar_4.w);
  mediump vec3 tmpvar_5;
  mediump vec4 tmpvar_6;
  tmpvar_6 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_7;
  color_7 = tmpvar_6;
  tmpvar_5 = (unity_Lightmap_HDR.x * color_7.xyz);
  lowp vec4 c_8;
  lowp vec4 c_9;
  c_9.xyz = vec3(0.0, 0.0, 0.0);
  c_9.w = (reflcol_3.w * _ReflectColor.w);
  c_8.w = c_9.w;
  c_8.xyz = ((tmpvar_4 * _Color).xyz * tmpvar_5);
  c_1.xyz = (c_8.xyz + (reflcol_3.xyz * _ReflectColor.xyz));
  c_1.w = 1.0;
  gl_FragData[0] = c_1;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" "LIGHTPROBE_SH" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_4;
  tmpvar_4 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_5;
  tmpvar_5[0] = unity_WorldToObject[0].xyz;
  tmpvar_5[1] = unity_WorldToObject[1].xyz;
  tmpvar_5[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_glesNormal * tmpvar_5));
  highp vec3 tmpvar_7;
  highp vec3 I_8;
  I_8 = (tmpvar_4 - _WorldSpaceCameraPos);
  tmpvar_7 = (I_8 - (2.0 * (
    dot (tmpvar_6, I_8)
   * tmpvar_6)));
  tmpvar_1 = tmpvar_7;
  tmpvar_2.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = tmpvar_2;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = xlv_TEXCOORD1;
  tmpvar_2 = xlv_TEXCOORD2;
  lowp vec4 reflcol_4;
  lowp vec4 tmpvar_5;
  tmpvar_5 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_4 = (textureCube (_Cube, tmpvar_3) * tmpvar_5.w);
  mediump vec3 normalWorld_6;
  normalWorld_6 = tmpvar_2;
  mediump vec3 tmpvar_7;
  mediump vec3 ambient_8;
  mediump vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = normalWorld_6;
  mediump vec3 x_10;
  x_10.x = dot (unity_SHAr, tmpvar_9);
  x_10.y = dot (unity_SHAg, tmpvar_9);
  x_10.z = dot (unity_SHAb, tmpvar_9);
  mediump vec3 x1_11;
  mediump vec4 tmpvar_12;
  tmpvar_12 = (normalWorld_6.xyzz * normalWorld_6.yzzx);
  x1_11.x = dot (unity_SHBr, tmpvar_12);
  x1_11.y = dot (unity_SHBg, tmpvar_12);
  x1_11.z = dot (unity_SHBb, tmpvar_12);
  ambient_8 = max (vec3(0.0, 0.0, 0.0), (x_10 + (x1_11 + 
    (unity_SHC.xyz * ((normalWorld_6.x * normalWorld_6.x) - (normalWorld_6.y * normalWorld_6.y)))
  )));
  mediump vec3 tmpvar_13;
  tmpvar_13 = max (((1.055 * 
    pow (max (ambient_8, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  ambient_8 = tmpvar_13;
  mediump vec4 tmpvar_14;
  tmpvar_14 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_15;
  color_15 = tmpvar_14;
  tmpvar_7 = (tmpvar_13 + (unity_Lightmap_HDR.x * color_15.xyz));
  lowp vec4 c_16;
  lowp vec4 c_17;
  c_17.xyz = vec3(0.0, 0.0, 0.0);
  c_17.w = (reflcol_4.w * _ReflectColor.w);
  c_16.w = c_17.w;
  c_16.xyz = ((tmpvar_5 * _Color).xyz * tmpvar_7);
  c_1.xyz = (c_16.xyz + (reflcol_4.xyz * _ReflectColor.xyz));
  c_1.w = 1.0;
  gl_FragData[0] = c_1;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" "LIGHTPROBE_SH" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_4;
  tmpvar_4 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_5;
  tmpvar_5[0] = unity_WorldToObject[0].xyz;
  tmpvar_5[1] = unity_WorldToObject[1].xyz;
  tmpvar_5[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_glesNormal * tmpvar_5));
  highp vec3 tmpvar_7;
  highp vec3 I_8;
  I_8 = (tmpvar_4 - _WorldSpaceCameraPos);
  tmpvar_7 = (I_8 - (2.0 * (
    dot (tmpvar_6, I_8)
   * tmpvar_6)));
  tmpvar_1 = tmpvar_7;
  tmpvar_2.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = tmpvar_2;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = xlv_TEXCOORD1;
  tmpvar_2 = xlv_TEXCOORD2;
  lowp vec4 reflcol_4;
  lowp vec4 tmpvar_5;
  tmpvar_5 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_4 = (textureCube (_Cube, tmpvar_3) * tmpvar_5.w);
  mediump vec3 normalWorld_6;
  normalWorld_6 = tmpvar_2;
  mediump vec3 tmpvar_7;
  mediump vec3 ambient_8;
  mediump vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = normalWorld_6;
  mediump vec3 x_10;
  x_10.x = dot (unity_SHAr, tmpvar_9);
  x_10.y = dot (unity_SHAg, tmpvar_9);
  x_10.z = dot (unity_SHAb, tmpvar_9);
  mediump vec3 x1_11;
  mediump vec4 tmpvar_12;
  tmpvar_12 = (normalWorld_6.xyzz * normalWorld_6.yzzx);
  x1_11.x = dot (unity_SHBr, tmpvar_12);
  x1_11.y = dot (unity_SHBg, tmpvar_12);
  x1_11.z = dot (unity_SHBb, tmpvar_12);
  ambient_8 = max (vec3(0.0, 0.0, 0.0), (x_10 + (x1_11 + 
    (unity_SHC.xyz * ((normalWorld_6.x * normalWorld_6.x) - (normalWorld_6.y * normalWorld_6.y)))
  )));
  mediump vec3 tmpvar_13;
  tmpvar_13 = max (((1.055 * 
    pow (max (ambient_8, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  ambient_8 = tmpvar_13;
  mediump vec4 tmpvar_14;
  tmpvar_14 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_15;
  color_15 = tmpvar_14;
  tmpvar_7 = (tmpvar_13 + (unity_Lightmap_HDR.x * color_15.xyz));
  lowp vec4 c_16;
  lowp vec4 c_17;
  c_17.xyz = vec3(0.0, 0.0, 0.0);
  c_17.w = (reflcol_4.w * _ReflectColor.w);
  c_16.w = c_17.w;
  c_16.xyz = ((tmpvar_5 * _Color).xyz * tmpvar_7);
  c_1.xyz = (c_16.xyz + (reflcol_4.xyz * _ReflectColor.xyz));
  c_1.w = 1.0;
  gl_FragData[0] = c_1;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" "LIGHTPROBE_SH" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_4;
  tmpvar_4 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_5;
  tmpvar_5[0] = unity_WorldToObject[0].xyz;
  tmpvar_5[1] = unity_WorldToObject[1].xyz;
  tmpvar_5[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_glesNormal * tmpvar_5));
  highp vec3 tmpvar_7;
  highp vec3 I_8;
  I_8 = (tmpvar_4 - _WorldSpaceCameraPos);
  tmpvar_7 = (I_8 - (2.0 * (
    dot (tmpvar_6, I_8)
   * tmpvar_6)));
  tmpvar_1 = tmpvar_7;
  tmpvar_2.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = tmpvar_2;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = xlv_TEXCOORD1;
  tmpvar_2 = xlv_TEXCOORD2;
  lowp vec4 reflcol_4;
  lowp vec4 tmpvar_5;
  tmpvar_5 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_4 = (textureCube (_Cube, tmpvar_3) * tmpvar_5.w);
  mediump vec3 normalWorld_6;
  normalWorld_6 = tmpvar_2;
  mediump vec3 tmpvar_7;
  mediump vec3 ambient_8;
  mediump vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = normalWorld_6;
  mediump vec3 x_10;
  x_10.x = dot (unity_SHAr, tmpvar_9);
  x_10.y = dot (unity_SHAg, tmpvar_9);
  x_10.z = dot (unity_SHAb, tmpvar_9);
  mediump vec3 x1_11;
  mediump vec4 tmpvar_12;
  tmpvar_12 = (normalWorld_6.xyzz * normalWorld_6.yzzx);
  x1_11.x = dot (unity_SHBr, tmpvar_12);
  x1_11.y = dot (unity_SHBg, tmpvar_12);
  x1_11.z = dot (unity_SHBb, tmpvar_12);
  ambient_8 = max (vec3(0.0, 0.0, 0.0), (x_10 + (x1_11 + 
    (unity_SHC.xyz * ((normalWorld_6.x * normalWorld_6.x) - (normalWorld_6.y * normalWorld_6.y)))
  )));
  mediump vec3 tmpvar_13;
  tmpvar_13 = max (((1.055 * 
    pow (max (ambient_8, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  ambient_8 = tmpvar_13;
  mediump vec4 tmpvar_14;
  tmpvar_14 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_15;
  color_15 = tmpvar_14;
  tmpvar_7 = (tmpvar_13 + (unity_Lightmap_HDR.x * color_15.xyz));
  lowp vec4 c_16;
  lowp vec4 c_17;
  c_17.xyz = vec3(0.0, 0.0, 0.0);
  c_17.w = (reflcol_4.w * _ReflectColor.w);
  c_16.w = c_17.w;
  c_16.xyz = ((tmpvar_5 * _Color).xyz * tmpvar_7);
  c_1.xyz = (c_16.xyz + (reflcol_4.xyz * _ReflectColor.xyz));
  c_1.w = 1.0;
  gl_FragData[0] = c_1;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_4;
  tmpvar_4 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_5;
  tmpvar_5[0] = unity_WorldToObject[0].xyz;
  tmpvar_5[1] = unity_WorldToObject[1].xyz;
  tmpvar_5[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_glesNormal * tmpvar_5));
  highp vec3 tmpvar_7;
  highp vec3 I_8;
  I_8 = (tmpvar_4 - _WorldSpaceCameraPos);
  tmpvar_7 = (I_8 - (2.0 * (
    dot (tmpvar_6, I_8)
   * tmpvar_6)));
  tmpvar_1 = tmpvar_7;
  highp vec2 tmpvar_9;
  tmpvar_9 = (_glesMultiTexCoord1.xy * unity_LightmapST.xy);
  tmpvar_2.xy = (tmpvar_9 + unity_LightmapST.zw);
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = (tmpvar_9 + unity_LightmapST.zw);
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 unity_OcclusionMaskSelector;
uniform mediump sampler2D unity_Lightmap;
uniform sampler2D unity_ShadowMask;
uniform mediump vec4 unity_Lightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp float atten_5;
  lowp vec3 tmpvar_6;
  lowp vec3 tmpvar_7;
  lowp vec3 lightDir_8;
  highp vec3 tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = _WorldSpaceLightPos0.xyz;
  lightDir_8 = tmpvar_10;
  tmpvar_9 = xlv_TEXCOORD1;
  tmpvar_7 = xlv_TEXCOORD2;
  lowp vec4 reflcol_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_11 = (textureCube (_Cube, tmpvar_9) * tmpvar_12.w);
  tmpvar_6 = (tmpvar_12 * _Color).xyz;
  mediump float shadowMaskAttenuation_13;
  lowp float tmpvar_14;
  tmpvar_14 = clamp (dot (texture2D (unity_ShadowMask, xlv_TEXCOORD5), unity_OcclusionMaskSelector), 0.0, 1.0);
  shadowMaskAttenuation_13 = tmpvar_14;
  atten_5 = shadowMaskAttenuation_13;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_8;
  tmpvar_1 = atten_5;
  mediump vec3 tmpvar_15;
  mediump vec3 tmpvar_16;
  tmpvar_15 = (tmpvar_2 * tmpvar_1);
  mediump vec4 tmpvar_17;
  tmpvar_17 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_18;
  color_18 = tmpvar_17;
  tmpvar_16 = (unity_Lightmap_HDR.x * color_18.xyz);
  tmpvar_2 = tmpvar_15;
  lowp vec4 c_19;
  lowp vec4 c_20;
  lowp float diff_21;
  mediump float tmpvar_22;
  tmpvar_22 = max (0.0, dot (tmpvar_7, tmpvar_3));
  diff_21 = tmpvar_22;
  c_20.xyz = ((tmpvar_6 * tmpvar_15) * diff_21);
  c_20.w = (reflcol_11.w * _ReflectColor.w);
  c_19.w = c_20.w;
  c_19.xyz = (c_20.xyz + (tmpvar_6 * tmpvar_16));
  c_4.xyz = (c_19.xyz + (reflcol_11.xyz * _ReflectColor.xyz));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_4;
  tmpvar_4 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_5;
  tmpvar_5[0] = unity_WorldToObject[0].xyz;
  tmpvar_5[1] = unity_WorldToObject[1].xyz;
  tmpvar_5[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_glesNormal * tmpvar_5));
  highp vec3 tmpvar_7;
  highp vec3 I_8;
  I_8 = (tmpvar_4 - _WorldSpaceCameraPos);
  tmpvar_7 = (I_8 - (2.0 * (
    dot (tmpvar_6, I_8)
   * tmpvar_6)));
  tmpvar_1 = tmpvar_7;
  highp vec2 tmpvar_9;
  tmpvar_9 = (_glesMultiTexCoord1.xy * unity_LightmapST.xy);
  tmpvar_2.xy = (tmpvar_9 + unity_LightmapST.zw);
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = (tmpvar_9 + unity_LightmapST.zw);
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 unity_OcclusionMaskSelector;
uniform mediump sampler2D unity_Lightmap;
uniform sampler2D unity_ShadowMask;
uniform mediump vec4 unity_Lightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp float atten_5;
  lowp vec3 tmpvar_6;
  lowp vec3 tmpvar_7;
  lowp vec3 lightDir_8;
  highp vec3 tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = _WorldSpaceLightPos0.xyz;
  lightDir_8 = tmpvar_10;
  tmpvar_9 = xlv_TEXCOORD1;
  tmpvar_7 = xlv_TEXCOORD2;
  lowp vec4 reflcol_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_11 = (textureCube (_Cube, tmpvar_9) * tmpvar_12.w);
  tmpvar_6 = (tmpvar_12 * _Color).xyz;
  mediump float shadowMaskAttenuation_13;
  lowp float tmpvar_14;
  tmpvar_14 = clamp (dot (texture2D (unity_ShadowMask, xlv_TEXCOORD5), unity_OcclusionMaskSelector), 0.0, 1.0);
  shadowMaskAttenuation_13 = tmpvar_14;
  atten_5 = shadowMaskAttenuation_13;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_8;
  tmpvar_1 = atten_5;
  mediump vec3 tmpvar_15;
  mediump vec3 tmpvar_16;
  tmpvar_15 = (tmpvar_2 * tmpvar_1);
  mediump vec4 tmpvar_17;
  tmpvar_17 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_18;
  color_18 = tmpvar_17;
  tmpvar_16 = (unity_Lightmap_HDR.x * color_18.xyz);
  tmpvar_2 = tmpvar_15;
  lowp vec4 c_19;
  lowp vec4 c_20;
  lowp float diff_21;
  mediump float tmpvar_22;
  tmpvar_22 = max (0.0, dot (tmpvar_7, tmpvar_3));
  diff_21 = tmpvar_22;
  c_20.xyz = ((tmpvar_6 * tmpvar_15) * diff_21);
  c_20.w = (reflcol_11.w * _ReflectColor.w);
  c_19.w = c_20.w;
  c_19.xyz = (c_20.xyz + (tmpvar_6 * tmpvar_16));
  c_4.xyz = (c_19.xyz + (reflcol_11.xyz * _ReflectColor.xyz));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_4;
  tmpvar_4 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_5;
  tmpvar_5[0] = unity_WorldToObject[0].xyz;
  tmpvar_5[1] = unity_WorldToObject[1].xyz;
  tmpvar_5[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_glesNormal * tmpvar_5));
  highp vec3 tmpvar_7;
  highp vec3 I_8;
  I_8 = (tmpvar_4 - _WorldSpaceCameraPos);
  tmpvar_7 = (I_8 - (2.0 * (
    dot (tmpvar_6, I_8)
   * tmpvar_6)));
  tmpvar_1 = tmpvar_7;
  highp vec2 tmpvar_9;
  tmpvar_9 = (_glesMultiTexCoord1.xy * unity_LightmapST.xy);
  tmpvar_2.xy = (tmpvar_9 + unity_LightmapST.zw);
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = (tmpvar_9 + unity_LightmapST.zw);
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 unity_OcclusionMaskSelector;
uniform mediump sampler2D unity_Lightmap;
uniform sampler2D unity_ShadowMask;
uniform mediump vec4 unity_Lightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp float atten_5;
  lowp vec3 tmpvar_6;
  lowp vec3 tmpvar_7;
  lowp vec3 lightDir_8;
  highp vec3 tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = _WorldSpaceLightPos0.xyz;
  lightDir_8 = tmpvar_10;
  tmpvar_9 = xlv_TEXCOORD1;
  tmpvar_7 = xlv_TEXCOORD2;
  lowp vec4 reflcol_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_11 = (textureCube (_Cube, tmpvar_9) * tmpvar_12.w);
  tmpvar_6 = (tmpvar_12 * _Color).xyz;
  mediump float shadowMaskAttenuation_13;
  lowp float tmpvar_14;
  tmpvar_14 = clamp (dot (texture2D (unity_ShadowMask, xlv_TEXCOORD5), unity_OcclusionMaskSelector), 0.0, 1.0);
  shadowMaskAttenuation_13 = tmpvar_14;
  atten_5 = shadowMaskAttenuation_13;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_8;
  tmpvar_1 = atten_5;
  mediump vec3 tmpvar_15;
  mediump vec3 tmpvar_16;
  tmpvar_15 = (tmpvar_2 * tmpvar_1);
  mediump vec4 tmpvar_17;
  tmpvar_17 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_18;
  color_18 = tmpvar_17;
  tmpvar_16 = (unity_Lightmap_HDR.x * color_18.xyz);
  tmpvar_2 = tmpvar_15;
  lowp vec4 c_19;
  lowp vec4 c_20;
  lowp float diff_21;
  mediump float tmpvar_22;
  tmpvar_22 = max (0.0, dot (tmpvar_7, tmpvar_3));
  diff_21 = tmpvar_22;
  c_20.xyz = ((tmpvar_6 * tmpvar_15) * diff_21);
  c_20.w = (reflcol_11.w * _ReflectColor.w);
  c_19.w = c_20.w;
  c_19.xyz = (c_20.xyz + (tmpvar_6 * tmpvar_16));
  c_4.xyz = (c_19.xyz + (reflcol_11.xyz * _ReflectColor.xyz));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_4;
  tmpvar_4 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_5;
  tmpvar_5[0] = unity_WorldToObject[0].xyz;
  tmpvar_5[1] = unity_WorldToObject[1].xyz;
  tmpvar_5[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_glesNormal * tmpvar_5));
  highp vec3 tmpvar_7;
  highp vec3 I_8;
  I_8 = (tmpvar_4 - _WorldSpaceCameraPos);
  tmpvar_7 = (I_8 - (2.0 * (
    dot (tmpvar_6, I_8)
   * tmpvar_6)));
  tmpvar_1 = tmpvar_7;
  highp vec2 tmpvar_9;
  tmpvar_9 = (_glesMultiTexCoord1.xy * unity_LightmapST.xy);
  tmpvar_2.xy = (tmpvar_9 + unity_LightmapST.zw);
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = (tmpvar_9 + unity_LightmapST.zw);
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform lowp vec4 unity_OcclusionMaskSelector;
uniform mediump sampler2D unity_Lightmap;
uniform sampler2D unity_ShadowMask;
uniform mediump vec4 unity_Lightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp float atten_5;
  lowp vec3 tmpvar_6;
  lowp vec3 tmpvar_7;
  lowp vec3 lightDir_8;
  highp vec3 tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = _WorldSpaceLightPos0.xyz;
  lightDir_8 = tmpvar_10;
  tmpvar_9 = xlv_TEXCOORD1;
  tmpvar_7 = xlv_TEXCOORD2;
  lowp vec4 reflcol_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_11 = (textureCube (_Cube, tmpvar_9) * tmpvar_12.w);
  tmpvar_6 = (tmpvar_12 * _Color).xyz;
  mediump float shadowMaskAttenuation_13;
  lowp float tmpvar_14;
  tmpvar_14 = clamp (dot (texture2D (unity_ShadowMask, xlv_TEXCOORD5), unity_OcclusionMaskSelector), 0.0, 1.0);
  shadowMaskAttenuation_13 = tmpvar_14;
  atten_5 = shadowMaskAttenuation_13;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_8;
  tmpvar_1 = atten_5;
  mediump vec3 normalWorld_15;
  normalWorld_15 = tmpvar_7;
  mediump vec3 tmpvar_16;
  mediump vec3 tmpvar_17;
  tmpvar_16 = (tmpvar_2 * tmpvar_1);
  mediump vec3 ambient_18;
  mediump vec4 tmpvar_19;
  tmpvar_19.w = 1.0;
  tmpvar_19.xyz = normalWorld_15;
  mediump vec3 x_20;
  x_20.x = dot (unity_SHAr, tmpvar_19);
  x_20.y = dot (unity_SHAg, tmpvar_19);
  x_20.z = dot (unity_SHAb, tmpvar_19);
  mediump vec3 x1_21;
  mediump vec4 tmpvar_22;
  tmpvar_22 = (normalWorld_15.xyzz * normalWorld_15.yzzx);
  x1_21.x = dot (unity_SHBr, tmpvar_22);
  x1_21.y = dot (unity_SHBg, tmpvar_22);
  x1_21.z = dot (unity_SHBb, tmpvar_22);
  ambient_18 = max (vec3(0.0, 0.0, 0.0), (x_20 + (x1_21 + 
    (unity_SHC.xyz * ((normalWorld_15.x * normalWorld_15.x) - (normalWorld_15.y * normalWorld_15.y)))
  )));
  mediump vec3 tmpvar_23;
  tmpvar_23 = max (((1.055 * 
    pow (max (ambient_18, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  ambient_18 = tmpvar_23;
  mediump vec4 tmpvar_24;
  tmpvar_24 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_25;
  color_25 = tmpvar_24;
  tmpvar_17 = (tmpvar_23 + (unity_Lightmap_HDR.x * color_25.xyz));
  tmpvar_2 = tmpvar_16;
  lowp vec4 c_26;
  lowp vec4 c_27;
  lowp float diff_28;
  mediump float tmpvar_29;
  tmpvar_29 = max (0.0, dot (tmpvar_7, tmpvar_3));
  diff_28 = tmpvar_29;
  c_27.xyz = ((tmpvar_6 * tmpvar_16) * diff_28);
  c_27.w = (reflcol_11.w * _ReflectColor.w);
  c_26.w = c_27.w;
  c_26.xyz = (c_27.xyz + (tmpvar_6 * tmpvar_17));
  c_4.xyz = (c_26.xyz + (reflcol_11.xyz * _ReflectColor.xyz));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_4;
  tmpvar_4 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_5;
  tmpvar_5[0] = unity_WorldToObject[0].xyz;
  tmpvar_5[1] = unity_WorldToObject[1].xyz;
  tmpvar_5[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_glesNormal * tmpvar_5));
  highp vec3 tmpvar_7;
  highp vec3 I_8;
  I_8 = (tmpvar_4 - _WorldSpaceCameraPos);
  tmpvar_7 = (I_8 - (2.0 * (
    dot (tmpvar_6, I_8)
   * tmpvar_6)));
  tmpvar_1 = tmpvar_7;
  highp vec2 tmpvar_9;
  tmpvar_9 = (_glesMultiTexCoord1.xy * unity_LightmapST.xy);
  tmpvar_2.xy = (tmpvar_9 + unity_LightmapST.zw);
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = (tmpvar_9 + unity_LightmapST.zw);
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform lowp vec4 unity_OcclusionMaskSelector;
uniform mediump sampler2D unity_Lightmap;
uniform sampler2D unity_ShadowMask;
uniform mediump vec4 unity_Lightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp float atten_5;
  lowp vec3 tmpvar_6;
  lowp vec3 tmpvar_7;
  lowp vec3 lightDir_8;
  highp vec3 tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = _WorldSpaceLightPos0.xyz;
  lightDir_8 = tmpvar_10;
  tmpvar_9 = xlv_TEXCOORD1;
  tmpvar_7 = xlv_TEXCOORD2;
  lowp vec4 reflcol_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_11 = (textureCube (_Cube, tmpvar_9) * tmpvar_12.w);
  tmpvar_6 = (tmpvar_12 * _Color).xyz;
  mediump float shadowMaskAttenuation_13;
  lowp float tmpvar_14;
  tmpvar_14 = clamp (dot (texture2D (unity_ShadowMask, xlv_TEXCOORD5), unity_OcclusionMaskSelector), 0.0, 1.0);
  shadowMaskAttenuation_13 = tmpvar_14;
  atten_5 = shadowMaskAttenuation_13;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_8;
  tmpvar_1 = atten_5;
  mediump vec3 normalWorld_15;
  normalWorld_15 = tmpvar_7;
  mediump vec3 tmpvar_16;
  mediump vec3 tmpvar_17;
  tmpvar_16 = (tmpvar_2 * tmpvar_1);
  mediump vec3 ambient_18;
  mediump vec4 tmpvar_19;
  tmpvar_19.w = 1.0;
  tmpvar_19.xyz = normalWorld_15;
  mediump vec3 x_20;
  x_20.x = dot (unity_SHAr, tmpvar_19);
  x_20.y = dot (unity_SHAg, tmpvar_19);
  x_20.z = dot (unity_SHAb, tmpvar_19);
  mediump vec3 x1_21;
  mediump vec4 tmpvar_22;
  tmpvar_22 = (normalWorld_15.xyzz * normalWorld_15.yzzx);
  x1_21.x = dot (unity_SHBr, tmpvar_22);
  x1_21.y = dot (unity_SHBg, tmpvar_22);
  x1_21.z = dot (unity_SHBb, tmpvar_22);
  ambient_18 = max (vec3(0.0, 0.0, 0.0), (x_20 + (x1_21 + 
    (unity_SHC.xyz * ((normalWorld_15.x * normalWorld_15.x) - (normalWorld_15.y * normalWorld_15.y)))
  )));
  mediump vec3 tmpvar_23;
  tmpvar_23 = max (((1.055 * 
    pow (max (ambient_18, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  ambient_18 = tmpvar_23;
  mediump vec4 tmpvar_24;
  tmpvar_24 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_25;
  color_25 = tmpvar_24;
  tmpvar_17 = (tmpvar_23 + (unity_Lightmap_HDR.x * color_25.xyz));
  tmpvar_2 = tmpvar_16;
  lowp vec4 c_26;
  lowp vec4 c_27;
  lowp float diff_28;
  mediump float tmpvar_29;
  tmpvar_29 = max (0.0, dot (tmpvar_7, tmpvar_3));
  diff_28 = tmpvar_29;
  c_27.xyz = ((tmpvar_6 * tmpvar_16) * diff_28);
  c_27.w = (reflcol_11.w * _ReflectColor.w);
  c_26.w = c_27.w;
  c_26.xyz = (c_27.xyz + (tmpvar_6 * tmpvar_17));
  c_4.xyz = (c_26.xyz + (reflcol_11.xyz * _ReflectColor.xyz));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_4;
  tmpvar_4 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_5;
  tmpvar_5[0] = unity_WorldToObject[0].xyz;
  tmpvar_5[1] = unity_WorldToObject[1].xyz;
  tmpvar_5[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_glesNormal * tmpvar_5));
  highp vec3 tmpvar_7;
  highp vec3 I_8;
  I_8 = (tmpvar_4 - _WorldSpaceCameraPos);
  tmpvar_7 = (I_8 - (2.0 * (
    dot (tmpvar_6, I_8)
   * tmpvar_6)));
  tmpvar_1 = tmpvar_7;
  highp vec2 tmpvar_9;
  tmpvar_9 = (_glesMultiTexCoord1.xy * unity_LightmapST.xy);
  tmpvar_2.xy = (tmpvar_9 + unity_LightmapST.zw);
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = (tmpvar_9 + unity_LightmapST.zw);
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform lowp vec4 unity_OcclusionMaskSelector;
uniform mediump sampler2D unity_Lightmap;
uniform sampler2D unity_ShadowMask;
uniform mediump vec4 unity_Lightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp float atten_5;
  lowp vec3 tmpvar_6;
  lowp vec3 tmpvar_7;
  lowp vec3 lightDir_8;
  highp vec3 tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = _WorldSpaceLightPos0.xyz;
  lightDir_8 = tmpvar_10;
  tmpvar_9 = xlv_TEXCOORD1;
  tmpvar_7 = xlv_TEXCOORD2;
  lowp vec4 reflcol_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_11 = (textureCube (_Cube, tmpvar_9) * tmpvar_12.w);
  tmpvar_6 = (tmpvar_12 * _Color).xyz;
  mediump float shadowMaskAttenuation_13;
  lowp float tmpvar_14;
  tmpvar_14 = clamp (dot (texture2D (unity_ShadowMask, xlv_TEXCOORD5), unity_OcclusionMaskSelector), 0.0, 1.0);
  shadowMaskAttenuation_13 = tmpvar_14;
  atten_5 = shadowMaskAttenuation_13;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_8;
  tmpvar_1 = atten_5;
  mediump vec3 normalWorld_15;
  normalWorld_15 = tmpvar_7;
  mediump vec3 tmpvar_16;
  mediump vec3 tmpvar_17;
  tmpvar_16 = (tmpvar_2 * tmpvar_1);
  mediump vec3 ambient_18;
  mediump vec4 tmpvar_19;
  tmpvar_19.w = 1.0;
  tmpvar_19.xyz = normalWorld_15;
  mediump vec3 x_20;
  x_20.x = dot (unity_SHAr, tmpvar_19);
  x_20.y = dot (unity_SHAg, tmpvar_19);
  x_20.z = dot (unity_SHAb, tmpvar_19);
  mediump vec3 x1_21;
  mediump vec4 tmpvar_22;
  tmpvar_22 = (normalWorld_15.xyzz * normalWorld_15.yzzx);
  x1_21.x = dot (unity_SHBr, tmpvar_22);
  x1_21.y = dot (unity_SHBg, tmpvar_22);
  x1_21.z = dot (unity_SHBb, tmpvar_22);
  ambient_18 = max (vec3(0.0, 0.0, 0.0), (x_20 + (x1_21 + 
    (unity_SHC.xyz * ((normalWorld_15.x * normalWorld_15.x) - (normalWorld_15.y * normalWorld_15.y)))
  )));
  mediump vec3 tmpvar_23;
  tmpvar_23 = max (((1.055 * 
    pow (max (ambient_18, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  ambient_18 = tmpvar_23;
  mediump vec4 tmpvar_24;
  tmpvar_24 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_25;
  color_25 = tmpvar_24;
  tmpvar_17 = (tmpvar_23 + (unity_Lightmap_HDR.x * color_25.xyz));
  tmpvar_2 = tmpvar_16;
  lowp vec4 c_26;
  lowp vec4 c_27;
  lowp float diff_28;
  mediump float tmpvar_29;
  tmpvar_29 = max (0.0, dot (tmpvar_7, tmpvar_3));
  diff_28 = tmpvar_29;
  c_27.xyz = ((tmpvar_6 * tmpvar_16) * diff_28);
  c_27.w = (reflcol_11.w * _ReflectColor.w);
  c_26.w = c_27.w;
  c_26.xyz = (c_27.xyz + (tmpvar_6 * tmpvar_17));
  c_4.xyz = (c_26.xyz + (reflcol_11.xyz * _ReflectColor.xyz));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" "SHADOWS_SHADOWMASK" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_4;
  tmpvar_4 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_5;
  tmpvar_5[0] = unity_WorldToObject[0].xyz;
  tmpvar_5[1] = unity_WorldToObject[1].xyz;
  tmpvar_5[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_glesNormal * tmpvar_5));
  highp vec3 tmpvar_7;
  highp vec3 I_8;
  I_8 = (tmpvar_4 - _WorldSpaceCameraPos);
  tmpvar_7 = (I_8 - (2.0 * (
    dot (tmpvar_6, I_8)
   * tmpvar_6)));
  tmpvar_1 = tmpvar_7;
  highp vec2 tmpvar_9;
  tmpvar_9 = (_glesMultiTexCoord1.xy * unity_LightmapST.xy);
  tmpvar_2.xy = (tmpvar_9 + unity_LightmapST.zw);
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = (tmpvar_9 + unity_LightmapST.zw);
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 unity_OcclusionMaskSelector;
uniform mediump sampler2D unity_Lightmap;
uniform sampler2D unity_ShadowMask;
uniform mediump vec4 unity_Lightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp float atten_5;
  lowp vec3 tmpvar_6;
  lowp vec3 tmpvar_7;
  lowp vec3 lightDir_8;
  highp vec3 tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = _WorldSpaceLightPos0.xyz;
  lightDir_8 = tmpvar_10;
  tmpvar_9 = xlv_TEXCOORD1;
  tmpvar_7 = xlv_TEXCOORD2;
  lowp vec4 reflcol_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_11 = (textureCube (_Cube, tmpvar_9) * tmpvar_12.w);
  tmpvar_6 = (tmpvar_12 * _Color).xyz;
  mediump float shadowMaskAttenuation_13;
  lowp float tmpvar_14;
  tmpvar_14 = clamp (dot (texture2D (unity_ShadowMask, xlv_TEXCOORD5), unity_OcclusionMaskSelector), 0.0, 1.0);
  shadowMaskAttenuation_13 = tmpvar_14;
  atten_5 = shadowMaskAttenuation_13;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_8;
  tmpvar_1 = atten_5;
  mediump vec3 tmpvar_15;
  mediump vec3 tmpvar_16;
  tmpvar_15 = (tmpvar_2 * tmpvar_1);
  mediump vec4 tmpvar_17;
  tmpvar_17 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_18;
  color_18 = tmpvar_17;
  tmpvar_16 = (unity_Lightmap_HDR.x * color_18.xyz);
  tmpvar_2 = tmpvar_15;
  lowp vec4 c_19;
  lowp vec4 c_20;
  lowp float diff_21;
  mediump float tmpvar_22;
  tmpvar_22 = max (0.0, dot (tmpvar_7, tmpvar_3));
  diff_21 = tmpvar_22;
  c_20.xyz = ((tmpvar_6 * tmpvar_15) * diff_21);
  c_20.w = (reflcol_11.w * _ReflectColor.w);
  c_19.w = c_20.w;
  c_19.xyz = (c_20.xyz + (tmpvar_6 * tmpvar_16));
  c_4.xyz = (c_19.xyz + (reflcol_11.xyz * _ReflectColor.xyz));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" "SHADOWS_SHADOWMASK" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_4;
  tmpvar_4 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_5;
  tmpvar_5[0] = unity_WorldToObject[0].xyz;
  tmpvar_5[1] = unity_WorldToObject[1].xyz;
  tmpvar_5[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_glesNormal * tmpvar_5));
  highp vec3 tmpvar_7;
  highp vec3 I_8;
  I_8 = (tmpvar_4 - _WorldSpaceCameraPos);
  tmpvar_7 = (I_8 - (2.0 * (
    dot (tmpvar_6, I_8)
   * tmpvar_6)));
  tmpvar_1 = tmpvar_7;
  highp vec2 tmpvar_9;
  tmpvar_9 = (_glesMultiTexCoord1.xy * unity_LightmapST.xy);
  tmpvar_2.xy = (tmpvar_9 + unity_LightmapST.zw);
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = (tmpvar_9 + unity_LightmapST.zw);
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 unity_OcclusionMaskSelector;
uniform mediump sampler2D unity_Lightmap;
uniform sampler2D unity_ShadowMask;
uniform mediump vec4 unity_Lightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp float atten_5;
  lowp vec3 tmpvar_6;
  lowp vec3 tmpvar_7;
  lowp vec3 lightDir_8;
  highp vec3 tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = _WorldSpaceLightPos0.xyz;
  lightDir_8 = tmpvar_10;
  tmpvar_9 = xlv_TEXCOORD1;
  tmpvar_7 = xlv_TEXCOORD2;
  lowp vec4 reflcol_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_11 = (textureCube (_Cube, tmpvar_9) * tmpvar_12.w);
  tmpvar_6 = (tmpvar_12 * _Color).xyz;
  mediump float shadowMaskAttenuation_13;
  lowp float tmpvar_14;
  tmpvar_14 = clamp (dot (texture2D (unity_ShadowMask, xlv_TEXCOORD5), unity_OcclusionMaskSelector), 0.0, 1.0);
  shadowMaskAttenuation_13 = tmpvar_14;
  atten_5 = shadowMaskAttenuation_13;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_8;
  tmpvar_1 = atten_5;
  mediump vec3 tmpvar_15;
  mediump vec3 tmpvar_16;
  tmpvar_15 = (tmpvar_2 * tmpvar_1);
  mediump vec4 tmpvar_17;
  tmpvar_17 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_18;
  color_18 = tmpvar_17;
  tmpvar_16 = (unity_Lightmap_HDR.x * color_18.xyz);
  tmpvar_2 = tmpvar_15;
  lowp vec4 c_19;
  lowp vec4 c_20;
  lowp float diff_21;
  mediump float tmpvar_22;
  tmpvar_22 = max (0.0, dot (tmpvar_7, tmpvar_3));
  diff_21 = tmpvar_22;
  c_20.xyz = ((tmpvar_6 * tmpvar_15) * diff_21);
  c_20.w = (reflcol_11.w * _ReflectColor.w);
  c_19.w = c_20.w;
  c_19.xyz = (c_20.xyz + (tmpvar_6 * tmpvar_16));
  c_4.xyz = (c_19.xyz + (reflcol_11.xyz * _ReflectColor.xyz));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" "SHADOWS_SHADOWMASK" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_4;
  tmpvar_4 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_5;
  tmpvar_5[0] = unity_WorldToObject[0].xyz;
  tmpvar_5[1] = unity_WorldToObject[1].xyz;
  tmpvar_5[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_glesNormal * tmpvar_5));
  highp vec3 tmpvar_7;
  highp vec3 I_8;
  I_8 = (tmpvar_4 - _WorldSpaceCameraPos);
  tmpvar_7 = (I_8 - (2.0 * (
    dot (tmpvar_6, I_8)
   * tmpvar_6)));
  tmpvar_1 = tmpvar_7;
  highp vec2 tmpvar_9;
  tmpvar_9 = (_glesMultiTexCoord1.xy * unity_LightmapST.xy);
  tmpvar_2.xy = (tmpvar_9 + unity_LightmapST.zw);
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = (tmpvar_9 + unity_LightmapST.zw);
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 unity_OcclusionMaskSelector;
uniform mediump sampler2D unity_Lightmap;
uniform sampler2D unity_ShadowMask;
uniform mediump vec4 unity_Lightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp float atten_5;
  lowp vec3 tmpvar_6;
  lowp vec3 tmpvar_7;
  lowp vec3 lightDir_8;
  highp vec3 tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = _WorldSpaceLightPos0.xyz;
  lightDir_8 = tmpvar_10;
  tmpvar_9 = xlv_TEXCOORD1;
  tmpvar_7 = xlv_TEXCOORD2;
  lowp vec4 reflcol_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_11 = (textureCube (_Cube, tmpvar_9) * tmpvar_12.w);
  tmpvar_6 = (tmpvar_12 * _Color).xyz;
  mediump float shadowMaskAttenuation_13;
  lowp float tmpvar_14;
  tmpvar_14 = clamp (dot (texture2D (unity_ShadowMask, xlv_TEXCOORD5), unity_OcclusionMaskSelector), 0.0, 1.0);
  shadowMaskAttenuation_13 = tmpvar_14;
  atten_5 = shadowMaskAttenuation_13;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_8;
  tmpvar_1 = atten_5;
  mediump vec3 tmpvar_15;
  mediump vec3 tmpvar_16;
  tmpvar_15 = (tmpvar_2 * tmpvar_1);
  mediump vec4 tmpvar_17;
  tmpvar_17 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_18;
  color_18 = tmpvar_17;
  tmpvar_16 = (unity_Lightmap_HDR.x * color_18.xyz);
  tmpvar_2 = tmpvar_15;
  lowp vec4 c_19;
  lowp vec4 c_20;
  lowp float diff_21;
  mediump float tmpvar_22;
  tmpvar_22 = max (0.0, dot (tmpvar_7, tmpvar_3));
  diff_21 = tmpvar_22;
  c_20.xyz = ((tmpvar_6 * tmpvar_15) * diff_21);
  c_20.w = (reflcol_11.w * _ReflectColor.w);
  c_19.w = c_20.w;
  c_19.xyz = (c_20.xyz + (tmpvar_6 * tmpvar_16));
  c_4.xyz = (c_19.xyz + (reflcol_11.xyz * _ReflectColor.xyz));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_4;
  tmpvar_4 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_5;
  tmpvar_5[0] = unity_WorldToObject[0].xyz;
  tmpvar_5[1] = unity_WorldToObject[1].xyz;
  tmpvar_5[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_glesNormal * tmpvar_5));
  highp vec3 tmpvar_7;
  highp vec3 I_8;
  I_8 = (tmpvar_4 - _WorldSpaceCameraPos);
  tmpvar_7 = (I_8 - (2.0 * (
    dot (tmpvar_6, I_8)
   * tmpvar_6)));
  tmpvar_1 = tmpvar_7;
  highp vec2 tmpvar_9;
  tmpvar_9 = (_glesMultiTexCoord1.xy * unity_LightmapST.xy);
  tmpvar_2.xy = (tmpvar_9 + unity_LightmapST.zw);
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = (tmpvar_9 + unity_LightmapST.zw);
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform lowp vec4 unity_OcclusionMaskSelector;
uniform mediump sampler2D unity_Lightmap;
uniform sampler2D unity_ShadowMask;
uniform mediump vec4 unity_Lightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp float atten_5;
  lowp vec3 tmpvar_6;
  lowp vec3 tmpvar_7;
  lowp vec3 lightDir_8;
  highp vec3 tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = _WorldSpaceLightPos0.xyz;
  lightDir_8 = tmpvar_10;
  tmpvar_9 = xlv_TEXCOORD1;
  tmpvar_7 = xlv_TEXCOORD2;
  lowp vec4 reflcol_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_11 = (textureCube (_Cube, tmpvar_9) * tmpvar_12.w);
  tmpvar_6 = (tmpvar_12 * _Color).xyz;
  mediump float shadowMaskAttenuation_13;
  lowp float tmpvar_14;
  tmpvar_14 = clamp (dot (texture2D (unity_ShadowMask, xlv_TEXCOORD5), unity_OcclusionMaskSelector), 0.0, 1.0);
  shadowMaskAttenuation_13 = tmpvar_14;
  atten_5 = shadowMaskAttenuation_13;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_8;
  tmpvar_1 = atten_5;
  mediump vec3 normalWorld_15;
  normalWorld_15 = tmpvar_7;
  mediump vec3 tmpvar_16;
  mediump vec3 tmpvar_17;
  tmpvar_16 = (tmpvar_2 * tmpvar_1);
  mediump vec3 ambient_18;
  mediump vec4 tmpvar_19;
  tmpvar_19.w = 1.0;
  tmpvar_19.xyz = normalWorld_15;
  mediump vec3 x_20;
  x_20.x = dot (unity_SHAr, tmpvar_19);
  x_20.y = dot (unity_SHAg, tmpvar_19);
  x_20.z = dot (unity_SHAb, tmpvar_19);
  mediump vec3 x1_21;
  mediump vec4 tmpvar_22;
  tmpvar_22 = (normalWorld_15.xyzz * normalWorld_15.yzzx);
  x1_21.x = dot (unity_SHBr, tmpvar_22);
  x1_21.y = dot (unity_SHBg, tmpvar_22);
  x1_21.z = dot (unity_SHBb, tmpvar_22);
  ambient_18 = max (vec3(0.0, 0.0, 0.0), (x_20 + (x1_21 + 
    (unity_SHC.xyz * ((normalWorld_15.x * normalWorld_15.x) - (normalWorld_15.y * normalWorld_15.y)))
  )));
  mediump vec3 tmpvar_23;
  tmpvar_23 = max (((1.055 * 
    pow (max (ambient_18, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  ambient_18 = tmpvar_23;
  mediump vec4 tmpvar_24;
  tmpvar_24 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_25;
  color_25 = tmpvar_24;
  tmpvar_17 = (tmpvar_23 + (unity_Lightmap_HDR.x * color_25.xyz));
  tmpvar_2 = tmpvar_16;
  lowp vec4 c_26;
  lowp vec4 c_27;
  lowp float diff_28;
  mediump float tmpvar_29;
  tmpvar_29 = max (0.0, dot (tmpvar_7, tmpvar_3));
  diff_28 = tmpvar_29;
  c_27.xyz = ((tmpvar_6 * tmpvar_16) * diff_28);
  c_27.w = (reflcol_11.w * _ReflectColor.w);
  c_26.w = c_27.w;
  c_26.xyz = (c_27.xyz + (tmpvar_6 * tmpvar_17));
  c_4.xyz = (c_26.xyz + (reflcol_11.xyz * _ReflectColor.xyz));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_4;
  tmpvar_4 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_5;
  tmpvar_5[0] = unity_WorldToObject[0].xyz;
  tmpvar_5[1] = unity_WorldToObject[1].xyz;
  tmpvar_5[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_glesNormal * tmpvar_5));
  highp vec3 tmpvar_7;
  highp vec3 I_8;
  I_8 = (tmpvar_4 - _WorldSpaceCameraPos);
  tmpvar_7 = (I_8 - (2.0 * (
    dot (tmpvar_6, I_8)
   * tmpvar_6)));
  tmpvar_1 = tmpvar_7;
  highp vec2 tmpvar_9;
  tmpvar_9 = (_glesMultiTexCoord1.xy * unity_LightmapST.xy);
  tmpvar_2.xy = (tmpvar_9 + unity_LightmapST.zw);
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = (tmpvar_9 + unity_LightmapST.zw);
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform lowp vec4 unity_OcclusionMaskSelector;
uniform mediump sampler2D unity_Lightmap;
uniform sampler2D unity_ShadowMask;
uniform mediump vec4 unity_Lightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp float atten_5;
  lowp vec3 tmpvar_6;
  lowp vec3 tmpvar_7;
  lowp vec3 lightDir_8;
  highp vec3 tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = _WorldSpaceLightPos0.xyz;
  lightDir_8 = tmpvar_10;
  tmpvar_9 = xlv_TEXCOORD1;
  tmpvar_7 = xlv_TEXCOORD2;
  lowp vec4 reflcol_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_11 = (textureCube (_Cube, tmpvar_9) * tmpvar_12.w);
  tmpvar_6 = (tmpvar_12 * _Color).xyz;
  mediump float shadowMaskAttenuation_13;
  lowp float tmpvar_14;
  tmpvar_14 = clamp (dot (texture2D (unity_ShadowMask, xlv_TEXCOORD5), unity_OcclusionMaskSelector), 0.0, 1.0);
  shadowMaskAttenuation_13 = tmpvar_14;
  atten_5 = shadowMaskAttenuation_13;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_8;
  tmpvar_1 = atten_5;
  mediump vec3 normalWorld_15;
  normalWorld_15 = tmpvar_7;
  mediump vec3 tmpvar_16;
  mediump vec3 tmpvar_17;
  tmpvar_16 = (tmpvar_2 * tmpvar_1);
  mediump vec3 ambient_18;
  mediump vec4 tmpvar_19;
  tmpvar_19.w = 1.0;
  tmpvar_19.xyz = normalWorld_15;
  mediump vec3 x_20;
  x_20.x = dot (unity_SHAr, tmpvar_19);
  x_20.y = dot (unity_SHAg, tmpvar_19);
  x_20.z = dot (unity_SHAb, tmpvar_19);
  mediump vec3 x1_21;
  mediump vec4 tmpvar_22;
  tmpvar_22 = (normalWorld_15.xyzz * normalWorld_15.yzzx);
  x1_21.x = dot (unity_SHBr, tmpvar_22);
  x1_21.y = dot (unity_SHBg, tmpvar_22);
  x1_21.z = dot (unity_SHBb, tmpvar_22);
  ambient_18 = max (vec3(0.0, 0.0, 0.0), (x_20 + (x1_21 + 
    (unity_SHC.xyz * ((normalWorld_15.x * normalWorld_15.x) - (normalWorld_15.y * normalWorld_15.y)))
  )));
  mediump vec3 tmpvar_23;
  tmpvar_23 = max (((1.055 * 
    pow (max (ambient_18, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  ambient_18 = tmpvar_23;
  mediump vec4 tmpvar_24;
  tmpvar_24 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_25;
  color_25 = tmpvar_24;
  tmpvar_17 = (tmpvar_23 + (unity_Lightmap_HDR.x * color_25.xyz));
  tmpvar_2 = tmpvar_16;
  lowp vec4 c_26;
  lowp vec4 c_27;
  lowp float diff_28;
  mediump float tmpvar_29;
  tmpvar_29 = max (0.0, dot (tmpvar_7, tmpvar_3));
  diff_28 = tmpvar_29;
  c_27.xyz = ((tmpvar_6 * tmpvar_16) * diff_28);
  c_27.w = (reflcol_11.w * _ReflectColor.w);
  c_26.w = c_27.w;
  c_26.xyz = (c_27.xyz + (tmpvar_6 * tmpvar_17));
  c_4.xyz = (c_26.xyz + (reflcol_11.xyz * _ReflectColor.xyz));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_4;
  tmpvar_4 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_5;
  tmpvar_5[0] = unity_WorldToObject[0].xyz;
  tmpvar_5[1] = unity_WorldToObject[1].xyz;
  tmpvar_5[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_glesNormal * tmpvar_5));
  highp vec3 tmpvar_7;
  highp vec3 I_8;
  I_8 = (tmpvar_4 - _WorldSpaceCameraPos);
  tmpvar_7 = (I_8 - (2.0 * (
    dot (tmpvar_6, I_8)
   * tmpvar_6)));
  tmpvar_1 = tmpvar_7;
  highp vec2 tmpvar_9;
  tmpvar_9 = (_glesMultiTexCoord1.xy * unity_LightmapST.xy);
  tmpvar_2.xy = (tmpvar_9 + unity_LightmapST.zw);
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = (tmpvar_9 + unity_LightmapST.zw);
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform lowp vec4 unity_OcclusionMaskSelector;
uniform mediump sampler2D unity_Lightmap;
uniform sampler2D unity_ShadowMask;
uniform mediump vec4 unity_Lightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp float atten_5;
  lowp vec3 tmpvar_6;
  lowp vec3 tmpvar_7;
  lowp vec3 lightDir_8;
  highp vec3 tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = _WorldSpaceLightPos0.xyz;
  lightDir_8 = tmpvar_10;
  tmpvar_9 = xlv_TEXCOORD1;
  tmpvar_7 = xlv_TEXCOORD2;
  lowp vec4 reflcol_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_11 = (textureCube (_Cube, tmpvar_9) * tmpvar_12.w);
  tmpvar_6 = (tmpvar_12 * _Color).xyz;
  mediump float shadowMaskAttenuation_13;
  lowp float tmpvar_14;
  tmpvar_14 = clamp (dot (texture2D (unity_ShadowMask, xlv_TEXCOORD5), unity_OcclusionMaskSelector), 0.0, 1.0);
  shadowMaskAttenuation_13 = tmpvar_14;
  atten_5 = shadowMaskAttenuation_13;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_8;
  tmpvar_1 = atten_5;
  mediump vec3 normalWorld_15;
  normalWorld_15 = tmpvar_7;
  mediump vec3 tmpvar_16;
  mediump vec3 tmpvar_17;
  tmpvar_16 = (tmpvar_2 * tmpvar_1);
  mediump vec3 ambient_18;
  mediump vec4 tmpvar_19;
  tmpvar_19.w = 1.0;
  tmpvar_19.xyz = normalWorld_15;
  mediump vec3 x_20;
  x_20.x = dot (unity_SHAr, tmpvar_19);
  x_20.y = dot (unity_SHAg, tmpvar_19);
  x_20.z = dot (unity_SHAb, tmpvar_19);
  mediump vec3 x1_21;
  mediump vec4 tmpvar_22;
  tmpvar_22 = (normalWorld_15.xyzz * normalWorld_15.yzzx);
  x1_21.x = dot (unity_SHBr, tmpvar_22);
  x1_21.y = dot (unity_SHBg, tmpvar_22);
  x1_21.z = dot (unity_SHBb, tmpvar_22);
  ambient_18 = max (vec3(0.0, 0.0, 0.0), (x_20 + (x1_21 + 
    (unity_SHC.xyz * ((normalWorld_15.x * normalWorld_15.x) - (normalWorld_15.y * normalWorld_15.y)))
  )));
  mediump vec3 tmpvar_23;
  tmpvar_23 = max (((1.055 * 
    pow (max (ambient_18, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  ambient_18 = tmpvar_23;
  mediump vec4 tmpvar_24;
  tmpvar_24 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_25;
  color_25 = tmpvar_24;
  tmpvar_17 = (tmpvar_23 + (unity_Lightmap_HDR.x * color_25.xyz));
  tmpvar_2 = tmpvar_16;
  lowp vec4 c_26;
  lowp vec4 c_27;
  lowp float diff_28;
  mediump float tmpvar_29;
  tmpvar_29 = max (0.0, dot (tmpvar_7, tmpvar_3));
  diff_28 = tmpvar_29;
  c_27.xyz = ((tmpvar_6 * tmpvar_16) * diff_28);
  c_27.w = (reflcol_11.w * _ReflectColor.w);
  c_26.w = c_27.w;
  c_26.xyz = (c_27.xyz + (tmpvar_6 * tmpvar_17));
  c_4.xyz = (c_26.xyz + (reflcol_11.xyz * _ReflectColor.xyz));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD5;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = unity_WorldToObject[0].xyz;
  tmpvar_6[1] = unity_WorldToObject[1].xyz;
  tmpvar_6[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_glesNormal * tmpvar_6));
  highp vec3 tmpvar_8;
  highp vec3 I_9;
  I_9 = (tmpvar_5 - _WorldSpaceCameraPos);
  tmpvar_8 = (I_9 - (2.0 * (
    dot (tmpvar_7, I_9)
   * tmpvar_7)));
  tmpvar_1 = tmpvar_8;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_7;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD5 = tmpvar_2;
  xlv_TEXCOORD7 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 unity_WorldToShadow[4];
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp float atten_5;
  lowp vec3 tmpvar_6;
  lowp vec3 lightDir_7;
  highp vec3 tmpvar_8;
  mediump vec3 tmpvar_9;
  tmpvar_9 = _WorldSpaceLightPos0.xyz;
  lightDir_7 = tmpvar_9;
  tmpvar_8 = xlv_TEXCOORD1;
  tmpvar_6 = xlv_TEXCOORD2;
  lowp vec4 reflcol_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_10 = (textureCube (_Cube, tmpvar_8) * tmpvar_11.w);
  mediump float realtimeShadowAttenuation_12;
  highp vec4 v_13;
  v_13.x = unity_MatrixV[0].z;
  v_13.y = unity_MatrixV[1].z;
  v_13.z = unity_MatrixV[2].z;
  v_13.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_14;
  tmpvar_14 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_15;
  highp float tmpvar_16;
  tmpvar_16 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_13.xyz), sqrt(dot (tmpvar_14, tmpvar_14)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_15 = tmpvar_16;
  highp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = xlv_TEXCOORD3;
  lowp float tmpvar_18;
  highp vec4 shadowCoord_19;
  shadowCoord_19 = (unity_WorldToShadow[0] * tmpvar_17);
  highp float lightShadowDataX_20;
  mediump float tmpvar_21;
  tmpvar_21 = _LightShadowData.x;
  lightShadowDataX_20 = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = max (float((texture2D (_ShadowMapTexture, shadowCoord_19.xy).x > shadowCoord_19.z)), lightShadowDataX_20);
  tmpvar_18 = tmpvar_22;
  realtimeShadowAttenuation_12 = tmpvar_18;
  mediump float tmpvar_23;
  tmpvar_23 = clamp ((realtimeShadowAttenuation_12 + tmpvar_15), 0.0, 1.0);
  atten_5 = tmpvar_23;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_7;
  tmpvar_1 = atten_5;
  mediump vec3 tmpvar_24;
  tmpvar_24 = (tmpvar_2 * tmpvar_1);
  tmpvar_2 = tmpvar_24;
  lowp vec4 c_25;
  lowp float diff_26;
  mediump float tmpvar_27;
  tmpvar_27 = max (0.0, dot (tmpvar_6, tmpvar_3));
  diff_26 = tmpvar_27;
  c_25.xyz = (((tmpvar_11 * _Color).xyz * tmpvar_24) * diff_26);
  c_25.w = (reflcol_10.w * _ReflectColor.w);
  c_4.xyz = (c_25.xyz + (reflcol_10.xyz * _ReflectColor.xyz));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD5;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = unity_WorldToObject[0].xyz;
  tmpvar_6[1] = unity_WorldToObject[1].xyz;
  tmpvar_6[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_glesNormal * tmpvar_6));
  highp vec3 tmpvar_8;
  highp vec3 I_9;
  I_9 = (tmpvar_5 - _WorldSpaceCameraPos);
  tmpvar_8 = (I_9 - (2.0 * (
    dot (tmpvar_7, I_9)
   * tmpvar_7)));
  tmpvar_1 = tmpvar_8;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_7;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD5 = tmpvar_2;
  xlv_TEXCOORD7 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 unity_WorldToShadow[4];
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp float atten_5;
  lowp vec3 tmpvar_6;
  lowp vec3 lightDir_7;
  highp vec3 tmpvar_8;
  mediump vec3 tmpvar_9;
  tmpvar_9 = _WorldSpaceLightPos0.xyz;
  lightDir_7 = tmpvar_9;
  tmpvar_8 = xlv_TEXCOORD1;
  tmpvar_6 = xlv_TEXCOORD2;
  lowp vec4 reflcol_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_10 = (textureCube (_Cube, tmpvar_8) * tmpvar_11.w);
  mediump float realtimeShadowAttenuation_12;
  highp vec4 v_13;
  v_13.x = unity_MatrixV[0].z;
  v_13.y = unity_MatrixV[1].z;
  v_13.z = unity_MatrixV[2].z;
  v_13.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_14;
  tmpvar_14 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_15;
  highp float tmpvar_16;
  tmpvar_16 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_13.xyz), sqrt(dot (tmpvar_14, tmpvar_14)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_15 = tmpvar_16;
  highp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = xlv_TEXCOORD3;
  lowp float tmpvar_18;
  highp vec4 shadowCoord_19;
  shadowCoord_19 = (unity_WorldToShadow[0] * tmpvar_17);
  highp float lightShadowDataX_20;
  mediump float tmpvar_21;
  tmpvar_21 = _LightShadowData.x;
  lightShadowDataX_20 = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = max (float((texture2D (_ShadowMapTexture, shadowCoord_19.xy).x > shadowCoord_19.z)), lightShadowDataX_20);
  tmpvar_18 = tmpvar_22;
  realtimeShadowAttenuation_12 = tmpvar_18;
  mediump float tmpvar_23;
  tmpvar_23 = clamp ((realtimeShadowAttenuation_12 + tmpvar_15), 0.0, 1.0);
  atten_5 = tmpvar_23;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_7;
  tmpvar_1 = atten_5;
  mediump vec3 tmpvar_24;
  tmpvar_24 = (tmpvar_2 * tmpvar_1);
  tmpvar_2 = tmpvar_24;
  lowp vec4 c_25;
  lowp float diff_26;
  mediump float tmpvar_27;
  tmpvar_27 = max (0.0, dot (tmpvar_6, tmpvar_3));
  diff_26 = tmpvar_27;
  c_25.xyz = (((tmpvar_11 * _Color).xyz * tmpvar_24) * diff_26);
  c_25.w = (reflcol_10.w * _ReflectColor.w);
  c_4.xyz = (c_25.xyz + (reflcol_10.xyz * _ReflectColor.xyz));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD5;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = unity_WorldToObject[0].xyz;
  tmpvar_6[1] = unity_WorldToObject[1].xyz;
  tmpvar_6[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_glesNormal * tmpvar_6));
  highp vec3 tmpvar_8;
  highp vec3 I_9;
  I_9 = (tmpvar_5 - _WorldSpaceCameraPos);
  tmpvar_8 = (I_9 - (2.0 * (
    dot (tmpvar_7, I_9)
   * tmpvar_7)));
  tmpvar_1 = tmpvar_8;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_7;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD5 = tmpvar_2;
  xlv_TEXCOORD7 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 unity_WorldToShadow[4];
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp float atten_5;
  lowp vec3 tmpvar_6;
  lowp vec3 lightDir_7;
  highp vec3 tmpvar_8;
  mediump vec3 tmpvar_9;
  tmpvar_9 = _WorldSpaceLightPos0.xyz;
  lightDir_7 = tmpvar_9;
  tmpvar_8 = xlv_TEXCOORD1;
  tmpvar_6 = xlv_TEXCOORD2;
  lowp vec4 reflcol_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_10 = (textureCube (_Cube, tmpvar_8) * tmpvar_11.w);
  mediump float realtimeShadowAttenuation_12;
  highp vec4 v_13;
  v_13.x = unity_MatrixV[0].z;
  v_13.y = unity_MatrixV[1].z;
  v_13.z = unity_MatrixV[2].z;
  v_13.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_14;
  tmpvar_14 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_15;
  highp float tmpvar_16;
  tmpvar_16 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_13.xyz), sqrt(dot (tmpvar_14, tmpvar_14)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_15 = tmpvar_16;
  highp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = xlv_TEXCOORD3;
  lowp float tmpvar_18;
  highp vec4 shadowCoord_19;
  shadowCoord_19 = (unity_WorldToShadow[0] * tmpvar_17);
  highp float lightShadowDataX_20;
  mediump float tmpvar_21;
  tmpvar_21 = _LightShadowData.x;
  lightShadowDataX_20 = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = max (float((texture2D (_ShadowMapTexture, shadowCoord_19.xy).x > shadowCoord_19.z)), lightShadowDataX_20);
  tmpvar_18 = tmpvar_22;
  realtimeShadowAttenuation_12 = tmpvar_18;
  mediump float tmpvar_23;
  tmpvar_23 = clamp ((realtimeShadowAttenuation_12 + tmpvar_15), 0.0, 1.0);
  atten_5 = tmpvar_23;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_7;
  tmpvar_1 = atten_5;
  mediump vec3 tmpvar_24;
  tmpvar_24 = (tmpvar_2 * tmpvar_1);
  tmpvar_2 = tmpvar_24;
  lowp vec4 c_25;
  lowp float diff_26;
  mediump float tmpvar_27;
  tmpvar_27 = max (0.0, dot (tmpvar_6, tmpvar_3));
  diff_26 = tmpvar_27;
  c_25.xyz = (((tmpvar_11 * _Color).xyz * tmpvar_24) * diff_26);
  c_25.w = (reflcol_10.w * _ReflectColor.w);
  c_4.xyz = (c_25.xyz + (reflcol_10.xyz * _ReflectColor.xyz));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = unity_WorldToObject[0].xyz;
  tmpvar_6[1] = unity_WorldToObject[1].xyz;
  tmpvar_6[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_glesNormal * tmpvar_6));
  highp vec3 tmpvar_8;
  highp vec3 I_9;
  I_9 = (tmpvar_5 - _WorldSpaceCameraPos);
  tmpvar_8 = (I_9 - (2.0 * (
    dot (tmpvar_7, I_9)
   * tmpvar_7)));
  tmpvar_1 = tmpvar_8;
  mediump vec3 normal_10;
  normal_10 = tmpvar_7;
  mediump vec3 x1_11;
  mediump vec4 tmpvar_12;
  tmpvar_12 = (normal_10.xyzz * normal_10.yzzx);
  x1_11.x = dot (unity_SHBr, tmpvar_12);
  x1_11.y = dot (unity_SHBg, tmpvar_12);
  x1_11.z = dot (unity_SHBb, tmpvar_12);
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_7;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = (x1_11 + (unity_SHC.xyz * (
    (normal_10.x * normal_10.x)
   - 
    (normal_10.y * normal_10.y)
  )));
  xlv_TEXCOORD5 = tmpvar_2;
  xlv_TEXCOORD7 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform highp mat4 unity_WorldToShadow[4];
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD4;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp float atten_5;
  lowp vec3 tmpvar_6;
  lowp vec3 lightDir_7;
  highp vec3 tmpvar_8;
  mediump vec3 tmpvar_9;
  tmpvar_9 = _WorldSpaceLightPos0.xyz;
  lightDir_7 = tmpvar_9;
  tmpvar_8 = xlv_TEXCOORD1;
  tmpvar_6 = xlv_TEXCOORD2;
  lowp vec4 reflcol_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_12;
  tmpvar_12 = (tmpvar_11 * _Color);
  reflcol_10 = (textureCube (_Cube, tmpvar_8) * tmpvar_11.w);
  mediump float realtimeShadowAttenuation_13;
  highp vec4 v_14;
  v_14.x = unity_MatrixV[0].z;
  v_14.y = unity_MatrixV[1].z;
  v_14.z = unity_MatrixV[2].z;
  v_14.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_15;
  tmpvar_15 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_16;
  highp float tmpvar_17;
  tmpvar_17 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_14.xyz), sqrt(dot (tmpvar_15, tmpvar_15)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_16 = tmpvar_17;
  highp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = xlv_TEXCOORD3;
  lowp float tmpvar_19;
  highp vec4 shadowCoord_20;
  shadowCoord_20 = (unity_WorldToShadow[0] * tmpvar_18);
  highp float lightShadowDataX_21;
  mediump float tmpvar_22;
  tmpvar_22 = _LightShadowData.x;
  lightShadowDataX_21 = tmpvar_22;
  highp float tmpvar_23;
  tmpvar_23 = max (float((texture2D (_ShadowMapTexture, shadowCoord_20.xy).x > shadowCoord_20.z)), lightShadowDataX_21);
  tmpvar_19 = tmpvar_23;
  realtimeShadowAttenuation_13 = tmpvar_19;
  mediump float tmpvar_24;
  tmpvar_24 = clamp ((realtimeShadowAttenuation_13 + tmpvar_16), 0.0, 1.0);
  atten_5 = tmpvar_24;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_7;
  tmpvar_1 = atten_5;
  mediump vec3 normalWorld_25;
  normalWorld_25 = tmpvar_6;
  mediump vec3 tmpvar_26;
  tmpvar_26 = (tmpvar_2 * tmpvar_1);
  mediump vec4 tmpvar_27;
  tmpvar_27.w = 1.0;
  tmpvar_27.xyz = normalWorld_25;
  mediump vec3 x_28;
  x_28.x = dot (unity_SHAr, tmpvar_27);
  x_28.y = dot (unity_SHAg, tmpvar_27);
  x_28.z = dot (unity_SHAb, tmpvar_27);
  mediump vec3 tmpvar_29;
  tmpvar_29 = max (((1.055 * 
    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD4 + x_28)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  tmpvar_2 = tmpvar_26;
  lowp vec4 c_30;
  lowp vec4 c_31;
  lowp float diff_32;
  mediump float tmpvar_33;
  tmpvar_33 = max (0.0, dot (tmpvar_6, tmpvar_3));
  diff_32 = tmpvar_33;
  c_31.xyz = ((tmpvar_12.xyz * tmpvar_26) * diff_32);
  c_31.w = (reflcol_10.w * _ReflectColor.w);
  c_30.w = c_31.w;
  c_30.xyz = (c_31.xyz + (tmpvar_12.xyz * tmpvar_29));
  c_4.xyz = (c_30.xyz + (reflcol_10.xyz * _ReflectColor.xyz));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = unity_WorldToObject[0].xyz;
  tmpvar_6[1] = unity_WorldToObject[1].xyz;
  tmpvar_6[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_glesNormal * tmpvar_6));
  highp vec3 tmpvar_8;
  highp vec3 I_9;
  I_9 = (tmpvar_5 - _WorldSpaceCameraPos);
  tmpvar_8 = (I_9 - (2.0 * (
    dot (tmpvar_7, I_9)
   * tmpvar_7)));
  tmpvar_1 = tmpvar_8;
  mediump vec3 normal_10;
  normal_10 = tmpvar_7;
  mediump vec3 x1_11;
  mediump vec4 tmpvar_12;
  tmpvar_12 = (normal_10.xyzz * normal_10.yzzx);
  x1_11.x = dot (unity_SHBr, tmpvar_12);
  x1_11.y = dot (unity_SHBg, tmpvar_12);
  x1_11.z = dot (unity_SHBb, tmpvar_12);
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_7;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = (x1_11 + (unity_SHC.xyz * (
    (normal_10.x * normal_10.x)
   - 
    (normal_10.y * normal_10.y)
  )));
  xlv_TEXCOORD5 = tmpvar_2;
  xlv_TEXCOORD7 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform highp mat4 unity_WorldToShadow[4];
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD4;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp float atten_5;
  lowp vec3 tmpvar_6;
  lowp vec3 lightDir_7;
  highp vec3 tmpvar_8;
  mediump vec3 tmpvar_9;
  tmpvar_9 = _WorldSpaceLightPos0.xyz;
  lightDir_7 = tmpvar_9;
  tmpvar_8 = xlv_TEXCOORD1;
  tmpvar_6 = xlv_TEXCOORD2;
  lowp vec4 reflcol_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_12;
  tmpvar_12 = (tmpvar_11 * _Color);
  reflcol_10 = (textureCube (_Cube, tmpvar_8) * tmpvar_11.w);
  mediump float realtimeShadowAttenuation_13;
  highp vec4 v_14;
  v_14.x = unity_MatrixV[0].z;
  v_14.y = unity_MatrixV[1].z;
  v_14.z = unity_MatrixV[2].z;
  v_14.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_15;
  tmpvar_15 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_16;
  highp float tmpvar_17;
  tmpvar_17 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_14.xyz), sqrt(dot (tmpvar_15, tmpvar_15)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_16 = tmpvar_17;
  highp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = xlv_TEXCOORD3;
  lowp float tmpvar_19;
  highp vec4 shadowCoord_20;
  shadowCoord_20 = (unity_WorldToShadow[0] * tmpvar_18);
  highp float lightShadowDataX_21;
  mediump float tmpvar_22;
  tmpvar_22 = _LightShadowData.x;
  lightShadowDataX_21 = tmpvar_22;
  highp float tmpvar_23;
  tmpvar_23 = max (float((texture2D (_ShadowMapTexture, shadowCoord_20.xy).x > shadowCoord_20.z)), lightShadowDataX_21);
  tmpvar_19 = tmpvar_23;
  realtimeShadowAttenuation_13 = tmpvar_19;
  mediump float tmpvar_24;
  tmpvar_24 = clamp ((realtimeShadowAttenuation_13 + tmpvar_16), 0.0, 1.0);
  atten_5 = tmpvar_24;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_7;
  tmpvar_1 = atten_5;
  mediump vec3 normalWorld_25;
  normalWorld_25 = tmpvar_6;
  mediump vec3 tmpvar_26;
  tmpvar_26 = (tmpvar_2 * tmpvar_1);
  mediump vec4 tmpvar_27;
  tmpvar_27.w = 1.0;
  tmpvar_27.xyz = normalWorld_25;
  mediump vec3 x_28;
  x_28.x = dot (unity_SHAr, tmpvar_27);
  x_28.y = dot (unity_SHAg, tmpvar_27);
  x_28.z = dot (unity_SHAb, tmpvar_27);
  mediump vec3 tmpvar_29;
  tmpvar_29 = max (((1.055 * 
    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD4 + x_28)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  tmpvar_2 = tmpvar_26;
  lowp vec4 c_30;
  lowp vec4 c_31;
  lowp float diff_32;
  mediump float tmpvar_33;
  tmpvar_33 = max (0.0, dot (tmpvar_6, tmpvar_3));
  diff_32 = tmpvar_33;
  c_31.xyz = ((tmpvar_12.xyz * tmpvar_26) * diff_32);
  c_31.w = (reflcol_10.w * _ReflectColor.w);
  c_30.w = c_31.w;
  c_30.xyz = (c_31.xyz + (tmpvar_12.xyz * tmpvar_29));
  c_4.xyz = (c_30.xyz + (reflcol_10.xyz * _ReflectColor.xyz));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = unity_WorldToObject[0].xyz;
  tmpvar_6[1] = unity_WorldToObject[1].xyz;
  tmpvar_6[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_glesNormal * tmpvar_6));
  highp vec3 tmpvar_8;
  highp vec3 I_9;
  I_9 = (tmpvar_5 - _WorldSpaceCameraPos);
  tmpvar_8 = (I_9 - (2.0 * (
    dot (tmpvar_7, I_9)
   * tmpvar_7)));
  tmpvar_1 = tmpvar_8;
  mediump vec3 normal_10;
  normal_10 = tmpvar_7;
  mediump vec3 x1_11;
  mediump vec4 tmpvar_12;
  tmpvar_12 = (normal_10.xyzz * normal_10.yzzx);
  x1_11.x = dot (unity_SHBr, tmpvar_12);
  x1_11.y = dot (unity_SHBg, tmpvar_12);
  x1_11.z = dot (unity_SHBb, tmpvar_12);
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_7;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = (x1_11 + (unity_SHC.xyz * (
    (normal_10.x * normal_10.x)
   - 
    (normal_10.y * normal_10.y)
  )));
  xlv_TEXCOORD5 = tmpvar_2;
  xlv_TEXCOORD7 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform highp mat4 unity_WorldToShadow[4];
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD4;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp float atten_5;
  lowp vec3 tmpvar_6;
  lowp vec3 lightDir_7;
  highp vec3 tmpvar_8;
  mediump vec3 tmpvar_9;
  tmpvar_9 = _WorldSpaceLightPos0.xyz;
  lightDir_7 = tmpvar_9;
  tmpvar_8 = xlv_TEXCOORD1;
  tmpvar_6 = xlv_TEXCOORD2;
  lowp vec4 reflcol_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_12;
  tmpvar_12 = (tmpvar_11 * _Color);
  reflcol_10 = (textureCube (_Cube, tmpvar_8) * tmpvar_11.w);
  mediump float realtimeShadowAttenuation_13;
  highp vec4 v_14;
  v_14.x = unity_MatrixV[0].z;
  v_14.y = unity_MatrixV[1].z;
  v_14.z = unity_MatrixV[2].z;
  v_14.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_15;
  tmpvar_15 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_16;
  highp float tmpvar_17;
  tmpvar_17 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_14.xyz), sqrt(dot (tmpvar_15, tmpvar_15)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_16 = tmpvar_17;
  highp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = xlv_TEXCOORD3;
  lowp float tmpvar_19;
  highp vec4 shadowCoord_20;
  shadowCoord_20 = (unity_WorldToShadow[0] * tmpvar_18);
  highp float lightShadowDataX_21;
  mediump float tmpvar_22;
  tmpvar_22 = _LightShadowData.x;
  lightShadowDataX_21 = tmpvar_22;
  highp float tmpvar_23;
  tmpvar_23 = max (float((texture2D (_ShadowMapTexture, shadowCoord_20.xy).x > shadowCoord_20.z)), lightShadowDataX_21);
  tmpvar_19 = tmpvar_23;
  realtimeShadowAttenuation_13 = tmpvar_19;
  mediump float tmpvar_24;
  tmpvar_24 = clamp ((realtimeShadowAttenuation_13 + tmpvar_16), 0.0, 1.0);
  atten_5 = tmpvar_24;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_7;
  tmpvar_1 = atten_5;
  mediump vec3 normalWorld_25;
  normalWorld_25 = tmpvar_6;
  mediump vec3 tmpvar_26;
  tmpvar_26 = (tmpvar_2 * tmpvar_1);
  mediump vec4 tmpvar_27;
  tmpvar_27.w = 1.0;
  tmpvar_27.xyz = normalWorld_25;
  mediump vec3 x_28;
  x_28.x = dot (unity_SHAr, tmpvar_27);
  x_28.y = dot (unity_SHAg, tmpvar_27);
  x_28.z = dot (unity_SHAb, tmpvar_27);
  mediump vec3 tmpvar_29;
  tmpvar_29 = max (((1.055 * 
    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD4 + x_28)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  tmpvar_2 = tmpvar_26;
  lowp vec4 c_30;
  lowp vec4 c_31;
  lowp float diff_32;
  mediump float tmpvar_33;
  tmpvar_33 = max (0.0, dot (tmpvar_6, tmpvar_3));
  diff_32 = tmpvar_33;
  c_31.xyz = ((tmpvar_12.xyz * tmpvar_26) * diff_32);
  c_31.w = (reflcol_10.w * _ReflectColor.w);
  c_30.w = c_31.w;
  c_30.xyz = (c_31.xyz + (tmpvar_12.xyz * tmpvar_29));
  c_4.xyz = (c_30.xyz + (reflcol_10.xyz * _ReflectColor.xyz));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_4;
  tmpvar_4 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_5;
  tmpvar_5[0] = unity_WorldToObject[0].xyz;
  tmpvar_5[1] = unity_WorldToObject[1].xyz;
  tmpvar_5[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_glesNormal * tmpvar_5));
  highp vec3 tmpvar_7;
  highp vec3 I_8;
  I_8 = (tmpvar_4 - _WorldSpaceCameraPos);
  tmpvar_7 = (I_8 - (2.0 * (
    dot (tmpvar_6, I_8)
   * tmpvar_6)));
  tmpvar_1 = tmpvar_7;
  mediump vec3 normal_9;
  normal_9 = tmpvar_6;
  mediump vec3 x1_10;
  mediump vec4 tmpvar_11;
  tmpvar_11 = (normal_9.xyzz * normal_9.yzzx);
  x1_10.x = dot (unity_SHBr, tmpvar_11);
  x1_10.y = dot (unity_SHBg, tmpvar_11);
  x1_10.z = dot (unity_SHBb, tmpvar_11);
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = (x1_10 + (unity_SHC.xyz * (
    (normal_9.x * normal_9.x)
   - 
    (normal_9.y * normal_9.y)
  )));
  xlv_TEXCOORD5 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD7 = tmpvar_2;
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform lowp vec4 unity_OcclusionMaskSelector;
uniform highp mat4 unity_WorldToShadow[4];
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform sampler2D unity_ShadowMask;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp float atten_5;
  lowp vec3 tmpvar_6;
  lowp vec3 lightDir_7;
  highp vec3 tmpvar_8;
  mediump vec3 tmpvar_9;
  tmpvar_9 = _WorldSpaceLightPos0.xyz;
  lightDir_7 = tmpvar_9;
  tmpvar_8 = xlv_TEXCOORD1;
  tmpvar_6 = xlv_TEXCOORD2;
  lowp vec4 reflcol_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_12;
  tmpvar_12 = (tmpvar_11 * _Color);
  reflcol_10 = (textureCube (_Cube, tmpvar_8) * tmpvar_11.w);
  mediump float realtimeShadowAttenuation_13;
  mediump float shadowMaskAttenuation_14;
  highp vec4 v_15;
  v_15.x = unity_MatrixV[0].z;
  v_15.y = unity_MatrixV[1].z;
  v_15.z = unity_MatrixV[2].z;
  v_15.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_16;
  tmpvar_16 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_17;
  highp float tmpvar_18;
  tmpvar_18 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_15.xyz), sqrt(dot (tmpvar_16, tmpvar_16)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_17 = tmpvar_18;
  lowp float tmpvar_19;
  tmpvar_19 = clamp (dot (texture2D (unity_ShadowMask, xlv_TEXCOORD5), unity_OcclusionMaskSelector), 0.0, 1.0);
  shadowMaskAttenuation_14 = tmpvar_19;
  highp vec4 tmpvar_20;
  tmpvar_20.w = 1.0;
  tmpvar_20.xyz = xlv_TEXCOORD3;
  lowp float tmpvar_21;
  highp vec4 shadowCoord_22;
  shadowCoord_22 = (unity_WorldToShadow[0] * tmpvar_20);
  highp float lightShadowDataX_23;
  mediump float tmpvar_24;
  tmpvar_24 = _LightShadowData.x;
  lightShadowDataX_23 = tmpvar_24;
  highp float tmpvar_25;
  tmpvar_25 = max (float((texture2D (_ShadowMapTexture, shadowCoord_22.xy).x > shadowCoord_22.z)), lightShadowDataX_23);
  tmpvar_21 = tmpvar_25;
  realtimeShadowAttenuation_13 = tmpvar_21;
  mediump float tmpvar_26;
  tmpvar_26 = mix (realtimeShadowAttenuation_13, shadowMaskAttenuation_14, tmpvar_17);
  atten_5 = tmpvar_26;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_7;
  tmpvar_1 = atten_5;
  mediump vec3 normalWorld_27;
  normalWorld_27 = tmpvar_6;
  mediump vec3 tmpvar_28;
  tmpvar_28 = (tmpvar_2 * tmpvar_1);
  mediump vec4 tmpvar_29;
  tmpvar_29.w = 1.0;
  tmpvar_29.xyz = normalWorld_27;
  mediump vec3 x_30;
  x_30.x = dot (unity_SHAr, tmpvar_29);
  x_30.y = dot (unity_SHAg, tmpvar_29);
  x_30.z = dot (unity_SHAb, tmpvar_29);
  mediump vec3 tmpvar_31;
  tmpvar_31 = max (((1.055 * 
    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD4 + x_30)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  tmpvar_2 = tmpvar_28;
  lowp vec4 c_32;
  lowp vec4 c_33;
  lowp float diff_34;
  mediump float tmpvar_35;
  tmpvar_35 = max (0.0, dot (tmpvar_6, tmpvar_3));
  diff_34 = tmpvar_35;
  c_33.xyz = ((tmpvar_12.xyz * tmpvar_28) * diff_34);
  c_33.w = (reflcol_10.w * _ReflectColor.w);
  c_32.w = c_33.w;
  c_32.xyz = (c_33.xyz + (tmpvar_12.xyz * tmpvar_31));
  c_4.xyz = (c_32.xyz + (reflcol_10.xyz * _ReflectColor.xyz));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_4;
  tmpvar_4 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_5;
  tmpvar_5[0] = unity_WorldToObject[0].xyz;
  tmpvar_5[1] = unity_WorldToObject[1].xyz;
  tmpvar_5[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_glesNormal * tmpvar_5));
  highp vec3 tmpvar_7;
  highp vec3 I_8;
  I_8 = (tmpvar_4 - _WorldSpaceCameraPos);
  tmpvar_7 = (I_8 - (2.0 * (
    dot (tmpvar_6, I_8)
   * tmpvar_6)));
  tmpvar_1 = tmpvar_7;
  mediump vec3 normal_9;
  normal_9 = tmpvar_6;
  mediump vec3 x1_10;
  mediump vec4 tmpvar_11;
  tmpvar_11 = (normal_9.xyzz * normal_9.yzzx);
  x1_10.x = dot (unity_SHBr, tmpvar_11);
  x1_10.y = dot (unity_SHBg, tmpvar_11);
  x1_10.z = dot (unity_SHBb, tmpvar_11);
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = (x1_10 + (unity_SHC.xyz * (
    (normal_9.x * normal_9.x)
   - 
    (normal_9.y * normal_9.y)
  )));
  xlv_TEXCOORD5 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD7 = tmpvar_2;
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform lowp vec4 unity_OcclusionMaskSelector;
uniform highp mat4 unity_WorldToShadow[4];
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform sampler2D unity_ShadowMask;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp float atten_5;
  lowp vec3 tmpvar_6;
  lowp vec3 lightDir_7;
  highp vec3 tmpvar_8;
  mediump vec3 tmpvar_9;
  tmpvar_9 = _WorldSpaceLightPos0.xyz;
  lightDir_7 = tmpvar_9;
  tmpvar_8 = xlv_TEXCOORD1;
  tmpvar_6 = xlv_TEXCOORD2;
  lowp vec4 reflcol_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_12;
  tmpvar_12 = (tmpvar_11 * _Color);
  reflcol_10 = (textureCube (_Cube, tmpvar_8) * tmpvar_11.w);
  mediump float realtimeShadowAttenuation_13;
  mediump float shadowMaskAttenuation_14;
  highp vec4 v_15;
  v_15.x = unity_MatrixV[0].z;
  v_15.y = unity_MatrixV[1].z;
  v_15.z = unity_MatrixV[2].z;
  v_15.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_16;
  tmpvar_16 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_17;
  highp float tmpvar_18;
  tmpvar_18 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_15.xyz), sqrt(dot (tmpvar_16, tmpvar_16)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_17 = tmpvar_18;
  lowp float tmpvar_19;
  tmpvar_19 = clamp (dot (texture2D (unity_ShadowMask, xlv_TEXCOORD5), unity_OcclusionMaskSelector), 0.0, 1.0);
  shadowMaskAttenuation_14 = tmpvar_19;
  highp vec4 tmpvar_20;
  tmpvar_20.w = 1.0;
  tmpvar_20.xyz = xlv_TEXCOORD3;
  lowp float tmpvar_21;
  highp vec4 shadowCoord_22;
  shadowCoord_22 = (unity_WorldToShadow[0] * tmpvar_20);
  highp float lightShadowDataX_23;
  mediump float tmpvar_24;
  tmpvar_24 = _LightShadowData.x;
  lightShadowDataX_23 = tmpvar_24;
  highp float tmpvar_25;
  tmpvar_25 = max (float((texture2D (_ShadowMapTexture, shadowCoord_22.xy).x > shadowCoord_22.z)), lightShadowDataX_23);
  tmpvar_21 = tmpvar_25;
  realtimeShadowAttenuation_13 = tmpvar_21;
  mediump float tmpvar_26;
  tmpvar_26 = mix (realtimeShadowAttenuation_13, shadowMaskAttenuation_14, tmpvar_17);
  atten_5 = tmpvar_26;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_7;
  tmpvar_1 = atten_5;
  mediump vec3 normalWorld_27;
  normalWorld_27 = tmpvar_6;
  mediump vec3 tmpvar_28;
  tmpvar_28 = (tmpvar_2 * tmpvar_1);
  mediump vec4 tmpvar_29;
  tmpvar_29.w = 1.0;
  tmpvar_29.xyz = normalWorld_27;
  mediump vec3 x_30;
  x_30.x = dot (unity_SHAr, tmpvar_29);
  x_30.y = dot (unity_SHAg, tmpvar_29);
  x_30.z = dot (unity_SHAb, tmpvar_29);
  mediump vec3 tmpvar_31;
  tmpvar_31 = max (((1.055 * 
    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD4 + x_30)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  tmpvar_2 = tmpvar_28;
  lowp vec4 c_32;
  lowp vec4 c_33;
  lowp float diff_34;
  mediump float tmpvar_35;
  tmpvar_35 = max (0.0, dot (tmpvar_6, tmpvar_3));
  diff_34 = tmpvar_35;
  c_33.xyz = ((tmpvar_12.xyz * tmpvar_28) * diff_34);
  c_33.w = (reflcol_10.w * _ReflectColor.w);
  c_32.w = c_33.w;
  c_32.xyz = (c_33.xyz + (tmpvar_12.xyz * tmpvar_31));
  c_4.xyz = (c_32.xyz + (reflcol_10.xyz * _ReflectColor.xyz));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_4;
  tmpvar_4 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_5;
  tmpvar_5[0] = unity_WorldToObject[0].xyz;
  tmpvar_5[1] = unity_WorldToObject[1].xyz;
  tmpvar_5[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_glesNormal * tmpvar_5));
  highp vec3 tmpvar_7;
  highp vec3 I_8;
  I_8 = (tmpvar_4 - _WorldSpaceCameraPos);
  tmpvar_7 = (I_8 - (2.0 * (
    dot (tmpvar_6, I_8)
   * tmpvar_6)));
  tmpvar_1 = tmpvar_7;
  mediump vec3 normal_9;
  normal_9 = tmpvar_6;
  mediump vec3 x1_10;
  mediump vec4 tmpvar_11;
  tmpvar_11 = (normal_9.xyzz * normal_9.yzzx);
  x1_10.x = dot (unity_SHBr, tmpvar_11);
  x1_10.y = dot (unity_SHBg, tmpvar_11);
  x1_10.z = dot (unity_SHBb, tmpvar_11);
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = (x1_10 + (unity_SHC.xyz * (
    (normal_9.x * normal_9.x)
   - 
    (normal_9.y * normal_9.y)
  )));
  xlv_TEXCOORD5 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD7 = tmpvar_2;
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform lowp vec4 unity_OcclusionMaskSelector;
uniform highp mat4 unity_WorldToShadow[4];
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform sampler2D unity_ShadowMask;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp float atten_5;
  lowp vec3 tmpvar_6;
  lowp vec3 lightDir_7;
  highp vec3 tmpvar_8;
  mediump vec3 tmpvar_9;
  tmpvar_9 = _WorldSpaceLightPos0.xyz;
  lightDir_7 = tmpvar_9;
  tmpvar_8 = xlv_TEXCOORD1;
  tmpvar_6 = xlv_TEXCOORD2;
  lowp vec4 reflcol_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_12;
  tmpvar_12 = (tmpvar_11 * _Color);
  reflcol_10 = (textureCube (_Cube, tmpvar_8) * tmpvar_11.w);
  mediump float realtimeShadowAttenuation_13;
  mediump float shadowMaskAttenuation_14;
  highp vec4 v_15;
  v_15.x = unity_MatrixV[0].z;
  v_15.y = unity_MatrixV[1].z;
  v_15.z = unity_MatrixV[2].z;
  v_15.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_16;
  tmpvar_16 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_17;
  highp float tmpvar_18;
  tmpvar_18 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_15.xyz), sqrt(dot (tmpvar_16, tmpvar_16)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_17 = tmpvar_18;
  lowp float tmpvar_19;
  tmpvar_19 = clamp (dot (texture2D (unity_ShadowMask, xlv_TEXCOORD5), unity_OcclusionMaskSelector), 0.0, 1.0);
  shadowMaskAttenuation_14 = tmpvar_19;
  highp vec4 tmpvar_20;
  tmpvar_20.w = 1.0;
  tmpvar_20.xyz = xlv_TEXCOORD3;
  lowp float tmpvar_21;
  highp vec4 shadowCoord_22;
  shadowCoord_22 = (unity_WorldToShadow[0] * tmpvar_20);
  highp float lightShadowDataX_23;
  mediump float tmpvar_24;
  tmpvar_24 = _LightShadowData.x;
  lightShadowDataX_23 = tmpvar_24;
  highp float tmpvar_25;
  tmpvar_25 = max (float((texture2D (_ShadowMapTexture, shadowCoord_22.xy).x > shadowCoord_22.z)), lightShadowDataX_23);
  tmpvar_21 = tmpvar_25;
  realtimeShadowAttenuation_13 = tmpvar_21;
  mediump float tmpvar_26;
  tmpvar_26 = mix (realtimeShadowAttenuation_13, shadowMaskAttenuation_14, tmpvar_17);
  atten_5 = tmpvar_26;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_7;
  tmpvar_1 = atten_5;
  mediump vec3 normalWorld_27;
  normalWorld_27 = tmpvar_6;
  mediump vec3 tmpvar_28;
  tmpvar_28 = (tmpvar_2 * tmpvar_1);
  mediump vec4 tmpvar_29;
  tmpvar_29.w = 1.0;
  tmpvar_29.xyz = normalWorld_27;
  mediump vec3 x_30;
  x_30.x = dot (unity_SHAr, tmpvar_29);
  x_30.y = dot (unity_SHAg, tmpvar_29);
  x_30.z = dot (unity_SHAb, tmpvar_29);
  mediump vec3 tmpvar_31;
  tmpvar_31 = max (((1.055 * 
    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD4 + x_30)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  tmpvar_2 = tmpvar_28;
  lowp vec4 c_32;
  lowp vec4 c_33;
  lowp float diff_34;
  mediump float tmpvar_35;
  tmpvar_35 = max (0.0, dot (tmpvar_6, tmpvar_3));
  diff_34 = tmpvar_35;
  c_33.xyz = ((tmpvar_12.xyz * tmpvar_28) * diff_34);
  c_33.w = (reflcol_10.w * _ReflectColor.w);
  c_32.w = c_33.w;
  c_32.xyz = (c_33.xyz + (tmpvar_12.xyz * tmpvar_31));
  c_4.xyz = (c_32.xyz + (reflcol_10.xyz * _ReflectColor.xyz));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_SHADOW_MIXING" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_4;
  tmpvar_4 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_5;
  tmpvar_5[0] = unity_WorldToObject[0].xyz;
  tmpvar_5[1] = unity_WorldToObject[1].xyz;
  tmpvar_5[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_glesNormal * tmpvar_5));
  highp vec3 tmpvar_7;
  highp vec3 I_8;
  I_8 = (tmpvar_4 - _WorldSpaceCameraPos);
  tmpvar_7 = (I_8 - (2.0 * (
    dot (tmpvar_6, I_8)
   * tmpvar_6)));
  tmpvar_1 = tmpvar_7;
  mediump vec3 normal_9;
  normal_9 = tmpvar_6;
  mediump vec3 x1_10;
  mediump vec4 tmpvar_11;
  tmpvar_11 = (normal_9.xyzz * normal_9.yzzx);
  x1_10.x = dot (unity_SHBr, tmpvar_11);
  x1_10.y = dot (unity_SHBg, tmpvar_11);
  x1_10.z = dot (unity_SHBb, tmpvar_11);
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = (x1_10 + (unity_SHC.xyz * (
    (normal_9.x * normal_9.x)
   - 
    (normal_9.y * normal_9.y)
  )));
  xlv_TEXCOORD5 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD7 = tmpvar_2;
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform lowp vec4 unity_OcclusionMaskSelector;
uniform highp mat4 unity_WorldToShadow[4];
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform sampler2D unity_ShadowMask;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp float atten_5;
  lowp vec3 tmpvar_6;
  lowp vec3 lightDir_7;
  highp vec3 tmpvar_8;
  mediump vec3 tmpvar_9;
  tmpvar_9 = _WorldSpaceLightPos0.xyz;
  lightDir_7 = tmpvar_9;
  tmpvar_8 = xlv_TEXCOORD1;
  tmpvar_6 = xlv_TEXCOORD2;
  lowp vec4 reflcol_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_12;
  tmpvar_12 = (tmpvar_11 * _Color);
  reflcol_10 = (textureCube (_Cube, tmpvar_8) * tmpvar_11.w);
  mediump float realtimeShadowAttenuation_13;
  mediump float shadowMaskAttenuation_14;
  highp vec4 v_15;
  v_15.x = unity_MatrixV[0].z;
  v_15.y = unity_MatrixV[1].z;
  v_15.z = unity_MatrixV[2].z;
  v_15.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_16;
  tmpvar_16 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_17;
  highp float tmpvar_18;
  tmpvar_18 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_15.xyz), sqrt(dot (tmpvar_16, tmpvar_16)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_17 = tmpvar_18;
  lowp float tmpvar_19;
  tmpvar_19 = clamp (dot (texture2D (unity_ShadowMask, xlv_TEXCOORD5), unity_OcclusionMaskSelector), 0.0, 1.0);
  shadowMaskAttenuation_14 = tmpvar_19;
  highp vec4 tmpvar_20;
  tmpvar_20.w = 1.0;
  tmpvar_20.xyz = xlv_TEXCOORD3;
  lowp float tmpvar_21;
  highp vec4 shadowCoord_22;
  shadowCoord_22 = (unity_WorldToShadow[0] * tmpvar_20);
  highp float lightShadowDataX_23;
  mediump float tmpvar_24;
  tmpvar_24 = _LightShadowData.x;
  lightShadowDataX_23 = tmpvar_24;
  highp float tmpvar_25;
  tmpvar_25 = max (float((texture2D (_ShadowMapTexture, shadowCoord_22.xy).x > shadowCoord_22.z)), lightShadowDataX_23);
  tmpvar_21 = tmpvar_25;
  realtimeShadowAttenuation_13 = tmpvar_21;
  mediump float tmpvar_26;
  tmpvar_26 = min (clamp ((realtimeShadowAttenuation_13 + tmpvar_17), 0.0, 1.0), shadowMaskAttenuation_14);
  atten_5 = tmpvar_26;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_7;
  tmpvar_1 = atten_5;
  mediump vec3 normalWorld_27;
  normalWorld_27 = tmpvar_6;
  mediump vec3 tmpvar_28;
  tmpvar_28 = (tmpvar_2 * tmpvar_1);
  mediump vec4 tmpvar_29;
  tmpvar_29.w = 1.0;
  tmpvar_29.xyz = normalWorld_27;
  mediump vec3 x_30;
  x_30.x = dot (unity_SHAr, tmpvar_29);
  x_30.y = dot (unity_SHAg, tmpvar_29);
  x_30.z = dot (unity_SHAb, tmpvar_29);
  mediump vec3 tmpvar_31;
  tmpvar_31 = max (((1.055 * 
    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD4 + x_30)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  tmpvar_2 = tmpvar_28;
  lowp vec4 c_32;
  lowp vec4 c_33;
  lowp float diff_34;
  mediump float tmpvar_35;
  tmpvar_35 = max (0.0, dot (tmpvar_6, tmpvar_3));
  diff_34 = tmpvar_35;
  c_33.xyz = ((tmpvar_12.xyz * tmpvar_28) * diff_34);
  c_33.w = (reflcol_10.w * _ReflectColor.w);
  c_32.w = c_33.w;
  c_32.xyz = (c_33.xyz + (tmpvar_12.xyz * tmpvar_31));
  c_4.xyz = (c_32.xyz + (reflcol_10.xyz * _ReflectColor.xyz));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_SHADOW_MIXING" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_4;
  tmpvar_4 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_5;
  tmpvar_5[0] = unity_WorldToObject[0].xyz;
  tmpvar_5[1] = unity_WorldToObject[1].xyz;
  tmpvar_5[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_glesNormal * tmpvar_5));
  highp vec3 tmpvar_7;
  highp vec3 I_8;
  I_8 = (tmpvar_4 - _WorldSpaceCameraPos);
  tmpvar_7 = (I_8 - (2.0 * (
    dot (tmpvar_6, I_8)
   * tmpvar_6)));
  tmpvar_1 = tmpvar_7;
  mediump vec3 normal_9;
  normal_9 = tmpvar_6;
  mediump vec3 x1_10;
  mediump vec4 tmpvar_11;
  tmpvar_11 = (normal_9.xyzz * normal_9.yzzx);
  x1_10.x = dot (unity_SHBr, tmpvar_11);
  x1_10.y = dot (unity_SHBg, tmpvar_11);
  x1_10.z = dot (unity_SHBb, tmpvar_11);
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = (x1_10 + (unity_SHC.xyz * (
    (normal_9.x * normal_9.x)
   - 
    (normal_9.y * normal_9.y)
  )));
  xlv_TEXCOORD5 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD7 = tmpvar_2;
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform lowp vec4 unity_OcclusionMaskSelector;
uniform highp mat4 unity_WorldToShadow[4];
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform sampler2D unity_ShadowMask;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp float atten_5;
  lowp vec3 tmpvar_6;
  lowp vec3 lightDir_7;
  highp vec3 tmpvar_8;
  mediump vec3 tmpvar_9;
  tmpvar_9 = _WorldSpaceLightPos0.xyz;
  lightDir_7 = tmpvar_9;
  tmpvar_8 = xlv_TEXCOORD1;
  tmpvar_6 = xlv_TEXCOORD2;
  lowp vec4 reflcol_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_12;
  tmpvar_12 = (tmpvar_11 * _Color);
  reflcol_10 = (textureCube (_Cube, tmpvar_8) * tmpvar_11.w);
  mediump float realtimeShadowAttenuation_13;
  mediump float shadowMaskAttenuation_14;
  highp vec4 v_15;
  v_15.x = unity_MatrixV[0].z;
  v_15.y = unity_MatrixV[1].z;
  v_15.z = unity_MatrixV[2].z;
  v_15.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_16;
  tmpvar_16 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_17;
  highp float tmpvar_18;
  tmpvar_18 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_15.xyz), sqrt(dot (tmpvar_16, tmpvar_16)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_17 = tmpvar_18;
  lowp float tmpvar_19;
  tmpvar_19 = clamp (dot (texture2D (unity_ShadowMask, xlv_TEXCOORD5), unity_OcclusionMaskSelector), 0.0, 1.0);
  shadowMaskAttenuation_14 = tmpvar_19;
  highp vec4 tmpvar_20;
  tmpvar_20.w = 1.0;
  tmpvar_20.xyz = xlv_TEXCOORD3;
  lowp float tmpvar_21;
  highp vec4 shadowCoord_22;
  shadowCoord_22 = (unity_WorldToShadow[0] * tmpvar_20);
  highp float lightShadowDataX_23;
  mediump float tmpvar_24;
  tmpvar_24 = _LightShadowData.x;
  lightShadowDataX_23 = tmpvar_24;
  highp float tmpvar_25;
  tmpvar_25 = max (float((texture2D (_ShadowMapTexture, shadowCoord_22.xy).x > shadowCoord_22.z)), lightShadowDataX_23);
  tmpvar_21 = tmpvar_25;
  realtimeShadowAttenuation_13 = tmpvar_21;
  mediump float tmpvar_26;
  tmpvar_26 = min (clamp ((realtimeShadowAttenuation_13 + tmpvar_17), 0.0, 1.0), shadowMaskAttenuation_14);
  atten_5 = tmpvar_26;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_7;
  tmpvar_1 = atten_5;
  mediump vec3 normalWorld_27;
  normalWorld_27 = tmpvar_6;
  mediump vec3 tmpvar_28;
  tmpvar_28 = (tmpvar_2 * tmpvar_1);
  mediump vec4 tmpvar_29;
  tmpvar_29.w = 1.0;
  tmpvar_29.xyz = normalWorld_27;
  mediump vec3 x_30;
  x_30.x = dot (unity_SHAr, tmpvar_29);
  x_30.y = dot (unity_SHAg, tmpvar_29);
  x_30.z = dot (unity_SHAb, tmpvar_29);
  mediump vec3 tmpvar_31;
  tmpvar_31 = max (((1.055 * 
    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD4 + x_30)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  tmpvar_2 = tmpvar_28;
  lowp vec4 c_32;
  lowp vec4 c_33;
  lowp float diff_34;
  mediump float tmpvar_35;
  tmpvar_35 = max (0.0, dot (tmpvar_6, tmpvar_3));
  diff_34 = tmpvar_35;
  c_33.xyz = ((tmpvar_12.xyz * tmpvar_28) * diff_34);
  c_33.w = (reflcol_10.w * _ReflectColor.w);
  c_32.w = c_33.w;
  c_32.xyz = (c_33.xyz + (tmpvar_12.xyz * tmpvar_31));
  c_4.xyz = (c_32.xyz + (reflcol_10.xyz * _ReflectColor.xyz));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_SHADOW_MIXING" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_4;
  tmpvar_4 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_5;
  tmpvar_5[0] = unity_WorldToObject[0].xyz;
  tmpvar_5[1] = unity_WorldToObject[1].xyz;
  tmpvar_5[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_glesNormal * tmpvar_5));
  highp vec3 tmpvar_7;
  highp vec3 I_8;
  I_8 = (tmpvar_4 - _WorldSpaceCameraPos);
  tmpvar_7 = (I_8 - (2.0 * (
    dot (tmpvar_6, I_8)
   * tmpvar_6)));
  tmpvar_1 = tmpvar_7;
  mediump vec3 normal_9;
  normal_9 = tmpvar_6;
  mediump vec3 x1_10;
  mediump vec4 tmpvar_11;
  tmpvar_11 = (normal_9.xyzz * normal_9.yzzx);
  x1_10.x = dot (unity_SHBr, tmpvar_11);
  x1_10.y = dot (unity_SHBg, tmpvar_11);
  x1_10.z = dot (unity_SHBb, tmpvar_11);
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = (x1_10 + (unity_SHC.xyz * (
    (normal_9.x * normal_9.x)
   - 
    (normal_9.y * normal_9.y)
  )));
  xlv_TEXCOORD5 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD7 = tmpvar_2;
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform lowp vec4 unity_OcclusionMaskSelector;
uniform highp mat4 unity_WorldToShadow[4];
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform sampler2D unity_ShadowMask;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp float atten_5;
  lowp vec3 tmpvar_6;
  lowp vec3 lightDir_7;
  highp vec3 tmpvar_8;
  mediump vec3 tmpvar_9;
  tmpvar_9 = _WorldSpaceLightPos0.xyz;
  lightDir_7 = tmpvar_9;
  tmpvar_8 = xlv_TEXCOORD1;
  tmpvar_6 = xlv_TEXCOORD2;
  lowp vec4 reflcol_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_12;
  tmpvar_12 = (tmpvar_11 * _Color);
  reflcol_10 = (textureCube (_Cube, tmpvar_8) * tmpvar_11.w);
  mediump float realtimeShadowAttenuation_13;
  mediump float shadowMaskAttenuation_14;
  highp vec4 v_15;
  v_15.x = unity_MatrixV[0].z;
  v_15.y = unity_MatrixV[1].z;
  v_15.z = unity_MatrixV[2].z;
  v_15.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_16;
  tmpvar_16 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_17;
  highp float tmpvar_18;
  tmpvar_18 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_15.xyz), sqrt(dot (tmpvar_16, tmpvar_16)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_17 = tmpvar_18;
  lowp float tmpvar_19;
  tmpvar_19 = clamp (dot (texture2D (unity_ShadowMask, xlv_TEXCOORD5), unity_OcclusionMaskSelector), 0.0, 1.0);
  shadowMaskAttenuation_14 = tmpvar_19;
  highp vec4 tmpvar_20;
  tmpvar_20.w = 1.0;
  tmpvar_20.xyz = xlv_TEXCOORD3;
  lowp float tmpvar_21;
  highp vec4 shadowCoord_22;
  shadowCoord_22 = (unity_WorldToShadow[0] * tmpvar_20);
  highp float lightShadowDataX_23;
  mediump float tmpvar_24;
  tmpvar_24 = _LightShadowData.x;
  lightShadowDataX_23 = tmpvar_24;
  highp float tmpvar_25;
  tmpvar_25 = max (float((texture2D (_ShadowMapTexture, shadowCoord_22.xy).x > shadowCoord_22.z)), lightShadowDataX_23);
  tmpvar_21 = tmpvar_25;
  realtimeShadowAttenuation_13 = tmpvar_21;
  mediump float tmpvar_26;
  tmpvar_26 = min (clamp ((realtimeShadowAttenuation_13 + tmpvar_17), 0.0, 1.0), shadowMaskAttenuation_14);
  atten_5 = tmpvar_26;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_7;
  tmpvar_1 = atten_5;
  mediump vec3 normalWorld_27;
  normalWorld_27 = tmpvar_6;
  mediump vec3 tmpvar_28;
  tmpvar_28 = (tmpvar_2 * tmpvar_1);
  mediump vec4 tmpvar_29;
  tmpvar_29.w = 1.0;
  tmpvar_29.xyz = normalWorld_27;
  mediump vec3 x_30;
  x_30.x = dot (unity_SHAr, tmpvar_29);
  x_30.y = dot (unity_SHAg, tmpvar_29);
  x_30.z = dot (unity_SHAb, tmpvar_29);
  mediump vec3 tmpvar_31;
  tmpvar_31 = max (((1.055 * 
    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD4 + x_30)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  tmpvar_2 = tmpvar_28;
  lowp vec4 c_32;
  lowp vec4 c_33;
  lowp float diff_34;
  mediump float tmpvar_35;
  tmpvar_35 = max (0.0, dot (tmpvar_6, tmpvar_3));
  diff_34 = tmpvar_35;
  c_33.xyz = ((tmpvar_12.xyz * tmpvar_28) * diff_34);
  c_33.w = (reflcol_10.w * _ReflectColor.w);
  c_32.w = c_33.w;
  c_32.xyz = (c_33.xyz + (tmpvar_12.xyz * tmpvar_31));
  c_4.xyz = (c_32.xyz + (reflcol_10.xyz * _ReflectColor.xyz));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_WorldToShadow[4];
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp vec4 tmpvar_4;
  tmpvar_4 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_5;
  tmpvar_5[0] = unity_WorldToObject[0].xyz;
  tmpvar_5[1] = unity_WorldToObject[1].xyz;
  tmpvar_5[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_glesNormal * tmpvar_5));
  highp vec3 tmpvar_7;
  highp vec3 I_8;
  I_8 = (tmpvar_4.xyz - _WorldSpaceCameraPos);
  tmpvar_7 = (I_8 - (2.0 * (
    dot (tmpvar_6, I_8)
   * tmpvar_6)));
  tmpvar_1 = tmpvar_7;
  tmpvar_2.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_4.xyz;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = (unity_WorldToShadow[0] * tmpvar_4);
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  mediump vec3 tmpvar_8;
  tmpvar_8 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_8;
  tmpvar_7 = xlv_TEXCOORD1;
  tmpvar_5 = xlv_TEXCOORD2;
  lowp vec4 reflcol_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_11;
  tmpvar_11 = (tmpvar_10 * _Color);
  reflcol_9 = (textureCube (_Cube, tmpvar_7) * tmpvar_10.w);
  lowp float tmpvar_12;
  highp float lightShadowDataX_13;
  mediump float tmpvar_14;
  tmpvar_14 = _LightShadowData.x;
  lightShadowDataX_13 = tmpvar_14;
  highp float tmpvar_15;
  tmpvar_15 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD5.xy).x > xlv_TEXCOORD5.z)), lightShadowDataX_13);
  tmpvar_12 = tmpvar_15;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_6;
  tmpvar_1 = tmpvar_12;
  mediump vec3 tmpvar_16;
  mediump vec3 tmpvar_17;
  highp vec4 v_18;
  v_18.x = unity_MatrixV[0].z;
  v_18.y = unity_MatrixV[1].z;
  v_18.z = unity_MatrixV[2].z;
  v_18.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_19;
  tmpvar_19 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_20;
  highp float tmpvar_21;
  tmpvar_21 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_18.xyz), sqrt(dot (tmpvar_19, tmpvar_19)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_20 = tmpvar_21;
  tmpvar_16 = (tmpvar_2 * clamp ((tmpvar_1 + tmpvar_20), 0.0, 1.0));
  mediump vec4 tmpvar_22;
  tmpvar_22 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_23;
  color_23 = tmpvar_22;
  tmpvar_17 = (unity_Lightmap_HDR.x * color_23.xyz);
  tmpvar_2 = tmpvar_16;
  lowp vec4 c_24;
  lowp vec4 c_25;
  lowp float diff_26;
  mediump float tmpvar_27;
  tmpvar_27 = max (0.0, dot (tmpvar_5, tmpvar_3));
  diff_26 = tmpvar_27;
  c_25.xyz = ((tmpvar_11.xyz * tmpvar_16) * diff_26);
  c_25.w = (reflcol_9.w * _ReflectColor.w);
  c_24.w = c_25.w;
  c_24.xyz = (c_25.xyz + (tmpvar_11.xyz * tmpvar_17));
  c_4.xyz = (c_24.xyz + (reflcol_9.xyz * _ReflectColor.xyz));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_WorldToShadow[4];
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp vec4 tmpvar_4;
  tmpvar_4 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_5;
  tmpvar_5[0] = unity_WorldToObject[0].xyz;
  tmpvar_5[1] = unity_WorldToObject[1].xyz;
  tmpvar_5[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_glesNormal * tmpvar_5));
  highp vec3 tmpvar_7;
  highp vec3 I_8;
  I_8 = (tmpvar_4.xyz - _WorldSpaceCameraPos);
  tmpvar_7 = (I_8 - (2.0 * (
    dot (tmpvar_6, I_8)
   * tmpvar_6)));
  tmpvar_1 = tmpvar_7;
  tmpvar_2.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_4.xyz;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = (unity_WorldToShadow[0] * tmpvar_4);
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  mediump vec3 tmpvar_8;
  tmpvar_8 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_8;
  tmpvar_7 = xlv_TEXCOORD1;
  tmpvar_5 = xlv_TEXCOORD2;
  lowp vec4 reflcol_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_11;
  tmpvar_11 = (tmpvar_10 * _Color);
  reflcol_9 = (textureCube (_Cube, tmpvar_7) * tmpvar_10.w);
  lowp float tmpvar_12;
  highp float lightShadowDataX_13;
  mediump float tmpvar_14;
  tmpvar_14 = _LightShadowData.x;
  lightShadowDataX_13 = tmpvar_14;
  highp float tmpvar_15;
  tmpvar_15 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD5.xy).x > xlv_TEXCOORD5.z)), lightShadowDataX_13);
  tmpvar_12 = tmpvar_15;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_6;
  tmpvar_1 = tmpvar_12;
  mediump vec3 tmpvar_16;
  mediump vec3 tmpvar_17;
  highp vec4 v_18;
  v_18.x = unity_MatrixV[0].z;
  v_18.y = unity_MatrixV[1].z;
  v_18.z = unity_MatrixV[2].z;
  v_18.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_19;
  tmpvar_19 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_20;
  highp float tmpvar_21;
  tmpvar_21 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_18.xyz), sqrt(dot (tmpvar_19, tmpvar_19)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_20 = tmpvar_21;
  tmpvar_16 = (tmpvar_2 * clamp ((tmpvar_1 + tmpvar_20), 0.0, 1.0));
  mediump vec4 tmpvar_22;
  tmpvar_22 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_23;
  color_23 = tmpvar_22;
  tmpvar_17 = (unity_Lightmap_HDR.x * color_23.xyz);
  tmpvar_2 = tmpvar_16;
  lowp vec4 c_24;
  lowp vec4 c_25;
  lowp float diff_26;
  mediump float tmpvar_27;
  tmpvar_27 = max (0.0, dot (tmpvar_5, tmpvar_3));
  diff_26 = tmpvar_27;
  c_25.xyz = ((tmpvar_11.xyz * tmpvar_16) * diff_26);
  c_25.w = (reflcol_9.w * _ReflectColor.w);
  c_24.w = c_25.w;
  c_24.xyz = (c_25.xyz + (tmpvar_11.xyz * tmpvar_17));
  c_4.xyz = (c_24.xyz + (reflcol_9.xyz * _ReflectColor.xyz));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_WorldToShadow[4];
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp vec4 tmpvar_4;
  tmpvar_4 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_5;
  tmpvar_5[0] = unity_WorldToObject[0].xyz;
  tmpvar_5[1] = unity_WorldToObject[1].xyz;
  tmpvar_5[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_glesNormal * tmpvar_5));
  highp vec3 tmpvar_7;
  highp vec3 I_8;
  I_8 = (tmpvar_4.xyz - _WorldSpaceCameraPos);
  tmpvar_7 = (I_8 - (2.0 * (
    dot (tmpvar_6, I_8)
   * tmpvar_6)));
  tmpvar_1 = tmpvar_7;
  tmpvar_2.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_4.xyz;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = (unity_WorldToShadow[0] * tmpvar_4);
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  mediump vec3 tmpvar_8;
  tmpvar_8 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_8;
  tmpvar_7 = xlv_TEXCOORD1;
  tmpvar_5 = xlv_TEXCOORD2;
  lowp vec4 reflcol_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_11;
  tmpvar_11 = (tmpvar_10 * _Color);
  reflcol_9 = (textureCube (_Cube, tmpvar_7) * tmpvar_10.w);
  lowp float tmpvar_12;
  highp float lightShadowDataX_13;
  mediump float tmpvar_14;
  tmpvar_14 = _LightShadowData.x;
  lightShadowDataX_13 = tmpvar_14;
  highp float tmpvar_15;
  tmpvar_15 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD5.xy).x > xlv_TEXCOORD5.z)), lightShadowDataX_13);
  tmpvar_12 = tmpvar_15;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_6;
  tmpvar_1 = tmpvar_12;
  mediump vec3 tmpvar_16;
  mediump vec3 tmpvar_17;
  highp vec4 v_18;
  v_18.x = unity_MatrixV[0].z;
  v_18.y = unity_MatrixV[1].z;
  v_18.z = unity_MatrixV[2].z;
  v_18.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_19;
  tmpvar_19 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_20;
  highp float tmpvar_21;
  tmpvar_21 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_18.xyz), sqrt(dot (tmpvar_19, tmpvar_19)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_20 = tmpvar_21;
  tmpvar_16 = (tmpvar_2 * clamp ((tmpvar_1 + tmpvar_20), 0.0, 1.0));
  mediump vec4 tmpvar_22;
  tmpvar_22 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_23;
  color_23 = tmpvar_22;
  tmpvar_17 = (unity_Lightmap_HDR.x * color_23.xyz);
  tmpvar_2 = tmpvar_16;
  lowp vec4 c_24;
  lowp vec4 c_25;
  lowp float diff_26;
  mediump float tmpvar_27;
  tmpvar_27 = max (0.0, dot (tmpvar_5, tmpvar_3));
  diff_26 = tmpvar_27;
  c_25.xyz = ((tmpvar_11.xyz * tmpvar_16) * diff_26);
  c_25.w = (reflcol_9.w * _ReflectColor.w);
  c_24.w = c_25.w;
  c_24.xyz = (c_25.xyz + (tmpvar_11.xyz * tmpvar_17));
  c_4.xyz = (c_24.xyz + (reflcol_9.xyz * _ReflectColor.xyz));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "LIGHTPROBE_SH" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_WorldToShadow[4];
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp vec4 tmpvar_4;
  tmpvar_4 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_5;
  tmpvar_5[0] = unity_WorldToObject[0].xyz;
  tmpvar_5[1] = unity_WorldToObject[1].xyz;
  tmpvar_5[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_glesNormal * tmpvar_5));
  highp vec3 tmpvar_7;
  highp vec3 I_8;
  I_8 = (tmpvar_4.xyz - _WorldSpaceCameraPos);
  tmpvar_7 = (I_8 - (2.0 * (
    dot (tmpvar_6, I_8)
   * tmpvar_6)));
  tmpvar_1 = tmpvar_7;
  tmpvar_2.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_4.xyz;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = (unity_WorldToShadow[0] * tmpvar_4);
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  mediump vec3 tmpvar_8;
  tmpvar_8 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_8;
  tmpvar_7 = xlv_TEXCOORD1;
  tmpvar_5 = xlv_TEXCOORD2;
  lowp vec4 reflcol_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_11;
  tmpvar_11 = (tmpvar_10 * _Color);
  reflcol_9 = (textureCube (_Cube, tmpvar_7) * tmpvar_10.w);
  lowp float tmpvar_12;
  highp float lightShadowDataX_13;
  mediump float tmpvar_14;
  tmpvar_14 = _LightShadowData.x;
  lightShadowDataX_13 = tmpvar_14;
  highp float tmpvar_15;
  tmpvar_15 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD5.xy).x > xlv_TEXCOORD5.z)), lightShadowDataX_13);
  tmpvar_12 = tmpvar_15;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_6;
  tmpvar_1 = tmpvar_12;
  mediump vec3 normalWorld_16;
  normalWorld_16 = tmpvar_5;
  mediump vec3 tmpvar_17;
  mediump vec3 tmpvar_18;
  highp vec4 v_19;
  v_19.x = unity_MatrixV[0].z;
  v_19.y = unity_MatrixV[1].z;
  v_19.z = unity_MatrixV[2].z;
  v_19.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_20;
  tmpvar_20 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_19.xyz), sqrt(dot (tmpvar_20, tmpvar_20)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_21 = tmpvar_22;
  tmpvar_17 = (tmpvar_2 * clamp ((tmpvar_1 + tmpvar_21), 0.0, 1.0));
  mediump vec3 ambient_23;
  mediump vec4 tmpvar_24;
  tmpvar_24.w = 1.0;
  tmpvar_24.xyz = normalWorld_16;
  mediump vec3 x_25;
  x_25.x = dot (unity_SHAr, tmpvar_24);
  x_25.y = dot (unity_SHAg, tmpvar_24);
  x_25.z = dot (unity_SHAb, tmpvar_24);
  mediump vec3 x1_26;
  mediump vec4 tmpvar_27;
  tmpvar_27 = (normalWorld_16.xyzz * normalWorld_16.yzzx);
  x1_26.x = dot (unity_SHBr, tmpvar_27);
  x1_26.y = dot (unity_SHBg, tmpvar_27);
  x1_26.z = dot (unity_SHBb, tmpvar_27);
  ambient_23 = max (vec3(0.0, 0.0, 0.0), (x_25 + (x1_26 + 
    (unity_SHC.xyz * ((normalWorld_16.x * normalWorld_16.x) - (normalWorld_16.y * normalWorld_16.y)))
  )));
  mediump vec3 tmpvar_28;
  tmpvar_28 = max (((1.055 * 
    pow (max (ambient_23, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  ambient_23 = tmpvar_28;
  mediump vec4 tmpvar_29;
  tmpvar_29 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_30;
  color_30 = tmpvar_29;
  tmpvar_18 = (tmpvar_28 + (unity_Lightmap_HDR.x * color_30.xyz));
  tmpvar_2 = tmpvar_17;
  lowp vec4 c_31;
  lowp vec4 c_32;
  lowp float diff_33;
  mediump float tmpvar_34;
  tmpvar_34 = max (0.0, dot (tmpvar_5, tmpvar_3));
  diff_33 = tmpvar_34;
  c_32.xyz = ((tmpvar_11.xyz * tmpvar_17) * diff_33);
  c_32.w = (reflcol_9.w * _ReflectColor.w);
  c_31.w = c_32.w;
  c_31.xyz = (c_32.xyz + (tmpvar_11.xyz * tmpvar_18));
  c_4.xyz = (c_31.xyz + (reflcol_9.xyz * _ReflectColor.xyz));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "LIGHTPROBE_SH" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_WorldToShadow[4];
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp vec4 tmpvar_4;
  tmpvar_4 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_5;
  tmpvar_5[0] = unity_WorldToObject[0].xyz;
  tmpvar_5[1] = unity_WorldToObject[1].xyz;
  tmpvar_5[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_glesNormal * tmpvar_5));
  highp vec3 tmpvar_7;
  highp vec3 I_8;
  I_8 = (tmpvar_4.xyz - _WorldSpaceCameraPos);
  tmpvar_7 = (I_8 - (2.0 * (
    dot (tmpvar_6, I_8)
   * tmpvar_6)));
  tmpvar_1 = tmpvar_7;
  tmpvar_2.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_4.xyz;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = (unity_WorldToShadow[0] * tmpvar_4);
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  mediump vec3 tmpvar_8;
  tmpvar_8 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_8;
  tmpvar_7 = xlv_TEXCOORD1;
  tmpvar_5 = xlv_TEXCOORD2;
  lowp vec4 reflcol_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_11;
  tmpvar_11 = (tmpvar_10 * _Color);
  reflcol_9 = (textureCube (_Cube, tmpvar_7) * tmpvar_10.w);
  lowp float tmpvar_12;
  highp float lightShadowDataX_13;
  mediump float tmpvar_14;
  tmpvar_14 = _LightShadowData.x;
  lightShadowDataX_13 = tmpvar_14;
  highp float tmpvar_15;
  tmpvar_15 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD5.xy).x > xlv_TEXCOORD5.z)), lightShadowDataX_13);
  tmpvar_12 = tmpvar_15;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_6;
  tmpvar_1 = tmpvar_12;
  mediump vec3 normalWorld_16;
  normalWorld_16 = tmpvar_5;
  mediump vec3 tmpvar_17;
  mediump vec3 tmpvar_18;
  highp vec4 v_19;
  v_19.x = unity_MatrixV[0].z;
  v_19.y = unity_MatrixV[1].z;
  v_19.z = unity_MatrixV[2].z;
  v_19.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_20;
  tmpvar_20 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_19.xyz), sqrt(dot (tmpvar_20, tmpvar_20)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_21 = tmpvar_22;
  tmpvar_17 = (tmpvar_2 * clamp ((tmpvar_1 + tmpvar_21), 0.0, 1.0));
  mediump vec3 ambient_23;
  mediump vec4 tmpvar_24;
  tmpvar_24.w = 1.0;
  tmpvar_24.xyz = normalWorld_16;
  mediump vec3 x_25;
  x_25.x = dot (unity_SHAr, tmpvar_24);
  x_25.y = dot (unity_SHAg, tmpvar_24);
  x_25.z = dot (unity_SHAb, tmpvar_24);
  mediump vec3 x1_26;
  mediump vec4 tmpvar_27;
  tmpvar_27 = (normalWorld_16.xyzz * normalWorld_16.yzzx);
  x1_26.x = dot (unity_SHBr, tmpvar_27);
  x1_26.y = dot (unity_SHBg, tmpvar_27);
  x1_26.z = dot (unity_SHBb, tmpvar_27);
  ambient_23 = max (vec3(0.0, 0.0, 0.0), (x_25 + (x1_26 + 
    (unity_SHC.xyz * ((normalWorld_16.x * normalWorld_16.x) - (normalWorld_16.y * normalWorld_16.y)))
  )));
  mediump vec3 tmpvar_28;
  tmpvar_28 = max (((1.055 * 
    pow (max (ambient_23, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  ambient_23 = tmpvar_28;
  mediump vec4 tmpvar_29;
  tmpvar_29 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_30;
  color_30 = tmpvar_29;
  tmpvar_18 = (tmpvar_28 + (unity_Lightmap_HDR.x * color_30.xyz));
  tmpvar_2 = tmpvar_17;
  lowp vec4 c_31;
  lowp vec4 c_32;
  lowp float diff_33;
  mediump float tmpvar_34;
  tmpvar_34 = max (0.0, dot (tmpvar_5, tmpvar_3));
  diff_33 = tmpvar_34;
  c_32.xyz = ((tmpvar_11.xyz * tmpvar_17) * diff_33);
  c_32.w = (reflcol_9.w * _ReflectColor.w);
  c_31.w = c_32.w;
  c_31.xyz = (c_32.xyz + (tmpvar_11.xyz * tmpvar_18));
  c_4.xyz = (c_31.xyz + (reflcol_9.xyz * _ReflectColor.xyz));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "LIGHTPROBE_SH" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_WorldToShadow[4];
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp vec4 tmpvar_4;
  tmpvar_4 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_5;
  tmpvar_5[0] = unity_WorldToObject[0].xyz;
  tmpvar_5[1] = unity_WorldToObject[1].xyz;
  tmpvar_5[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_glesNormal * tmpvar_5));
  highp vec3 tmpvar_7;
  highp vec3 I_8;
  I_8 = (tmpvar_4.xyz - _WorldSpaceCameraPos);
  tmpvar_7 = (I_8 - (2.0 * (
    dot (tmpvar_6, I_8)
   * tmpvar_6)));
  tmpvar_1 = tmpvar_7;
  tmpvar_2.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_4.xyz;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = (unity_WorldToShadow[0] * tmpvar_4);
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  mediump vec3 tmpvar_8;
  tmpvar_8 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_8;
  tmpvar_7 = xlv_TEXCOORD1;
  tmpvar_5 = xlv_TEXCOORD2;
  lowp vec4 reflcol_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_11;
  tmpvar_11 = (tmpvar_10 * _Color);
  reflcol_9 = (textureCube (_Cube, tmpvar_7) * tmpvar_10.w);
  lowp float tmpvar_12;
  highp float lightShadowDataX_13;
  mediump float tmpvar_14;
  tmpvar_14 = _LightShadowData.x;
  lightShadowDataX_13 = tmpvar_14;
  highp float tmpvar_15;
  tmpvar_15 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD5.xy).x > xlv_TEXCOORD5.z)), lightShadowDataX_13);
  tmpvar_12 = tmpvar_15;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_6;
  tmpvar_1 = tmpvar_12;
  mediump vec3 normalWorld_16;
  normalWorld_16 = tmpvar_5;
  mediump vec3 tmpvar_17;
  mediump vec3 tmpvar_18;
  highp vec4 v_19;
  v_19.x = unity_MatrixV[0].z;
  v_19.y = unity_MatrixV[1].z;
  v_19.z = unity_MatrixV[2].z;
  v_19.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_20;
  tmpvar_20 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_19.xyz), sqrt(dot (tmpvar_20, tmpvar_20)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_21 = tmpvar_22;
  tmpvar_17 = (tmpvar_2 * clamp ((tmpvar_1 + tmpvar_21), 0.0, 1.0));
  mediump vec3 ambient_23;
  mediump vec4 tmpvar_24;
  tmpvar_24.w = 1.0;
  tmpvar_24.xyz = normalWorld_16;
  mediump vec3 x_25;
  x_25.x = dot (unity_SHAr, tmpvar_24);
  x_25.y = dot (unity_SHAg, tmpvar_24);
  x_25.z = dot (unity_SHAb, tmpvar_24);
  mediump vec3 x1_26;
  mediump vec4 tmpvar_27;
  tmpvar_27 = (normalWorld_16.xyzz * normalWorld_16.yzzx);
  x1_26.x = dot (unity_SHBr, tmpvar_27);
  x1_26.y = dot (unity_SHBg, tmpvar_27);
  x1_26.z = dot (unity_SHBb, tmpvar_27);
  ambient_23 = max (vec3(0.0, 0.0, 0.0), (x_25 + (x1_26 + 
    (unity_SHC.xyz * ((normalWorld_16.x * normalWorld_16.x) - (normalWorld_16.y * normalWorld_16.y)))
  )));
  mediump vec3 tmpvar_28;
  tmpvar_28 = max (((1.055 * 
    pow (max (ambient_23, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  ambient_23 = tmpvar_28;
  mediump vec4 tmpvar_29;
  tmpvar_29 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_30;
  color_30 = tmpvar_29;
  tmpvar_18 = (tmpvar_28 + (unity_Lightmap_HDR.x * color_30.xyz));
  tmpvar_2 = tmpvar_17;
  lowp vec4 c_31;
  lowp vec4 c_32;
  lowp float diff_33;
  mediump float tmpvar_34;
  tmpvar_34 = max (0.0, dot (tmpvar_5, tmpvar_3));
  diff_33 = tmpvar_34;
  c_32.xyz = ((tmpvar_11.xyz * tmpvar_17) * diff_33);
  c_32.w = (reflcol_9.w * _ReflectColor.w);
  c_31.w = c_32.w;
  c_31.xyz = (c_32.xyz + (tmpvar_11.xyz * tmpvar_18));
  c_4.xyz = (c_31.xyz + (reflcol_9.xyz * _ReflectColor.xyz));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_WorldToShadow[4];
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp vec4 tmpvar_4;
  tmpvar_4 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_5;
  tmpvar_5[0] = unity_WorldToObject[0].xyz;
  tmpvar_5[1] = unity_WorldToObject[1].xyz;
  tmpvar_5[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_glesNormal * tmpvar_5));
  highp vec3 tmpvar_7;
  highp vec3 I_8;
  I_8 = (tmpvar_4.xyz - _WorldSpaceCameraPos);
  tmpvar_7 = (I_8 - (2.0 * (
    dot (tmpvar_6, I_8)
   * tmpvar_6)));
  tmpvar_1 = tmpvar_7;
  tmpvar_2.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_4.xyz;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = (unity_WorldToShadow[0] * tmpvar_4);
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform lowp vec4 unity_ShadowColor;
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  mediump float tmpvar_1;
  lowp vec4 c_2;
  lowp vec3 tmpvar_3;
  highp vec3 tmpvar_4;
  tmpvar_4 = xlv_TEXCOORD1;
  tmpvar_3 = xlv_TEXCOORD2;
  lowp vec4 reflcol_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_5 = (textureCube (_Cube, tmpvar_4) * tmpvar_6.w);
  lowp float tmpvar_7;
  highp float lightShadowDataX_8;
  mediump float tmpvar_9;
  tmpvar_9 = _LightShadowData.x;
  lightShadowDataX_8 = tmpvar_9;
  highp float tmpvar_10;
  tmpvar_10 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD5.xy).x > xlv_TEXCOORD5.z)), lightShadowDataX_8);
  tmpvar_7 = tmpvar_10;
  tmpvar_1 = tmpvar_7;
  mediump vec3 normalWorld_11;
  normalWorld_11 = tmpvar_3;
  mediump vec3 tmpvar_12;
  highp vec4 v_13;
  v_13.x = unity_MatrixV[0].z;
  v_13.y = unity_MatrixV[1].z;
  v_13.z = unity_MatrixV[2].z;
  v_13.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_14;
  tmpvar_14 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_15;
  highp float tmpvar_16;
  tmpvar_16 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_13.xyz), sqrt(dot (tmpvar_14, tmpvar_14)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_15 = tmpvar_16;
  mediump vec4 tmpvar_17;
  tmpvar_17 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_18;
  color_18 = tmpvar_17;
  tmpvar_12 = (unity_Lightmap_HDR.x * color_18.xyz);
  mediump vec3 shadowColor_19;
  lowp vec3 tmpvar_20;
  tmpvar_20 = unity_ShadowColor.xyz;
  shadowColor_19 = tmpvar_20;
  tmpvar_12 = min (tmpvar_12, mix (max (
    (tmpvar_12 - ((max (0.0, 
      dot (normalWorld_11, _WorldSpaceLightPos0.xyz)
    ) * (1.0 - 
      clamp ((tmpvar_1 + tmpvar_15), 0.0, 1.0)
    )) * _LightColor0.xyz))
  , shadowColor_19), tmpvar_12, _LightShadowData.xxx));
  lowp vec4 c_21;
  lowp vec4 c_22;
  c_22.xyz = vec3(0.0, 0.0, 0.0);
  c_22.w = (reflcol_5.w * _ReflectColor.w);
  c_21.w = c_22.w;
  c_21.xyz = ((tmpvar_6 * _Color).xyz * tmpvar_12);
  c_2.xyz = (c_21.xyz + (reflcol_5.xyz * _ReflectColor.xyz));
  c_2.w = 1.0;
  gl_FragData[0] = c_2;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_WorldToShadow[4];
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp vec4 tmpvar_4;
  tmpvar_4 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_5;
  tmpvar_5[0] = unity_WorldToObject[0].xyz;
  tmpvar_5[1] = unity_WorldToObject[1].xyz;
  tmpvar_5[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_glesNormal * tmpvar_5));
  highp vec3 tmpvar_7;
  highp vec3 I_8;
  I_8 = (tmpvar_4.xyz - _WorldSpaceCameraPos);
  tmpvar_7 = (I_8 - (2.0 * (
    dot (tmpvar_6, I_8)
   * tmpvar_6)));
  tmpvar_1 = tmpvar_7;
  tmpvar_2.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_4.xyz;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = (unity_WorldToShadow[0] * tmpvar_4);
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform lowp vec4 unity_ShadowColor;
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  mediump float tmpvar_1;
  lowp vec4 c_2;
  lowp vec3 tmpvar_3;
  highp vec3 tmpvar_4;
  tmpvar_4 = xlv_TEXCOORD1;
  tmpvar_3 = xlv_TEXCOORD2;
  lowp vec4 reflcol_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_5 = (textureCube (_Cube, tmpvar_4) * tmpvar_6.w);
  lowp float tmpvar_7;
  highp float lightShadowDataX_8;
  mediump float tmpvar_9;
  tmpvar_9 = _LightShadowData.x;
  lightShadowDataX_8 = tmpvar_9;
  highp float tmpvar_10;
  tmpvar_10 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD5.xy).x > xlv_TEXCOORD5.z)), lightShadowDataX_8);
  tmpvar_7 = tmpvar_10;
  tmpvar_1 = tmpvar_7;
  mediump vec3 normalWorld_11;
  normalWorld_11 = tmpvar_3;
  mediump vec3 tmpvar_12;
  highp vec4 v_13;
  v_13.x = unity_MatrixV[0].z;
  v_13.y = unity_MatrixV[1].z;
  v_13.z = unity_MatrixV[2].z;
  v_13.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_14;
  tmpvar_14 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_15;
  highp float tmpvar_16;
  tmpvar_16 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_13.xyz), sqrt(dot (tmpvar_14, tmpvar_14)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_15 = tmpvar_16;
  mediump vec4 tmpvar_17;
  tmpvar_17 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_18;
  color_18 = tmpvar_17;
  tmpvar_12 = (unity_Lightmap_HDR.x * color_18.xyz);
  mediump vec3 shadowColor_19;
  lowp vec3 tmpvar_20;
  tmpvar_20 = unity_ShadowColor.xyz;
  shadowColor_19 = tmpvar_20;
  tmpvar_12 = min (tmpvar_12, mix (max (
    (tmpvar_12 - ((max (0.0, 
      dot (normalWorld_11, _WorldSpaceLightPos0.xyz)
    ) * (1.0 - 
      clamp ((tmpvar_1 + tmpvar_15), 0.0, 1.0)
    )) * _LightColor0.xyz))
  , shadowColor_19), tmpvar_12, _LightShadowData.xxx));
  lowp vec4 c_21;
  lowp vec4 c_22;
  c_22.xyz = vec3(0.0, 0.0, 0.0);
  c_22.w = (reflcol_5.w * _ReflectColor.w);
  c_21.w = c_22.w;
  c_21.xyz = ((tmpvar_6 * _Color).xyz * tmpvar_12);
  c_2.xyz = (c_21.xyz + (reflcol_5.xyz * _ReflectColor.xyz));
  c_2.w = 1.0;
  gl_FragData[0] = c_2;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_WorldToShadow[4];
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp vec4 tmpvar_4;
  tmpvar_4 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_5;
  tmpvar_5[0] = unity_WorldToObject[0].xyz;
  tmpvar_5[1] = unity_WorldToObject[1].xyz;
  tmpvar_5[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_glesNormal * tmpvar_5));
  highp vec3 tmpvar_7;
  highp vec3 I_8;
  I_8 = (tmpvar_4.xyz - _WorldSpaceCameraPos);
  tmpvar_7 = (I_8 - (2.0 * (
    dot (tmpvar_6, I_8)
   * tmpvar_6)));
  tmpvar_1 = tmpvar_7;
  tmpvar_2.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_4.xyz;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = (unity_WorldToShadow[0] * tmpvar_4);
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform lowp vec4 unity_ShadowColor;
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  mediump float tmpvar_1;
  lowp vec4 c_2;
  lowp vec3 tmpvar_3;
  highp vec3 tmpvar_4;
  tmpvar_4 = xlv_TEXCOORD1;
  tmpvar_3 = xlv_TEXCOORD2;
  lowp vec4 reflcol_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_5 = (textureCube (_Cube, tmpvar_4) * tmpvar_6.w);
  lowp float tmpvar_7;
  highp float lightShadowDataX_8;
  mediump float tmpvar_9;
  tmpvar_9 = _LightShadowData.x;
  lightShadowDataX_8 = tmpvar_9;
  highp float tmpvar_10;
  tmpvar_10 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD5.xy).x > xlv_TEXCOORD5.z)), lightShadowDataX_8);
  tmpvar_7 = tmpvar_10;
  tmpvar_1 = tmpvar_7;
  mediump vec3 normalWorld_11;
  normalWorld_11 = tmpvar_3;
  mediump vec3 tmpvar_12;
  highp vec4 v_13;
  v_13.x = unity_MatrixV[0].z;
  v_13.y = unity_MatrixV[1].z;
  v_13.z = unity_MatrixV[2].z;
  v_13.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_14;
  tmpvar_14 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_15;
  highp float tmpvar_16;
  tmpvar_16 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_13.xyz), sqrt(dot (tmpvar_14, tmpvar_14)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_15 = tmpvar_16;
  mediump vec4 tmpvar_17;
  tmpvar_17 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_18;
  color_18 = tmpvar_17;
  tmpvar_12 = (unity_Lightmap_HDR.x * color_18.xyz);
  mediump vec3 shadowColor_19;
  lowp vec3 tmpvar_20;
  tmpvar_20 = unity_ShadowColor.xyz;
  shadowColor_19 = tmpvar_20;
  tmpvar_12 = min (tmpvar_12, mix (max (
    (tmpvar_12 - ((max (0.0, 
      dot (normalWorld_11, _WorldSpaceLightPos0.xyz)
    ) * (1.0 - 
      clamp ((tmpvar_1 + tmpvar_15), 0.0, 1.0)
    )) * _LightColor0.xyz))
  , shadowColor_19), tmpvar_12, _LightShadowData.xxx));
  lowp vec4 c_21;
  lowp vec4 c_22;
  c_22.xyz = vec3(0.0, 0.0, 0.0);
  c_22.w = (reflcol_5.w * _ReflectColor.w);
  c_21.w = c_22.w;
  c_21.xyz = ((tmpvar_6 * _Color).xyz * tmpvar_12);
  c_2.xyz = (c_21.xyz + (reflcol_5.xyz * _ReflectColor.xyz));
  c_2.w = 1.0;
  gl_FragData[0] = c_2;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" "LIGHTPROBE_SH" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_WorldToShadow[4];
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp vec4 tmpvar_4;
  tmpvar_4 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_5;
  tmpvar_5[0] = unity_WorldToObject[0].xyz;
  tmpvar_5[1] = unity_WorldToObject[1].xyz;
  tmpvar_5[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_glesNormal * tmpvar_5));
  highp vec3 tmpvar_7;
  highp vec3 I_8;
  I_8 = (tmpvar_4.xyz - _WorldSpaceCameraPos);
  tmpvar_7 = (I_8 - (2.0 * (
    dot (tmpvar_6, I_8)
   * tmpvar_6)));
  tmpvar_1 = tmpvar_7;
  tmpvar_2.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_4.xyz;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = (unity_WorldToShadow[0] * tmpvar_4);
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform lowp vec4 unity_ShadowColor;
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  mediump float tmpvar_1;
  lowp vec4 c_2;
  lowp vec3 tmpvar_3;
  highp vec3 tmpvar_4;
  tmpvar_4 = xlv_TEXCOORD1;
  tmpvar_3 = xlv_TEXCOORD2;
  lowp vec4 reflcol_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_5 = (textureCube (_Cube, tmpvar_4) * tmpvar_6.w);
  lowp float tmpvar_7;
  highp float lightShadowDataX_8;
  mediump float tmpvar_9;
  tmpvar_9 = _LightShadowData.x;
  lightShadowDataX_8 = tmpvar_9;
  highp float tmpvar_10;
  tmpvar_10 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD5.xy).x > xlv_TEXCOORD5.z)), lightShadowDataX_8);
  tmpvar_7 = tmpvar_10;
  tmpvar_1 = tmpvar_7;
  mediump vec3 normalWorld_11;
  normalWorld_11 = tmpvar_3;
  mediump vec3 tmpvar_12;
  highp vec4 v_13;
  v_13.x = unity_MatrixV[0].z;
  v_13.y = unity_MatrixV[1].z;
  v_13.z = unity_MatrixV[2].z;
  v_13.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_14;
  tmpvar_14 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_15;
  highp float tmpvar_16;
  tmpvar_16 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_13.xyz), sqrt(dot (tmpvar_14, tmpvar_14)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_15 = tmpvar_16;
  mediump vec3 ambient_17;
  mediump vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = normalWorld_11;
  mediump vec3 x_19;
  x_19.x = dot (unity_SHAr, tmpvar_18);
  x_19.y = dot (unity_SHAg, tmpvar_18);
  x_19.z = dot (unity_SHAb, tmpvar_18);
  mediump vec3 x1_20;
  mediump vec4 tmpvar_21;
  tmpvar_21 = (normalWorld_11.xyzz * normalWorld_11.yzzx);
  x1_20.x = dot (unity_SHBr, tmpvar_21);
  x1_20.y = dot (unity_SHBg, tmpvar_21);
  x1_20.z = dot (unity_SHBb, tmpvar_21);
  ambient_17 = max (vec3(0.0, 0.0, 0.0), (x_19 + (x1_20 + 
    (unity_SHC.xyz * ((normalWorld_11.x * normalWorld_11.x) - (normalWorld_11.y * normalWorld_11.y)))
  )));
  mediump vec3 tmpvar_22;
  tmpvar_22 = max (((1.055 * 
    pow (max (ambient_17, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  ambient_17 = tmpvar_22;
  mediump vec4 tmpvar_23;
  tmpvar_23 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_24;
  color_24 = tmpvar_23;
  tmpvar_12 = (tmpvar_22 + (unity_Lightmap_HDR.x * color_24.xyz));
  mediump vec3 shadowColor_25;
  lowp vec3 tmpvar_26;
  tmpvar_26 = unity_ShadowColor.xyz;
  shadowColor_25 = tmpvar_26;
  tmpvar_12 = min (tmpvar_12, mix (max (
    (tmpvar_12 - ((max (0.0, 
      dot (normalWorld_11, _WorldSpaceLightPos0.xyz)
    ) * (1.0 - 
      clamp ((tmpvar_1 + tmpvar_15), 0.0, 1.0)
    )) * _LightColor0.xyz))
  , shadowColor_25), tmpvar_12, _LightShadowData.xxx));
  lowp vec4 c_27;
  lowp vec4 c_28;
  c_28.xyz = vec3(0.0, 0.0, 0.0);
  c_28.w = (reflcol_5.w * _ReflectColor.w);
  c_27.w = c_28.w;
  c_27.xyz = ((tmpvar_6 * _Color).xyz * tmpvar_12);
  c_2.xyz = (c_27.xyz + (reflcol_5.xyz * _ReflectColor.xyz));
  c_2.w = 1.0;
  gl_FragData[0] = c_2;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" "LIGHTPROBE_SH" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_WorldToShadow[4];
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp vec4 tmpvar_4;
  tmpvar_4 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_5;
  tmpvar_5[0] = unity_WorldToObject[0].xyz;
  tmpvar_5[1] = unity_WorldToObject[1].xyz;
  tmpvar_5[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_glesNormal * tmpvar_5));
  highp vec3 tmpvar_7;
  highp vec3 I_8;
  I_8 = (tmpvar_4.xyz - _WorldSpaceCameraPos);
  tmpvar_7 = (I_8 - (2.0 * (
    dot (tmpvar_6, I_8)
   * tmpvar_6)));
  tmpvar_1 = tmpvar_7;
  tmpvar_2.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_4.xyz;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = (unity_WorldToShadow[0] * tmpvar_4);
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform lowp vec4 unity_ShadowColor;
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  mediump float tmpvar_1;
  lowp vec4 c_2;
  lowp vec3 tmpvar_3;
  highp vec3 tmpvar_4;
  tmpvar_4 = xlv_TEXCOORD1;
  tmpvar_3 = xlv_TEXCOORD2;
  lowp vec4 reflcol_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_5 = (textureCube (_Cube, tmpvar_4) * tmpvar_6.w);
  lowp float tmpvar_7;
  highp float lightShadowDataX_8;
  mediump float tmpvar_9;
  tmpvar_9 = _LightShadowData.x;
  lightShadowDataX_8 = tmpvar_9;
  highp float tmpvar_10;
  tmpvar_10 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD5.xy).x > xlv_TEXCOORD5.z)), lightShadowDataX_8);
  tmpvar_7 = tmpvar_10;
  tmpvar_1 = tmpvar_7;
  mediump vec3 normalWorld_11;
  normalWorld_11 = tmpvar_3;
  mediump vec3 tmpvar_12;
  highp vec4 v_13;
  v_13.x = unity_MatrixV[0].z;
  v_13.y = unity_MatrixV[1].z;
  v_13.z = unity_MatrixV[2].z;
  v_13.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_14;
  tmpvar_14 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_15;
  highp float tmpvar_16;
  tmpvar_16 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_13.xyz), sqrt(dot (tmpvar_14, tmpvar_14)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_15 = tmpvar_16;
  mediump vec3 ambient_17;
  mediump vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = normalWorld_11;
  mediump vec3 x_19;
  x_19.x = dot (unity_SHAr, tmpvar_18);
  x_19.y = dot (unity_SHAg, tmpvar_18);
  x_19.z = dot (unity_SHAb, tmpvar_18);
  mediump vec3 x1_20;
  mediump vec4 tmpvar_21;
  tmpvar_21 = (normalWorld_11.xyzz * normalWorld_11.yzzx);
  x1_20.x = dot (unity_SHBr, tmpvar_21);
  x1_20.y = dot (unity_SHBg, tmpvar_21);
  x1_20.z = dot (unity_SHBb, tmpvar_21);
  ambient_17 = max (vec3(0.0, 0.0, 0.0), (x_19 + (x1_20 + 
    (unity_SHC.xyz * ((normalWorld_11.x * normalWorld_11.x) - (normalWorld_11.y * normalWorld_11.y)))
  )));
  mediump vec3 tmpvar_22;
  tmpvar_22 = max (((1.055 * 
    pow (max (ambient_17, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  ambient_17 = tmpvar_22;
  mediump vec4 tmpvar_23;
  tmpvar_23 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_24;
  color_24 = tmpvar_23;
  tmpvar_12 = (tmpvar_22 + (unity_Lightmap_HDR.x * color_24.xyz));
  mediump vec3 shadowColor_25;
  lowp vec3 tmpvar_26;
  tmpvar_26 = unity_ShadowColor.xyz;
  shadowColor_25 = tmpvar_26;
  tmpvar_12 = min (tmpvar_12, mix (max (
    (tmpvar_12 - ((max (0.0, 
      dot (normalWorld_11, _WorldSpaceLightPos0.xyz)
    ) * (1.0 - 
      clamp ((tmpvar_1 + tmpvar_15), 0.0, 1.0)
    )) * _LightColor0.xyz))
  , shadowColor_25), tmpvar_12, _LightShadowData.xxx));
  lowp vec4 c_27;
  lowp vec4 c_28;
  c_28.xyz = vec3(0.0, 0.0, 0.0);
  c_28.w = (reflcol_5.w * _ReflectColor.w);
  c_27.w = c_28.w;
  c_27.xyz = ((tmpvar_6 * _Color).xyz * tmpvar_12);
  c_2.xyz = (c_27.xyz + (reflcol_5.xyz * _ReflectColor.xyz));
  c_2.w = 1.0;
  gl_FragData[0] = c_2;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" "LIGHTPROBE_SH" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_WorldToShadow[4];
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp vec4 tmpvar_4;
  tmpvar_4 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_5;
  tmpvar_5[0] = unity_WorldToObject[0].xyz;
  tmpvar_5[1] = unity_WorldToObject[1].xyz;
  tmpvar_5[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_glesNormal * tmpvar_5));
  highp vec3 tmpvar_7;
  highp vec3 I_8;
  I_8 = (tmpvar_4.xyz - _WorldSpaceCameraPos);
  tmpvar_7 = (I_8 - (2.0 * (
    dot (tmpvar_6, I_8)
   * tmpvar_6)));
  tmpvar_1 = tmpvar_7;
  tmpvar_2.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_4.xyz;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = (unity_WorldToShadow[0] * tmpvar_4);
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform lowp vec4 unity_ShadowColor;
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  mediump float tmpvar_1;
  lowp vec4 c_2;
  lowp vec3 tmpvar_3;
  highp vec3 tmpvar_4;
  tmpvar_4 = xlv_TEXCOORD1;
  tmpvar_3 = xlv_TEXCOORD2;
  lowp vec4 reflcol_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_5 = (textureCube (_Cube, tmpvar_4) * tmpvar_6.w);
  lowp float tmpvar_7;
  highp float lightShadowDataX_8;
  mediump float tmpvar_9;
  tmpvar_9 = _LightShadowData.x;
  lightShadowDataX_8 = tmpvar_9;
  highp float tmpvar_10;
  tmpvar_10 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD5.xy).x > xlv_TEXCOORD5.z)), lightShadowDataX_8);
  tmpvar_7 = tmpvar_10;
  tmpvar_1 = tmpvar_7;
  mediump vec3 normalWorld_11;
  normalWorld_11 = tmpvar_3;
  mediump vec3 tmpvar_12;
  highp vec4 v_13;
  v_13.x = unity_MatrixV[0].z;
  v_13.y = unity_MatrixV[1].z;
  v_13.z = unity_MatrixV[2].z;
  v_13.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_14;
  tmpvar_14 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_15;
  highp float tmpvar_16;
  tmpvar_16 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_13.xyz), sqrt(dot (tmpvar_14, tmpvar_14)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_15 = tmpvar_16;
  mediump vec3 ambient_17;
  mediump vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = normalWorld_11;
  mediump vec3 x_19;
  x_19.x = dot (unity_SHAr, tmpvar_18);
  x_19.y = dot (unity_SHAg, tmpvar_18);
  x_19.z = dot (unity_SHAb, tmpvar_18);
  mediump vec3 x1_20;
  mediump vec4 tmpvar_21;
  tmpvar_21 = (normalWorld_11.xyzz * normalWorld_11.yzzx);
  x1_20.x = dot (unity_SHBr, tmpvar_21);
  x1_20.y = dot (unity_SHBg, tmpvar_21);
  x1_20.z = dot (unity_SHBb, tmpvar_21);
  ambient_17 = max (vec3(0.0, 0.0, 0.0), (x_19 + (x1_20 + 
    (unity_SHC.xyz * ((normalWorld_11.x * normalWorld_11.x) - (normalWorld_11.y * normalWorld_11.y)))
  )));
  mediump vec3 tmpvar_22;
  tmpvar_22 = max (((1.055 * 
    pow (max (ambient_17, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  ambient_17 = tmpvar_22;
  mediump vec4 tmpvar_23;
  tmpvar_23 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_24;
  color_24 = tmpvar_23;
  tmpvar_12 = (tmpvar_22 + (unity_Lightmap_HDR.x * color_24.xyz));
  mediump vec3 shadowColor_25;
  lowp vec3 tmpvar_26;
  tmpvar_26 = unity_ShadowColor.xyz;
  shadowColor_25 = tmpvar_26;
  tmpvar_12 = min (tmpvar_12, mix (max (
    (tmpvar_12 - ((max (0.0, 
      dot (normalWorld_11, _WorldSpaceLightPos0.xyz)
    ) * (1.0 - 
      clamp ((tmpvar_1 + tmpvar_15), 0.0, 1.0)
    )) * _LightColor0.xyz))
  , shadowColor_25), tmpvar_12, _LightShadowData.xxx));
  lowp vec4 c_27;
  lowp vec4 c_28;
  c_28.xyz = vec3(0.0, 0.0, 0.0);
  c_28.w = (reflcol_5.w * _ReflectColor.w);
  c_27.w = c_28.w;
  c_27.xyz = ((tmpvar_6 * _Color).xyz * tmpvar_12);
  c_2.xyz = (c_27.xyz + (reflcol_5.xyz * _ReflectColor.xyz));
  c_2.w = 1.0;
  gl_FragData[0] = c_2;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_WorldToShadow[4];
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp vec4 tmpvar_4;
  tmpvar_4 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_5;
  tmpvar_5[0] = unity_WorldToObject[0].xyz;
  tmpvar_5[1] = unity_WorldToObject[1].xyz;
  tmpvar_5[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_glesNormal * tmpvar_5));
  highp vec3 tmpvar_7;
  highp vec3 I_8;
  I_8 = (tmpvar_4.xyz - _WorldSpaceCameraPos);
  tmpvar_7 = (I_8 - (2.0 * (
    dot (tmpvar_6, I_8)
   * tmpvar_6)));
  tmpvar_1 = tmpvar_7;
  tmpvar_2.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_4.xyz;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = (unity_WorldToShadow[0] * tmpvar_4);
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 unity_OcclusionMaskSelector;
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform mediump sampler2D unity_Lightmap;
uniform sampler2D unity_ShadowMask;
uniform mediump vec4 unity_Lightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  mediump vec3 tmpvar_8;
  tmpvar_8 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_8;
  tmpvar_7 = xlv_TEXCOORD1;
  tmpvar_5 = xlv_TEXCOORD2;
  lowp vec4 reflcol_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_11;
  tmpvar_11 = (tmpvar_10 * _Color);
  reflcol_9 = (textureCube (_Cube, tmpvar_7) * tmpvar_10.w);
  lowp float tmpvar_12;
  highp float lightShadowDataX_13;
  mediump float tmpvar_14;
  tmpvar_14 = _LightShadowData.x;
  lightShadowDataX_13 = tmpvar_14;
  highp float tmpvar_15;
  tmpvar_15 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD5.xy).x > xlv_TEXCOORD5.z)), lightShadowDataX_13);
  tmpvar_12 = tmpvar_15;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_6;
  tmpvar_1 = tmpvar_12;
  mediump float bakedAtten_16;
  mediump vec3 tmpvar_17;
  mediump vec3 tmpvar_18;
  lowp float tmpvar_19;
  tmpvar_19 = clamp (dot (texture2D (unity_ShadowMask, xlv_TEXCOORD4.xy), unity_OcclusionMaskSelector), 0.0, 1.0);
  bakedAtten_16 = tmpvar_19;
  highp vec4 v_20;
  v_20.x = unity_MatrixV[0].z;
  v_20.y = unity_MatrixV[1].z;
  v_20.z = unity_MatrixV[2].z;
  v_20.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_21;
  tmpvar_21 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_22;
  highp float tmpvar_23;
  tmpvar_23 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_20.xyz), sqrt(dot (tmpvar_21, tmpvar_21)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_22 = tmpvar_23;
  tmpvar_17 = (tmpvar_2 * mix (tmpvar_1, bakedAtten_16, tmpvar_22));
  mediump vec4 tmpvar_24;
  tmpvar_24 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_25;
  color_25 = tmpvar_24;
  tmpvar_18 = (unity_Lightmap_HDR.x * color_25.xyz);
  tmpvar_2 = tmpvar_17;
  lowp vec4 c_26;
  lowp vec4 c_27;
  lowp float diff_28;
  mediump float tmpvar_29;
  tmpvar_29 = max (0.0, dot (tmpvar_5, tmpvar_3));
  diff_28 = tmpvar_29;
  c_27.xyz = ((tmpvar_11.xyz * tmpvar_17) * diff_28);
  c_27.w = (reflcol_9.w * _ReflectColor.w);
  c_26.w = c_27.w;
  c_26.xyz = (c_27.xyz + (tmpvar_11.xyz * tmpvar_18));
  c_4.xyz = (c_26.xyz + (reflcol_9.xyz * _ReflectColor.xyz));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_WorldToShadow[4];
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp vec4 tmpvar_4;
  tmpvar_4 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_5;
  tmpvar_5[0] = unity_WorldToObject[0].xyz;
  tmpvar_5[1] = unity_WorldToObject[1].xyz;
  tmpvar_5[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_glesNormal * tmpvar_5));
  highp vec3 tmpvar_7;
  highp vec3 I_8;
  I_8 = (tmpvar_4.xyz - _WorldSpaceCameraPos);
  tmpvar_7 = (I_8 - (2.0 * (
    dot (tmpvar_6, I_8)
   * tmpvar_6)));
  tmpvar_1 = tmpvar_7;
  tmpvar_2.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_4.xyz;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = (unity_WorldToShadow[0] * tmpvar_4);
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 unity_OcclusionMaskSelector;
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform mediump sampler2D unity_Lightmap;
uniform sampler2D unity_ShadowMask;
uniform mediump vec4 unity_Lightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  mediump vec3 tmpvar_8;
  tmpvar_8 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_8;
  tmpvar_7 = xlv_TEXCOORD1;
  tmpvar_5 = xlv_TEXCOORD2;
  lowp vec4 reflcol_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_11;
  tmpvar_11 = (tmpvar_10 * _Color);
  reflcol_9 = (textureCube (_Cube, tmpvar_7) * tmpvar_10.w);
  lowp float tmpvar_12;
  highp float lightShadowDataX_13;
  mediump float tmpvar_14;
  tmpvar_14 = _LightShadowData.x;
  lightShadowDataX_13 = tmpvar_14;
  highp float tmpvar_15;
  tmpvar_15 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD5.xy).x > xlv_TEXCOORD5.z)), lightShadowDataX_13);
  tmpvar_12 = tmpvar_15;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_6;
  tmpvar_1 = tmpvar_12;
  mediump float bakedAtten_16;
  mediump vec3 tmpvar_17;
  mediump vec3 tmpvar_18;
  lowp float tmpvar_19;
  tmpvar_19 = clamp (dot (texture2D (unity_ShadowMask, xlv_TEXCOORD4.xy), unity_OcclusionMaskSelector), 0.0, 1.0);
  bakedAtten_16 = tmpvar_19;
  highp vec4 v_20;
  v_20.x = unity_MatrixV[0].z;
  v_20.y = unity_MatrixV[1].z;
  v_20.z = unity_MatrixV[2].z;
  v_20.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_21;
  tmpvar_21 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_22;
  highp float tmpvar_23;
  tmpvar_23 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_20.xyz), sqrt(dot (tmpvar_21, tmpvar_21)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_22 = tmpvar_23;
  tmpvar_17 = (tmpvar_2 * mix (tmpvar_1, bakedAtten_16, tmpvar_22));
  mediump vec4 tmpvar_24;
  tmpvar_24 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_25;
  color_25 = tmpvar_24;
  tmpvar_18 = (unity_Lightmap_HDR.x * color_25.xyz);
  tmpvar_2 = tmpvar_17;
  lowp vec4 c_26;
  lowp vec4 c_27;
  lowp float diff_28;
  mediump float tmpvar_29;
  tmpvar_29 = max (0.0, dot (tmpvar_5, tmpvar_3));
  diff_28 = tmpvar_29;
  c_27.xyz = ((tmpvar_11.xyz * tmpvar_17) * diff_28);
  c_27.w = (reflcol_9.w * _ReflectColor.w);
  c_26.w = c_27.w;
  c_26.xyz = (c_27.xyz + (tmpvar_11.xyz * tmpvar_18));
  c_4.xyz = (c_26.xyz + (reflcol_9.xyz * _ReflectColor.xyz));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_WorldToShadow[4];
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp vec4 tmpvar_4;
  tmpvar_4 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_5;
  tmpvar_5[0] = unity_WorldToObject[0].xyz;
  tmpvar_5[1] = unity_WorldToObject[1].xyz;
  tmpvar_5[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_glesNormal * tmpvar_5));
  highp vec3 tmpvar_7;
  highp vec3 I_8;
  I_8 = (tmpvar_4.xyz - _WorldSpaceCameraPos);
  tmpvar_7 = (I_8 - (2.0 * (
    dot (tmpvar_6, I_8)
   * tmpvar_6)));
  tmpvar_1 = tmpvar_7;
  tmpvar_2.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_4.xyz;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = (unity_WorldToShadow[0] * tmpvar_4);
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 unity_OcclusionMaskSelector;
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform mediump sampler2D unity_Lightmap;
uniform sampler2D unity_ShadowMask;
uniform mediump vec4 unity_Lightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  mediump vec3 tmpvar_8;
  tmpvar_8 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_8;
  tmpvar_7 = xlv_TEXCOORD1;
  tmpvar_5 = xlv_TEXCOORD2;
  lowp vec4 reflcol_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_11;
  tmpvar_11 = (tmpvar_10 * _Color);
  reflcol_9 = (textureCube (_Cube, tmpvar_7) * tmpvar_10.w);
  lowp float tmpvar_12;
  highp float lightShadowDataX_13;
  mediump float tmpvar_14;
  tmpvar_14 = _LightShadowData.x;
  lightShadowDataX_13 = tmpvar_14;
  highp float tmpvar_15;
  tmpvar_15 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD5.xy).x > xlv_TEXCOORD5.z)), lightShadowDataX_13);
  tmpvar_12 = tmpvar_15;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_6;
  tmpvar_1 = tmpvar_12;
  mediump float bakedAtten_16;
  mediump vec3 tmpvar_17;
  mediump vec3 tmpvar_18;
  lowp float tmpvar_19;
  tmpvar_19 = clamp (dot (texture2D (unity_ShadowMask, xlv_TEXCOORD4.xy), unity_OcclusionMaskSelector), 0.0, 1.0);
  bakedAtten_16 = tmpvar_19;
  highp vec4 v_20;
  v_20.x = unity_MatrixV[0].z;
  v_20.y = unity_MatrixV[1].z;
  v_20.z = unity_MatrixV[2].z;
  v_20.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_21;
  tmpvar_21 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_22;
  highp float tmpvar_23;
  tmpvar_23 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_20.xyz), sqrt(dot (tmpvar_21, tmpvar_21)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_22 = tmpvar_23;
  tmpvar_17 = (tmpvar_2 * mix (tmpvar_1, bakedAtten_16, tmpvar_22));
  mediump vec4 tmpvar_24;
  tmpvar_24 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_25;
  color_25 = tmpvar_24;
  tmpvar_18 = (unity_Lightmap_HDR.x * color_25.xyz);
  tmpvar_2 = tmpvar_17;
  lowp vec4 c_26;
  lowp vec4 c_27;
  lowp float diff_28;
  mediump float tmpvar_29;
  tmpvar_29 = max (0.0, dot (tmpvar_5, tmpvar_3));
  diff_28 = tmpvar_29;
  c_27.xyz = ((tmpvar_11.xyz * tmpvar_17) * diff_28);
  c_27.w = (reflcol_9.w * _ReflectColor.w);
  c_26.w = c_27.w;
  c_26.xyz = (c_27.xyz + (tmpvar_11.xyz * tmpvar_18));
  c_4.xyz = (c_26.xyz + (reflcol_9.xyz * _ReflectColor.xyz));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_WorldToShadow[4];
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp vec4 tmpvar_4;
  tmpvar_4 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_5;
  tmpvar_5[0] = unity_WorldToObject[0].xyz;
  tmpvar_5[1] = unity_WorldToObject[1].xyz;
  tmpvar_5[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_glesNormal * tmpvar_5));
  highp vec3 tmpvar_7;
  highp vec3 I_8;
  I_8 = (tmpvar_4.xyz - _WorldSpaceCameraPos);
  tmpvar_7 = (I_8 - (2.0 * (
    dot (tmpvar_6, I_8)
   * tmpvar_6)));
  tmpvar_1 = tmpvar_7;
  tmpvar_2.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_4.xyz;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = (unity_WorldToShadow[0] * tmpvar_4);
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform lowp vec4 unity_OcclusionMaskSelector;
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform mediump sampler2D unity_Lightmap;
uniform sampler2D unity_ShadowMask;
uniform mediump vec4 unity_Lightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  mediump vec3 tmpvar_8;
  tmpvar_8 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_8;
  tmpvar_7 = xlv_TEXCOORD1;
  tmpvar_5 = xlv_TEXCOORD2;
  lowp vec4 reflcol_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_11;
  tmpvar_11 = (tmpvar_10 * _Color);
  reflcol_9 = (textureCube (_Cube, tmpvar_7) * tmpvar_10.w);
  lowp float tmpvar_12;
  highp float lightShadowDataX_13;
  mediump float tmpvar_14;
  tmpvar_14 = _LightShadowData.x;
  lightShadowDataX_13 = tmpvar_14;
  highp float tmpvar_15;
  tmpvar_15 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD5.xy).x > xlv_TEXCOORD5.z)), lightShadowDataX_13);
  tmpvar_12 = tmpvar_15;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_6;
  tmpvar_1 = tmpvar_12;
  mediump vec3 normalWorld_16;
  normalWorld_16 = tmpvar_5;
  mediump float bakedAtten_17;
  mediump vec3 tmpvar_18;
  mediump vec3 tmpvar_19;
  lowp float tmpvar_20;
  tmpvar_20 = clamp (dot (texture2D (unity_ShadowMask, xlv_TEXCOORD4.xy), unity_OcclusionMaskSelector), 0.0, 1.0);
  bakedAtten_17 = tmpvar_20;
  highp vec4 v_21;
  v_21.x = unity_MatrixV[0].z;
  v_21.y = unity_MatrixV[1].z;
  v_21.z = unity_MatrixV[2].z;
  v_21.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_22;
  tmpvar_22 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_23;
  highp float tmpvar_24;
  tmpvar_24 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_21.xyz), sqrt(dot (tmpvar_22, tmpvar_22)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_23 = tmpvar_24;
  tmpvar_18 = (tmpvar_2 * mix (tmpvar_1, bakedAtten_17, tmpvar_23));
  mediump vec3 ambient_25;
  mediump vec4 tmpvar_26;
  tmpvar_26.w = 1.0;
  tmpvar_26.xyz = normalWorld_16;
  mediump vec3 x_27;
  x_27.x = dot (unity_SHAr, tmpvar_26);
  x_27.y = dot (unity_SHAg, tmpvar_26);
  x_27.z = dot (unity_SHAb, tmpvar_26);
  mediump vec3 x1_28;
  mediump vec4 tmpvar_29;
  tmpvar_29 = (normalWorld_16.xyzz * normalWorld_16.yzzx);
  x1_28.x = dot (unity_SHBr, tmpvar_29);
  x1_28.y = dot (unity_SHBg, tmpvar_29);
  x1_28.z = dot (unity_SHBb, tmpvar_29);
  ambient_25 = max (vec3(0.0, 0.0, 0.0), (x_27 + (x1_28 + 
    (unity_SHC.xyz * ((normalWorld_16.x * normalWorld_16.x) - (normalWorld_16.y * normalWorld_16.y)))
  )));
  mediump vec3 tmpvar_30;
  tmpvar_30 = max (((1.055 * 
    pow (max (ambient_25, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  ambient_25 = tmpvar_30;
  mediump vec4 tmpvar_31;
  tmpvar_31 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_32;
  color_32 = tmpvar_31;
  tmpvar_19 = (tmpvar_30 + (unity_Lightmap_HDR.x * color_32.xyz));
  tmpvar_2 = tmpvar_18;
  lowp vec4 c_33;
  lowp vec4 c_34;
  lowp float diff_35;
  mediump float tmpvar_36;
  tmpvar_36 = max (0.0, dot (tmpvar_5, tmpvar_3));
  diff_35 = tmpvar_36;
  c_34.xyz = ((tmpvar_11.xyz * tmpvar_18) * diff_35);
  c_34.w = (reflcol_9.w * _ReflectColor.w);
  c_33.w = c_34.w;
  c_33.xyz = (c_34.xyz + (tmpvar_11.xyz * tmpvar_19));
  c_4.xyz = (c_33.xyz + (reflcol_9.xyz * _ReflectColor.xyz));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_WorldToShadow[4];
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp vec4 tmpvar_4;
  tmpvar_4 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_5;
  tmpvar_5[0] = unity_WorldToObject[0].xyz;
  tmpvar_5[1] = unity_WorldToObject[1].xyz;
  tmpvar_5[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_glesNormal * tmpvar_5));
  highp vec3 tmpvar_7;
  highp vec3 I_8;
  I_8 = (tmpvar_4.xyz - _WorldSpaceCameraPos);
  tmpvar_7 = (I_8 - (2.0 * (
    dot (tmpvar_6, I_8)
   * tmpvar_6)));
  tmpvar_1 = tmpvar_7;
  tmpvar_2.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_4.xyz;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = (unity_WorldToShadow[0] * tmpvar_4);
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform lowp vec4 unity_OcclusionMaskSelector;
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform mediump sampler2D unity_Lightmap;
uniform sampler2D unity_ShadowMask;
uniform mediump vec4 unity_Lightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  mediump vec3 tmpvar_8;
  tmpvar_8 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_8;
  tmpvar_7 = xlv_TEXCOORD1;
  tmpvar_5 = xlv_TEXCOORD2;
  lowp vec4 reflcol_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_11;
  tmpvar_11 = (tmpvar_10 * _Color);
  reflcol_9 = (textureCube (_Cube, tmpvar_7) * tmpvar_10.w);
  lowp float tmpvar_12;
  highp float lightShadowDataX_13;
  mediump float tmpvar_14;
  tmpvar_14 = _LightShadowData.x;
  lightShadowDataX_13 = tmpvar_14;
  highp float tmpvar_15;
  tmpvar_15 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD5.xy).x > xlv_TEXCOORD5.z)), lightShadowDataX_13);
  tmpvar_12 = tmpvar_15;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_6;
  tmpvar_1 = tmpvar_12;
  mediump vec3 normalWorld_16;
  normalWorld_16 = tmpvar_5;
  mediump float bakedAtten_17;
  mediump vec3 tmpvar_18;
  mediump vec3 tmpvar_19;
  lowp float tmpvar_20;
  tmpvar_20 = clamp (dot (texture2D (unity_ShadowMask, xlv_TEXCOORD4.xy), unity_OcclusionMaskSelector), 0.0, 1.0);
  bakedAtten_17 = tmpvar_20;
  highp vec4 v_21;
  v_21.x = unity_MatrixV[0].z;
  v_21.y = unity_MatrixV[1].z;
  v_21.z = unity_MatrixV[2].z;
  v_21.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_22;
  tmpvar_22 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_23;
  highp float tmpvar_24;
  tmpvar_24 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_21.xyz), sqrt(dot (tmpvar_22, tmpvar_22)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_23 = tmpvar_24;
  tmpvar_18 = (tmpvar_2 * mix (tmpvar_1, bakedAtten_17, tmpvar_23));
  mediump vec3 ambient_25;
  mediump vec4 tmpvar_26;
  tmpvar_26.w = 1.0;
  tmpvar_26.xyz = normalWorld_16;
  mediump vec3 x_27;
  x_27.x = dot (unity_SHAr, tmpvar_26);
  x_27.y = dot (unity_SHAg, tmpvar_26);
  x_27.z = dot (unity_SHAb, tmpvar_26);
  mediump vec3 x1_28;
  mediump vec4 tmpvar_29;
  tmpvar_29 = (normalWorld_16.xyzz * normalWorld_16.yzzx);
  x1_28.x = dot (unity_SHBr, tmpvar_29);
  x1_28.y = dot (unity_SHBg, tmpvar_29);
  x1_28.z = dot (unity_SHBb, tmpvar_29);
  ambient_25 = max (vec3(0.0, 0.0, 0.0), (x_27 + (x1_28 + 
    (unity_SHC.xyz * ((normalWorld_16.x * normalWorld_16.x) - (normalWorld_16.y * normalWorld_16.y)))
  )));
  mediump vec3 tmpvar_30;
  tmpvar_30 = max (((1.055 * 
    pow (max (ambient_25, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  ambient_25 = tmpvar_30;
  mediump vec4 tmpvar_31;
  tmpvar_31 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_32;
  color_32 = tmpvar_31;
  tmpvar_19 = (tmpvar_30 + (unity_Lightmap_HDR.x * color_32.xyz));
  tmpvar_2 = tmpvar_18;
  lowp vec4 c_33;
  lowp vec4 c_34;
  lowp float diff_35;
  mediump float tmpvar_36;
  tmpvar_36 = max (0.0, dot (tmpvar_5, tmpvar_3));
  diff_35 = tmpvar_36;
  c_34.xyz = ((tmpvar_11.xyz * tmpvar_18) * diff_35);
  c_34.w = (reflcol_9.w * _ReflectColor.w);
  c_33.w = c_34.w;
  c_33.xyz = (c_34.xyz + (tmpvar_11.xyz * tmpvar_19));
  c_4.xyz = (c_33.xyz + (reflcol_9.xyz * _ReflectColor.xyz));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_WorldToShadow[4];
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp vec4 tmpvar_4;
  tmpvar_4 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_5;
  tmpvar_5[0] = unity_WorldToObject[0].xyz;
  tmpvar_5[1] = unity_WorldToObject[1].xyz;
  tmpvar_5[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_glesNormal * tmpvar_5));
  highp vec3 tmpvar_7;
  highp vec3 I_8;
  I_8 = (tmpvar_4.xyz - _WorldSpaceCameraPos);
  tmpvar_7 = (I_8 - (2.0 * (
    dot (tmpvar_6, I_8)
   * tmpvar_6)));
  tmpvar_1 = tmpvar_7;
  tmpvar_2.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_4.xyz;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = (unity_WorldToShadow[0] * tmpvar_4);
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform lowp vec4 unity_OcclusionMaskSelector;
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform mediump sampler2D unity_Lightmap;
uniform sampler2D unity_ShadowMask;
uniform mediump vec4 unity_Lightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  mediump vec3 tmpvar_8;
  tmpvar_8 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_8;
  tmpvar_7 = xlv_TEXCOORD1;
  tmpvar_5 = xlv_TEXCOORD2;
  lowp vec4 reflcol_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_11;
  tmpvar_11 = (tmpvar_10 * _Color);
  reflcol_9 = (textureCube (_Cube, tmpvar_7) * tmpvar_10.w);
  lowp float tmpvar_12;
  highp float lightShadowDataX_13;
  mediump float tmpvar_14;
  tmpvar_14 = _LightShadowData.x;
  lightShadowDataX_13 = tmpvar_14;
  highp float tmpvar_15;
  tmpvar_15 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD5.xy).x > xlv_TEXCOORD5.z)), lightShadowDataX_13);
  tmpvar_12 = tmpvar_15;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_6;
  tmpvar_1 = tmpvar_12;
  mediump vec3 normalWorld_16;
  normalWorld_16 = tmpvar_5;
  mediump float bakedAtten_17;
  mediump vec3 tmpvar_18;
  mediump vec3 tmpvar_19;
  lowp float tmpvar_20;
  tmpvar_20 = clamp (dot (texture2D (unity_ShadowMask, xlv_TEXCOORD4.xy), unity_OcclusionMaskSelector), 0.0, 1.0);
  bakedAtten_17 = tmpvar_20;
  highp vec4 v_21;
  v_21.x = unity_MatrixV[0].z;
  v_21.y = unity_MatrixV[1].z;
  v_21.z = unity_MatrixV[2].z;
  v_21.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_22;
  tmpvar_22 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_23;
  highp float tmpvar_24;
  tmpvar_24 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_21.xyz), sqrt(dot (tmpvar_22, tmpvar_22)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_23 = tmpvar_24;
  tmpvar_18 = (tmpvar_2 * mix (tmpvar_1, bakedAtten_17, tmpvar_23));
  mediump vec3 ambient_25;
  mediump vec4 tmpvar_26;
  tmpvar_26.w = 1.0;
  tmpvar_26.xyz = normalWorld_16;
  mediump vec3 x_27;
  x_27.x = dot (unity_SHAr, tmpvar_26);
  x_27.y = dot (unity_SHAg, tmpvar_26);
  x_27.z = dot (unity_SHAb, tmpvar_26);
  mediump vec3 x1_28;
  mediump vec4 tmpvar_29;
  tmpvar_29 = (normalWorld_16.xyzz * normalWorld_16.yzzx);
  x1_28.x = dot (unity_SHBr, tmpvar_29);
  x1_28.y = dot (unity_SHBg, tmpvar_29);
  x1_28.z = dot (unity_SHBb, tmpvar_29);
  ambient_25 = max (vec3(0.0, 0.0, 0.0), (x_27 + (x1_28 + 
    (unity_SHC.xyz * ((normalWorld_16.x * normalWorld_16.x) - (normalWorld_16.y * normalWorld_16.y)))
  )));
  mediump vec3 tmpvar_30;
  tmpvar_30 = max (((1.055 * 
    pow (max (ambient_25, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  ambient_25 = tmpvar_30;
  mediump vec4 tmpvar_31;
  tmpvar_31 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_32;
  color_32 = tmpvar_31;
  tmpvar_19 = (tmpvar_30 + (unity_Lightmap_HDR.x * color_32.xyz));
  tmpvar_2 = tmpvar_18;
  lowp vec4 c_33;
  lowp vec4 c_34;
  lowp float diff_35;
  mediump float tmpvar_36;
  tmpvar_36 = max (0.0, dot (tmpvar_5, tmpvar_3));
  diff_35 = tmpvar_36;
  c_34.xyz = ((tmpvar_11.xyz * tmpvar_18) * diff_35);
  c_34.w = (reflcol_9.w * _ReflectColor.w);
  c_33.w = c_34.w;
  c_33.xyz = (c_34.xyz + (tmpvar_11.xyz * tmpvar_19));
  c_4.xyz = (c_33.xyz + (reflcol_9.xyz * _ReflectColor.xyz));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" "SHADOWS_SHADOWMASK" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_WorldToShadow[4];
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp vec4 tmpvar_4;
  tmpvar_4 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_5;
  tmpvar_5[0] = unity_WorldToObject[0].xyz;
  tmpvar_5[1] = unity_WorldToObject[1].xyz;
  tmpvar_5[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_glesNormal * tmpvar_5));
  highp vec3 tmpvar_7;
  highp vec3 I_8;
  I_8 = (tmpvar_4.xyz - _WorldSpaceCameraPos);
  tmpvar_7 = (I_8 - (2.0 * (
    dot (tmpvar_6, I_8)
   * tmpvar_6)));
  tmpvar_1 = tmpvar_7;
  tmpvar_2.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_4.xyz;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = (unity_WorldToShadow[0] * tmpvar_4);
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 unity_OcclusionMaskSelector;
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform mediump sampler2D unity_Lightmap;
uniform sampler2D unity_ShadowMask;
uniform mediump vec4 unity_Lightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  mediump vec3 tmpvar_8;
  tmpvar_8 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_8;
  tmpvar_7 = xlv_TEXCOORD1;
  tmpvar_5 = xlv_TEXCOORD2;
  lowp vec4 reflcol_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_11;
  tmpvar_11 = (tmpvar_10 * _Color);
  reflcol_9 = (textureCube (_Cube, tmpvar_7) * tmpvar_10.w);
  lowp float tmpvar_12;
  highp float lightShadowDataX_13;
  mediump float tmpvar_14;
  tmpvar_14 = _LightShadowData.x;
  lightShadowDataX_13 = tmpvar_14;
  highp float tmpvar_15;
  tmpvar_15 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD5.xy).x > xlv_TEXCOORD5.z)), lightShadowDataX_13);
  tmpvar_12 = tmpvar_15;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_6;
  tmpvar_1 = tmpvar_12;
  mediump float bakedAtten_16;
  mediump vec3 tmpvar_17;
  mediump vec3 tmpvar_18;
  lowp float tmpvar_19;
  tmpvar_19 = clamp (dot (texture2D (unity_ShadowMask, xlv_TEXCOORD4.xy), unity_OcclusionMaskSelector), 0.0, 1.0);
  bakedAtten_16 = tmpvar_19;
  highp vec4 v_20;
  v_20.x = unity_MatrixV[0].z;
  v_20.y = unity_MatrixV[1].z;
  v_20.z = unity_MatrixV[2].z;
  v_20.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_21;
  tmpvar_21 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_22;
  highp float tmpvar_23;
  tmpvar_23 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_20.xyz), sqrt(dot (tmpvar_21, tmpvar_21)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_22 = tmpvar_23;
  tmpvar_17 = (tmpvar_2 * min (clamp (
    (tmpvar_1 + tmpvar_22)
  , 0.0, 1.0), bakedAtten_16));
  mediump vec4 tmpvar_24;
  tmpvar_24 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_25;
  color_25 = tmpvar_24;
  tmpvar_18 = (unity_Lightmap_HDR.x * color_25.xyz);
  tmpvar_2 = tmpvar_17;
  lowp vec4 c_26;
  lowp vec4 c_27;
  lowp float diff_28;
  mediump float tmpvar_29;
  tmpvar_29 = max (0.0, dot (tmpvar_5, tmpvar_3));
  diff_28 = tmpvar_29;
  c_27.xyz = ((tmpvar_11.xyz * tmpvar_17) * diff_28);
  c_27.w = (reflcol_9.w * _ReflectColor.w);
  c_26.w = c_27.w;
  c_26.xyz = (c_27.xyz + (tmpvar_11.xyz * tmpvar_18));
  c_4.xyz = (c_26.xyz + (reflcol_9.xyz * _ReflectColor.xyz));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" "SHADOWS_SHADOWMASK" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_WorldToShadow[4];
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp vec4 tmpvar_4;
  tmpvar_4 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_5;
  tmpvar_5[0] = unity_WorldToObject[0].xyz;
  tmpvar_5[1] = unity_WorldToObject[1].xyz;
  tmpvar_5[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_glesNormal * tmpvar_5));
  highp vec3 tmpvar_7;
  highp vec3 I_8;
  I_8 = (tmpvar_4.xyz - _WorldSpaceCameraPos);
  tmpvar_7 = (I_8 - (2.0 * (
    dot (tmpvar_6, I_8)
   * tmpvar_6)));
  tmpvar_1 = tmpvar_7;
  tmpvar_2.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_4.xyz;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = (unity_WorldToShadow[0] * tmpvar_4);
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 unity_OcclusionMaskSelector;
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform mediump sampler2D unity_Lightmap;
uniform sampler2D unity_ShadowMask;
uniform mediump vec4 unity_Lightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  mediump vec3 tmpvar_8;
  tmpvar_8 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_8;
  tmpvar_7 = xlv_TEXCOORD1;
  tmpvar_5 = xlv_TEXCOORD2;
  lowp vec4 reflcol_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_11;
  tmpvar_11 = (tmpvar_10 * _Color);
  reflcol_9 = (textureCube (_Cube, tmpvar_7) * tmpvar_10.w);
  lowp float tmpvar_12;
  highp float lightShadowDataX_13;
  mediump float tmpvar_14;
  tmpvar_14 = _LightShadowData.x;
  lightShadowDataX_13 = tmpvar_14;
  highp float tmpvar_15;
  tmpvar_15 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD5.xy).x > xlv_TEXCOORD5.z)), lightShadowDataX_13);
  tmpvar_12 = tmpvar_15;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_6;
  tmpvar_1 = tmpvar_12;
  mediump float bakedAtten_16;
  mediump vec3 tmpvar_17;
  mediump vec3 tmpvar_18;
  lowp float tmpvar_19;
  tmpvar_19 = clamp (dot (texture2D (unity_ShadowMask, xlv_TEXCOORD4.xy), unity_OcclusionMaskSelector), 0.0, 1.0);
  bakedAtten_16 = tmpvar_19;
  highp vec4 v_20;
  v_20.x = unity_MatrixV[0].z;
  v_20.y = unity_MatrixV[1].z;
  v_20.z = unity_MatrixV[2].z;
  v_20.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_21;
  tmpvar_21 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_22;
  highp float tmpvar_23;
  tmpvar_23 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_20.xyz), sqrt(dot (tmpvar_21, tmpvar_21)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_22 = tmpvar_23;
  tmpvar_17 = (tmpvar_2 * min (clamp (
    (tmpvar_1 + tmpvar_22)
  , 0.0, 1.0), bakedAtten_16));
  mediump vec4 tmpvar_24;
  tmpvar_24 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_25;
  color_25 = tmpvar_24;
  tmpvar_18 = (unity_Lightmap_HDR.x * color_25.xyz);
  tmpvar_2 = tmpvar_17;
  lowp vec4 c_26;
  lowp vec4 c_27;
  lowp float diff_28;
  mediump float tmpvar_29;
  tmpvar_29 = max (0.0, dot (tmpvar_5, tmpvar_3));
  diff_28 = tmpvar_29;
  c_27.xyz = ((tmpvar_11.xyz * tmpvar_17) * diff_28);
  c_27.w = (reflcol_9.w * _ReflectColor.w);
  c_26.w = c_27.w;
  c_26.xyz = (c_27.xyz + (tmpvar_11.xyz * tmpvar_18));
  c_4.xyz = (c_26.xyz + (reflcol_9.xyz * _ReflectColor.xyz));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" "SHADOWS_SHADOWMASK" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_WorldToShadow[4];
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp vec4 tmpvar_4;
  tmpvar_4 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_5;
  tmpvar_5[0] = unity_WorldToObject[0].xyz;
  tmpvar_5[1] = unity_WorldToObject[1].xyz;
  tmpvar_5[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_glesNormal * tmpvar_5));
  highp vec3 tmpvar_7;
  highp vec3 I_8;
  I_8 = (tmpvar_4.xyz - _WorldSpaceCameraPos);
  tmpvar_7 = (I_8 - (2.0 * (
    dot (tmpvar_6, I_8)
   * tmpvar_6)));
  tmpvar_1 = tmpvar_7;
  tmpvar_2.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_4.xyz;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = (unity_WorldToShadow[0] * tmpvar_4);
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 unity_OcclusionMaskSelector;
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform mediump sampler2D unity_Lightmap;
uniform sampler2D unity_ShadowMask;
uniform mediump vec4 unity_Lightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  mediump vec3 tmpvar_8;
  tmpvar_8 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_8;
  tmpvar_7 = xlv_TEXCOORD1;
  tmpvar_5 = xlv_TEXCOORD2;
  lowp vec4 reflcol_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_11;
  tmpvar_11 = (tmpvar_10 * _Color);
  reflcol_9 = (textureCube (_Cube, tmpvar_7) * tmpvar_10.w);
  lowp float tmpvar_12;
  highp float lightShadowDataX_13;
  mediump float tmpvar_14;
  tmpvar_14 = _LightShadowData.x;
  lightShadowDataX_13 = tmpvar_14;
  highp float tmpvar_15;
  tmpvar_15 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD5.xy).x > xlv_TEXCOORD5.z)), lightShadowDataX_13);
  tmpvar_12 = tmpvar_15;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_6;
  tmpvar_1 = tmpvar_12;
  mediump float bakedAtten_16;
  mediump vec3 tmpvar_17;
  mediump vec3 tmpvar_18;
  lowp float tmpvar_19;
  tmpvar_19 = clamp (dot (texture2D (unity_ShadowMask, xlv_TEXCOORD4.xy), unity_OcclusionMaskSelector), 0.0, 1.0);
  bakedAtten_16 = tmpvar_19;
  highp vec4 v_20;
  v_20.x = unity_MatrixV[0].z;
  v_20.y = unity_MatrixV[1].z;
  v_20.z = unity_MatrixV[2].z;
  v_20.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_21;
  tmpvar_21 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_22;
  highp float tmpvar_23;
  tmpvar_23 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_20.xyz), sqrt(dot (tmpvar_21, tmpvar_21)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_22 = tmpvar_23;
  tmpvar_17 = (tmpvar_2 * min (clamp (
    (tmpvar_1 + tmpvar_22)
  , 0.0, 1.0), bakedAtten_16));
  mediump vec4 tmpvar_24;
  tmpvar_24 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_25;
  color_25 = tmpvar_24;
  tmpvar_18 = (unity_Lightmap_HDR.x * color_25.xyz);
  tmpvar_2 = tmpvar_17;
  lowp vec4 c_26;
  lowp vec4 c_27;
  lowp float diff_28;
  mediump float tmpvar_29;
  tmpvar_29 = max (0.0, dot (tmpvar_5, tmpvar_3));
  diff_28 = tmpvar_29;
  c_27.xyz = ((tmpvar_11.xyz * tmpvar_17) * diff_28);
  c_27.w = (reflcol_9.w * _ReflectColor.w);
  c_26.w = c_27.w;
  c_26.xyz = (c_27.xyz + (tmpvar_11.xyz * tmpvar_18));
  c_4.xyz = (c_26.xyz + (reflcol_9.xyz * _ReflectColor.xyz));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_WorldToShadow[4];
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp vec4 tmpvar_4;
  tmpvar_4 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_5;
  tmpvar_5[0] = unity_WorldToObject[0].xyz;
  tmpvar_5[1] = unity_WorldToObject[1].xyz;
  tmpvar_5[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_glesNormal * tmpvar_5));
  highp vec3 tmpvar_7;
  highp vec3 I_8;
  I_8 = (tmpvar_4.xyz - _WorldSpaceCameraPos);
  tmpvar_7 = (I_8 - (2.0 * (
    dot (tmpvar_6, I_8)
   * tmpvar_6)));
  tmpvar_1 = tmpvar_7;
  tmpvar_2.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_4.xyz;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = (unity_WorldToShadow[0] * tmpvar_4);
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform lowp vec4 unity_OcclusionMaskSelector;
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform mediump sampler2D unity_Lightmap;
uniform sampler2D unity_ShadowMask;
uniform mediump vec4 unity_Lightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  mediump vec3 tmpvar_8;
  tmpvar_8 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_8;
  tmpvar_7 = xlv_TEXCOORD1;
  tmpvar_5 = xlv_TEXCOORD2;
  lowp vec4 reflcol_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_11;
  tmpvar_11 = (tmpvar_10 * _Color);
  reflcol_9 = (textureCube (_Cube, tmpvar_7) * tmpvar_10.w);
  lowp float tmpvar_12;
  highp float lightShadowDataX_13;
  mediump float tmpvar_14;
  tmpvar_14 = _LightShadowData.x;
  lightShadowDataX_13 = tmpvar_14;
  highp float tmpvar_15;
  tmpvar_15 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD5.xy).x > xlv_TEXCOORD5.z)), lightShadowDataX_13);
  tmpvar_12 = tmpvar_15;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_6;
  tmpvar_1 = tmpvar_12;
  mediump vec3 normalWorld_16;
  normalWorld_16 = tmpvar_5;
  mediump float bakedAtten_17;
  mediump vec3 tmpvar_18;
  mediump vec3 tmpvar_19;
  lowp float tmpvar_20;
  tmpvar_20 = clamp (dot (texture2D (unity_ShadowMask, xlv_TEXCOORD4.xy), unity_OcclusionMaskSelector), 0.0, 1.0);
  bakedAtten_17 = tmpvar_20;
  highp vec4 v_21;
  v_21.x = unity_MatrixV[0].z;
  v_21.y = unity_MatrixV[1].z;
  v_21.z = unity_MatrixV[2].z;
  v_21.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_22;
  tmpvar_22 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_23;
  highp float tmpvar_24;
  tmpvar_24 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_21.xyz), sqrt(dot (tmpvar_22, tmpvar_22)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_23 = tmpvar_24;
  tmpvar_18 = (tmpvar_2 * min (clamp (
    (tmpvar_1 + tmpvar_23)
  , 0.0, 1.0), bakedAtten_17));
  mediump vec3 ambient_25;
  mediump vec4 tmpvar_26;
  tmpvar_26.w = 1.0;
  tmpvar_26.xyz = normalWorld_16;
  mediump vec3 x_27;
  x_27.x = dot (unity_SHAr, tmpvar_26);
  x_27.y = dot (unity_SHAg, tmpvar_26);
  x_27.z = dot (unity_SHAb, tmpvar_26);
  mediump vec3 x1_28;
  mediump vec4 tmpvar_29;
  tmpvar_29 = (normalWorld_16.xyzz * normalWorld_16.yzzx);
  x1_28.x = dot (unity_SHBr, tmpvar_29);
  x1_28.y = dot (unity_SHBg, tmpvar_29);
  x1_28.z = dot (unity_SHBb, tmpvar_29);
  ambient_25 = max (vec3(0.0, 0.0, 0.0), (x_27 + (x1_28 + 
    (unity_SHC.xyz * ((normalWorld_16.x * normalWorld_16.x) - (normalWorld_16.y * normalWorld_16.y)))
  )));
  mediump vec3 tmpvar_30;
  tmpvar_30 = max (((1.055 * 
    pow (max (ambient_25, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  ambient_25 = tmpvar_30;
  mediump vec4 tmpvar_31;
  tmpvar_31 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_32;
  color_32 = tmpvar_31;
  tmpvar_19 = (tmpvar_30 + (unity_Lightmap_HDR.x * color_32.xyz));
  tmpvar_2 = tmpvar_18;
  lowp vec4 c_33;
  lowp vec4 c_34;
  lowp float diff_35;
  mediump float tmpvar_36;
  tmpvar_36 = max (0.0, dot (tmpvar_5, tmpvar_3));
  diff_35 = tmpvar_36;
  c_34.xyz = ((tmpvar_11.xyz * tmpvar_18) * diff_35);
  c_34.w = (reflcol_9.w * _ReflectColor.w);
  c_33.w = c_34.w;
  c_33.xyz = (c_34.xyz + (tmpvar_11.xyz * tmpvar_19));
  c_4.xyz = (c_33.xyz + (reflcol_9.xyz * _ReflectColor.xyz));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_WorldToShadow[4];
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp vec4 tmpvar_4;
  tmpvar_4 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_5;
  tmpvar_5[0] = unity_WorldToObject[0].xyz;
  tmpvar_5[1] = unity_WorldToObject[1].xyz;
  tmpvar_5[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_glesNormal * tmpvar_5));
  highp vec3 tmpvar_7;
  highp vec3 I_8;
  I_8 = (tmpvar_4.xyz - _WorldSpaceCameraPos);
  tmpvar_7 = (I_8 - (2.0 * (
    dot (tmpvar_6, I_8)
   * tmpvar_6)));
  tmpvar_1 = tmpvar_7;
  tmpvar_2.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_4.xyz;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = (unity_WorldToShadow[0] * tmpvar_4);
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform lowp vec4 unity_OcclusionMaskSelector;
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform mediump sampler2D unity_Lightmap;
uniform sampler2D unity_ShadowMask;
uniform mediump vec4 unity_Lightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  mediump vec3 tmpvar_8;
  tmpvar_8 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_8;
  tmpvar_7 = xlv_TEXCOORD1;
  tmpvar_5 = xlv_TEXCOORD2;
  lowp vec4 reflcol_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_11;
  tmpvar_11 = (tmpvar_10 * _Color);
  reflcol_9 = (textureCube (_Cube, tmpvar_7) * tmpvar_10.w);
  lowp float tmpvar_12;
  highp float lightShadowDataX_13;
  mediump float tmpvar_14;
  tmpvar_14 = _LightShadowData.x;
  lightShadowDataX_13 = tmpvar_14;
  highp float tmpvar_15;
  tmpvar_15 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD5.xy).x > xlv_TEXCOORD5.z)), lightShadowDataX_13);
  tmpvar_12 = tmpvar_15;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_6;
  tmpvar_1 = tmpvar_12;
  mediump vec3 normalWorld_16;
  normalWorld_16 = tmpvar_5;
  mediump float bakedAtten_17;
  mediump vec3 tmpvar_18;
  mediump vec3 tmpvar_19;
  lowp float tmpvar_20;
  tmpvar_20 = clamp (dot (texture2D (unity_ShadowMask, xlv_TEXCOORD4.xy), unity_OcclusionMaskSelector), 0.0, 1.0);
  bakedAtten_17 = tmpvar_20;
  highp vec4 v_21;
  v_21.x = unity_MatrixV[0].z;
  v_21.y = unity_MatrixV[1].z;
  v_21.z = unity_MatrixV[2].z;
  v_21.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_22;
  tmpvar_22 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_23;
  highp float tmpvar_24;
  tmpvar_24 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_21.xyz), sqrt(dot (tmpvar_22, tmpvar_22)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_23 = tmpvar_24;
  tmpvar_18 = (tmpvar_2 * min (clamp (
    (tmpvar_1 + tmpvar_23)
  , 0.0, 1.0), bakedAtten_17));
  mediump vec3 ambient_25;
  mediump vec4 tmpvar_26;
  tmpvar_26.w = 1.0;
  tmpvar_26.xyz = normalWorld_16;
  mediump vec3 x_27;
  x_27.x = dot (unity_SHAr, tmpvar_26);
  x_27.y = dot (unity_SHAg, tmpvar_26);
  x_27.z = dot (unity_SHAb, tmpvar_26);
  mediump vec3 x1_28;
  mediump vec4 tmpvar_29;
  tmpvar_29 = (normalWorld_16.xyzz * normalWorld_16.yzzx);
  x1_28.x = dot (unity_SHBr, tmpvar_29);
  x1_28.y = dot (unity_SHBg, tmpvar_29);
  x1_28.z = dot (unity_SHBb, tmpvar_29);
  ambient_25 = max (vec3(0.0, 0.0, 0.0), (x_27 + (x1_28 + 
    (unity_SHC.xyz * ((normalWorld_16.x * normalWorld_16.x) - (normalWorld_16.y * normalWorld_16.y)))
  )));
  mediump vec3 tmpvar_30;
  tmpvar_30 = max (((1.055 * 
    pow (max (ambient_25, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  ambient_25 = tmpvar_30;
  mediump vec4 tmpvar_31;
  tmpvar_31 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_32;
  color_32 = tmpvar_31;
  tmpvar_19 = (tmpvar_30 + (unity_Lightmap_HDR.x * color_32.xyz));
  tmpvar_2 = tmpvar_18;
  lowp vec4 c_33;
  lowp vec4 c_34;
  lowp float diff_35;
  mediump float tmpvar_36;
  tmpvar_36 = max (0.0, dot (tmpvar_5, tmpvar_3));
  diff_35 = tmpvar_36;
  c_34.xyz = ((tmpvar_11.xyz * tmpvar_18) * diff_35);
  c_34.w = (reflcol_9.w * _ReflectColor.w);
  c_33.w = c_34.w;
  c_33.xyz = (c_34.xyz + (tmpvar_11.xyz * tmpvar_19));
  c_4.xyz = (c_33.xyz + (reflcol_9.xyz * _ReflectColor.xyz));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_WorldToShadow[4];
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp vec4 tmpvar_4;
  tmpvar_4 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_5;
  tmpvar_5[0] = unity_WorldToObject[0].xyz;
  tmpvar_5[1] = unity_WorldToObject[1].xyz;
  tmpvar_5[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_glesNormal * tmpvar_5));
  highp vec3 tmpvar_7;
  highp vec3 I_8;
  I_8 = (tmpvar_4.xyz - _WorldSpaceCameraPos);
  tmpvar_7 = (I_8 - (2.0 * (
    dot (tmpvar_6, I_8)
   * tmpvar_6)));
  tmpvar_1 = tmpvar_7;
  tmpvar_2.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_4.xyz;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = (unity_WorldToShadow[0] * tmpvar_4);
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform lowp vec4 unity_OcclusionMaskSelector;
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform mediump sampler2D unity_Lightmap;
uniform sampler2D unity_ShadowMask;
uniform mediump vec4 unity_Lightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  mediump vec3 tmpvar_8;
  tmpvar_8 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_8;
  tmpvar_7 = xlv_TEXCOORD1;
  tmpvar_5 = xlv_TEXCOORD2;
  lowp vec4 reflcol_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_11;
  tmpvar_11 = (tmpvar_10 * _Color);
  reflcol_9 = (textureCube (_Cube, tmpvar_7) * tmpvar_10.w);
  lowp float tmpvar_12;
  highp float lightShadowDataX_13;
  mediump float tmpvar_14;
  tmpvar_14 = _LightShadowData.x;
  lightShadowDataX_13 = tmpvar_14;
  highp float tmpvar_15;
  tmpvar_15 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD5.xy).x > xlv_TEXCOORD5.z)), lightShadowDataX_13);
  tmpvar_12 = tmpvar_15;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_6;
  tmpvar_1 = tmpvar_12;
  mediump vec3 normalWorld_16;
  normalWorld_16 = tmpvar_5;
  mediump float bakedAtten_17;
  mediump vec3 tmpvar_18;
  mediump vec3 tmpvar_19;
  lowp float tmpvar_20;
  tmpvar_20 = clamp (dot (texture2D (unity_ShadowMask, xlv_TEXCOORD4.xy), unity_OcclusionMaskSelector), 0.0, 1.0);
  bakedAtten_17 = tmpvar_20;
  highp vec4 v_21;
  v_21.x = unity_MatrixV[0].z;
  v_21.y = unity_MatrixV[1].z;
  v_21.z = unity_MatrixV[2].z;
  v_21.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_22;
  tmpvar_22 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_23;
  highp float tmpvar_24;
  tmpvar_24 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_21.xyz), sqrt(dot (tmpvar_22, tmpvar_22)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_23 = tmpvar_24;
  tmpvar_18 = (tmpvar_2 * min (clamp (
    (tmpvar_1 + tmpvar_23)
  , 0.0, 1.0), bakedAtten_17));
  mediump vec3 ambient_25;
  mediump vec4 tmpvar_26;
  tmpvar_26.w = 1.0;
  tmpvar_26.xyz = normalWorld_16;
  mediump vec3 x_27;
  x_27.x = dot (unity_SHAr, tmpvar_26);
  x_27.y = dot (unity_SHAg, tmpvar_26);
  x_27.z = dot (unity_SHAb, tmpvar_26);
  mediump vec3 x1_28;
  mediump vec4 tmpvar_29;
  tmpvar_29 = (normalWorld_16.xyzz * normalWorld_16.yzzx);
  x1_28.x = dot (unity_SHBr, tmpvar_29);
  x1_28.y = dot (unity_SHBg, tmpvar_29);
  x1_28.z = dot (unity_SHBb, tmpvar_29);
  ambient_25 = max (vec3(0.0, 0.0, 0.0), (x_27 + (x1_28 + 
    (unity_SHC.xyz * ((normalWorld_16.x * normalWorld_16.x) - (normalWorld_16.y * normalWorld_16.y)))
  )));
  mediump vec3 tmpvar_30;
  tmpvar_30 = max (((1.055 * 
    pow (max (ambient_25, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  ambient_25 = tmpvar_30;
  mediump vec4 tmpvar_31;
  tmpvar_31 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_32;
  color_32 = tmpvar_31;
  tmpvar_19 = (tmpvar_30 + (unity_Lightmap_HDR.x * color_32.xyz));
  tmpvar_2 = tmpvar_18;
  lowp vec4 c_33;
  lowp vec4 c_34;
  lowp float diff_35;
  mediump float tmpvar_36;
  tmpvar_36 = max (0.0, dot (tmpvar_5, tmpvar_3));
  diff_35 = tmpvar_36;
  c_34.xyz = ((tmpvar_11.xyz * tmpvar_18) * diff_35);
  c_34.w = (reflcol_9.w * _ReflectColor.w);
  c_33.w = c_34.w;
  c_33.xyz = (c_34.xyz + (tmpvar_11.xyz * tmpvar_19));
  c_4.xyz = (c_33.xyz + (reflcol_9.xyz * _ReflectColor.xyz));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "VERTEXLIGHT_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_3;
  tmpvar_3 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_glesNormal * tmpvar_4));
  highp vec3 tmpvar_6;
  highp vec3 I_7;
  I_7 = (tmpvar_3 - _WorldSpaceCameraPos);
  tmpvar_6 = (I_7 - (2.0 * (
    dot (tmpvar_5, I_7)
   * tmpvar_5)));
  tmpvar_1 = tmpvar_6;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_5;
  xlv_TEXCOORD3 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec4 c_3;
  lowp vec3 tmpvar_4;
  lowp vec3 lightDir_5;
  highp vec3 tmpvar_6;
  mediump vec3 tmpvar_7;
  tmpvar_7 = _WorldSpaceLightPos0.xyz;
  lightDir_5 = tmpvar_7;
  tmpvar_6 = xlv_TEXCOORD1;
  tmpvar_4 = xlv_TEXCOORD2;
  lowp vec4 reflcol_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_8 = (textureCube (_Cube, tmpvar_6) * tmpvar_9.w);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_5;
  lowp vec4 c_10;
  lowp float diff_11;
  mediump float tmpvar_12;
  tmpvar_12 = max (0.0, dot (tmpvar_4, tmpvar_2));
  diff_11 = tmpvar_12;
  c_10.xyz = (((tmpvar_9 * _Color).xyz * tmpvar_1) * diff_11);
  c_10.w = (reflcol_8.w * _ReflectColor.w);
  c_3.xyz = (c_10.xyz + (reflcol_8.xyz * _ReflectColor.xyz));
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "VERTEXLIGHT_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_3;
  tmpvar_3 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_glesNormal * tmpvar_4));
  highp vec3 tmpvar_6;
  highp vec3 I_7;
  I_7 = (tmpvar_3 - _WorldSpaceCameraPos);
  tmpvar_6 = (I_7 - (2.0 * (
    dot (tmpvar_5, I_7)
   * tmpvar_5)));
  tmpvar_1 = tmpvar_6;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_5;
  xlv_TEXCOORD3 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec4 c_3;
  lowp vec3 tmpvar_4;
  lowp vec3 lightDir_5;
  highp vec3 tmpvar_6;
  mediump vec3 tmpvar_7;
  tmpvar_7 = _WorldSpaceLightPos0.xyz;
  lightDir_5 = tmpvar_7;
  tmpvar_6 = xlv_TEXCOORD1;
  tmpvar_4 = xlv_TEXCOORD2;
  lowp vec4 reflcol_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_8 = (textureCube (_Cube, tmpvar_6) * tmpvar_9.w);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_5;
  lowp vec4 c_10;
  lowp float diff_11;
  mediump float tmpvar_12;
  tmpvar_12 = max (0.0, dot (tmpvar_4, tmpvar_2));
  diff_11 = tmpvar_12;
  c_10.xyz = (((tmpvar_9 * _Color).xyz * tmpvar_1) * diff_11);
  c_10.w = (reflcol_8.w * _ReflectColor.w);
  c_3.xyz = (c_10.xyz + (reflcol_8.xyz * _ReflectColor.xyz));
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "VERTEXLIGHT_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_3;
  tmpvar_3 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_glesNormal * tmpvar_4));
  highp vec3 tmpvar_6;
  highp vec3 I_7;
  I_7 = (tmpvar_3 - _WorldSpaceCameraPos);
  tmpvar_6 = (I_7 - (2.0 * (
    dot (tmpvar_5, I_7)
   * tmpvar_5)));
  tmpvar_1 = tmpvar_6;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_5;
  xlv_TEXCOORD3 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec4 c_3;
  lowp vec3 tmpvar_4;
  lowp vec3 lightDir_5;
  highp vec3 tmpvar_6;
  mediump vec3 tmpvar_7;
  tmpvar_7 = _WorldSpaceLightPos0.xyz;
  lightDir_5 = tmpvar_7;
  tmpvar_6 = xlv_TEXCOORD1;
  tmpvar_4 = xlv_TEXCOORD2;
  lowp vec4 reflcol_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_8 = (textureCube (_Cube, tmpvar_6) * tmpvar_9.w);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_5;
  lowp vec4 c_10;
  lowp float diff_11;
  mediump float tmpvar_12;
  tmpvar_12 = max (0.0, dot (tmpvar_4, tmpvar_2));
  diff_11 = tmpvar_12;
  c_10.xyz = (((tmpvar_9 * _Color).xyz * tmpvar_1) * diff_11);
  c_10.w = (reflcol_8.w * _ReflectColor.w);
  c_3.xyz = (c_10.xyz + (reflcol_8.xyz * _ReflectColor.xyz));
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD4;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_4;
  tmpvar_4 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_5;
  tmpvar_5[0] = unity_WorldToObject[0].xyz;
  tmpvar_5[1] = unity_WorldToObject[1].xyz;
  tmpvar_5[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_glesNormal * tmpvar_5));
  highp vec3 tmpvar_7;
  highp vec3 I_8;
  I_8 = (tmpvar_4 - _WorldSpaceCameraPos);
  tmpvar_7 = (I_8 - (2.0 * (
    dot (tmpvar_6, I_8)
   * tmpvar_6)));
  tmpvar_1 = tmpvar_7;
  highp vec3 lightColor0_9;
  lightColor0_9 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_10;
  lightColor1_10 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_11;
  lightColor2_11 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_12;
  lightColor3_12 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_13;
  lightAttenSq_13 = unity_4LightAtten0;
  highp vec3 col_14;
  highp vec4 ndotl_15;
  highp vec4 lengthSq_16;
  highp vec4 tmpvar_17;
  tmpvar_17 = (unity_4LightPosX0 - tmpvar_4.x);
  highp vec4 tmpvar_18;
  tmpvar_18 = (unity_4LightPosY0 - tmpvar_4.y);
  highp vec4 tmpvar_19;
  tmpvar_19 = (unity_4LightPosZ0 - tmpvar_4.z);
  lengthSq_16 = (tmpvar_17 * tmpvar_17);
  lengthSq_16 = (lengthSq_16 + (tmpvar_18 * tmpvar_18));
  lengthSq_16 = (lengthSq_16 + (tmpvar_19 * tmpvar_19));
  highp vec4 tmpvar_20;
  tmpvar_20 = max (lengthSq_16, vec4(1e-06, 1e-06, 1e-06, 1e-06));
  lengthSq_16 = tmpvar_20;
  ndotl_15 = (tmpvar_17 * tmpvar_6.x);
  ndotl_15 = (ndotl_15 + (tmpvar_18 * tmpvar_6.y));
  ndotl_15 = (ndotl_15 + (tmpvar_19 * tmpvar_6.z));
  highp vec4 tmpvar_21;
  tmpvar_21 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_15 * inversesqrt(tmpvar_20)));
  ndotl_15 = tmpvar_21;
  highp vec4 tmpvar_22;
  tmpvar_22 = (tmpvar_21 * (1.0/((1.0 + 
    (tmpvar_20 * lightAttenSq_13)
  ))));
  col_14 = (lightColor0_9 * tmpvar_22.x);
  col_14 = (col_14 + (lightColor1_10 * tmpvar_22.y));
  col_14 = (col_14 + (lightColor2_11 * tmpvar_22.z));
  col_14 = (col_14 + (lightColor3_12 * tmpvar_22.w));
  tmpvar_2 = col_14;
  mediump vec3 normal_23;
  normal_23 = tmpvar_6;
  mediump vec3 ambient_24;
  mediump vec4 tmpvar_25;
  tmpvar_25.w = 1.0;
  tmpvar_25.xyz = normal_23;
  mediump vec3 res_26;
  mediump vec3 x_27;
  x_27.x = dot (unity_SHAr, tmpvar_25);
  x_27.y = dot (unity_SHAg, tmpvar_25);
  x_27.z = dot (unity_SHAb, tmpvar_25);
  mediump vec3 x1_28;
  mediump vec4 tmpvar_29;
  tmpvar_29 = (normal_23.xyzz * normal_23.yzzx);
  x1_28.x = dot (unity_SHBr, tmpvar_29);
  x1_28.y = dot (unity_SHBg, tmpvar_29);
  x1_28.z = dot (unity_SHBb, tmpvar_29);
  res_26 = (x_27 + (x1_28 + (unity_SHC.xyz * 
    ((normal_23.x * normal_23.x) - (normal_23.y * normal_23.y))
  )));
  mediump vec3 tmpvar_30;
  tmpvar_30 = max (((1.055 * 
    pow (max (res_26, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_26 = tmpvar_30;
  ambient_24 = (tmpvar_2 + max (vec3(0.0, 0.0, 0.0), tmpvar_30));
  tmpvar_2 = ambient_24;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = ambient_24;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD4;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec4 c_3;
  lowp vec3 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  mediump vec3 tmpvar_8;
  tmpvar_8 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_8;
  tmpvar_7 = xlv_TEXCOORD1;
  tmpvar_5 = xlv_TEXCOORD2;
  lowp vec4 reflcol_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_9 = (textureCube (_Cube, tmpvar_7) * tmpvar_10.w);
  tmpvar_4 = (tmpvar_10 * _Color).xyz;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  lowp vec4 c_11;
  lowp vec4 c_12;
  lowp float diff_13;
  mediump float tmpvar_14;
  tmpvar_14 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_13 = tmpvar_14;
  c_12.xyz = ((tmpvar_4 * tmpvar_1) * diff_13);
  c_12.w = (reflcol_9.w * _ReflectColor.w);
  c_11.w = c_12.w;
  c_11.xyz = (c_12.xyz + (tmpvar_4 * xlv_TEXCOORD4));
  c_3.xyz = (c_11.xyz + (reflcol_9.xyz * _ReflectColor.xyz));
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD4;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_4;
  tmpvar_4 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_5;
  tmpvar_5[0] = unity_WorldToObject[0].xyz;
  tmpvar_5[1] = unity_WorldToObject[1].xyz;
  tmpvar_5[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_glesNormal * tmpvar_5));
  highp vec3 tmpvar_7;
  highp vec3 I_8;
  I_8 = (tmpvar_4 - _WorldSpaceCameraPos);
  tmpvar_7 = (I_8 - (2.0 * (
    dot (tmpvar_6, I_8)
   * tmpvar_6)));
  tmpvar_1 = tmpvar_7;
  highp vec3 lightColor0_9;
  lightColor0_9 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_10;
  lightColor1_10 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_11;
  lightColor2_11 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_12;
  lightColor3_12 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_13;
  lightAttenSq_13 = unity_4LightAtten0;
  highp vec3 col_14;
  highp vec4 ndotl_15;
  highp vec4 lengthSq_16;
  highp vec4 tmpvar_17;
  tmpvar_17 = (unity_4LightPosX0 - tmpvar_4.x);
  highp vec4 tmpvar_18;
  tmpvar_18 = (unity_4LightPosY0 - tmpvar_4.y);
  highp vec4 tmpvar_19;
  tmpvar_19 = (unity_4LightPosZ0 - tmpvar_4.z);
  lengthSq_16 = (tmpvar_17 * tmpvar_17);
  lengthSq_16 = (lengthSq_16 + (tmpvar_18 * tmpvar_18));
  lengthSq_16 = (lengthSq_16 + (tmpvar_19 * tmpvar_19));
  highp vec4 tmpvar_20;
  tmpvar_20 = max (lengthSq_16, vec4(1e-06, 1e-06, 1e-06, 1e-06));
  lengthSq_16 = tmpvar_20;
  ndotl_15 = (tmpvar_17 * tmpvar_6.x);
  ndotl_15 = (ndotl_15 + (tmpvar_18 * tmpvar_6.y));
  ndotl_15 = (ndotl_15 + (tmpvar_19 * tmpvar_6.z));
  highp vec4 tmpvar_21;
  tmpvar_21 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_15 * inversesqrt(tmpvar_20)));
  ndotl_15 = tmpvar_21;
  highp vec4 tmpvar_22;
  tmpvar_22 = (tmpvar_21 * (1.0/((1.0 + 
    (tmpvar_20 * lightAttenSq_13)
  ))));
  col_14 = (lightColor0_9 * tmpvar_22.x);
  col_14 = (col_14 + (lightColor1_10 * tmpvar_22.y));
  col_14 = (col_14 + (lightColor2_11 * tmpvar_22.z));
  col_14 = (col_14 + (lightColor3_12 * tmpvar_22.w));
  tmpvar_2 = col_14;
  mediump vec3 normal_23;
  normal_23 = tmpvar_6;
  mediump vec3 ambient_24;
  mediump vec4 tmpvar_25;
  tmpvar_25.w = 1.0;
  tmpvar_25.xyz = normal_23;
  mediump vec3 res_26;
  mediump vec3 x_27;
  x_27.x = dot (unity_SHAr, tmpvar_25);
  x_27.y = dot (unity_SHAg, tmpvar_25);
  x_27.z = dot (unity_SHAb, tmpvar_25);
  mediump vec3 x1_28;
  mediump vec4 tmpvar_29;
  tmpvar_29 = (normal_23.xyzz * normal_23.yzzx);
  x1_28.x = dot (unity_SHBr, tmpvar_29);
  x1_28.y = dot (unity_SHBg, tmpvar_29);
  x1_28.z = dot (unity_SHBb, tmpvar_29);
  res_26 = (x_27 + (x1_28 + (unity_SHC.xyz * 
    ((normal_23.x * normal_23.x) - (normal_23.y * normal_23.y))
  )));
  mediump vec3 tmpvar_30;
  tmpvar_30 = max (((1.055 * 
    pow (max (res_26, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_26 = tmpvar_30;
  ambient_24 = (tmpvar_2 + max (vec3(0.0, 0.0, 0.0), tmpvar_30));
  tmpvar_2 = ambient_24;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = ambient_24;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD4;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec4 c_3;
  lowp vec3 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  mediump vec3 tmpvar_8;
  tmpvar_8 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_8;
  tmpvar_7 = xlv_TEXCOORD1;
  tmpvar_5 = xlv_TEXCOORD2;
  lowp vec4 reflcol_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_9 = (textureCube (_Cube, tmpvar_7) * tmpvar_10.w);
  tmpvar_4 = (tmpvar_10 * _Color).xyz;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  lowp vec4 c_11;
  lowp vec4 c_12;
  lowp float diff_13;
  mediump float tmpvar_14;
  tmpvar_14 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_13 = tmpvar_14;
  c_12.xyz = ((tmpvar_4 * tmpvar_1) * diff_13);
  c_12.w = (reflcol_9.w * _ReflectColor.w);
  c_11.w = c_12.w;
  c_11.xyz = (c_12.xyz + (tmpvar_4 * xlv_TEXCOORD4));
  c_3.xyz = (c_11.xyz + (reflcol_9.xyz * _ReflectColor.xyz));
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD4;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_4;
  tmpvar_4 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_5;
  tmpvar_5[0] = unity_WorldToObject[0].xyz;
  tmpvar_5[1] = unity_WorldToObject[1].xyz;
  tmpvar_5[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_glesNormal * tmpvar_5));
  highp vec3 tmpvar_7;
  highp vec3 I_8;
  I_8 = (tmpvar_4 - _WorldSpaceCameraPos);
  tmpvar_7 = (I_8 - (2.0 * (
    dot (tmpvar_6, I_8)
   * tmpvar_6)));
  tmpvar_1 = tmpvar_7;
  highp vec3 lightColor0_9;
  lightColor0_9 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_10;
  lightColor1_10 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_11;
  lightColor2_11 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_12;
  lightColor3_12 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_13;
  lightAttenSq_13 = unity_4LightAtten0;
  highp vec3 col_14;
  highp vec4 ndotl_15;
  highp vec4 lengthSq_16;
  highp vec4 tmpvar_17;
  tmpvar_17 = (unity_4LightPosX0 - tmpvar_4.x);
  highp vec4 tmpvar_18;
  tmpvar_18 = (unity_4LightPosY0 - tmpvar_4.y);
  highp vec4 tmpvar_19;
  tmpvar_19 = (unity_4LightPosZ0 - tmpvar_4.z);
  lengthSq_16 = (tmpvar_17 * tmpvar_17);
  lengthSq_16 = (lengthSq_16 + (tmpvar_18 * tmpvar_18));
  lengthSq_16 = (lengthSq_16 + (tmpvar_19 * tmpvar_19));
  highp vec4 tmpvar_20;
  tmpvar_20 = max (lengthSq_16, vec4(1e-06, 1e-06, 1e-06, 1e-06));
  lengthSq_16 = tmpvar_20;
  ndotl_15 = (tmpvar_17 * tmpvar_6.x);
  ndotl_15 = (ndotl_15 + (tmpvar_18 * tmpvar_6.y));
  ndotl_15 = (ndotl_15 + (tmpvar_19 * tmpvar_6.z));
  highp vec4 tmpvar_21;
  tmpvar_21 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_15 * inversesqrt(tmpvar_20)));
  ndotl_15 = tmpvar_21;
  highp vec4 tmpvar_22;
  tmpvar_22 = (tmpvar_21 * (1.0/((1.0 + 
    (tmpvar_20 * lightAttenSq_13)
  ))));
  col_14 = (lightColor0_9 * tmpvar_22.x);
  col_14 = (col_14 + (lightColor1_10 * tmpvar_22.y));
  col_14 = (col_14 + (lightColor2_11 * tmpvar_22.z));
  col_14 = (col_14 + (lightColor3_12 * tmpvar_22.w));
  tmpvar_2 = col_14;
  mediump vec3 normal_23;
  normal_23 = tmpvar_6;
  mediump vec3 ambient_24;
  mediump vec4 tmpvar_25;
  tmpvar_25.w = 1.0;
  tmpvar_25.xyz = normal_23;
  mediump vec3 res_26;
  mediump vec3 x_27;
  x_27.x = dot (unity_SHAr, tmpvar_25);
  x_27.y = dot (unity_SHAg, tmpvar_25);
  x_27.z = dot (unity_SHAb, tmpvar_25);
  mediump vec3 x1_28;
  mediump vec4 tmpvar_29;
  tmpvar_29 = (normal_23.xyzz * normal_23.yzzx);
  x1_28.x = dot (unity_SHBr, tmpvar_29);
  x1_28.y = dot (unity_SHBg, tmpvar_29);
  x1_28.z = dot (unity_SHBb, tmpvar_29);
  res_26 = (x_27 + (x1_28 + (unity_SHC.xyz * 
    ((normal_23.x * normal_23.x) - (normal_23.y * normal_23.y))
  )));
  mediump vec3 tmpvar_30;
  tmpvar_30 = max (((1.055 * 
    pow (max (res_26, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_26 = tmpvar_30;
  ambient_24 = (tmpvar_2 + max (vec3(0.0, 0.0, 0.0), tmpvar_30));
  tmpvar_2 = ambient_24;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = ambient_24;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD4;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec4 c_3;
  lowp vec3 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  mediump vec3 tmpvar_8;
  tmpvar_8 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_8;
  tmpvar_7 = xlv_TEXCOORD1;
  tmpvar_5 = xlv_TEXCOORD2;
  lowp vec4 reflcol_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_9 = (textureCube (_Cube, tmpvar_7) * tmpvar_10.w);
  tmpvar_4 = (tmpvar_10 * _Color).xyz;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  lowp vec4 c_11;
  lowp vec4 c_12;
  lowp float diff_13;
  mediump float tmpvar_14;
  tmpvar_14 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_13 = tmpvar_14;
  c_12.xyz = ((tmpvar_4 * tmpvar_1) * diff_13);
  c_12.w = (reflcol_9.w * _ReflectColor.w);
  c_11.w = c_12.w;
  c_11.xyz = (c_12.xyz + (tmpvar_4 * xlv_TEXCOORD4));
  c_3.xyz = (c_11.xyz + (reflcol_9.xyz * _ReflectColor.xyz));
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD5;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = unity_WorldToObject[0].xyz;
  tmpvar_6[1] = unity_WorldToObject[1].xyz;
  tmpvar_6[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_glesNormal * tmpvar_6));
  highp vec3 tmpvar_8;
  highp vec3 I_9;
  I_9 = (tmpvar_5 - _WorldSpaceCameraPos);
  tmpvar_8 = (I_9 - (2.0 * (
    dot (tmpvar_7, I_9)
   * tmpvar_7)));
  tmpvar_1 = tmpvar_8;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_7;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD5 = tmpvar_2;
  xlv_TEXCOORD7 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 unity_WorldToShadow[4];
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp float atten_5;
  lowp vec3 tmpvar_6;
  lowp vec3 lightDir_7;
  highp vec3 tmpvar_8;
  mediump vec3 tmpvar_9;
  tmpvar_9 = _WorldSpaceLightPos0.xyz;
  lightDir_7 = tmpvar_9;
  tmpvar_8 = xlv_TEXCOORD1;
  tmpvar_6 = xlv_TEXCOORD2;
  lowp vec4 reflcol_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_10 = (textureCube (_Cube, tmpvar_8) * tmpvar_11.w);
  mediump float realtimeShadowAttenuation_12;
  highp vec4 v_13;
  v_13.x = unity_MatrixV[0].z;
  v_13.y = unity_MatrixV[1].z;
  v_13.z = unity_MatrixV[2].z;
  v_13.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_14;
  tmpvar_14 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_15;
  highp float tmpvar_16;
  tmpvar_16 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_13.xyz), sqrt(dot (tmpvar_14, tmpvar_14)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_15 = tmpvar_16;
  highp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = xlv_TEXCOORD3;
  lowp float tmpvar_18;
  highp vec4 shadowCoord_19;
  shadowCoord_19 = (unity_WorldToShadow[0] * tmpvar_17);
  highp float lightShadowDataX_20;
  mediump float tmpvar_21;
  tmpvar_21 = _LightShadowData.x;
  lightShadowDataX_20 = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = max (float((texture2D (_ShadowMapTexture, shadowCoord_19.xy).x > shadowCoord_19.z)), lightShadowDataX_20);
  tmpvar_18 = tmpvar_22;
  realtimeShadowAttenuation_12 = tmpvar_18;
  mediump float tmpvar_23;
  tmpvar_23 = clamp ((realtimeShadowAttenuation_12 + tmpvar_15), 0.0, 1.0);
  atten_5 = tmpvar_23;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_7;
  tmpvar_1 = atten_5;
  mediump vec3 tmpvar_24;
  tmpvar_24 = (tmpvar_2 * tmpvar_1);
  tmpvar_2 = tmpvar_24;
  lowp vec4 c_25;
  lowp float diff_26;
  mediump float tmpvar_27;
  tmpvar_27 = max (0.0, dot (tmpvar_6, tmpvar_3));
  diff_26 = tmpvar_27;
  c_25.xyz = (((tmpvar_11 * _Color).xyz * tmpvar_24) * diff_26);
  c_25.w = (reflcol_10.w * _ReflectColor.w);
  c_4.xyz = (c_25.xyz + (reflcol_10.xyz * _ReflectColor.xyz));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD5;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = unity_WorldToObject[0].xyz;
  tmpvar_6[1] = unity_WorldToObject[1].xyz;
  tmpvar_6[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_glesNormal * tmpvar_6));
  highp vec3 tmpvar_8;
  highp vec3 I_9;
  I_9 = (tmpvar_5 - _WorldSpaceCameraPos);
  tmpvar_8 = (I_9 - (2.0 * (
    dot (tmpvar_7, I_9)
   * tmpvar_7)));
  tmpvar_1 = tmpvar_8;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_7;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD5 = tmpvar_2;
  xlv_TEXCOORD7 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 unity_WorldToShadow[4];
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp float atten_5;
  lowp vec3 tmpvar_6;
  lowp vec3 lightDir_7;
  highp vec3 tmpvar_8;
  mediump vec3 tmpvar_9;
  tmpvar_9 = _WorldSpaceLightPos0.xyz;
  lightDir_7 = tmpvar_9;
  tmpvar_8 = xlv_TEXCOORD1;
  tmpvar_6 = xlv_TEXCOORD2;
  lowp vec4 reflcol_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_10 = (textureCube (_Cube, tmpvar_8) * tmpvar_11.w);
  mediump float realtimeShadowAttenuation_12;
  highp vec4 v_13;
  v_13.x = unity_MatrixV[0].z;
  v_13.y = unity_MatrixV[1].z;
  v_13.z = unity_MatrixV[2].z;
  v_13.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_14;
  tmpvar_14 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_15;
  highp float tmpvar_16;
  tmpvar_16 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_13.xyz), sqrt(dot (tmpvar_14, tmpvar_14)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_15 = tmpvar_16;
  highp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = xlv_TEXCOORD3;
  lowp float tmpvar_18;
  highp vec4 shadowCoord_19;
  shadowCoord_19 = (unity_WorldToShadow[0] * tmpvar_17);
  highp float lightShadowDataX_20;
  mediump float tmpvar_21;
  tmpvar_21 = _LightShadowData.x;
  lightShadowDataX_20 = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = max (float((texture2D (_ShadowMapTexture, shadowCoord_19.xy).x > shadowCoord_19.z)), lightShadowDataX_20);
  tmpvar_18 = tmpvar_22;
  realtimeShadowAttenuation_12 = tmpvar_18;
  mediump float tmpvar_23;
  tmpvar_23 = clamp ((realtimeShadowAttenuation_12 + tmpvar_15), 0.0, 1.0);
  atten_5 = tmpvar_23;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_7;
  tmpvar_1 = atten_5;
  mediump vec3 tmpvar_24;
  tmpvar_24 = (tmpvar_2 * tmpvar_1);
  tmpvar_2 = tmpvar_24;
  lowp vec4 c_25;
  lowp float diff_26;
  mediump float tmpvar_27;
  tmpvar_27 = max (0.0, dot (tmpvar_6, tmpvar_3));
  diff_26 = tmpvar_27;
  c_25.xyz = (((tmpvar_11 * _Color).xyz * tmpvar_24) * diff_26);
  c_25.w = (reflcol_10.w * _ReflectColor.w);
  c_4.xyz = (c_25.xyz + (reflcol_10.xyz * _ReflectColor.xyz));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD5;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = unity_WorldToObject[0].xyz;
  tmpvar_6[1] = unity_WorldToObject[1].xyz;
  tmpvar_6[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_glesNormal * tmpvar_6));
  highp vec3 tmpvar_8;
  highp vec3 I_9;
  I_9 = (tmpvar_5 - _WorldSpaceCameraPos);
  tmpvar_8 = (I_9 - (2.0 * (
    dot (tmpvar_7, I_9)
   * tmpvar_7)));
  tmpvar_1 = tmpvar_8;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_7;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD5 = tmpvar_2;
  xlv_TEXCOORD7 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 unity_WorldToShadow[4];
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp float atten_5;
  lowp vec3 tmpvar_6;
  lowp vec3 lightDir_7;
  highp vec3 tmpvar_8;
  mediump vec3 tmpvar_9;
  tmpvar_9 = _WorldSpaceLightPos0.xyz;
  lightDir_7 = tmpvar_9;
  tmpvar_8 = xlv_TEXCOORD1;
  tmpvar_6 = xlv_TEXCOORD2;
  lowp vec4 reflcol_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_10 = (textureCube (_Cube, tmpvar_8) * tmpvar_11.w);
  mediump float realtimeShadowAttenuation_12;
  highp vec4 v_13;
  v_13.x = unity_MatrixV[0].z;
  v_13.y = unity_MatrixV[1].z;
  v_13.z = unity_MatrixV[2].z;
  v_13.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_14;
  tmpvar_14 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_15;
  highp float tmpvar_16;
  tmpvar_16 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_13.xyz), sqrt(dot (tmpvar_14, tmpvar_14)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_15 = tmpvar_16;
  highp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = xlv_TEXCOORD3;
  lowp float tmpvar_18;
  highp vec4 shadowCoord_19;
  shadowCoord_19 = (unity_WorldToShadow[0] * tmpvar_17);
  highp float lightShadowDataX_20;
  mediump float tmpvar_21;
  tmpvar_21 = _LightShadowData.x;
  lightShadowDataX_20 = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = max (float((texture2D (_ShadowMapTexture, shadowCoord_19.xy).x > shadowCoord_19.z)), lightShadowDataX_20);
  tmpvar_18 = tmpvar_22;
  realtimeShadowAttenuation_12 = tmpvar_18;
  mediump float tmpvar_23;
  tmpvar_23 = clamp ((realtimeShadowAttenuation_12 + tmpvar_15), 0.0, 1.0);
  atten_5 = tmpvar_23;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_7;
  tmpvar_1 = atten_5;
  mediump vec3 tmpvar_24;
  tmpvar_24 = (tmpvar_2 * tmpvar_1);
  tmpvar_2 = tmpvar_24;
  lowp vec4 c_25;
  lowp float diff_26;
  mediump float tmpvar_27;
  tmpvar_27 = max (0.0, dot (tmpvar_6, tmpvar_3));
  diff_26 = tmpvar_27;
  c_25.xyz = (((tmpvar_11 * _Color).xyz * tmpvar_24) * diff_26);
  c_25.w = (reflcol_10.w * _ReflectColor.w);
  c_4.xyz = (c_25.xyz + (reflcol_10.xyz * _ReflectColor.xyz));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  tmpvar_5.w = 1.0;
  tmpvar_5.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_7;
  tmpvar_7[0] = unity_WorldToObject[0].xyz;
  tmpvar_7[1] = unity_WorldToObject[1].xyz;
  tmpvar_7[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_glesNormal * tmpvar_7));
  highp vec3 tmpvar_9;
  highp vec3 I_10;
  I_10 = (tmpvar_6 - _WorldSpaceCameraPos);
  tmpvar_9 = (I_10 - (2.0 * (
    dot (tmpvar_8, I_10)
   * tmpvar_8)));
  tmpvar_1 = tmpvar_9;
  highp vec3 lightColor0_11;
  lightColor0_11 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_12;
  lightColor1_12 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_13;
  lightColor2_13 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_14;
  lightColor3_14 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_15;
  lightAttenSq_15 = unity_4LightAtten0;
  highp vec3 col_16;
  highp vec4 ndotl_17;
  highp vec4 lengthSq_18;
  highp vec4 tmpvar_19;
  tmpvar_19 = (unity_4LightPosX0 - tmpvar_6.x);
  highp vec4 tmpvar_20;
  tmpvar_20 = (unity_4LightPosY0 - tmpvar_6.y);
  highp vec4 tmpvar_21;
  tmpvar_21 = (unity_4LightPosZ0 - tmpvar_6.z);
  lengthSq_18 = (tmpvar_19 * tmpvar_19);
  lengthSq_18 = (lengthSq_18 + (tmpvar_20 * tmpvar_20));
  lengthSq_18 = (lengthSq_18 + (tmpvar_21 * tmpvar_21));
  highp vec4 tmpvar_22;
  tmpvar_22 = max (lengthSq_18, vec4(1e-06, 1e-06, 1e-06, 1e-06));
  lengthSq_18 = tmpvar_22;
  ndotl_17 = (tmpvar_19 * tmpvar_8.x);
  ndotl_17 = (ndotl_17 + (tmpvar_20 * tmpvar_8.y));
  ndotl_17 = (ndotl_17 + (tmpvar_21 * tmpvar_8.z));
  highp vec4 tmpvar_23;
  tmpvar_23 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_17 * inversesqrt(tmpvar_22)));
  ndotl_17 = tmpvar_23;
  highp vec4 tmpvar_24;
  tmpvar_24 = (tmpvar_23 * (1.0/((1.0 + 
    (tmpvar_22 * lightAttenSq_15)
  ))));
  col_16 = (lightColor0_11 * tmpvar_24.x);
  col_16 = (col_16 + (lightColor1_12 * tmpvar_24.y));
  col_16 = (col_16 + (lightColor2_13 * tmpvar_24.z));
  col_16 = (col_16 + (lightColor3_14 * tmpvar_24.w));
  tmpvar_2 = col_16;
  mediump vec3 normal_25;
  normal_25 = tmpvar_8;
  mediump vec3 ambient_26;
  mediump vec3 x1_27;
  mediump vec4 tmpvar_28;
  tmpvar_28 = (normal_25.xyzz * normal_25.yzzx);
  x1_27.x = dot (unity_SHBr, tmpvar_28);
  x1_27.y = dot (unity_SHBg, tmpvar_28);
  x1_27.z = dot (unity_SHBb, tmpvar_28);
  ambient_26 = ((tmpvar_2 * (
    (tmpvar_2 * ((tmpvar_2 * 0.305306) + 0.6821711))
   + 0.01252288)) + (x1_27 + (unity_SHC.xyz * 
    ((normal_25.x * normal_25.x) - (normal_25.y * normal_25.y))
  )));
  tmpvar_2 = ambient_26;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_8;
  xlv_TEXCOORD3 = tmpvar_6;
  xlv_TEXCOORD4 = ambient_26;
  xlv_TEXCOORD5 = tmpvar_3;
  xlv_TEXCOORD7 = tmpvar_4;
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform highp mat4 unity_WorldToShadow[4];
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD4;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp float atten_5;
  lowp vec3 tmpvar_6;
  lowp vec3 lightDir_7;
  highp vec3 tmpvar_8;
  mediump vec3 tmpvar_9;
  tmpvar_9 = _WorldSpaceLightPos0.xyz;
  lightDir_7 = tmpvar_9;
  tmpvar_8 = xlv_TEXCOORD1;
  tmpvar_6 = xlv_TEXCOORD2;
  lowp vec4 reflcol_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_12;
  tmpvar_12 = (tmpvar_11 * _Color);
  reflcol_10 = (textureCube (_Cube, tmpvar_8) * tmpvar_11.w);
  mediump float realtimeShadowAttenuation_13;
  highp vec4 v_14;
  v_14.x = unity_MatrixV[0].z;
  v_14.y = unity_MatrixV[1].z;
  v_14.z = unity_MatrixV[2].z;
  v_14.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_15;
  tmpvar_15 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_16;
  highp float tmpvar_17;
  tmpvar_17 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_14.xyz), sqrt(dot (tmpvar_15, tmpvar_15)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_16 = tmpvar_17;
  highp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = xlv_TEXCOORD3;
  lowp float tmpvar_19;
  highp vec4 shadowCoord_20;
  shadowCoord_20 = (unity_WorldToShadow[0] * tmpvar_18);
  highp float lightShadowDataX_21;
  mediump float tmpvar_22;
  tmpvar_22 = _LightShadowData.x;
  lightShadowDataX_21 = tmpvar_22;
  highp float tmpvar_23;
  tmpvar_23 = max (float((texture2D (_ShadowMapTexture, shadowCoord_20.xy).x > shadowCoord_20.z)), lightShadowDataX_21);
  tmpvar_19 = tmpvar_23;
  realtimeShadowAttenuation_13 = tmpvar_19;
  mediump float tmpvar_24;
  tmpvar_24 = clamp ((realtimeShadowAttenuation_13 + tmpvar_16), 0.0, 1.0);
  atten_5 = tmpvar_24;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_7;
  tmpvar_1 = atten_5;
  mediump vec3 normalWorld_25;
  normalWorld_25 = tmpvar_6;
  mediump vec3 tmpvar_26;
  tmpvar_26 = (tmpvar_2 * tmpvar_1);
  mediump vec4 tmpvar_27;
  tmpvar_27.w = 1.0;
  tmpvar_27.xyz = normalWorld_25;
  mediump vec3 x_28;
  x_28.x = dot (unity_SHAr, tmpvar_27);
  x_28.y = dot (unity_SHAg, tmpvar_27);
  x_28.z = dot (unity_SHAb, tmpvar_27);
  mediump vec3 tmpvar_29;
  tmpvar_29 = max (((1.055 * 
    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD4 + x_28)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  tmpvar_2 = tmpvar_26;
  lowp vec4 c_30;
  lowp vec4 c_31;
  lowp float diff_32;
  mediump float tmpvar_33;
  tmpvar_33 = max (0.0, dot (tmpvar_6, tmpvar_3));
  diff_32 = tmpvar_33;
  c_31.xyz = ((tmpvar_12.xyz * tmpvar_26) * diff_32);
  c_31.w = (reflcol_10.w * _ReflectColor.w);
  c_30.w = c_31.w;
  c_30.xyz = (c_31.xyz + (tmpvar_12.xyz * tmpvar_29));
  c_4.xyz = (c_30.xyz + (reflcol_10.xyz * _ReflectColor.xyz));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  tmpvar_5.w = 1.0;
  tmpvar_5.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_7;
  tmpvar_7[0] = unity_WorldToObject[0].xyz;
  tmpvar_7[1] = unity_WorldToObject[1].xyz;
  tmpvar_7[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_glesNormal * tmpvar_7));
  highp vec3 tmpvar_9;
  highp vec3 I_10;
  I_10 = (tmpvar_6 - _WorldSpaceCameraPos);
  tmpvar_9 = (I_10 - (2.0 * (
    dot (tmpvar_8, I_10)
   * tmpvar_8)));
  tmpvar_1 = tmpvar_9;
  highp vec3 lightColor0_11;
  lightColor0_11 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_12;
  lightColor1_12 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_13;
  lightColor2_13 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_14;
  lightColor3_14 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_15;
  lightAttenSq_15 = unity_4LightAtten0;
  highp vec3 col_16;
  highp vec4 ndotl_17;
  highp vec4 lengthSq_18;
  highp vec4 tmpvar_19;
  tmpvar_19 = (unity_4LightPosX0 - tmpvar_6.x);
  highp vec4 tmpvar_20;
  tmpvar_20 = (unity_4LightPosY0 - tmpvar_6.y);
  highp vec4 tmpvar_21;
  tmpvar_21 = (unity_4LightPosZ0 - tmpvar_6.z);
  lengthSq_18 = (tmpvar_19 * tmpvar_19);
  lengthSq_18 = (lengthSq_18 + (tmpvar_20 * tmpvar_20));
  lengthSq_18 = (lengthSq_18 + (tmpvar_21 * tmpvar_21));
  highp vec4 tmpvar_22;
  tmpvar_22 = max (lengthSq_18, vec4(1e-06, 1e-06, 1e-06, 1e-06));
  lengthSq_18 = tmpvar_22;
  ndotl_17 = (tmpvar_19 * tmpvar_8.x);
  ndotl_17 = (ndotl_17 + (tmpvar_20 * tmpvar_8.y));
  ndotl_17 = (ndotl_17 + (tmpvar_21 * tmpvar_8.z));
  highp vec4 tmpvar_23;
  tmpvar_23 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_17 * inversesqrt(tmpvar_22)));
  ndotl_17 = tmpvar_23;
  highp vec4 tmpvar_24;
  tmpvar_24 = (tmpvar_23 * (1.0/((1.0 + 
    (tmpvar_22 * lightAttenSq_15)
  ))));
  col_16 = (lightColor0_11 * tmpvar_24.x);
  col_16 = (col_16 + (lightColor1_12 * tmpvar_24.y));
  col_16 = (col_16 + (lightColor2_13 * tmpvar_24.z));
  col_16 = (col_16 + (lightColor3_14 * tmpvar_24.w));
  tmpvar_2 = col_16;
  mediump vec3 normal_25;
  normal_25 = tmpvar_8;
  mediump vec3 ambient_26;
  mediump vec3 x1_27;
  mediump vec4 tmpvar_28;
  tmpvar_28 = (normal_25.xyzz * normal_25.yzzx);
  x1_27.x = dot (unity_SHBr, tmpvar_28);
  x1_27.y = dot (unity_SHBg, tmpvar_28);
  x1_27.z = dot (unity_SHBb, tmpvar_28);
  ambient_26 = ((tmpvar_2 * (
    (tmpvar_2 * ((tmpvar_2 * 0.305306) + 0.6821711))
   + 0.01252288)) + (x1_27 + (unity_SHC.xyz * 
    ((normal_25.x * normal_25.x) - (normal_25.y * normal_25.y))
  )));
  tmpvar_2 = ambient_26;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_8;
  xlv_TEXCOORD3 = tmpvar_6;
  xlv_TEXCOORD4 = ambient_26;
  xlv_TEXCOORD5 = tmpvar_3;
  xlv_TEXCOORD7 = tmpvar_4;
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform highp mat4 unity_WorldToShadow[4];
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD4;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp float atten_5;
  lowp vec3 tmpvar_6;
  lowp vec3 lightDir_7;
  highp vec3 tmpvar_8;
  mediump vec3 tmpvar_9;
  tmpvar_9 = _WorldSpaceLightPos0.xyz;
  lightDir_7 = tmpvar_9;
  tmpvar_8 = xlv_TEXCOORD1;
  tmpvar_6 = xlv_TEXCOORD2;
  lowp vec4 reflcol_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_12;
  tmpvar_12 = (tmpvar_11 * _Color);
  reflcol_10 = (textureCube (_Cube, tmpvar_8) * tmpvar_11.w);
  mediump float realtimeShadowAttenuation_13;
  highp vec4 v_14;
  v_14.x = unity_MatrixV[0].z;
  v_14.y = unity_MatrixV[1].z;
  v_14.z = unity_MatrixV[2].z;
  v_14.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_15;
  tmpvar_15 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_16;
  highp float tmpvar_17;
  tmpvar_17 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_14.xyz), sqrt(dot (tmpvar_15, tmpvar_15)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_16 = tmpvar_17;
  highp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = xlv_TEXCOORD3;
  lowp float tmpvar_19;
  highp vec4 shadowCoord_20;
  shadowCoord_20 = (unity_WorldToShadow[0] * tmpvar_18);
  highp float lightShadowDataX_21;
  mediump float tmpvar_22;
  tmpvar_22 = _LightShadowData.x;
  lightShadowDataX_21 = tmpvar_22;
  highp float tmpvar_23;
  tmpvar_23 = max (float((texture2D (_ShadowMapTexture, shadowCoord_20.xy).x > shadowCoord_20.z)), lightShadowDataX_21);
  tmpvar_19 = tmpvar_23;
  realtimeShadowAttenuation_13 = tmpvar_19;
  mediump float tmpvar_24;
  tmpvar_24 = clamp ((realtimeShadowAttenuation_13 + tmpvar_16), 0.0, 1.0);
  atten_5 = tmpvar_24;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_7;
  tmpvar_1 = atten_5;
  mediump vec3 normalWorld_25;
  normalWorld_25 = tmpvar_6;
  mediump vec3 tmpvar_26;
  tmpvar_26 = (tmpvar_2 * tmpvar_1);
  mediump vec4 tmpvar_27;
  tmpvar_27.w = 1.0;
  tmpvar_27.xyz = normalWorld_25;
  mediump vec3 x_28;
  x_28.x = dot (unity_SHAr, tmpvar_27);
  x_28.y = dot (unity_SHAg, tmpvar_27);
  x_28.z = dot (unity_SHAb, tmpvar_27);
  mediump vec3 tmpvar_29;
  tmpvar_29 = max (((1.055 * 
    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD4 + x_28)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  tmpvar_2 = tmpvar_26;
  lowp vec4 c_30;
  lowp vec4 c_31;
  lowp float diff_32;
  mediump float tmpvar_33;
  tmpvar_33 = max (0.0, dot (tmpvar_6, tmpvar_3));
  diff_32 = tmpvar_33;
  c_31.xyz = ((tmpvar_12.xyz * tmpvar_26) * diff_32);
  c_31.w = (reflcol_10.w * _ReflectColor.w);
  c_30.w = c_31.w;
  c_30.xyz = (c_31.xyz + (tmpvar_12.xyz * tmpvar_29));
  c_4.xyz = (c_30.xyz + (reflcol_10.xyz * _ReflectColor.xyz));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  tmpvar_5.w = 1.0;
  tmpvar_5.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_7;
  tmpvar_7[0] = unity_WorldToObject[0].xyz;
  tmpvar_7[1] = unity_WorldToObject[1].xyz;
  tmpvar_7[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_glesNormal * tmpvar_7));
  highp vec3 tmpvar_9;
  highp vec3 I_10;
  I_10 = (tmpvar_6 - _WorldSpaceCameraPos);
  tmpvar_9 = (I_10 - (2.0 * (
    dot (tmpvar_8, I_10)
   * tmpvar_8)));
  tmpvar_1 = tmpvar_9;
  highp vec3 lightColor0_11;
  lightColor0_11 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_12;
  lightColor1_12 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_13;
  lightColor2_13 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_14;
  lightColor3_14 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_15;
  lightAttenSq_15 = unity_4LightAtten0;
  highp vec3 col_16;
  highp vec4 ndotl_17;
  highp vec4 lengthSq_18;
  highp vec4 tmpvar_19;
  tmpvar_19 = (unity_4LightPosX0 - tmpvar_6.x);
  highp vec4 tmpvar_20;
  tmpvar_20 = (unity_4LightPosY0 - tmpvar_6.y);
  highp vec4 tmpvar_21;
  tmpvar_21 = (unity_4LightPosZ0 - tmpvar_6.z);
  lengthSq_18 = (tmpvar_19 * tmpvar_19);
  lengthSq_18 = (lengthSq_18 + (tmpvar_20 * tmpvar_20));
  lengthSq_18 = (lengthSq_18 + (tmpvar_21 * tmpvar_21));
  highp vec4 tmpvar_22;
  tmpvar_22 = max (lengthSq_18, vec4(1e-06, 1e-06, 1e-06, 1e-06));
  lengthSq_18 = tmpvar_22;
  ndotl_17 = (tmpvar_19 * tmpvar_8.x);
  ndotl_17 = (ndotl_17 + (tmpvar_20 * tmpvar_8.y));
  ndotl_17 = (ndotl_17 + (tmpvar_21 * tmpvar_8.z));
  highp vec4 tmpvar_23;
  tmpvar_23 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_17 * inversesqrt(tmpvar_22)));
  ndotl_17 = tmpvar_23;
  highp vec4 tmpvar_24;
  tmpvar_24 = (tmpvar_23 * (1.0/((1.0 + 
    (tmpvar_22 * lightAttenSq_15)
  ))));
  col_16 = (lightColor0_11 * tmpvar_24.x);
  col_16 = (col_16 + (lightColor1_12 * tmpvar_24.y));
  col_16 = (col_16 + (lightColor2_13 * tmpvar_24.z));
  col_16 = (col_16 + (lightColor3_14 * tmpvar_24.w));
  tmpvar_2 = col_16;
  mediump vec3 normal_25;
  normal_25 = tmpvar_8;
  mediump vec3 ambient_26;
  mediump vec3 x1_27;
  mediump vec4 tmpvar_28;
  tmpvar_28 = (normal_25.xyzz * normal_25.yzzx);
  x1_27.x = dot (unity_SHBr, tmpvar_28);
  x1_27.y = dot (unity_SHBg, tmpvar_28);
  x1_27.z = dot (unity_SHBb, tmpvar_28);
  ambient_26 = ((tmpvar_2 * (
    (tmpvar_2 * ((tmpvar_2 * 0.305306) + 0.6821711))
   + 0.01252288)) + (x1_27 + (unity_SHC.xyz * 
    ((normal_25.x * normal_25.x) - (normal_25.y * normal_25.y))
  )));
  tmpvar_2 = ambient_26;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_8;
  xlv_TEXCOORD3 = tmpvar_6;
  xlv_TEXCOORD4 = ambient_26;
  xlv_TEXCOORD5 = tmpvar_3;
  xlv_TEXCOORD7 = tmpvar_4;
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform highp mat4 unity_WorldToShadow[4];
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD4;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp float atten_5;
  lowp vec3 tmpvar_6;
  lowp vec3 lightDir_7;
  highp vec3 tmpvar_8;
  mediump vec3 tmpvar_9;
  tmpvar_9 = _WorldSpaceLightPos0.xyz;
  lightDir_7 = tmpvar_9;
  tmpvar_8 = xlv_TEXCOORD1;
  tmpvar_6 = xlv_TEXCOORD2;
  lowp vec4 reflcol_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_12;
  tmpvar_12 = (tmpvar_11 * _Color);
  reflcol_10 = (textureCube (_Cube, tmpvar_8) * tmpvar_11.w);
  mediump float realtimeShadowAttenuation_13;
  highp vec4 v_14;
  v_14.x = unity_MatrixV[0].z;
  v_14.y = unity_MatrixV[1].z;
  v_14.z = unity_MatrixV[2].z;
  v_14.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_15;
  tmpvar_15 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_16;
  highp float tmpvar_17;
  tmpvar_17 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_14.xyz), sqrt(dot (tmpvar_15, tmpvar_15)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_16 = tmpvar_17;
  highp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = xlv_TEXCOORD3;
  lowp float tmpvar_19;
  highp vec4 shadowCoord_20;
  shadowCoord_20 = (unity_WorldToShadow[0] * tmpvar_18);
  highp float lightShadowDataX_21;
  mediump float tmpvar_22;
  tmpvar_22 = _LightShadowData.x;
  lightShadowDataX_21 = tmpvar_22;
  highp float tmpvar_23;
  tmpvar_23 = max (float((texture2D (_ShadowMapTexture, shadowCoord_20.xy).x > shadowCoord_20.z)), lightShadowDataX_21);
  tmpvar_19 = tmpvar_23;
  realtimeShadowAttenuation_13 = tmpvar_19;
  mediump float tmpvar_24;
  tmpvar_24 = clamp ((realtimeShadowAttenuation_13 + tmpvar_16), 0.0, 1.0);
  atten_5 = tmpvar_24;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_7;
  tmpvar_1 = atten_5;
  mediump vec3 normalWorld_25;
  normalWorld_25 = tmpvar_6;
  mediump vec3 tmpvar_26;
  tmpvar_26 = (tmpvar_2 * tmpvar_1);
  mediump vec4 tmpvar_27;
  tmpvar_27.w = 1.0;
  tmpvar_27.xyz = normalWorld_25;
  mediump vec3 x_28;
  x_28.x = dot (unity_SHAr, tmpvar_27);
  x_28.y = dot (unity_SHAg, tmpvar_27);
  x_28.z = dot (unity_SHAb, tmpvar_27);
  mediump vec3 tmpvar_29;
  tmpvar_29 = max (((1.055 * 
    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD4 + x_28)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  tmpvar_2 = tmpvar_26;
  lowp vec4 c_30;
  lowp vec4 c_31;
  lowp float diff_32;
  mediump float tmpvar_33;
  tmpvar_33 = max (0.0, dot (tmpvar_6, tmpvar_3));
  diff_32 = tmpvar_33;
  c_31.xyz = ((tmpvar_12.xyz * tmpvar_26) * diff_32);
  c_31.w = (reflcol_10.w * _ReflectColor.w);
  c_30.w = c_31.w;
  c_30.xyz = (c_31.xyz + (tmpvar_12.xyz * tmpvar_29));
  c_4.xyz = (c_30.xyz + (reflcol_10.xyz * _ReflectColor.xyz));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_SHADOWMASK" "VERTEXLIGHT_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec2 xlv_TEXCOORD5;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_4;
  tmpvar_4 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_5;
  tmpvar_5[0] = unity_WorldToObject[0].xyz;
  tmpvar_5[1] = unity_WorldToObject[1].xyz;
  tmpvar_5[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_glesNormal * tmpvar_5));
  highp vec3 tmpvar_7;
  highp vec3 I_8;
  I_8 = (tmpvar_4 - _WorldSpaceCameraPos);
  tmpvar_7 = (I_8 - (2.0 * (
    dot (tmpvar_6, I_8)
   * tmpvar_6)));
  tmpvar_1 = tmpvar_7;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD5 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD7 = tmpvar_2;
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 unity_OcclusionMaskSelector;
uniform highp mat4 unity_WorldToShadow[4];
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform sampler2D unity_ShadowMask;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec2 xlv_TEXCOORD5;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp float atten_5;
  lowp vec3 tmpvar_6;
  lowp vec3 lightDir_7;
  highp vec3 tmpvar_8;
  mediump vec3 tmpvar_9;
  tmpvar_9 = _WorldSpaceLightPos0.xyz;
  lightDir_7 = tmpvar_9;
  tmpvar_8 = xlv_TEXCOORD1;
  tmpvar_6 = xlv_TEXCOORD2;
  lowp vec4 reflcol_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_10 = (textureCube (_Cube, tmpvar_8) * tmpvar_11.w);
  mediump float realtimeShadowAttenuation_12;
  mediump float shadowMaskAttenuation_13;
  highp vec4 v_14;
  v_14.x = unity_MatrixV[0].z;
  v_14.y = unity_MatrixV[1].z;
  v_14.z = unity_MatrixV[2].z;
  v_14.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_15;
  tmpvar_15 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_16;
  highp float tmpvar_17;
  tmpvar_17 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_14.xyz), sqrt(dot (tmpvar_15, tmpvar_15)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_16 = tmpvar_17;
  lowp float tmpvar_18;
  tmpvar_18 = clamp (dot (texture2D (unity_ShadowMask, xlv_TEXCOORD5), unity_OcclusionMaskSelector), 0.0, 1.0);
  shadowMaskAttenuation_13 = tmpvar_18;
  highp vec4 tmpvar_19;
  tmpvar_19.w = 1.0;
  tmpvar_19.xyz = xlv_TEXCOORD3;
  lowp float tmpvar_20;
  highp vec4 shadowCoord_21;
  shadowCoord_21 = (unity_WorldToShadow[0] * tmpvar_19);
  highp float lightShadowDataX_22;
  mediump float tmpvar_23;
  tmpvar_23 = _LightShadowData.x;
  lightShadowDataX_22 = tmpvar_23;
  highp float tmpvar_24;
  tmpvar_24 = max (float((texture2D (_ShadowMapTexture, shadowCoord_21.xy).x > shadowCoord_21.z)), lightShadowDataX_22);
  tmpvar_20 = tmpvar_24;
  realtimeShadowAttenuation_12 = tmpvar_20;
  mediump float tmpvar_25;
  tmpvar_25 = mix (realtimeShadowAttenuation_12, shadowMaskAttenuation_13, tmpvar_16);
  atten_5 = tmpvar_25;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_7;
  tmpvar_1 = atten_5;
  mediump vec3 tmpvar_26;
  tmpvar_26 = (tmpvar_2 * tmpvar_1);
  tmpvar_2 = tmpvar_26;
  lowp vec4 c_27;
  lowp float diff_28;
  mediump float tmpvar_29;
  tmpvar_29 = max (0.0, dot (tmpvar_6, tmpvar_3));
  diff_28 = tmpvar_29;
  c_27.xyz = (((tmpvar_11 * _Color).xyz * tmpvar_26) * diff_28);
  c_27.w = (reflcol_10.w * _ReflectColor.w);
  c_4.xyz = (c_27.xyz + (reflcol_10.xyz * _ReflectColor.xyz));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_SHADOWMASK" "VERTEXLIGHT_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec2 xlv_TEXCOORD5;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_4;
  tmpvar_4 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_5;
  tmpvar_5[0] = unity_WorldToObject[0].xyz;
  tmpvar_5[1] = unity_WorldToObject[1].xyz;
  tmpvar_5[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_glesNormal * tmpvar_5));
  highp vec3 tmpvar_7;
  highp vec3 I_8;
  I_8 = (tmpvar_4 - _WorldSpaceCameraPos);
  tmpvar_7 = (I_8 - (2.0 * (
    dot (tmpvar_6, I_8)
   * tmpvar_6)));
  tmpvar_1 = tmpvar_7;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD5 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD7 = tmpvar_2;
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 unity_OcclusionMaskSelector;
uniform highp mat4 unity_WorldToShadow[4];
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform sampler2D unity_ShadowMask;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec2 xlv_TEXCOORD5;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp float atten_5;
  lowp vec3 tmpvar_6;
  lowp vec3 lightDir_7;
  highp vec3 tmpvar_8;
  mediump vec3 tmpvar_9;
  tmpvar_9 = _WorldSpaceLightPos0.xyz;
  lightDir_7 = tmpvar_9;
  tmpvar_8 = xlv_TEXCOORD1;
  tmpvar_6 = xlv_TEXCOORD2;
  lowp vec4 reflcol_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_10 = (textureCube (_Cube, tmpvar_8) * tmpvar_11.w);
  mediump float realtimeShadowAttenuation_12;
  mediump float shadowMaskAttenuation_13;
  highp vec4 v_14;
  v_14.x = unity_MatrixV[0].z;
  v_14.y = unity_MatrixV[1].z;
  v_14.z = unity_MatrixV[2].z;
  v_14.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_15;
  tmpvar_15 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_16;
  highp float tmpvar_17;
  tmpvar_17 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_14.xyz), sqrt(dot (tmpvar_15, tmpvar_15)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_16 = tmpvar_17;
  lowp float tmpvar_18;
  tmpvar_18 = clamp (dot (texture2D (unity_ShadowMask, xlv_TEXCOORD5), unity_OcclusionMaskSelector), 0.0, 1.0);
  shadowMaskAttenuation_13 = tmpvar_18;
  highp vec4 tmpvar_19;
  tmpvar_19.w = 1.0;
  tmpvar_19.xyz = xlv_TEXCOORD3;
  lowp float tmpvar_20;
  highp vec4 shadowCoord_21;
  shadowCoord_21 = (unity_WorldToShadow[0] * tmpvar_19);
  highp float lightShadowDataX_22;
  mediump float tmpvar_23;
  tmpvar_23 = _LightShadowData.x;
  lightShadowDataX_22 = tmpvar_23;
  highp float tmpvar_24;
  tmpvar_24 = max (float((texture2D (_ShadowMapTexture, shadowCoord_21.xy).x > shadowCoord_21.z)), lightShadowDataX_22);
  tmpvar_20 = tmpvar_24;
  realtimeShadowAttenuation_12 = tmpvar_20;
  mediump float tmpvar_25;
  tmpvar_25 = mix (realtimeShadowAttenuation_12, shadowMaskAttenuation_13, tmpvar_16);
  atten_5 = tmpvar_25;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_7;
  tmpvar_1 = atten_5;
  mediump vec3 tmpvar_26;
  tmpvar_26 = (tmpvar_2 * tmpvar_1);
  tmpvar_2 = tmpvar_26;
  lowp vec4 c_27;
  lowp float diff_28;
  mediump float tmpvar_29;
  tmpvar_29 = max (0.0, dot (tmpvar_6, tmpvar_3));
  diff_28 = tmpvar_29;
  c_27.xyz = (((tmpvar_11 * _Color).xyz * tmpvar_26) * diff_28);
  c_27.w = (reflcol_10.w * _ReflectColor.w);
  c_4.xyz = (c_27.xyz + (reflcol_10.xyz * _ReflectColor.xyz));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_SHADOWMASK" "VERTEXLIGHT_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec2 xlv_TEXCOORD5;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_4;
  tmpvar_4 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_5;
  tmpvar_5[0] = unity_WorldToObject[0].xyz;
  tmpvar_5[1] = unity_WorldToObject[1].xyz;
  tmpvar_5[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_glesNormal * tmpvar_5));
  highp vec3 tmpvar_7;
  highp vec3 I_8;
  I_8 = (tmpvar_4 - _WorldSpaceCameraPos);
  tmpvar_7 = (I_8 - (2.0 * (
    dot (tmpvar_6, I_8)
   * tmpvar_6)));
  tmpvar_1 = tmpvar_7;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD5 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD7 = tmpvar_2;
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 unity_OcclusionMaskSelector;
uniform highp mat4 unity_WorldToShadow[4];
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform sampler2D unity_ShadowMask;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec2 xlv_TEXCOORD5;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp float atten_5;
  lowp vec3 tmpvar_6;
  lowp vec3 lightDir_7;
  highp vec3 tmpvar_8;
  mediump vec3 tmpvar_9;
  tmpvar_9 = _WorldSpaceLightPos0.xyz;
  lightDir_7 = tmpvar_9;
  tmpvar_8 = xlv_TEXCOORD1;
  tmpvar_6 = xlv_TEXCOORD2;
  lowp vec4 reflcol_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_10 = (textureCube (_Cube, tmpvar_8) * tmpvar_11.w);
  mediump float realtimeShadowAttenuation_12;
  mediump float shadowMaskAttenuation_13;
  highp vec4 v_14;
  v_14.x = unity_MatrixV[0].z;
  v_14.y = unity_MatrixV[1].z;
  v_14.z = unity_MatrixV[2].z;
  v_14.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_15;
  tmpvar_15 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_16;
  highp float tmpvar_17;
  tmpvar_17 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_14.xyz), sqrt(dot (tmpvar_15, tmpvar_15)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_16 = tmpvar_17;
  lowp float tmpvar_18;
  tmpvar_18 = clamp (dot (texture2D (unity_ShadowMask, xlv_TEXCOORD5), unity_OcclusionMaskSelector), 0.0, 1.0);
  shadowMaskAttenuation_13 = tmpvar_18;
  highp vec4 tmpvar_19;
  tmpvar_19.w = 1.0;
  tmpvar_19.xyz = xlv_TEXCOORD3;
  lowp float tmpvar_20;
  highp vec4 shadowCoord_21;
  shadowCoord_21 = (unity_WorldToShadow[0] * tmpvar_19);
  highp float lightShadowDataX_22;
  mediump float tmpvar_23;
  tmpvar_23 = _LightShadowData.x;
  lightShadowDataX_22 = tmpvar_23;
  highp float tmpvar_24;
  tmpvar_24 = max (float((texture2D (_ShadowMapTexture, shadowCoord_21.xy).x > shadowCoord_21.z)), lightShadowDataX_22);
  tmpvar_20 = tmpvar_24;
  realtimeShadowAttenuation_12 = tmpvar_20;
  mediump float tmpvar_25;
  tmpvar_25 = mix (realtimeShadowAttenuation_12, shadowMaskAttenuation_13, tmpvar_16);
  atten_5 = tmpvar_25;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_7;
  tmpvar_1 = atten_5;
  mediump vec3 tmpvar_26;
  tmpvar_26 = (tmpvar_2 * tmpvar_1);
  tmpvar_2 = tmpvar_26;
  lowp vec4 c_27;
  lowp float diff_28;
  mediump float tmpvar_29;
  tmpvar_29 = max (0.0, dot (tmpvar_6, tmpvar_3));
  diff_28 = tmpvar_29;
  c_27.xyz = (((tmpvar_11 * _Color).xyz * tmpvar_26) * diff_28);
  c_27.w = (reflcol_10.w * _ReflectColor.w);
  c_4.xyz = (c_27.xyz + (reflcol_10.xyz * _ReflectColor.xyz));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = unity_WorldToObject[0].xyz;
  tmpvar_6[1] = unity_WorldToObject[1].xyz;
  tmpvar_6[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_glesNormal * tmpvar_6));
  highp vec3 tmpvar_8;
  highp vec3 I_9;
  I_9 = (tmpvar_5 - _WorldSpaceCameraPos);
  tmpvar_8 = (I_9 - (2.0 * (
    dot (tmpvar_7, I_9)
   * tmpvar_7)));
  tmpvar_1 = tmpvar_8;
  highp vec3 lightColor0_10;
  lightColor0_10 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_11;
  lightColor1_11 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_12;
  lightColor2_12 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_13;
  lightColor3_13 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_14;
  lightAttenSq_14 = unity_4LightAtten0;
  highp vec3 col_15;
  highp vec4 ndotl_16;
  highp vec4 lengthSq_17;
  highp vec4 tmpvar_18;
  tmpvar_18 = (unity_4LightPosX0 - tmpvar_5.x);
  highp vec4 tmpvar_19;
  tmpvar_19 = (unity_4LightPosY0 - tmpvar_5.y);
  highp vec4 tmpvar_20;
  tmpvar_20 = (unity_4LightPosZ0 - tmpvar_5.z);
  lengthSq_17 = (tmpvar_18 * tmpvar_18);
  lengthSq_17 = (lengthSq_17 + (tmpvar_19 * tmpvar_19));
  lengthSq_17 = (lengthSq_17 + (tmpvar_20 * tmpvar_20));
  highp vec4 tmpvar_21;
  tmpvar_21 = max (lengthSq_17, vec4(1e-06, 1e-06, 1e-06, 1e-06));
  lengthSq_17 = tmpvar_21;
  ndotl_16 = (tmpvar_18 * tmpvar_7.x);
  ndotl_16 = (ndotl_16 + (tmpvar_19 * tmpvar_7.y));
  ndotl_16 = (ndotl_16 + (tmpvar_20 * tmpvar_7.z));
  highp vec4 tmpvar_22;
  tmpvar_22 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_16 * inversesqrt(tmpvar_21)));
  ndotl_16 = tmpvar_22;
  highp vec4 tmpvar_23;
  tmpvar_23 = (tmpvar_22 * (1.0/((1.0 + 
    (tmpvar_21 * lightAttenSq_14)
  ))));
  col_15 = (lightColor0_10 * tmpvar_23.x);
  col_15 = (col_15 + (lightColor1_11 * tmpvar_23.y));
  col_15 = (col_15 + (lightColor2_12 * tmpvar_23.z));
  col_15 = (col_15 + (lightColor3_13 * tmpvar_23.w));
  tmpvar_2 = col_15;
  mediump vec3 normal_24;
  normal_24 = tmpvar_7;
  mediump vec3 ambient_25;
  mediump vec3 x1_26;
  mediump vec4 tmpvar_27;
  tmpvar_27 = (normal_24.xyzz * normal_24.yzzx);
  x1_26.x = dot (unity_SHBr, tmpvar_27);
  x1_26.y = dot (unity_SHBg, tmpvar_27);
  x1_26.z = dot (unity_SHBb, tmpvar_27);
  ambient_25 = ((tmpvar_2 * (
    (tmpvar_2 * ((tmpvar_2 * 0.305306) + 0.6821711))
   + 0.01252288)) + (x1_26 + (unity_SHC.xyz * 
    ((normal_24.x * normal_24.x) - (normal_24.y * normal_24.y))
  )));
  tmpvar_2 = ambient_25;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_7;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = ambient_25;
  xlv_TEXCOORD5 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD7 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform lowp vec4 unity_OcclusionMaskSelector;
uniform highp mat4 unity_WorldToShadow[4];
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform sampler2D unity_ShadowMask;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp float atten_5;
  lowp vec3 tmpvar_6;
  lowp vec3 lightDir_7;
  highp vec3 tmpvar_8;
  mediump vec3 tmpvar_9;
  tmpvar_9 = _WorldSpaceLightPos0.xyz;
  lightDir_7 = tmpvar_9;
  tmpvar_8 = xlv_TEXCOORD1;
  tmpvar_6 = xlv_TEXCOORD2;
  lowp vec4 reflcol_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_12;
  tmpvar_12 = (tmpvar_11 * _Color);
  reflcol_10 = (textureCube (_Cube, tmpvar_8) * tmpvar_11.w);
  mediump float realtimeShadowAttenuation_13;
  mediump float shadowMaskAttenuation_14;
  highp vec4 v_15;
  v_15.x = unity_MatrixV[0].z;
  v_15.y = unity_MatrixV[1].z;
  v_15.z = unity_MatrixV[2].z;
  v_15.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_16;
  tmpvar_16 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_17;
  highp float tmpvar_18;
  tmpvar_18 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_15.xyz), sqrt(dot (tmpvar_16, tmpvar_16)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_17 = tmpvar_18;
  lowp float tmpvar_19;
  tmpvar_19 = clamp (dot (texture2D (unity_ShadowMask, xlv_TEXCOORD5), unity_OcclusionMaskSelector), 0.0, 1.0);
  shadowMaskAttenuation_14 = tmpvar_19;
  highp vec4 tmpvar_20;
  tmpvar_20.w = 1.0;
  tmpvar_20.xyz = xlv_TEXCOORD3;
  lowp float tmpvar_21;
  highp vec4 shadowCoord_22;
  shadowCoord_22 = (unity_WorldToShadow[0] * tmpvar_20);
  highp float lightShadowDataX_23;
  mediump float tmpvar_24;
  tmpvar_24 = _LightShadowData.x;
  lightShadowDataX_23 = tmpvar_24;
  highp float tmpvar_25;
  tmpvar_25 = max (float((texture2D (_ShadowMapTexture, shadowCoord_22.xy).x > shadowCoord_22.z)), lightShadowDataX_23);
  tmpvar_21 = tmpvar_25;
  realtimeShadowAttenuation_13 = tmpvar_21;
  mediump float tmpvar_26;
  tmpvar_26 = mix (realtimeShadowAttenuation_13, shadowMaskAttenuation_14, tmpvar_17);
  atten_5 = tmpvar_26;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_7;
  tmpvar_1 = atten_5;
  mediump vec3 normalWorld_27;
  normalWorld_27 = tmpvar_6;
  mediump vec3 tmpvar_28;
  tmpvar_28 = (tmpvar_2 * tmpvar_1);
  mediump vec4 tmpvar_29;
  tmpvar_29.w = 1.0;
  tmpvar_29.xyz = normalWorld_27;
  mediump vec3 x_30;
  x_30.x = dot (unity_SHAr, tmpvar_29);
  x_30.y = dot (unity_SHAg, tmpvar_29);
  x_30.z = dot (unity_SHAb, tmpvar_29);
  mediump vec3 tmpvar_31;
  tmpvar_31 = max (((1.055 * 
    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD4 + x_30)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  tmpvar_2 = tmpvar_28;
  lowp vec4 c_32;
  lowp vec4 c_33;
  lowp float diff_34;
  mediump float tmpvar_35;
  tmpvar_35 = max (0.0, dot (tmpvar_6, tmpvar_3));
  diff_34 = tmpvar_35;
  c_33.xyz = ((tmpvar_12.xyz * tmpvar_28) * diff_34);
  c_33.w = (reflcol_10.w * _ReflectColor.w);
  c_32.w = c_33.w;
  c_32.xyz = (c_33.xyz + (tmpvar_12.xyz * tmpvar_31));
  c_4.xyz = (c_32.xyz + (reflcol_10.xyz * _ReflectColor.xyz));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = unity_WorldToObject[0].xyz;
  tmpvar_6[1] = unity_WorldToObject[1].xyz;
  tmpvar_6[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_glesNormal * tmpvar_6));
  highp vec3 tmpvar_8;
  highp vec3 I_9;
  I_9 = (tmpvar_5 - _WorldSpaceCameraPos);
  tmpvar_8 = (I_9 - (2.0 * (
    dot (tmpvar_7, I_9)
   * tmpvar_7)));
  tmpvar_1 = tmpvar_8;
  highp vec3 lightColor0_10;
  lightColor0_10 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_11;
  lightColor1_11 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_12;
  lightColor2_12 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_13;
  lightColor3_13 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_14;
  lightAttenSq_14 = unity_4LightAtten0;
  highp vec3 col_15;
  highp vec4 ndotl_16;
  highp vec4 lengthSq_17;
  highp vec4 tmpvar_18;
  tmpvar_18 = (unity_4LightPosX0 - tmpvar_5.x);
  highp vec4 tmpvar_19;
  tmpvar_19 = (unity_4LightPosY0 - tmpvar_5.y);
  highp vec4 tmpvar_20;
  tmpvar_20 = (unity_4LightPosZ0 - tmpvar_5.z);
  lengthSq_17 = (tmpvar_18 * tmpvar_18);
  lengthSq_17 = (lengthSq_17 + (tmpvar_19 * tmpvar_19));
  lengthSq_17 = (lengthSq_17 + (tmpvar_20 * tmpvar_20));
  highp vec4 tmpvar_21;
  tmpvar_21 = max (lengthSq_17, vec4(1e-06, 1e-06, 1e-06, 1e-06));
  lengthSq_17 = tmpvar_21;
  ndotl_16 = (tmpvar_18 * tmpvar_7.x);
  ndotl_16 = (ndotl_16 + (tmpvar_19 * tmpvar_7.y));
  ndotl_16 = (ndotl_16 + (tmpvar_20 * tmpvar_7.z));
  highp vec4 tmpvar_22;
  tmpvar_22 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_16 * inversesqrt(tmpvar_21)));
  ndotl_16 = tmpvar_22;
  highp vec4 tmpvar_23;
  tmpvar_23 = (tmpvar_22 * (1.0/((1.0 + 
    (tmpvar_21 * lightAttenSq_14)
  ))));
  col_15 = (lightColor0_10 * tmpvar_23.x);
  col_15 = (col_15 + (lightColor1_11 * tmpvar_23.y));
  col_15 = (col_15 + (lightColor2_12 * tmpvar_23.z));
  col_15 = (col_15 + (lightColor3_13 * tmpvar_23.w));
  tmpvar_2 = col_15;
  mediump vec3 normal_24;
  normal_24 = tmpvar_7;
  mediump vec3 ambient_25;
  mediump vec3 x1_26;
  mediump vec4 tmpvar_27;
  tmpvar_27 = (normal_24.xyzz * normal_24.yzzx);
  x1_26.x = dot (unity_SHBr, tmpvar_27);
  x1_26.y = dot (unity_SHBg, tmpvar_27);
  x1_26.z = dot (unity_SHBb, tmpvar_27);
  ambient_25 = ((tmpvar_2 * (
    (tmpvar_2 * ((tmpvar_2 * 0.305306) + 0.6821711))
   + 0.01252288)) + (x1_26 + (unity_SHC.xyz * 
    ((normal_24.x * normal_24.x) - (normal_24.y * normal_24.y))
  )));
  tmpvar_2 = ambient_25;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_7;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = ambient_25;
  xlv_TEXCOORD5 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD7 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform lowp vec4 unity_OcclusionMaskSelector;
uniform highp mat4 unity_WorldToShadow[4];
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform sampler2D unity_ShadowMask;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp float atten_5;
  lowp vec3 tmpvar_6;
  lowp vec3 lightDir_7;
  highp vec3 tmpvar_8;
  mediump vec3 tmpvar_9;
  tmpvar_9 = _WorldSpaceLightPos0.xyz;
  lightDir_7 = tmpvar_9;
  tmpvar_8 = xlv_TEXCOORD1;
  tmpvar_6 = xlv_TEXCOORD2;
  lowp vec4 reflcol_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_12;
  tmpvar_12 = (tmpvar_11 * _Color);
  reflcol_10 = (textureCube (_Cube, tmpvar_8) * tmpvar_11.w);
  mediump float realtimeShadowAttenuation_13;
  mediump float shadowMaskAttenuation_14;
  highp vec4 v_15;
  v_15.x = unity_MatrixV[0].z;
  v_15.y = unity_MatrixV[1].z;
  v_15.z = unity_MatrixV[2].z;
  v_15.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_16;
  tmpvar_16 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_17;
  highp float tmpvar_18;
  tmpvar_18 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_15.xyz), sqrt(dot (tmpvar_16, tmpvar_16)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_17 = tmpvar_18;
  lowp float tmpvar_19;
  tmpvar_19 = clamp (dot (texture2D (unity_ShadowMask, xlv_TEXCOORD5), unity_OcclusionMaskSelector), 0.0, 1.0);
  shadowMaskAttenuation_14 = tmpvar_19;
  highp vec4 tmpvar_20;
  tmpvar_20.w = 1.0;
  tmpvar_20.xyz = xlv_TEXCOORD3;
  lowp float tmpvar_21;
  highp vec4 shadowCoord_22;
  shadowCoord_22 = (unity_WorldToShadow[0] * tmpvar_20);
  highp float lightShadowDataX_23;
  mediump float tmpvar_24;
  tmpvar_24 = _LightShadowData.x;
  lightShadowDataX_23 = tmpvar_24;
  highp float tmpvar_25;
  tmpvar_25 = max (float((texture2D (_ShadowMapTexture, shadowCoord_22.xy).x > shadowCoord_22.z)), lightShadowDataX_23);
  tmpvar_21 = tmpvar_25;
  realtimeShadowAttenuation_13 = tmpvar_21;
  mediump float tmpvar_26;
  tmpvar_26 = mix (realtimeShadowAttenuation_13, shadowMaskAttenuation_14, tmpvar_17);
  atten_5 = tmpvar_26;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_7;
  tmpvar_1 = atten_5;
  mediump vec3 normalWorld_27;
  normalWorld_27 = tmpvar_6;
  mediump vec3 tmpvar_28;
  tmpvar_28 = (tmpvar_2 * tmpvar_1);
  mediump vec4 tmpvar_29;
  tmpvar_29.w = 1.0;
  tmpvar_29.xyz = normalWorld_27;
  mediump vec3 x_30;
  x_30.x = dot (unity_SHAr, tmpvar_29);
  x_30.y = dot (unity_SHAg, tmpvar_29);
  x_30.z = dot (unity_SHAb, tmpvar_29);
  mediump vec3 tmpvar_31;
  tmpvar_31 = max (((1.055 * 
    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD4 + x_30)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  tmpvar_2 = tmpvar_28;
  lowp vec4 c_32;
  lowp vec4 c_33;
  lowp float diff_34;
  mediump float tmpvar_35;
  tmpvar_35 = max (0.0, dot (tmpvar_6, tmpvar_3));
  diff_34 = tmpvar_35;
  c_33.xyz = ((tmpvar_12.xyz * tmpvar_28) * diff_34);
  c_33.w = (reflcol_10.w * _ReflectColor.w);
  c_32.w = c_33.w;
  c_32.xyz = (c_33.xyz + (tmpvar_12.xyz * tmpvar_31));
  c_4.xyz = (c_32.xyz + (reflcol_10.xyz * _ReflectColor.xyz));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = unity_WorldToObject[0].xyz;
  tmpvar_6[1] = unity_WorldToObject[1].xyz;
  tmpvar_6[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_glesNormal * tmpvar_6));
  highp vec3 tmpvar_8;
  highp vec3 I_9;
  I_9 = (tmpvar_5 - _WorldSpaceCameraPos);
  tmpvar_8 = (I_9 - (2.0 * (
    dot (tmpvar_7, I_9)
   * tmpvar_7)));
  tmpvar_1 = tmpvar_8;
  highp vec3 lightColor0_10;
  lightColor0_10 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_11;
  lightColor1_11 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_12;
  lightColor2_12 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_13;
  lightColor3_13 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_14;
  lightAttenSq_14 = unity_4LightAtten0;
  highp vec3 col_15;
  highp vec4 ndotl_16;
  highp vec4 lengthSq_17;
  highp vec4 tmpvar_18;
  tmpvar_18 = (unity_4LightPosX0 - tmpvar_5.x);
  highp vec4 tmpvar_19;
  tmpvar_19 = (unity_4LightPosY0 - tmpvar_5.y);
  highp vec4 tmpvar_20;
  tmpvar_20 = (unity_4LightPosZ0 - tmpvar_5.z);
  lengthSq_17 = (tmpvar_18 * tmpvar_18);
  lengthSq_17 = (lengthSq_17 + (tmpvar_19 * tmpvar_19));
  lengthSq_17 = (lengthSq_17 + (tmpvar_20 * tmpvar_20));
  highp vec4 tmpvar_21;
  tmpvar_21 = max (lengthSq_17, vec4(1e-06, 1e-06, 1e-06, 1e-06));
  lengthSq_17 = tmpvar_21;
  ndotl_16 = (tmpvar_18 * tmpvar_7.x);
  ndotl_16 = (ndotl_16 + (tmpvar_19 * tmpvar_7.y));
  ndotl_16 = (ndotl_16 + (tmpvar_20 * tmpvar_7.z));
  highp vec4 tmpvar_22;
  tmpvar_22 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_16 * inversesqrt(tmpvar_21)));
  ndotl_16 = tmpvar_22;
  highp vec4 tmpvar_23;
  tmpvar_23 = (tmpvar_22 * (1.0/((1.0 + 
    (tmpvar_21 * lightAttenSq_14)
  ))));
  col_15 = (lightColor0_10 * tmpvar_23.x);
  col_15 = (col_15 + (lightColor1_11 * tmpvar_23.y));
  col_15 = (col_15 + (lightColor2_12 * tmpvar_23.z));
  col_15 = (col_15 + (lightColor3_13 * tmpvar_23.w));
  tmpvar_2 = col_15;
  mediump vec3 normal_24;
  normal_24 = tmpvar_7;
  mediump vec3 ambient_25;
  mediump vec3 x1_26;
  mediump vec4 tmpvar_27;
  tmpvar_27 = (normal_24.xyzz * normal_24.yzzx);
  x1_26.x = dot (unity_SHBr, tmpvar_27);
  x1_26.y = dot (unity_SHBg, tmpvar_27);
  x1_26.z = dot (unity_SHBb, tmpvar_27);
  ambient_25 = ((tmpvar_2 * (
    (tmpvar_2 * ((tmpvar_2 * 0.305306) + 0.6821711))
   + 0.01252288)) + (x1_26 + (unity_SHC.xyz * 
    ((normal_24.x * normal_24.x) - (normal_24.y * normal_24.y))
  )));
  tmpvar_2 = ambient_25;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_7;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = ambient_25;
  xlv_TEXCOORD5 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD7 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform lowp vec4 unity_OcclusionMaskSelector;
uniform highp mat4 unity_WorldToShadow[4];
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform sampler2D unity_ShadowMask;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp float atten_5;
  lowp vec3 tmpvar_6;
  lowp vec3 lightDir_7;
  highp vec3 tmpvar_8;
  mediump vec3 tmpvar_9;
  tmpvar_9 = _WorldSpaceLightPos0.xyz;
  lightDir_7 = tmpvar_9;
  tmpvar_8 = xlv_TEXCOORD1;
  tmpvar_6 = xlv_TEXCOORD2;
  lowp vec4 reflcol_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_12;
  tmpvar_12 = (tmpvar_11 * _Color);
  reflcol_10 = (textureCube (_Cube, tmpvar_8) * tmpvar_11.w);
  mediump float realtimeShadowAttenuation_13;
  mediump float shadowMaskAttenuation_14;
  highp vec4 v_15;
  v_15.x = unity_MatrixV[0].z;
  v_15.y = unity_MatrixV[1].z;
  v_15.z = unity_MatrixV[2].z;
  v_15.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_16;
  tmpvar_16 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_17;
  highp float tmpvar_18;
  tmpvar_18 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_15.xyz), sqrt(dot (tmpvar_16, tmpvar_16)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_17 = tmpvar_18;
  lowp float tmpvar_19;
  tmpvar_19 = clamp (dot (texture2D (unity_ShadowMask, xlv_TEXCOORD5), unity_OcclusionMaskSelector), 0.0, 1.0);
  shadowMaskAttenuation_14 = tmpvar_19;
  highp vec4 tmpvar_20;
  tmpvar_20.w = 1.0;
  tmpvar_20.xyz = xlv_TEXCOORD3;
  lowp float tmpvar_21;
  highp vec4 shadowCoord_22;
  shadowCoord_22 = (unity_WorldToShadow[0] * tmpvar_20);
  highp float lightShadowDataX_23;
  mediump float tmpvar_24;
  tmpvar_24 = _LightShadowData.x;
  lightShadowDataX_23 = tmpvar_24;
  highp float tmpvar_25;
  tmpvar_25 = max (float((texture2D (_ShadowMapTexture, shadowCoord_22.xy).x > shadowCoord_22.z)), lightShadowDataX_23);
  tmpvar_21 = tmpvar_25;
  realtimeShadowAttenuation_13 = tmpvar_21;
  mediump float tmpvar_26;
  tmpvar_26 = mix (realtimeShadowAttenuation_13, shadowMaskAttenuation_14, tmpvar_17);
  atten_5 = tmpvar_26;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_7;
  tmpvar_1 = atten_5;
  mediump vec3 normalWorld_27;
  normalWorld_27 = tmpvar_6;
  mediump vec3 tmpvar_28;
  tmpvar_28 = (tmpvar_2 * tmpvar_1);
  mediump vec4 tmpvar_29;
  tmpvar_29.w = 1.0;
  tmpvar_29.xyz = normalWorld_27;
  mediump vec3 x_30;
  x_30.x = dot (unity_SHAr, tmpvar_29);
  x_30.y = dot (unity_SHAg, tmpvar_29);
  x_30.z = dot (unity_SHAb, tmpvar_29);
  mediump vec3 tmpvar_31;
  tmpvar_31 = max (((1.055 * 
    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD4 + x_30)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  tmpvar_2 = tmpvar_28;
  lowp vec4 c_32;
  lowp vec4 c_33;
  lowp float diff_34;
  mediump float tmpvar_35;
  tmpvar_35 = max (0.0, dot (tmpvar_6, tmpvar_3));
  diff_34 = tmpvar_35;
  c_33.xyz = ((tmpvar_12.xyz * tmpvar_28) * diff_34);
  c_33.w = (reflcol_10.w * _ReflectColor.w);
  c_32.w = c_33.w;
  c_32.xyz = (c_33.xyz + (tmpvar_12.xyz * tmpvar_31));
  c_4.xyz = (c_32.xyz + (reflcol_10.xyz * _ReflectColor.xyz));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_SHADOW_MIXING" "SHADOWS_SHADOWMASK" "VERTEXLIGHT_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec2 xlv_TEXCOORD5;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_4;
  tmpvar_4 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_5;
  tmpvar_5[0] = unity_WorldToObject[0].xyz;
  tmpvar_5[1] = unity_WorldToObject[1].xyz;
  tmpvar_5[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_glesNormal * tmpvar_5));
  highp vec3 tmpvar_7;
  highp vec3 I_8;
  I_8 = (tmpvar_4 - _WorldSpaceCameraPos);
  tmpvar_7 = (I_8 - (2.0 * (
    dot (tmpvar_6, I_8)
   * tmpvar_6)));
  tmpvar_1 = tmpvar_7;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD5 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD7 = tmpvar_2;
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 unity_OcclusionMaskSelector;
uniform highp mat4 unity_WorldToShadow[4];
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform sampler2D unity_ShadowMask;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec2 xlv_TEXCOORD5;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp float atten_5;
  lowp vec3 tmpvar_6;
  lowp vec3 lightDir_7;
  highp vec3 tmpvar_8;
  mediump vec3 tmpvar_9;
  tmpvar_9 = _WorldSpaceLightPos0.xyz;
  lightDir_7 = tmpvar_9;
  tmpvar_8 = xlv_TEXCOORD1;
  tmpvar_6 = xlv_TEXCOORD2;
  lowp vec4 reflcol_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_10 = (textureCube (_Cube, tmpvar_8) * tmpvar_11.w);
  mediump float realtimeShadowAttenuation_12;
  mediump float shadowMaskAttenuation_13;
  highp vec4 v_14;
  v_14.x = unity_MatrixV[0].z;
  v_14.y = unity_MatrixV[1].z;
  v_14.z = unity_MatrixV[2].z;
  v_14.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_15;
  tmpvar_15 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_16;
  highp float tmpvar_17;
  tmpvar_17 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_14.xyz), sqrt(dot (tmpvar_15, tmpvar_15)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_16 = tmpvar_17;
  lowp float tmpvar_18;
  tmpvar_18 = clamp (dot (texture2D (unity_ShadowMask, xlv_TEXCOORD5), unity_OcclusionMaskSelector), 0.0, 1.0);
  shadowMaskAttenuation_13 = tmpvar_18;
  highp vec4 tmpvar_19;
  tmpvar_19.w = 1.0;
  tmpvar_19.xyz = xlv_TEXCOORD3;
  lowp float tmpvar_20;
  highp vec4 shadowCoord_21;
  shadowCoord_21 = (unity_WorldToShadow[0] * tmpvar_19);
  highp float lightShadowDataX_22;
  mediump float tmpvar_23;
  tmpvar_23 = _LightShadowData.x;
  lightShadowDataX_22 = tmpvar_23;
  highp float tmpvar_24;
  tmpvar_24 = max (float((texture2D (_ShadowMapTexture, shadowCoord_21.xy).x > shadowCoord_21.z)), lightShadowDataX_22);
  tmpvar_20 = tmpvar_24;
  realtimeShadowAttenuation_12 = tmpvar_20;
  mediump float tmpvar_25;
  tmpvar_25 = min (clamp ((realtimeShadowAttenuation_12 + tmpvar_16), 0.0, 1.0), shadowMaskAttenuation_13);
  atten_5 = tmpvar_25;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_7;
  tmpvar_1 = atten_5;
  mediump vec3 tmpvar_26;
  tmpvar_26 = (tmpvar_2 * tmpvar_1);
  tmpvar_2 = tmpvar_26;
  lowp vec4 c_27;
  lowp float diff_28;
  mediump float tmpvar_29;
  tmpvar_29 = max (0.0, dot (tmpvar_6, tmpvar_3));
  diff_28 = tmpvar_29;
  c_27.xyz = (((tmpvar_11 * _Color).xyz * tmpvar_26) * diff_28);
  c_27.w = (reflcol_10.w * _ReflectColor.w);
  c_4.xyz = (c_27.xyz + (reflcol_10.xyz * _ReflectColor.xyz));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_SHADOW_MIXING" "SHADOWS_SHADOWMASK" "VERTEXLIGHT_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec2 xlv_TEXCOORD5;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_4;
  tmpvar_4 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_5;
  tmpvar_5[0] = unity_WorldToObject[0].xyz;
  tmpvar_5[1] = unity_WorldToObject[1].xyz;
  tmpvar_5[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_glesNormal * tmpvar_5));
  highp vec3 tmpvar_7;
  highp vec3 I_8;
  I_8 = (tmpvar_4 - _WorldSpaceCameraPos);
  tmpvar_7 = (I_8 - (2.0 * (
    dot (tmpvar_6, I_8)
   * tmpvar_6)));
  tmpvar_1 = tmpvar_7;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD5 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD7 = tmpvar_2;
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 unity_OcclusionMaskSelector;
uniform highp mat4 unity_WorldToShadow[4];
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform sampler2D unity_ShadowMask;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec2 xlv_TEXCOORD5;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp float atten_5;
  lowp vec3 tmpvar_6;
  lowp vec3 lightDir_7;
  highp vec3 tmpvar_8;
  mediump vec3 tmpvar_9;
  tmpvar_9 = _WorldSpaceLightPos0.xyz;
  lightDir_7 = tmpvar_9;
  tmpvar_8 = xlv_TEXCOORD1;
  tmpvar_6 = xlv_TEXCOORD2;
  lowp vec4 reflcol_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_10 = (textureCube (_Cube, tmpvar_8) * tmpvar_11.w);
  mediump float realtimeShadowAttenuation_12;
  mediump float shadowMaskAttenuation_13;
  highp vec4 v_14;
  v_14.x = unity_MatrixV[0].z;
  v_14.y = unity_MatrixV[1].z;
  v_14.z = unity_MatrixV[2].z;
  v_14.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_15;
  tmpvar_15 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_16;
  highp float tmpvar_17;
  tmpvar_17 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_14.xyz), sqrt(dot (tmpvar_15, tmpvar_15)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_16 = tmpvar_17;
  lowp float tmpvar_18;
  tmpvar_18 = clamp (dot (texture2D (unity_ShadowMask, xlv_TEXCOORD5), unity_OcclusionMaskSelector), 0.0, 1.0);
  shadowMaskAttenuation_13 = tmpvar_18;
  highp vec4 tmpvar_19;
  tmpvar_19.w = 1.0;
  tmpvar_19.xyz = xlv_TEXCOORD3;
  lowp float tmpvar_20;
  highp vec4 shadowCoord_21;
  shadowCoord_21 = (unity_WorldToShadow[0] * tmpvar_19);
  highp float lightShadowDataX_22;
  mediump float tmpvar_23;
  tmpvar_23 = _LightShadowData.x;
  lightShadowDataX_22 = tmpvar_23;
  highp float tmpvar_24;
  tmpvar_24 = max (float((texture2D (_ShadowMapTexture, shadowCoord_21.xy).x > shadowCoord_21.z)), lightShadowDataX_22);
  tmpvar_20 = tmpvar_24;
  realtimeShadowAttenuation_12 = tmpvar_20;
  mediump float tmpvar_25;
  tmpvar_25 = min (clamp ((realtimeShadowAttenuation_12 + tmpvar_16), 0.0, 1.0), shadowMaskAttenuation_13);
  atten_5 = tmpvar_25;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_7;
  tmpvar_1 = atten_5;
  mediump vec3 tmpvar_26;
  tmpvar_26 = (tmpvar_2 * tmpvar_1);
  tmpvar_2 = tmpvar_26;
  lowp vec4 c_27;
  lowp float diff_28;
  mediump float tmpvar_29;
  tmpvar_29 = max (0.0, dot (tmpvar_6, tmpvar_3));
  diff_28 = tmpvar_29;
  c_27.xyz = (((tmpvar_11 * _Color).xyz * tmpvar_26) * diff_28);
  c_27.w = (reflcol_10.w * _ReflectColor.w);
  c_4.xyz = (c_27.xyz + (reflcol_10.xyz * _ReflectColor.xyz));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_SHADOW_MIXING" "SHADOWS_SHADOWMASK" "VERTEXLIGHT_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec2 xlv_TEXCOORD5;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_4;
  tmpvar_4 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_5;
  tmpvar_5[0] = unity_WorldToObject[0].xyz;
  tmpvar_5[1] = unity_WorldToObject[1].xyz;
  tmpvar_5[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_glesNormal * tmpvar_5));
  highp vec3 tmpvar_7;
  highp vec3 I_8;
  I_8 = (tmpvar_4 - _WorldSpaceCameraPos);
  tmpvar_7 = (I_8 - (2.0 * (
    dot (tmpvar_6, I_8)
   * tmpvar_6)));
  tmpvar_1 = tmpvar_7;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD5 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD7 = tmpvar_2;
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 unity_OcclusionMaskSelector;
uniform highp mat4 unity_WorldToShadow[4];
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform sampler2D unity_ShadowMask;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec2 xlv_TEXCOORD5;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp float atten_5;
  lowp vec3 tmpvar_6;
  lowp vec3 lightDir_7;
  highp vec3 tmpvar_8;
  mediump vec3 tmpvar_9;
  tmpvar_9 = _WorldSpaceLightPos0.xyz;
  lightDir_7 = tmpvar_9;
  tmpvar_8 = xlv_TEXCOORD1;
  tmpvar_6 = xlv_TEXCOORD2;
  lowp vec4 reflcol_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_10 = (textureCube (_Cube, tmpvar_8) * tmpvar_11.w);
  mediump float realtimeShadowAttenuation_12;
  mediump float shadowMaskAttenuation_13;
  highp vec4 v_14;
  v_14.x = unity_MatrixV[0].z;
  v_14.y = unity_MatrixV[1].z;
  v_14.z = unity_MatrixV[2].z;
  v_14.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_15;
  tmpvar_15 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_16;
  highp float tmpvar_17;
  tmpvar_17 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_14.xyz), sqrt(dot (tmpvar_15, tmpvar_15)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_16 = tmpvar_17;
  lowp float tmpvar_18;
  tmpvar_18 = clamp (dot (texture2D (unity_ShadowMask, xlv_TEXCOORD5), unity_OcclusionMaskSelector), 0.0, 1.0);
  shadowMaskAttenuation_13 = tmpvar_18;
  highp vec4 tmpvar_19;
  tmpvar_19.w = 1.0;
  tmpvar_19.xyz = xlv_TEXCOORD3;
  lowp float tmpvar_20;
  highp vec4 shadowCoord_21;
  shadowCoord_21 = (unity_WorldToShadow[0] * tmpvar_19);
  highp float lightShadowDataX_22;
  mediump float tmpvar_23;
  tmpvar_23 = _LightShadowData.x;
  lightShadowDataX_22 = tmpvar_23;
  highp float tmpvar_24;
  tmpvar_24 = max (float((texture2D (_ShadowMapTexture, shadowCoord_21.xy).x > shadowCoord_21.z)), lightShadowDataX_22);
  tmpvar_20 = tmpvar_24;
  realtimeShadowAttenuation_12 = tmpvar_20;
  mediump float tmpvar_25;
  tmpvar_25 = min (clamp ((realtimeShadowAttenuation_12 + tmpvar_16), 0.0, 1.0), shadowMaskAttenuation_13);
  atten_5 = tmpvar_25;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_7;
  tmpvar_1 = atten_5;
  mediump vec3 tmpvar_26;
  tmpvar_26 = (tmpvar_2 * tmpvar_1);
  tmpvar_2 = tmpvar_26;
  lowp vec4 c_27;
  lowp float diff_28;
  mediump float tmpvar_29;
  tmpvar_29 = max (0.0, dot (tmpvar_6, tmpvar_3));
  diff_28 = tmpvar_29;
  c_27.xyz = (((tmpvar_11 * _Color).xyz * tmpvar_26) * diff_28);
  c_27.w = (reflcol_10.w * _ReflectColor.w);
  c_4.xyz = (c_27.xyz + (reflcol_10.xyz * _ReflectColor.xyz));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_SHADOW_MIXING" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = unity_WorldToObject[0].xyz;
  tmpvar_6[1] = unity_WorldToObject[1].xyz;
  tmpvar_6[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_glesNormal * tmpvar_6));
  highp vec3 tmpvar_8;
  highp vec3 I_9;
  I_9 = (tmpvar_5 - _WorldSpaceCameraPos);
  tmpvar_8 = (I_9 - (2.0 * (
    dot (tmpvar_7, I_9)
   * tmpvar_7)));
  tmpvar_1 = tmpvar_8;
  highp vec3 lightColor0_10;
  lightColor0_10 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_11;
  lightColor1_11 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_12;
  lightColor2_12 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_13;
  lightColor3_13 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_14;
  lightAttenSq_14 = unity_4LightAtten0;
  highp vec3 col_15;
  highp vec4 ndotl_16;
  highp vec4 lengthSq_17;
  highp vec4 tmpvar_18;
  tmpvar_18 = (unity_4LightPosX0 - tmpvar_5.x);
  highp vec4 tmpvar_19;
  tmpvar_19 = (unity_4LightPosY0 - tmpvar_5.y);
  highp vec4 tmpvar_20;
  tmpvar_20 = (unity_4LightPosZ0 - tmpvar_5.z);
  lengthSq_17 = (tmpvar_18 * tmpvar_18);
  lengthSq_17 = (lengthSq_17 + (tmpvar_19 * tmpvar_19));
  lengthSq_17 = (lengthSq_17 + (tmpvar_20 * tmpvar_20));
  highp vec4 tmpvar_21;
  tmpvar_21 = max (lengthSq_17, vec4(1e-06, 1e-06, 1e-06, 1e-06));
  lengthSq_17 = tmpvar_21;
  ndotl_16 = (tmpvar_18 * tmpvar_7.x);
  ndotl_16 = (ndotl_16 + (tmpvar_19 * tmpvar_7.y));
  ndotl_16 = (ndotl_16 + (tmpvar_20 * tmpvar_7.z));
  highp vec4 tmpvar_22;
  tmpvar_22 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_16 * inversesqrt(tmpvar_21)));
  ndotl_16 = tmpvar_22;
  highp vec4 tmpvar_23;
  tmpvar_23 = (tmpvar_22 * (1.0/((1.0 + 
    (tmpvar_21 * lightAttenSq_14)
  ))));
  col_15 = (lightColor0_10 * tmpvar_23.x);
  col_15 = (col_15 + (lightColor1_11 * tmpvar_23.y));
  col_15 = (col_15 + (lightColor2_12 * tmpvar_23.z));
  col_15 = (col_15 + (lightColor3_13 * tmpvar_23.w));
  tmpvar_2 = col_15;
  mediump vec3 normal_24;
  normal_24 = tmpvar_7;
  mediump vec3 ambient_25;
  mediump vec3 x1_26;
  mediump vec4 tmpvar_27;
  tmpvar_27 = (normal_24.xyzz * normal_24.yzzx);
  x1_26.x = dot (unity_SHBr, tmpvar_27);
  x1_26.y = dot (unity_SHBg, tmpvar_27);
  x1_26.z = dot (unity_SHBb, tmpvar_27);
  ambient_25 = ((tmpvar_2 * (
    (tmpvar_2 * ((tmpvar_2 * 0.305306) + 0.6821711))
   + 0.01252288)) + (x1_26 + (unity_SHC.xyz * 
    ((normal_24.x * normal_24.x) - (normal_24.y * normal_24.y))
  )));
  tmpvar_2 = ambient_25;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_7;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = ambient_25;
  xlv_TEXCOORD5 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD7 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform lowp vec4 unity_OcclusionMaskSelector;
uniform highp mat4 unity_WorldToShadow[4];
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform sampler2D unity_ShadowMask;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp float atten_5;
  lowp vec3 tmpvar_6;
  lowp vec3 lightDir_7;
  highp vec3 tmpvar_8;
  mediump vec3 tmpvar_9;
  tmpvar_9 = _WorldSpaceLightPos0.xyz;
  lightDir_7 = tmpvar_9;
  tmpvar_8 = xlv_TEXCOORD1;
  tmpvar_6 = xlv_TEXCOORD2;
  lowp vec4 reflcol_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_12;
  tmpvar_12 = (tmpvar_11 * _Color);
  reflcol_10 = (textureCube (_Cube, tmpvar_8) * tmpvar_11.w);
  mediump float realtimeShadowAttenuation_13;
  mediump float shadowMaskAttenuation_14;
  highp vec4 v_15;
  v_15.x = unity_MatrixV[0].z;
  v_15.y = unity_MatrixV[1].z;
  v_15.z = unity_MatrixV[2].z;
  v_15.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_16;
  tmpvar_16 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_17;
  highp float tmpvar_18;
  tmpvar_18 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_15.xyz), sqrt(dot (tmpvar_16, tmpvar_16)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_17 = tmpvar_18;
  lowp float tmpvar_19;
  tmpvar_19 = clamp (dot (texture2D (unity_ShadowMask, xlv_TEXCOORD5), unity_OcclusionMaskSelector), 0.0, 1.0);
  shadowMaskAttenuation_14 = tmpvar_19;
  highp vec4 tmpvar_20;
  tmpvar_20.w = 1.0;
  tmpvar_20.xyz = xlv_TEXCOORD3;
  lowp float tmpvar_21;
  highp vec4 shadowCoord_22;
  shadowCoord_22 = (unity_WorldToShadow[0] * tmpvar_20);
  highp float lightShadowDataX_23;
  mediump float tmpvar_24;
  tmpvar_24 = _LightShadowData.x;
  lightShadowDataX_23 = tmpvar_24;
  highp float tmpvar_25;
  tmpvar_25 = max (float((texture2D (_ShadowMapTexture, shadowCoord_22.xy).x > shadowCoord_22.z)), lightShadowDataX_23);
  tmpvar_21 = tmpvar_25;
  realtimeShadowAttenuation_13 = tmpvar_21;
  mediump float tmpvar_26;
  tmpvar_26 = min (clamp ((realtimeShadowAttenuation_13 + tmpvar_17), 0.0, 1.0), shadowMaskAttenuation_14);
  atten_5 = tmpvar_26;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_7;
  tmpvar_1 = atten_5;
  mediump vec3 normalWorld_27;
  normalWorld_27 = tmpvar_6;
  mediump vec3 tmpvar_28;
  tmpvar_28 = (tmpvar_2 * tmpvar_1);
  mediump vec4 tmpvar_29;
  tmpvar_29.w = 1.0;
  tmpvar_29.xyz = normalWorld_27;
  mediump vec3 x_30;
  x_30.x = dot (unity_SHAr, tmpvar_29);
  x_30.y = dot (unity_SHAg, tmpvar_29);
  x_30.z = dot (unity_SHAb, tmpvar_29);
  mediump vec3 tmpvar_31;
  tmpvar_31 = max (((1.055 * 
    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD4 + x_30)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  tmpvar_2 = tmpvar_28;
  lowp vec4 c_32;
  lowp vec4 c_33;
  lowp float diff_34;
  mediump float tmpvar_35;
  tmpvar_35 = max (0.0, dot (tmpvar_6, tmpvar_3));
  diff_34 = tmpvar_35;
  c_33.xyz = ((tmpvar_12.xyz * tmpvar_28) * diff_34);
  c_33.w = (reflcol_10.w * _ReflectColor.w);
  c_32.w = c_33.w;
  c_32.xyz = (c_33.xyz + (tmpvar_12.xyz * tmpvar_31));
  c_4.xyz = (c_32.xyz + (reflcol_10.xyz * _ReflectColor.xyz));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_SHADOW_MIXING" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = unity_WorldToObject[0].xyz;
  tmpvar_6[1] = unity_WorldToObject[1].xyz;
  tmpvar_6[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_glesNormal * tmpvar_6));
  highp vec3 tmpvar_8;
  highp vec3 I_9;
  I_9 = (tmpvar_5 - _WorldSpaceCameraPos);
  tmpvar_8 = (I_9 - (2.0 * (
    dot (tmpvar_7, I_9)
   * tmpvar_7)));
  tmpvar_1 = tmpvar_8;
  highp vec3 lightColor0_10;
  lightColor0_10 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_11;
  lightColor1_11 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_12;
  lightColor2_12 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_13;
  lightColor3_13 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_14;
  lightAttenSq_14 = unity_4LightAtten0;
  highp vec3 col_15;
  highp vec4 ndotl_16;
  highp vec4 lengthSq_17;
  highp vec4 tmpvar_18;
  tmpvar_18 = (unity_4LightPosX0 - tmpvar_5.x);
  highp vec4 tmpvar_19;
  tmpvar_19 = (unity_4LightPosY0 - tmpvar_5.y);
  highp vec4 tmpvar_20;
  tmpvar_20 = (unity_4LightPosZ0 - tmpvar_5.z);
  lengthSq_17 = (tmpvar_18 * tmpvar_18);
  lengthSq_17 = (lengthSq_17 + (tmpvar_19 * tmpvar_19));
  lengthSq_17 = (lengthSq_17 + (tmpvar_20 * tmpvar_20));
  highp vec4 tmpvar_21;
  tmpvar_21 = max (lengthSq_17, vec4(1e-06, 1e-06, 1e-06, 1e-06));
  lengthSq_17 = tmpvar_21;
  ndotl_16 = (tmpvar_18 * tmpvar_7.x);
  ndotl_16 = (ndotl_16 + (tmpvar_19 * tmpvar_7.y));
  ndotl_16 = (ndotl_16 + (tmpvar_20 * tmpvar_7.z));
  highp vec4 tmpvar_22;
  tmpvar_22 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_16 * inversesqrt(tmpvar_21)));
  ndotl_16 = tmpvar_22;
  highp vec4 tmpvar_23;
  tmpvar_23 = (tmpvar_22 * (1.0/((1.0 + 
    (tmpvar_21 * lightAttenSq_14)
  ))));
  col_15 = (lightColor0_10 * tmpvar_23.x);
  col_15 = (col_15 + (lightColor1_11 * tmpvar_23.y));
  col_15 = (col_15 + (lightColor2_12 * tmpvar_23.z));
  col_15 = (col_15 + (lightColor3_13 * tmpvar_23.w));
  tmpvar_2 = col_15;
  mediump vec3 normal_24;
  normal_24 = tmpvar_7;
  mediump vec3 ambient_25;
  mediump vec3 x1_26;
  mediump vec4 tmpvar_27;
  tmpvar_27 = (normal_24.xyzz * normal_24.yzzx);
  x1_26.x = dot (unity_SHBr, tmpvar_27);
  x1_26.y = dot (unity_SHBg, tmpvar_27);
  x1_26.z = dot (unity_SHBb, tmpvar_27);
  ambient_25 = ((tmpvar_2 * (
    (tmpvar_2 * ((tmpvar_2 * 0.305306) + 0.6821711))
   + 0.01252288)) + (x1_26 + (unity_SHC.xyz * 
    ((normal_24.x * normal_24.x) - (normal_24.y * normal_24.y))
  )));
  tmpvar_2 = ambient_25;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_7;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = ambient_25;
  xlv_TEXCOORD5 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD7 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform lowp vec4 unity_OcclusionMaskSelector;
uniform highp mat4 unity_WorldToShadow[4];
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform sampler2D unity_ShadowMask;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp float atten_5;
  lowp vec3 tmpvar_6;
  lowp vec3 lightDir_7;
  highp vec3 tmpvar_8;
  mediump vec3 tmpvar_9;
  tmpvar_9 = _WorldSpaceLightPos0.xyz;
  lightDir_7 = tmpvar_9;
  tmpvar_8 = xlv_TEXCOORD1;
  tmpvar_6 = xlv_TEXCOORD2;
  lowp vec4 reflcol_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_12;
  tmpvar_12 = (tmpvar_11 * _Color);
  reflcol_10 = (textureCube (_Cube, tmpvar_8) * tmpvar_11.w);
  mediump float realtimeShadowAttenuation_13;
  mediump float shadowMaskAttenuation_14;
  highp vec4 v_15;
  v_15.x = unity_MatrixV[0].z;
  v_15.y = unity_MatrixV[1].z;
  v_15.z = unity_MatrixV[2].z;
  v_15.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_16;
  tmpvar_16 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_17;
  highp float tmpvar_18;
  tmpvar_18 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_15.xyz), sqrt(dot (tmpvar_16, tmpvar_16)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_17 = tmpvar_18;
  lowp float tmpvar_19;
  tmpvar_19 = clamp (dot (texture2D (unity_ShadowMask, xlv_TEXCOORD5), unity_OcclusionMaskSelector), 0.0, 1.0);
  shadowMaskAttenuation_14 = tmpvar_19;
  highp vec4 tmpvar_20;
  tmpvar_20.w = 1.0;
  tmpvar_20.xyz = xlv_TEXCOORD3;
  lowp float tmpvar_21;
  highp vec4 shadowCoord_22;
  shadowCoord_22 = (unity_WorldToShadow[0] * tmpvar_20);
  highp float lightShadowDataX_23;
  mediump float tmpvar_24;
  tmpvar_24 = _LightShadowData.x;
  lightShadowDataX_23 = tmpvar_24;
  highp float tmpvar_25;
  tmpvar_25 = max (float((texture2D (_ShadowMapTexture, shadowCoord_22.xy).x > shadowCoord_22.z)), lightShadowDataX_23);
  tmpvar_21 = tmpvar_25;
  realtimeShadowAttenuation_13 = tmpvar_21;
  mediump float tmpvar_26;
  tmpvar_26 = min (clamp ((realtimeShadowAttenuation_13 + tmpvar_17), 0.0, 1.0), shadowMaskAttenuation_14);
  atten_5 = tmpvar_26;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_7;
  tmpvar_1 = atten_5;
  mediump vec3 normalWorld_27;
  normalWorld_27 = tmpvar_6;
  mediump vec3 tmpvar_28;
  tmpvar_28 = (tmpvar_2 * tmpvar_1);
  mediump vec4 tmpvar_29;
  tmpvar_29.w = 1.0;
  tmpvar_29.xyz = normalWorld_27;
  mediump vec3 x_30;
  x_30.x = dot (unity_SHAr, tmpvar_29);
  x_30.y = dot (unity_SHAg, tmpvar_29);
  x_30.z = dot (unity_SHAb, tmpvar_29);
  mediump vec3 tmpvar_31;
  tmpvar_31 = max (((1.055 * 
    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD4 + x_30)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  tmpvar_2 = tmpvar_28;
  lowp vec4 c_32;
  lowp vec4 c_33;
  lowp float diff_34;
  mediump float tmpvar_35;
  tmpvar_35 = max (0.0, dot (tmpvar_6, tmpvar_3));
  diff_34 = tmpvar_35;
  c_33.xyz = ((tmpvar_12.xyz * tmpvar_28) * diff_34);
  c_33.w = (reflcol_10.w * _ReflectColor.w);
  c_32.w = c_33.w;
  c_32.xyz = (c_33.xyz + (tmpvar_12.xyz * tmpvar_31));
  c_4.xyz = (c_32.xyz + (reflcol_10.xyz * _ReflectColor.xyz));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_SHADOW_MIXING" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = unity_WorldToObject[0].xyz;
  tmpvar_6[1] = unity_WorldToObject[1].xyz;
  tmpvar_6[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_glesNormal * tmpvar_6));
  highp vec3 tmpvar_8;
  highp vec3 I_9;
  I_9 = (tmpvar_5 - _WorldSpaceCameraPos);
  tmpvar_8 = (I_9 - (2.0 * (
    dot (tmpvar_7, I_9)
   * tmpvar_7)));
  tmpvar_1 = tmpvar_8;
  highp vec3 lightColor0_10;
  lightColor0_10 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_11;
  lightColor1_11 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_12;
  lightColor2_12 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_13;
  lightColor3_13 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_14;
  lightAttenSq_14 = unity_4LightAtten0;
  highp vec3 col_15;
  highp vec4 ndotl_16;
  highp vec4 lengthSq_17;
  highp vec4 tmpvar_18;
  tmpvar_18 = (unity_4LightPosX0 - tmpvar_5.x);
  highp vec4 tmpvar_19;
  tmpvar_19 = (unity_4LightPosY0 - tmpvar_5.y);
  highp vec4 tmpvar_20;
  tmpvar_20 = (unity_4LightPosZ0 - tmpvar_5.z);
  lengthSq_17 = (tmpvar_18 * tmpvar_18);
  lengthSq_17 = (lengthSq_17 + (tmpvar_19 * tmpvar_19));
  lengthSq_17 = (lengthSq_17 + (tmpvar_20 * tmpvar_20));
  highp vec4 tmpvar_21;
  tmpvar_21 = max (lengthSq_17, vec4(1e-06, 1e-06, 1e-06, 1e-06));
  lengthSq_17 = tmpvar_21;
  ndotl_16 = (tmpvar_18 * tmpvar_7.x);
  ndotl_16 = (ndotl_16 + (tmpvar_19 * tmpvar_7.y));
  ndotl_16 = (ndotl_16 + (tmpvar_20 * tmpvar_7.z));
  highp vec4 tmpvar_22;
  tmpvar_22 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_16 * inversesqrt(tmpvar_21)));
  ndotl_16 = tmpvar_22;
  highp vec4 tmpvar_23;
  tmpvar_23 = (tmpvar_22 * (1.0/((1.0 + 
    (tmpvar_21 * lightAttenSq_14)
  ))));
  col_15 = (lightColor0_10 * tmpvar_23.x);
  col_15 = (col_15 + (lightColor1_11 * tmpvar_23.y));
  col_15 = (col_15 + (lightColor2_12 * tmpvar_23.z));
  col_15 = (col_15 + (lightColor3_13 * tmpvar_23.w));
  tmpvar_2 = col_15;
  mediump vec3 normal_24;
  normal_24 = tmpvar_7;
  mediump vec3 ambient_25;
  mediump vec3 x1_26;
  mediump vec4 tmpvar_27;
  tmpvar_27 = (normal_24.xyzz * normal_24.yzzx);
  x1_26.x = dot (unity_SHBr, tmpvar_27);
  x1_26.y = dot (unity_SHBg, tmpvar_27);
  x1_26.z = dot (unity_SHBb, tmpvar_27);
  ambient_25 = ((tmpvar_2 * (
    (tmpvar_2 * ((tmpvar_2 * 0.305306) + 0.6821711))
   + 0.01252288)) + (x1_26 + (unity_SHC.xyz * 
    ((normal_24.x * normal_24.x) - (normal_24.y * normal_24.y))
  )));
  tmpvar_2 = ambient_25;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_7;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = ambient_25;
  xlv_TEXCOORD5 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD7 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform lowp vec4 unity_OcclusionMaskSelector;
uniform highp mat4 unity_WorldToShadow[4];
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform sampler2D unity_ShadowMask;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp float atten_5;
  lowp vec3 tmpvar_6;
  lowp vec3 lightDir_7;
  highp vec3 tmpvar_8;
  mediump vec3 tmpvar_9;
  tmpvar_9 = _WorldSpaceLightPos0.xyz;
  lightDir_7 = tmpvar_9;
  tmpvar_8 = xlv_TEXCOORD1;
  tmpvar_6 = xlv_TEXCOORD2;
  lowp vec4 reflcol_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_12;
  tmpvar_12 = (tmpvar_11 * _Color);
  reflcol_10 = (textureCube (_Cube, tmpvar_8) * tmpvar_11.w);
  mediump float realtimeShadowAttenuation_13;
  mediump float shadowMaskAttenuation_14;
  highp vec4 v_15;
  v_15.x = unity_MatrixV[0].z;
  v_15.y = unity_MatrixV[1].z;
  v_15.z = unity_MatrixV[2].z;
  v_15.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_16;
  tmpvar_16 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_17;
  highp float tmpvar_18;
  tmpvar_18 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_15.xyz), sqrt(dot (tmpvar_16, tmpvar_16)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_17 = tmpvar_18;
  lowp float tmpvar_19;
  tmpvar_19 = clamp (dot (texture2D (unity_ShadowMask, xlv_TEXCOORD5), unity_OcclusionMaskSelector), 0.0, 1.0);
  shadowMaskAttenuation_14 = tmpvar_19;
  highp vec4 tmpvar_20;
  tmpvar_20.w = 1.0;
  tmpvar_20.xyz = xlv_TEXCOORD3;
  lowp float tmpvar_21;
  highp vec4 shadowCoord_22;
  shadowCoord_22 = (unity_WorldToShadow[0] * tmpvar_20);
  highp float lightShadowDataX_23;
  mediump float tmpvar_24;
  tmpvar_24 = _LightShadowData.x;
  lightShadowDataX_23 = tmpvar_24;
  highp float tmpvar_25;
  tmpvar_25 = max (float((texture2D (_ShadowMapTexture, shadowCoord_22.xy).x > shadowCoord_22.z)), lightShadowDataX_23);
  tmpvar_21 = tmpvar_25;
  realtimeShadowAttenuation_13 = tmpvar_21;
  mediump float tmpvar_26;
  tmpvar_26 = min (clamp ((realtimeShadowAttenuation_13 + tmpvar_17), 0.0, 1.0), shadowMaskAttenuation_14);
  atten_5 = tmpvar_26;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_7;
  tmpvar_1 = atten_5;
  mediump vec3 normalWorld_27;
  normalWorld_27 = tmpvar_6;
  mediump vec3 tmpvar_28;
  tmpvar_28 = (tmpvar_2 * tmpvar_1);
  mediump vec4 tmpvar_29;
  tmpvar_29.w = 1.0;
  tmpvar_29.xyz = normalWorld_27;
  mediump vec3 x_30;
  x_30.x = dot (unity_SHAr, tmpvar_29);
  x_30.y = dot (unity_SHAg, tmpvar_29);
  x_30.z = dot (unity_SHAb, tmpvar_29);
  mediump vec3 tmpvar_31;
  tmpvar_31 = max (((1.055 * 
    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD4 + x_30)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  tmpvar_2 = tmpvar_28;
  lowp vec4 c_32;
  lowp vec4 c_33;
  lowp float diff_34;
  mediump float tmpvar_35;
  tmpvar_35 = max (0.0, dot (tmpvar_6, tmpvar_3));
  diff_34 = tmpvar_35;
  c_33.xyz = ((tmpvar_12.xyz * tmpvar_28) * diff_34);
  c_33.w = (reflcol_10.w * _ReflectColor.w);
  c_32.w = c_33.w;
  c_32.xyz = (c_33.xyz + (tmpvar_12.xyz * tmpvar_31));
  c_4.xyz = (c_32.xyz + (reflcol_10.xyz * _ReflectColor.xyz));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "FOG_LINEAR" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec3 tmpvar_4;
  tmpvar_4 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_5;
  tmpvar_5[0] = unity_WorldToObject[0].xyz;
  tmpvar_5[1] = unity_WorldToObject[1].xyz;
  tmpvar_5[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_glesNormal * tmpvar_5));
  highp vec3 tmpvar_7;
  highp vec3 I_8;
  I_8 = (tmpvar_4 - _WorldSpaceCameraPos);
  tmpvar_7 = (I_8 - (2.0 * (
    dot (tmpvar_6, I_8)
   * tmpvar_6)));
  tmpvar_1 = tmpvar_7;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD6 = ((tmpvar_2.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 unity_FogColor;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec4 c_3;
  lowp vec3 tmpvar_4;
  lowp vec3 lightDir_5;
  highp vec3 tmpvar_6;
  mediump vec3 tmpvar_7;
  tmpvar_7 = _WorldSpaceLightPos0.xyz;
  lightDir_5 = tmpvar_7;
  tmpvar_6 = xlv_TEXCOORD1;
  tmpvar_4 = xlv_TEXCOORD2;
  lowp vec4 reflcol_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_8 = (textureCube (_Cube, tmpvar_6) * tmpvar_9.w);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_5;
  lowp vec4 c_10;
  lowp vec4 c_11;
  lowp float diff_12;
  mediump float tmpvar_13;
  tmpvar_13 = max (0.0, dot (tmpvar_4, tmpvar_2));
  diff_12 = tmpvar_13;
  c_11.xyz = (((tmpvar_9 * _Color).xyz * tmpvar_1) * diff_12);
  c_11.w = (reflcol_8.w * _ReflectColor.w);
  c_10.w = c_11.w;
  c_10.xyz = c_11.xyz;
  c_3.w = c_10.w;
  c_3.xyz = (c_11.xyz + (reflcol_8.xyz * _ReflectColor.xyz));
  highp float tmpvar_14;
  tmpvar_14 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_3.xyz = mix (unity_FogColor.xyz, c_3.xyz, vec3(tmpvar_14));
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "FOG_LINEAR" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec3 tmpvar_4;
  tmpvar_4 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_5;
  tmpvar_5[0] = unity_WorldToObject[0].xyz;
  tmpvar_5[1] = unity_WorldToObject[1].xyz;
  tmpvar_5[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_glesNormal * tmpvar_5));
  highp vec3 tmpvar_7;
  highp vec3 I_8;
  I_8 = (tmpvar_4 - _WorldSpaceCameraPos);
  tmpvar_7 = (I_8 - (2.0 * (
    dot (tmpvar_6, I_8)
   * tmpvar_6)));
  tmpvar_1 = tmpvar_7;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD6 = ((tmpvar_2.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 unity_FogColor;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec4 c_3;
  lowp vec3 tmpvar_4;
  lowp vec3 lightDir_5;
  highp vec3 tmpvar_6;
  mediump vec3 tmpvar_7;
  tmpvar_7 = _WorldSpaceLightPos0.xyz;
  lightDir_5 = tmpvar_7;
  tmpvar_6 = xlv_TEXCOORD1;
  tmpvar_4 = xlv_TEXCOORD2;
  lowp vec4 reflcol_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_8 = (textureCube (_Cube, tmpvar_6) * tmpvar_9.w);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_5;
  lowp vec4 c_10;
  lowp vec4 c_11;
  lowp float diff_12;
  mediump float tmpvar_13;
  tmpvar_13 = max (0.0, dot (tmpvar_4, tmpvar_2));
  diff_12 = tmpvar_13;
  c_11.xyz = (((tmpvar_9 * _Color).xyz * tmpvar_1) * diff_12);
  c_11.w = (reflcol_8.w * _ReflectColor.w);
  c_10.w = c_11.w;
  c_10.xyz = c_11.xyz;
  c_3.w = c_10.w;
  c_3.xyz = (c_11.xyz + (reflcol_8.xyz * _ReflectColor.xyz));
  highp float tmpvar_14;
  tmpvar_14 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_3.xyz = mix (unity_FogColor.xyz, c_3.xyz, vec3(tmpvar_14));
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "FOG_LINEAR" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec3 tmpvar_4;
  tmpvar_4 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_5;
  tmpvar_5[0] = unity_WorldToObject[0].xyz;
  tmpvar_5[1] = unity_WorldToObject[1].xyz;
  tmpvar_5[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_glesNormal * tmpvar_5));
  highp vec3 tmpvar_7;
  highp vec3 I_8;
  I_8 = (tmpvar_4 - _WorldSpaceCameraPos);
  tmpvar_7 = (I_8 - (2.0 * (
    dot (tmpvar_6, I_8)
   * tmpvar_6)));
  tmpvar_1 = tmpvar_7;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD6 = ((tmpvar_2.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 unity_FogColor;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec4 c_3;
  lowp vec3 tmpvar_4;
  lowp vec3 lightDir_5;
  highp vec3 tmpvar_6;
  mediump vec3 tmpvar_7;
  tmpvar_7 = _WorldSpaceLightPos0.xyz;
  lightDir_5 = tmpvar_7;
  tmpvar_6 = xlv_TEXCOORD1;
  tmpvar_4 = xlv_TEXCOORD2;
  lowp vec4 reflcol_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_8 = (textureCube (_Cube, tmpvar_6) * tmpvar_9.w);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_5;
  lowp vec4 c_10;
  lowp vec4 c_11;
  lowp float diff_12;
  mediump float tmpvar_13;
  tmpvar_13 = max (0.0, dot (tmpvar_4, tmpvar_2));
  diff_12 = tmpvar_13;
  c_11.xyz = (((tmpvar_9 * _Color).xyz * tmpvar_1) * diff_12);
  c_11.w = (reflcol_8.w * _ReflectColor.w);
  c_10.w = c_11.w;
  c_10.xyz = c_11.xyz;
  c_3.w = c_10.w;
  c_3.xyz = (c_11.xyz + (reflcol_8.xyz * _ReflectColor.xyz));
  highp float tmpvar_14;
  tmpvar_14 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_3.xyz = mix (unity_FogColor.xyz, c_3.xyz, vec3(tmpvar_14));
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "FOG_LINEAR" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD4;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec3 tmpvar_4;
  tmpvar_4 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_5;
  tmpvar_5[0] = unity_WorldToObject[0].xyz;
  tmpvar_5[1] = unity_WorldToObject[1].xyz;
  tmpvar_5[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_glesNormal * tmpvar_5));
  highp vec3 tmpvar_7;
  highp vec3 I_8;
  I_8 = (tmpvar_4 - _WorldSpaceCameraPos);
  tmpvar_7 = (I_8 - (2.0 * (
    dot (tmpvar_6, I_8)
   * tmpvar_6)));
  tmpvar_1 = tmpvar_7;
  mediump vec3 normal_9;
  normal_9 = tmpvar_6;
  mediump vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = normal_9;
  mediump vec3 res_11;
  mediump vec3 x_12;
  x_12.x = dot (unity_SHAr, tmpvar_10);
  x_12.y = dot (unity_SHAg, tmpvar_10);
  x_12.z = dot (unity_SHAb, tmpvar_10);
  mediump vec3 x1_13;
  mediump vec4 tmpvar_14;
  tmpvar_14 = (normal_9.xyzz * normal_9.yzzx);
  x1_13.x = dot (unity_SHBr, tmpvar_14);
  x1_13.y = dot (unity_SHBg, tmpvar_14);
  x1_13.z = dot (unity_SHBb, tmpvar_14);
  res_11 = (x_12 + (x1_13 + (unity_SHC.xyz * 
    ((normal_9.x * normal_9.x) - (normal_9.y * normal_9.y))
  )));
  mediump vec3 tmpvar_15;
  tmpvar_15 = max (((1.055 * 
    pow (max (res_11, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_11 = tmpvar_15;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = max (vec3(0.0, 0.0, 0.0), tmpvar_15);
  xlv_TEXCOORD6 = ((tmpvar_2.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 unity_FogColor;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD4;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec4 c_3;
  lowp vec3 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  mediump vec3 tmpvar_8;
  tmpvar_8 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_8;
  tmpvar_7 = xlv_TEXCOORD1;
  tmpvar_5 = xlv_TEXCOORD2;
  lowp vec4 reflcol_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_9 = (textureCube (_Cube, tmpvar_7) * tmpvar_10.w);
  tmpvar_4 = (tmpvar_10 * _Color).xyz;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  lowp vec4 c_11;
  lowp vec4 c_12;
  lowp float diff_13;
  mediump float tmpvar_14;
  tmpvar_14 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_13 = tmpvar_14;
  c_12.xyz = ((tmpvar_4 * tmpvar_1) * diff_13);
  c_12.w = (reflcol_9.w * _ReflectColor.w);
  c_11.w = c_12.w;
  c_11.xyz = (c_12.xyz + (tmpvar_4 * xlv_TEXCOORD4));
  c_3.w = c_11.w;
  c_3.xyz = (c_11.xyz + (reflcol_9.xyz * _ReflectColor.xyz));
  highp float tmpvar_15;
  tmpvar_15 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_3.xyz = mix (unity_FogColor.xyz, c_3.xyz, vec3(tmpvar_15));
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "FOG_LINEAR" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD4;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec3 tmpvar_4;
  tmpvar_4 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_5;
  tmpvar_5[0] = unity_WorldToObject[0].xyz;
  tmpvar_5[1] = unity_WorldToObject[1].xyz;
  tmpvar_5[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_glesNormal * tmpvar_5));
  highp vec3 tmpvar_7;
  highp vec3 I_8;
  I_8 = (tmpvar_4 - _WorldSpaceCameraPos);
  tmpvar_7 = (I_8 - (2.0 * (
    dot (tmpvar_6, I_8)
   * tmpvar_6)));
  tmpvar_1 = tmpvar_7;
  mediump vec3 normal_9;
  normal_9 = tmpvar_6;
  mediump vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = normal_9;
  mediump vec3 res_11;
  mediump vec3 x_12;
  x_12.x = dot (unity_SHAr, tmpvar_10);
  x_12.y = dot (unity_SHAg, tmpvar_10);
  x_12.z = dot (unity_SHAb, tmpvar_10);
  mediump vec3 x1_13;
  mediump vec4 tmpvar_14;
  tmpvar_14 = (normal_9.xyzz * normal_9.yzzx);
  x1_13.x = dot (unity_SHBr, tmpvar_14);
  x1_13.y = dot (unity_SHBg, tmpvar_14);
  x1_13.z = dot (unity_SHBb, tmpvar_14);
  res_11 = (x_12 + (x1_13 + (unity_SHC.xyz * 
    ((normal_9.x * normal_9.x) - (normal_9.y * normal_9.y))
  )));
  mediump vec3 tmpvar_15;
  tmpvar_15 = max (((1.055 * 
    pow (max (res_11, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_11 = tmpvar_15;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = max (vec3(0.0, 0.0, 0.0), tmpvar_15);
  xlv_TEXCOORD6 = ((tmpvar_2.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 unity_FogColor;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD4;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec4 c_3;
  lowp vec3 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  mediump vec3 tmpvar_8;
  tmpvar_8 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_8;
  tmpvar_7 = xlv_TEXCOORD1;
  tmpvar_5 = xlv_TEXCOORD2;
  lowp vec4 reflcol_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_9 = (textureCube (_Cube, tmpvar_7) * tmpvar_10.w);
  tmpvar_4 = (tmpvar_10 * _Color).xyz;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  lowp vec4 c_11;
  lowp vec4 c_12;
  lowp float diff_13;
  mediump float tmpvar_14;
  tmpvar_14 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_13 = tmpvar_14;
  c_12.xyz = ((tmpvar_4 * tmpvar_1) * diff_13);
  c_12.w = (reflcol_9.w * _ReflectColor.w);
  c_11.w = c_12.w;
  c_11.xyz = (c_12.xyz + (tmpvar_4 * xlv_TEXCOORD4));
  c_3.w = c_11.w;
  c_3.xyz = (c_11.xyz + (reflcol_9.xyz * _ReflectColor.xyz));
  highp float tmpvar_15;
  tmpvar_15 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_3.xyz = mix (unity_FogColor.xyz, c_3.xyz, vec3(tmpvar_15));
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "FOG_LINEAR" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD4;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec3 tmpvar_4;
  tmpvar_4 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_5;
  tmpvar_5[0] = unity_WorldToObject[0].xyz;
  tmpvar_5[1] = unity_WorldToObject[1].xyz;
  tmpvar_5[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_glesNormal * tmpvar_5));
  highp vec3 tmpvar_7;
  highp vec3 I_8;
  I_8 = (tmpvar_4 - _WorldSpaceCameraPos);
  tmpvar_7 = (I_8 - (2.0 * (
    dot (tmpvar_6, I_8)
   * tmpvar_6)));
  tmpvar_1 = tmpvar_7;
  mediump vec3 normal_9;
  normal_9 = tmpvar_6;
  mediump vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = normal_9;
  mediump vec3 res_11;
  mediump vec3 x_12;
  x_12.x = dot (unity_SHAr, tmpvar_10);
  x_12.y = dot (unity_SHAg, tmpvar_10);
  x_12.z = dot (unity_SHAb, tmpvar_10);
  mediump vec3 x1_13;
  mediump vec4 tmpvar_14;
  tmpvar_14 = (normal_9.xyzz * normal_9.yzzx);
  x1_13.x = dot (unity_SHBr, tmpvar_14);
  x1_13.y = dot (unity_SHBg, tmpvar_14);
  x1_13.z = dot (unity_SHBb, tmpvar_14);
  res_11 = (x_12 + (x1_13 + (unity_SHC.xyz * 
    ((normal_9.x * normal_9.x) - (normal_9.y * normal_9.y))
  )));
  mediump vec3 tmpvar_15;
  tmpvar_15 = max (((1.055 * 
    pow (max (res_11, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_11 = tmpvar_15;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = max (vec3(0.0, 0.0, 0.0), tmpvar_15);
  xlv_TEXCOORD6 = ((tmpvar_2.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 unity_FogColor;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD4;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec4 c_3;
  lowp vec3 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  mediump vec3 tmpvar_8;
  tmpvar_8 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_8;
  tmpvar_7 = xlv_TEXCOORD1;
  tmpvar_5 = xlv_TEXCOORD2;
  lowp vec4 reflcol_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_9 = (textureCube (_Cube, tmpvar_7) * tmpvar_10.w);
  tmpvar_4 = (tmpvar_10 * _Color).xyz;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  lowp vec4 c_11;
  lowp vec4 c_12;
  lowp float diff_13;
  mediump float tmpvar_14;
  tmpvar_14 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_13 = tmpvar_14;
  c_12.xyz = ((tmpvar_4 * tmpvar_1) * diff_13);
  c_12.w = (reflcol_9.w * _ReflectColor.w);
  c_11.w = c_12.w;
  c_11.xyz = (c_12.xyz + (tmpvar_4 * xlv_TEXCOORD4));
  c_3.w = c_11.w;
  c_3.xyz = (c_11.xyz + (reflcol_9.xyz * _ReflectColor.xyz));
  highp float tmpvar_15;
  tmpvar_15 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_3.xyz = mix (unity_FogColor.xyz, c_3.xyz, vec3(tmpvar_15));
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec3 tmpvar_4;
  tmpvar_4 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_5;
  tmpvar_5[0] = unity_WorldToObject[0].xyz;
  tmpvar_5[1] = unity_WorldToObject[1].xyz;
  tmpvar_5[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_glesNormal * tmpvar_5));
  highp vec3 tmpvar_7;
  highp vec3 I_8;
  I_8 = (tmpvar_4 - _WorldSpaceCameraPos);
  tmpvar_7 = (I_8 - (2.0 * (
    dot (tmpvar_6, I_8)
   * tmpvar_6)));
  tmpvar_1 = tmpvar_7;
  mediump vec3 normal_9;
  normal_9 = tmpvar_6;
  mediump vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = normal_9;
  mediump vec3 res_11;
  mediump vec3 x_12;
  x_12.x = dot (unity_SHAr, tmpvar_10);
  x_12.y = dot (unity_SHAg, tmpvar_10);
  x_12.z = dot (unity_SHAb, tmpvar_10);
  mediump vec3 x1_13;
  mediump vec4 tmpvar_14;
  tmpvar_14 = (normal_9.xyzz * normal_9.yzzx);
  x1_13.x = dot (unity_SHBr, tmpvar_14);
  x1_13.y = dot (unity_SHBg, tmpvar_14);
  x1_13.z = dot (unity_SHBb, tmpvar_14);
  res_11 = (x_12 + (x1_13 + (unity_SHC.xyz * 
    ((normal_9.x * normal_9.x) - (normal_9.y * normal_9.y))
  )));
  mediump vec3 tmpvar_15;
  tmpvar_15 = max (((1.055 * 
    pow (max (res_11, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_11 = tmpvar_15;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = max (vec3(0.0, 0.0, 0.0), tmpvar_15);
  xlv_TEXCOORD5 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD6 = ((tmpvar_2.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 unity_OcclusionMaskSelector;
uniform lowp vec4 unity_FogColor;
uniform sampler2D unity_ShadowMask;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp float atten_5;
  lowp vec3 tmpvar_6;
  lowp vec3 tmpvar_7;
  lowp vec3 lightDir_8;
  highp vec3 tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = _WorldSpaceLightPos0.xyz;
  lightDir_8 = tmpvar_10;
  tmpvar_9 = xlv_TEXCOORD1;
  tmpvar_7 = xlv_TEXCOORD2;
  lowp vec4 reflcol_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_11 = (textureCube (_Cube, tmpvar_9) * tmpvar_12.w);
  tmpvar_6 = (tmpvar_12 * _Color).xyz;
  mediump float shadowMaskAttenuation_13;
  lowp float tmpvar_14;
  tmpvar_14 = clamp (dot (texture2D (unity_ShadowMask, xlv_TEXCOORD5), unity_OcclusionMaskSelector), 0.0, 1.0);
  shadowMaskAttenuation_13 = tmpvar_14;
  atten_5 = shadowMaskAttenuation_13;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_8;
  tmpvar_1 = atten_5;
  mediump vec3 tmpvar_15;
  tmpvar_15 = (tmpvar_2 * tmpvar_1);
  tmpvar_2 = tmpvar_15;
  lowp vec4 c_16;
  lowp vec4 c_17;
  lowp float diff_18;
  mediump float tmpvar_19;
  tmpvar_19 = max (0.0, dot (tmpvar_7, tmpvar_3));
  diff_18 = tmpvar_19;
  c_17.xyz = ((tmpvar_6 * tmpvar_15) * diff_18);
  c_17.w = (reflcol_11.w * _ReflectColor.w);
  c_16.w = c_17.w;
  c_16.xyz = (c_17.xyz + (tmpvar_6 * xlv_TEXCOORD4));
  c_4.w = c_16.w;
  c_4.xyz = (c_16.xyz + (reflcol_11.xyz * _ReflectColor.xyz));
  highp float tmpvar_20;
  tmpvar_20 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_4.xyz = mix (unity_FogColor.xyz, c_4.xyz, vec3(tmpvar_20));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec3 tmpvar_4;
  tmpvar_4 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_5;
  tmpvar_5[0] = unity_WorldToObject[0].xyz;
  tmpvar_5[1] = unity_WorldToObject[1].xyz;
  tmpvar_5[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_glesNormal * tmpvar_5));
  highp vec3 tmpvar_7;
  highp vec3 I_8;
  I_8 = (tmpvar_4 - _WorldSpaceCameraPos);
  tmpvar_7 = (I_8 - (2.0 * (
    dot (tmpvar_6, I_8)
   * tmpvar_6)));
  tmpvar_1 = tmpvar_7;
  mediump vec3 normal_9;
  normal_9 = tmpvar_6;
  mediump vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = normal_9;
  mediump vec3 res_11;
  mediump vec3 x_12;
  x_12.x = dot (unity_SHAr, tmpvar_10);
  x_12.y = dot (unity_SHAg, tmpvar_10);
  x_12.z = dot (unity_SHAb, tmpvar_10);
  mediump vec3 x1_13;
  mediump vec4 tmpvar_14;
  tmpvar_14 = (normal_9.xyzz * normal_9.yzzx);
  x1_13.x = dot (unity_SHBr, tmpvar_14);
  x1_13.y = dot (unity_SHBg, tmpvar_14);
  x1_13.z = dot (unity_SHBb, tmpvar_14);
  res_11 = (x_12 + (x1_13 + (unity_SHC.xyz * 
    ((normal_9.x * normal_9.x) - (normal_9.y * normal_9.y))
  )));
  mediump vec3 tmpvar_15;
  tmpvar_15 = max (((1.055 * 
    pow (max (res_11, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_11 = tmpvar_15;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = max (vec3(0.0, 0.0, 0.0), tmpvar_15);
  xlv_TEXCOORD5 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD6 = ((tmpvar_2.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 unity_OcclusionMaskSelector;
uniform lowp vec4 unity_FogColor;
uniform sampler2D unity_ShadowMask;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp float atten_5;
  lowp vec3 tmpvar_6;
  lowp vec3 tmpvar_7;
  lowp vec3 lightDir_8;
  highp vec3 tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = _WorldSpaceLightPos0.xyz;
  lightDir_8 = tmpvar_10;
  tmpvar_9 = xlv_TEXCOORD1;
  tmpvar_7 = xlv_TEXCOORD2;
  lowp vec4 reflcol_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_11 = (textureCube (_Cube, tmpvar_9) * tmpvar_12.w);
  tmpvar_6 = (tmpvar_12 * _Color).xyz;
  mediump float shadowMaskAttenuation_13;
  lowp float tmpvar_14;
  tmpvar_14 = clamp (dot (texture2D (unity_ShadowMask, xlv_TEXCOORD5), unity_OcclusionMaskSelector), 0.0, 1.0);
  shadowMaskAttenuation_13 = tmpvar_14;
  atten_5 = shadowMaskAttenuation_13;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_8;
  tmpvar_1 = atten_5;
  mediump vec3 tmpvar_15;
  tmpvar_15 = (tmpvar_2 * tmpvar_1);
  tmpvar_2 = tmpvar_15;
  lowp vec4 c_16;
  lowp vec4 c_17;
  lowp float diff_18;
  mediump float tmpvar_19;
  tmpvar_19 = max (0.0, dot (tmpvar_7, tmpvar_3));
  diff_18 = tmpvar_19;
  c_17.xyz = ((tmpvar_6 * tmpvar_15) * diff_18);
  c_17.w = (reflcol_11.w * _ReflectColor.w);
  c_16.w = c_17.w;
  c_16.xyz = (c_17.xyz + (tmpvar_6 * xlv_TEXCOORD4));
  c_4.w = c_16.w;
  c_4.xyz = (c_16.xyz + (reflcol_11.xyz * _ReflectColor.xyz));
  highp float tmpvar_20;
  tmpvar_20 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_4.xyz = mix (unity_FogColor.xyz, c_4.xyz, vec3(tmpvar_20));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec3 tmpvar_4;
  tmpvar_4 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_5;
  tmpvar_5[0] = unity_WorldToObject[0].xyz;
  tmpvar_5[1] = unity_WorldToObject[1].xyz;
  tmpvar_5[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_glesNormal * tmpvar_5));
  highp vec3 tmpvar_7;
  highp vec3 I_8;
  I_8 = (tmpvar_4 - _WorldSpaceCameraPos);
  tmpvar_7 = (I_8 - (2.0 * (
    dot (tmpvar_6, I_8)
   * tmpvar_6)));
  tmpvar_1 = tmpvar_7;
  mediump vec3 normal_9;
  normal_9 = tmpvar_6;
  mediump vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = normal_9;
  mediump vec3 res_11;
  mediump vec3 x_12;
  x_12.x = dot (unity_SHAr, tmpvar_10);
  x_12.y = dot (unity_SHAg, tmpvar_10);
  x_12.z = dot (unity_SHAb, tmpvar_10);
  mediump vec3 x1_13;
  mediump vec4 tmpvar_14;
  tmpvar_14 = (normal_9.xyzz * normal_9.yzzx);
  x1_13.x = dot (unity_SHBr, tmpvar_14);
  x1_13.y = dot (unity_SHBg, tmpvar_14);
  x1_13.z = dot (unity_SHBb, tmpvar_14);
  res_11 = (x_12 + (x1_13 + (unity_SHC.xyz * 
    ((normal_9.x * normal_9.x) - (normal_9.y * normal_9.y))
  )));
  mediump vec3 tmpvar_15;
  tmpvar_15 = max (((1.055 * 
    pow (max (res_11, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_11 = tmpvar_15;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = max (vec3(0.0, 0.0, 0.0), tmpvar_15);
  xlv_TEXCOORD5 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD6 = ((tmpvar_2.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 unity_OcclusionMaskSelector;
uniform lowp vec4 unity_FogColor;
uniform sampler2D unity_ShadowMask;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp float atten_5;
  lowp vec3 tmpvar_6;
  lowp vec3 tmpvar_7;
  lowp vec3 lightDir_8;
  highp vec3 tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = _WorldSpaceLightPos0.xyz;
  lightDir_8 = tmpvar_10;
  tmpvar_9 = xlv_TEXCOORD1;
  tmpvar_7 = xlv_TEXCOORD2;
  lowp vec4 reflcol_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_11 = (textureCube (_Cube, tmpvar_9) * tmpvar_12.w);
  tmpvar_6 = (tmpvar_12 * _Color).xyz;
  mediump float shadowMaskAttenuation_13;
  lowp float tmpvar_14;
  tmpvar_14 = clamp (dot (texture2D (unity_ShadowMask, xlv_TEXCOORD5), unity_OcclusionMaskSelector), 0.0, 1.0);
  shadowMaskAttenuation_13 = tmpvar_14;
  atten_5 = shadowMaskAttenuation_13;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_8;
  tmpvar_1 = atten_5;
  mediump vec3 tmpvar_15;
  tmpvar_15 = (tmpvar_2 * tmpvar_1);
  tmpvar_2 = tmpvar_15;
  lowp vec4 c_16;
  lowp vec4 c_17;
  lowp float diff_18;
  mediump float tmpvar_19;
  tmpvar_19 = max (0.0, dot (tmpvar_7, tmpvar_3));
  diff_18 = tmpvar_19;
  c_17.xyz = ((tmpvar_6 * tmpvar_15) * diff_18);
  c_17.w = (reflcol_11.w * _ReflectColor.w);
  c_16.w = c_17.w;
  c_16.xyz = (c_17.xyz + (tmpvar_6 * xlv_TEXCOORD4));
  c_4.w = c_16.w;
  c_4.xyz = (c_16.xyz + (reflcol_11.xyz * _ReflectColor.xyz));
  highp float tmpvar_20;
  tmpvar_20 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_4.xyz = mix (unity_FogColor.xyz, c_4.xyz, vec3(tmpvar_20));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "FOG_LINEAR" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = _glesVertex.xyz;
  tmpvar_3 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
  highp vec3 tmpvar_5;
  tmpvar_5 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = unity_WorldToObject[0].xyz;
  tmpvar_6[1] = unity_WorldToObject[1].xyz;
  tmpvar_6[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_glesNormal * tmpvar_6));
  highp vec3 tmpvar_8;
  highp vec3 I_9;
  I_9 = (tmpvar_5 - _WorldSpaceCameraPos);
  tmpvar_8 = (I_9 - (2.0 * (
    dot (tmpvar_7, I_9)
   * tmpvar_7)));
  tmpvar_1 = tmpvar_8;
  tmpvar_2.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_7;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD6 = ((tmpvar_3.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 unity_FogColor;
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD4;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec4 c_3;
  lowp vec3 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  mediump vec3 tmpvar_8;
  tmpvar_8 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_8;
  tmpvar_7 = xlv_TEXCOORD1;
  tmpvar_5 = xlv_TEXCOORD2;
  lowp vec4 reflcol_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_9 = (textureCube (_Cube, tmpvar_7) * tmpvar_10.w);
  tmpvar_4 = (tmpvar_10 * _Color).xyz;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  mediump vec3 tmpvar_11;
  mediump vec4 tmpvar_12;
  tmpvar_12 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_13;
  color_13 = tmpvar_12;
  tmpvar_11 = (unity_Lightmap_HDR.x * color_13.xyz);
  lowp vec4 c_14;
  lowp vec4 c_15;
  lowp float diff_16;
  mediump float tmpvar_17;
  tmpvar_17 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_16 = tmpvar_17;
  c_15.xyz = ((tmpvar_4 * tmpvar_1) * diff_16);
  c_15.w = (reflcol_9.w * _ReflectColor.w);
  c_14.w = c_15.w;
  c_14.xyz = (c_15.xyz + (tmpvar_4 * tmpvar_11));
  c_3.w = c_14.w;
  c_3.xyz = (c_14.xyz + (reflcol_9.xyz * _ReflectColor.xyz));
  highp float tmpvar_18;
  tmpvar_18 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_3.xyz = mix (unity_FogColor.xyz, c_3.xyz, vec3(tmpvar_18));
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "FOG_LINEAR" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = _glesVertex.xyz;
  tmpvar_3 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
  highp vec3 tmpvar_5;
  tmpvar_5 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = unity_WorldToObject[0].xyz;
  tmpvar_6[1] = unity_WorldToObject[1].xyz;
  tmpvar_6[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_glesNormal * tmpvar_6));
  highp vec3 tmpvar_8;
  highp vec3 I_9;
  I_9 = (tmpvar_5 - _WorldSpaceCameraPos);
  tmpvar_8 = (I_9 - (2.0 * (
    dot (tmpvar_7, I_9)
   * tmpvar_7)));
  tmpvar_1 = tmpvar_8;
  tmpvar_2.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_7;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD6 = ((tmpvar_3.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 unity_FogColor;
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD4;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec4 c_3;
  lowp vec3 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  mediump vec3 tmpvar_8;
  tmpvar_8 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_8;
  tmpvar_7 = xlv_TEXCOORD1;
  tmpvar_5 = xlv_TEXCOORD2;
  lowp vec4 reflcol_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_9 = (textureCube (_Cube, tmpvar_7) * tmpvar_10.w);
  tmpvar_4 = (tmpvar_10 * _Color).xyz;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  mediump vec3 tmpvar_11;
  mediump vec4 tmpvar_12;
  tmpvar_12 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_13;
  color_13 = tmpvar_12;
  tmpvar_11 = (unity_Lightmap_HDR.x * color_13.xyz);
  lowp vec4 c_14;
  lowp vec4 c_15;
  lowp float diff_16;
  mediump float tmpvar_17;
  tmpvar_17 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_16 = tmpvar_17;
  c_15.xyz = ((tmpvar_4 * tmpvar_1) * diff_16);
  c_15.w = (reflcol_9.w * _ReflectColor.w);
  c_14.w = c_15.w;
  c_14.xyz = (c_15.xyz + (tmpvar_4 * tmpvar_11));
  c_3.w = c_14.w;
  c_3.xyz = (c_14.xyz + (reflcol_9.xyz * _ReflectColor.xyz));
  highp float tmpvar_18;
  tmpvar_18 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_3.xyz = mix (unity_FogColor.xyz, c_3.xyz, vec3(tmpvar_18));
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "FOG_LINEAR" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = _glesVertex.xyz;
  tmpvar_3 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
  highp vec3 tmpvar_5;
  tmpvar_5 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = unity_WorldToObject[0].xyz;
  tmpvar_6[1] = unity_WorldToObject[1].xyz;
  tmpvar_6[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_glesNormal * tmpvar_6));
  highp vec3 tmpvar_8;
  highp vec3 I_9;
  I_9 = (tmpvar_5 - _WorldSpaceCameraPos);
  tmpvar_8 = (I_9 - (2.0 * (
    dot (tmpvar_7, I_9)
   * tmpvar_7)));
  tmpvar_1 = tmpvar_8;
  tmpvar_2.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_7;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD6 = ((tmpvar_3.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 unity_FogColor;
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD4;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec4 c_3;
  lowp vec3 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  mediump vec3 tmpvar_8;
  tmpvar_8 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_8;
  tmpvar_7 = xlv_TEXCOORD1;
  tmpvar_5 = xlv_TEXCOORD2;
  lowp vec4 reflcol_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_9 = (textureCube (_Cube, tmpvar_7) * tmpvar_10.w);
  tmpvar_4 = (tmpvar_10 * _Color).xyz;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  mediump vec3 tmpvar_11;
  mediump vec4 tmpvar_12;
  tmpvar_12 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_13;
  color_13 = tmpvar_12;
  tmpvar_11 = (unity_Lightmap_HDR.x * color_13.xyz);
  lowp vec4 c_14;
  lowp vec4 c_15;
  lowp float diff_16;
  mediump float tmpvar_17;
  tmpvar_17 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_16 = tmpvar_17;
  c_15.xyz = ((tmpvar_4 * tmpvar_1) * diff_16);
  c_15.w = (reflcol_9.w * _ReflectColor.w);
  c_14.w = c_15.w;
  c_14.xyz = (c_15.xyz + (tmpvar_4 * tmpvar_11));
  c_3.w = c_14.w;
  c_3.xyz = (c_14.xyz + (reflcol_9.xyz * _ReflectColor.xyz));
  highp float tmpvar_18;
  tmpvar_18 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_3.xyz = mix (unity_FogColor.xyz, c_3.xyz, vec3(tmpvar_18));
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTPROBE_SH" "FOG_LINEAR" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = _glesVertex.xyz;
  tmpvar_3 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
  highp vec3 tmpvar_5;
  tmpvar_5 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = unity_WorldToObject[0].xyz;
  tmpvar_6[1] = unity_WorldToObject[1].xyz;
  tmpvar_6[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_glesNormal * tmpvar_6));
  highp vec3 tmpvar_8;
  highp vec3 I_9;
  I_9 = (tmpvar_5 - _WorldSpaceCameraPos);
  tmpvar_8 = (I_9 - (2.0 * (
    dot (tmpvar_7, I_9)
   * tmpvar_7)));
  tmpvar_1 = tmpvar_8;
  tmpvar_2.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_7;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD6 = ((tmpvar_3.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform lowp vec4 unity_FogColor;
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD4;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec4 c_3;
  lowp vec3 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  mediump vec3 tmpvar_8;
  tmpvar_8 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_8;
  tmpvar_7 = xlv_TEXCOORD1;
  tmpvar_5 = xlv_TEXCOORD2;
  lowp vec4 reflcol_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_9 = (textureCube (_Cube, tmpvar_7) * tmpvar_10.w);
  tmpvar_4 = (tmpvar_10 * _Color).xyz;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  mediump vec3 normalWorld_11;
  normalWorld_11 = tmpvar_5;
  mediump vec3 tmpvar_12;
  mediump vec3 ambient_13;
  mediump vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = normalWorld_11;
  mediump vec3 x_15;
  x_15.x = dot (unity_SHAr, tmpvar_14);
  x_15.y = dot (unity_SHAg, tmpvar_14);
  x_15.z = dot (unity_SHAb, tmpvar_14);
  mediump vec3 x1_16;
  mediump vec4 tmpvar_17;
  tmpvar_17 = (normalWorld_11.xyzz * normalWorld_11.yzzx);
  x1_16.x = dot (unity_SHBr, tmpvar_17);
  x1_16.y = dot (unity_SHBg, tmpvar_17);
  x1_16.z = dot (unity_SHBb, tmpvar_17);
  ambient_13 = max (vec3(0.0, 0.0, 0.0), (x_15 + (x1_16 + 
    (unity_SHC.xyz * ((normalWorld_11.x * normalWorld_11.x) - (normalWorld_11.y * normalWorld_11.y)))
  )));
  mediump vec3 tmpvar_18;
  tmpvar_18 = max (((1.055 * 
    pow (max (ambient_13, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  ambient_13 = tmpvar_18;
  mediump vec4 tmpvar_19;
  tmpvar_19 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_20;
  color_20 = tmpvar_19;
  tmpvar_12 = (tmpvar_18 + (unity_Lightmap_HDR.x * color_20.xyz));
  lowp vec4 c_21;
  lowp vec4 c_22;
  lowp float diff_23;
  mediump float tmpvar_24;
  tmpvar_24 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_23 = tmpvar_24;
  c_22.xyz = ((tmpvar_4 * tmpvar_1) * diff_23);
  c_22.w = (reflcol_9.w * _ReflectColor.w);
  c_21.w = c_22.w;
  c_21.xyz = (c_22.xyz + (tmpvar_4 * tmpvar_12));
  c_3.w = c_21.w;
  c_3.xyz = (c_21.xyz + (reflcol_9.xyz * _ReflectColor.xyz));
  highp float tmpvar_25;
  tmpvar_25 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_3.xyz = mix (unity_FogColor.xyz, c_3.xyz, vec3(tmpvar_25));
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTPROBE_SH" "FOG_LINEAR" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = _glesVertex.xyz;
  tmpvar_3 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
  highp vec3 tmpvar_5;
  tmpvar_5 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = unity_WorldToObject[0].xyz;
  tmpvar_6[1] = unity_WorldToObject[1].xyz;
  tmpvar_6[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_glesNormal * tmpvar_6));
  highp vec3 tmpvar_8;
  highp vec3 I_9;
  I_9 = (tmpvar_5 - _WorldSpaceCameraPos);
  tmpvar_8 = (I_9 - (2.0 * (
    dot (tmpvar_7, I_9)
   * tmpvar_7)));
  tmpvar_1 = tmpvar_8;
  tmpvar_2.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_7;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD6 = ((tmpvar_3.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform lowp vec4 unity_FogColor;
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD4;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec4 c_3;
  lowp vec3 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  mediump vec3 tmpvar_8;
  tmpvar_8 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_8;
  tmpvar_7 = xlv_TEXCOORD1;
  tmpvar_5 = xlv_TEXCOORD2;
  lowp vec4 reflcol_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_9 = (textureCube (_Cube, tmpvar_7) * tmpvar_10.w);
  tmpvar_4 = (tmpvar_10 * _Color).xyz;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  mediump vec3 normalWorld_11;
  normalWorld_11 = tmpvar_5;
  mediump vec3 tmpvar_12;
  mediump vec3 ambient_13;
  mediump vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = normalWorld_11;
  mediump vec3 x_15;
  x_15.x = dot (unity_SHAr, tmpvar_14);
  x_15.y = dot (unity_SHAg, tmpvar_14);
  x_15.z = dot (unity_SHAb, tmpvar_14);
  mediump vec3 x1_16;
  mediump vec4 tmpvar_17;
  tmpvar_17 = (normalWorld_11.xyzz * normalWorld_11.yzzx);
  x1_16.x = dot (unity_SHBr, tmpvar_17);
  x1_16.y = dot (unity_SHBg, tmpvar_17);
  x1_16.z = dot (unity_SHBb, tmpvar_17);
  ambient_13 = max (vec3(0.0, 0.0, 0.0), (x_15 + (x1_16 + 
    (unity_SHC.xyz * ((normalWorld_11.x * normalWorld_11.x) - (normalWorld_11.y * normalWorld_11.y)))
  )));
  mediump vec3 tmpvar_18;
  tmpvar_18 = max (((1.055 * 
    pow (max (ambient_13, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  ambient_13 = tmpvar_18;
  mediump vec4 tmpvar_19;
  tmpvar_19 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_20;
  color_20 = tmpvar_19;
  tmpvar_12 = (tmpvar_18 + (unity_Lightmap_HDR.x * color_20.xyz));
  lowp vec4 c_21;
  lowp vec4 c_22;
  lowp float diff_23;
  mediump float tmpvar_24;
  tmpvar_24 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_23 = tmpvar_24;
  c_22.xyz = ((tmpvar_4 * tmpvar_1) * diff_23);
  c_22.w = (reflcol_9.w * _ReflectColor.w);
  c_21.w = c_22.w;
  c_21.xyz = (c_22.xyz + (tmpvar_4 * tmpvar_12));
  c_3.w = c_21.w;
  c_3.xyz = (c_21.xyz + (reflcol_9.xyz * _ReflectColor.xyz));
  highp float tmpvar_25;
  tmpvar_25 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_3.xyz = mix (unity_FogColor.xyz, c_3.xyz, vec3(tmpvar_25));
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTPROBE_SH" "FOG_LINEAR" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = _glesVertex.xyz;
  tmpvar_3 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
  highp vec3 tmpvar_5;
  tmpvar_5 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = unity_WorldToObject[0].xyz;
  tmpvar_6[1] = unity_WorldToObject[1].xyz;
  tmpvar_6[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_glesNormal * tmpvar_6));
  highp vec3 tmpvar_8;
  highp vec3 I_9;
  I_9 = (tmpvar_5 - _WorldSpaceCameraPos);
  tmpvar_8 = (I_9 - (2.0 * (
    dot (tmpvar_7, I_9)
   * tmpvar_7)));
  tmpvar_1 = tmpvar_8;
  tmpvar_2.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_7;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD6 = ((tmpvar_3.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform lowp vec4 unity_FogColor;
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD4;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec4 c_3;
  lowp vec3 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  mediump vec3 tmpvar_8;
  tmpvar_8 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_8;
  tmpvar_7 = xlv_TEXCOORD1;
  tmpvar_5 = xlv_TEXCOORD2;
  lowp vec4 reflcol_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_9 = (textureCube (_Cube, tmpvar_7) * tmpvar_10.w);
  tmpvar_4 = (tmpvar_10 * _Color).xyz;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  mediump vec3 normalWorld_11;
  normalWorld_11 = tmpvar_5;
  mediump vec3 tmpvar_12;
  mediump vec3 ambient_13;
  mediump vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = normalWorld_11;
  mediump vec3 x_15;
  x_15.x = dot (unity_SHAr, tmpvar_14);
  x_15.y = dot (unity_SHAg, tmpvar_14);
  x_15.z = dot (unity_SHAb, tmpvar_14);
  mediump vec3 x1_16;
  mediump vec4 tmpvar_17;
  tmpvar_17 = (normalWorld_11.xyzz * normalWorld_11.yzzx);
  x1_16.x = dot (unity_SHBr, tmpvar_17);
  x1_16.y = dot (unity_SHBg, tmpvar_17);
  x1_16.z = dot (unity_SHBb, tmpvar_17);
  ambient_13 = max (vec3(0.0, 0.0, 0.0), (x_15 + (x1_16 + 
    (unity_SHC.xyz * ((normalWorld_11.x * normalWorld_11.x) - (normalWorld_11.y * normalWorld_11.y)))
  )));
  mediump vec3 tmpvar_18;
  tmpvar_18 = max (((1.055 * 
    pow (max (ambient_13, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  ambient_13 = tmpvar_18;
  mediump vec4 tmpvar_19;
  tmpvar_19 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_20;
  color_20 = tmpvar_19;
  tmpvar_12 = (tmpvar_18 + (unity_Lightmap_HDR.x * color_20.xyz));
  lowp vec4 c_21;
  lowp vec4 c_22;
  lowp float diff_23;
  mediump float tmpvar_24;
  tmpvar_24 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_23 = tmpvar_24;
  c_22.xyz = ((tmpvar_4 * tmpvar_1) * diff_23);
  c_22.w = (reflcol_9.w * _ReflectColor.w);
  c_21.w = c_22.w;
  c_21.xyz = (c_22.xyz + (tmpvar_4 * tmpvar_12));
  c_3.w = c_21.w;
  c_3.xyz = (c_21.xyz + (reflcol_9.xyz * _ReflectColor.xyz));
  highp float tmpvar_25;
  tmpvar_25 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_3.xyz = mix (unity_FogColor.xyz, c_3.xyz, vec3(tmpvar_25));
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" "FOG_LINEAR" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = _glesVertex.xyz;
  tmpvar_3 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
  highp vec3 tmpvar_5;
  tmpvar_5 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = unity_WorldToObject[0].xyz;
  tmpvar_6[1] = unity_WorldToObject[1].xyz;
  tmpvar_6[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_glesNormal * tmpvar_6));
  highp vec3 tmpvar_8;
  highp vec3 I_9;
  I_9 = (tmpvar_5 - _WorldSpaceCameraPos);
  tmpvar_8 = (I_9 - (2.0 * (
    dot (tmpvar_7, I_9)
   * tmpvar_7)));
  tmpvar_1 = tmpvar_8;
  tmpvar_2.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_7;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD6 = ((tmpvar_3.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform lowp vec4 unity_FogColor;
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD4;
varying highp float xlv_TEXCOORD6;
void main ()
{
  lowp vec4 c_1;
  highp vec3 tmpvar_2;
  tmpvar_2 = xlv_TEXCOORD1;
  lowp vec4 reflcol_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_3 = (textureCube (_Cube, tmpvar_2) * tmpvar_4.w);
  mediump vec3 tmpvar_5;
  mediump vec4 tmpvar_6;
  tmpvar_6 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_7;
  color_7 = tmpvar_6;
  tmpvar_5 = (unity_Lightmap_HDR.x * color_7.xyz);
  lowp vec4 c_8;
  lowp vec4 c_9;
  c_9.xyz = vec3(0.0, 0.0, 0.0);
  c_9.w = (reflcol_3.w * _ReflectColor.w);
  c_8.w = c_9.w;
  c_8.xyz = ((tmpvar_4 * _Color).xyz * tmpvar_5);
  c_1.w = c_8.w;
  c_1.xyz = (c_8.xyz + (reflcol_3.xyz * _ReflectColor.xyz));
  highp float tmpvar_10;
  tmpvar_10 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_1.xyz = mix (unity_FogColor.xyz, c_1.xyz, vec3(tmpvar_10));
  c_1.w = 1.0;
  gl_FragData[0] = c_1;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" "FOG_LINEAR" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = _glesVertex.xyz;
  tmpvar_3 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
  highp vec3 tmpvar_5;
  tmpvar_5 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = unity_WorldToObject[0].xyz;
  tmpvar_6[1] = unity_WorldToObject[1].xyz;
  tmpvar_6[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_glesNormal * tmpvar_6));
  highp vec3 tmpvar_8;
  highp vec3 I_9;
  I_9 = (tmpvar_5 - _WorldSpaceCameraPos);
  tmpvar_8 = (I_9 - (2.0 * (
    dot (tmpvar_7, I_9)
   * tmpvar_7)));
  tmpvar_1 = tmpvar_8;
  tmpvar_2.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_7;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD6 = ((tmpvar_3.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform lowp vec4 unity_FogColor;
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD4;
varying highp float xlv_TEXCOORD6;
void main ()
{
  lowp vec4 c_1;
  highp vec3 tmpvar_2;
  tmpvar_2 = xlv_TEXCOORD1;
  lowp vec4 reflcol_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_3 = (textureCube (_Cube, tmpvar_2) * tmpvar_4.w);
  mediump vec3 tmpvar_5;
  mediump vec4 tmpvar_6;
  tmpvar_6 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_7;
  color_7 = tmpvar_6;
  tmpvar_5 = (unity_Lightmap_HDR.x * color_7.xyz);
  lowp vec4 c_8;
  lowp vec4 c_9;
  c_9.xyz = vec3(0.0, 0.0, 0.0);
  c_9.w = (reflcol_3.w * _ReflectColor.w);
  c_8.w = c_9.w;
  c_8.xyz = ((tmpvar_4 * _Color).xyz * tmpvar_5);
  c_1.w = c_8.w;
  c_1.xyz = (c_8.xyz + (reflcol_3.xyz * _ReflectColor.xyz));
  highp float tmpvar_10;
  tmpvar_10 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_1.xyz = mix (unity_FogColor.xyz, c_1.xyz, vec3(tmpvar_10));
  c_1.w = 1.0;
  gl_FragData[0] = c_1;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" "FOG_LINEAR" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = _glesVertex.xyz;
  tmpvar_3 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
  highp vec3 tmpvar_5;
  tmpvar_5 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = unity_WorldToObject[0].xyz;
  tmpvar_6[1] = unity_WorldToObject[1].xyz;
  tmpvar_6[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_glesNormal * tmpvar_6));
  highp vec3 tmpvar_8;
  highp vec3 I_9;
  I_9 = (tmpvar_5 - _WorldSpaceCameraPos);
  tmpvar_8 = (I_9 - (2.0 * (
    dot (tmpvar_7, I_9)
   * tmpvar_7)));
  tmpvar_1 = tmpvar_8;
  tmpvar_2.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_7;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD6 = ((tmpvar_3.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform lowp vec4 unity_FogColor;
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD4;
varying highp float xlv_TEXCOORD6;
void main ()
{
  lowp vec4 c_1;
  highp vec3 tmpvar_2;
  tmpvar_2 = xlv_TEXCOORD1;
  lowp vec4 reflcol_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_3 = (textureCube (_Cube, tmpvar_2) * tmpvar_4.w);
  mediump vec3 tmpvar_5;
  mediump vec4 tmpvar_6;
  tmpvar_6 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_7;
  color_7 = tmpvar_6;
  tmpvar_5 = (unity_Lightmap_HDR.x * color_7.xyz);
  lowp vec4 c_8;
  lowp vec4 c_9;
  c_9.xyz = vec3(0.0, 0.0, 0.0);
  c_9.w = (reflcol_3.w * _ReflectColor.w);
  c_8.w = c_9.w;
  c_8.xyz = ((tmpvar_4 * _Color).xyz * tmpvar_5);
  c_1.w = c_8.w;
  c_1.xyz = (c_8.xyz + (reflcol_3.xyz * _ReflectColor.xyz));
  highp float tmpvar_10;
  tmpvar_10 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_1.xyz = mix (unity_FogColor.xyz, c_1.xyz, vec3(tmpvar_10));
  c_1.w = 1.0;
  gl_FragData[0] = c_1;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" "LIGHTPROBE_SH" "FOG_LINEAR" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = _glesVertex.xyz;
  tmpvar_3 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
  highp vec3 tmpvar_5;
  tmpvar_5 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = unity_WorldToObject[0].xyz;
  tmpvar_6[1] = unity_WorldToObject[1].xyz;
  tmpvar_6[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_glesNormal * tmpvar_6));
  highp vec3 tmpvar_8;
  highp vec3 I_9;
  I_9 = (tmpvar_5 - _WorldSpaceCameraPos);
  tmpvar_8 = (I_9 - (2.0 * (
    dot (tmpvar_7, I_9)
   * tmpvar_7)));
  tmpvar_1 = tmpvar_8;
  tmpvar_2.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_7;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD6 = ((tmpvar_3.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform lowp vec4 unity_FogColor;
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD4;
varying highp float xlv_TEXCOORD6;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = xlv_TEXCOORD1;
  tmpvar_2 = xlv_TEXCOORD2;
  lowp vec4 reflcol_4;
  lowp vec4 tmpvar_5;
  tmpvar_5 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_4 = (textureCube (_Cube, tmpvar_3) * tmpvar_5.w);
  mediump vec3 normalWorld_6;
  normalWorld_6 = tmpvar_2;
  mediump vec3 tmpvar_7;
  mediump vec3 ambient_8;
  mediump vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = normalWorld_6;
  mediump vec3 x_10;
  x_10.x = dot (unity_SHAr, tmpvar_9);
  x_10.y = dot (unity_SHAg, tmpvar_9);
  x_10.z = dot (unity_SHAb, tmpvar_9);
  mediump vec3 x1_11;
  mediump vec4 tmpvar_12;
  tmpvar_12 = (normalWorld_6.xyzz * normalWorld_6.yzzx);
  x1_11.x = dot (unity_SHBr, tmpvar_12);
  x1_11.y = dot (unity_SHBg, tmpvar_12);
  x1_11.z = dot (unity_SHBb, tmpvar_12);
  ambient_8 = max (vec3(0.0, 0.0, 0.0), (x_10 + (x1_11 + 
    (unity_SHC.xyz * ((normalWorld_6.x * normalWorld_6.x) - (normalWorld_6.y * normalWorld_6.y)))
  )));
  mediump vec3 tmpvar_13;
  tmpvar_13 = max (((1.055 * 
    pow (max (ambient_8, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  ambient_8 = tmpvar_13;
  mediump vec4 tmpvar_14;
  tmpvar_14 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_15;
  color_15 = tmpvar_14;
  tmpvar_7 = (tmpvar_13 + (unity_Lightmap_HDR.x * color_15.xyz));
  lowp vec4 c_16;
  lowp vec4 c_17;
  c_17.xyz = vec3(0.0, 0.0, 0.0);
  c_17.w = (reflcol_4.w * _ReflectColor.w);
  c_16.w = c_17.w;
  c_16.xyz = ((tmpvar_5 * _Color).xyz * tmpvar_7);
  c_1.w = c_16.w;
  c_1.xyz = (c_16.xyz + (reflcol_4.xyz * _ReflectColor.xyz));
  highp float tmpvar_18;
  tmpvar_18 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_1.xyz = mix (unity_FogColor.xyz, c_1.xyz, vec3(tmpvar_18));
  c_1.w = 1.0;
  gl_FragData[0] = c_1;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" "LIGHTPROBE_SH" "FOG_LINEAR" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = _glesVertex.xyz;
  tmpvar_3 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
  highp vec3 tmpvar_5;
  tmpvar_5 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = unity_WorldToObject[0].xyz;
  tmpvar_6[1] = unity_WorldToObject[1].xyz;
  tmpvar_6[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_glesNormal * tmpvar_6));
  highp vec3 tmpvar_8;
  highp vec3 I_9;
  I_9 = (tmpvar_5 - _WorldSpaceCameraPos);
  tmpvar_8 = (I_9 - (2.0 * (
    dot (tmpvar_7, I_9)
   * tmpvar_7)));
  tmpvar_1 = tmpvar_8;
  tmpvar_2.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_7;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD6 = ((tmpvar_3.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform lowp vec4 unity_FogColor;
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD4;
varying highp float xlv_TEXCOORD6;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = xlv_TEXCOORD1;
  tmpvar_2 = xlv_TEXCOORD2;
  lowp vec4 reflcol_4;
  lowp vec4 tmpvar_5;
  tmpvar_5 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_4 = (textureCube (_Cube, tmpvar_3) * tmpvar_5.w);
  mediump vec3 normalWorld_6;
  normalWorld_6 = tmpvar_2;
  mediump vec3 tmpvar_7;
  mediump vec3 ambient_8;
  mediump vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = normalWorld_6;
  mediump vec3 x_10;
  x_10.x = dot (unity_SHAr, tmpvar_9);
  x_10.y = dot (unity_SHAg, tmpvar_9);
  x_10.z = dot (unity_SHAb, tmpvar_9);
  mediump vec3 x1_11;
  mediump vec4 tmpvar_12;
  tmpvar_12 = (normalWorld_6.xyzz * normalWorld_6.yzzx);
  x1_11.x = dot (unity_SHBr, tmpvar_12);
  x1_11.y = dot (unity_SHBg, tmpvar_12);
  x1_11.z = dot (unity_SHBb, tmpvar_12);
  ambient_8 = max (vec3(0.0, 0.0, 0.0), (x_10 + (x1_11 + 
    (unity_SHC.xyz * ((normalWorld_6.x * normalWorld_6.x) - (normalWorld_6.y * normalWorld_6.y)))
  )));
  mediump vec3 tmpvar_13;
  tmpvar_13 = max (((1.055 * 
    pow (max (ambient_8, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  ambient_8 = tmpvar_13;
  mediump vec4 tmpvar_14;
  tmpvar_14 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_15;
  color_15 = tmpvar_14;
  tmpvar_7 = (tmpvar_13 + (unity_Lightmap_HDR.x * color_15.xyz));
  lowp vec4 c_16;
  lowp vec4 c_17;
  c_17.xyz = vec3(0.0, 0.0, 0.0);
  c_17.w = (reflcol_4.w * _ReflectColor.w);
  c_16.w = c_17.w;
  c_16.xyz = ((tmpvar_5 * _Color).xyz * tmpvar_7);
  c_1.w = c_16.w;
  c_1.xyz = (c_16.xyz + (reflcol_4.xyz * _ReflectColor.xyz));
  highp float tmpvar_18;
  tmpvar_18 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_1.xyz = mix (unity_FogColor.xyz, c_1.xyz, vec3(tmpvar_18));
  c_1.w = 1.0;
  gl_FragData[0] = c_1;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" "LIGHTPROBE_SH" "FOG_LINEAR" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = _glesVertex.xyz;
  tmpvar_3 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
  highp vec3 tmpvar_5;
  tmpvar_5 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = unity_WorldToObject[0].xyz;
  tmpvar_6[1] = unity_WorldToObject[1].xyz;
  tmpvar_6[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_glesNormal * tmpvar_6));
  highp vec3 tmpvar_8;
  highp vec3 I_9;
  I_9 = (tmpvar_5 - _WorldSpaceCameraPos);
  tmpvar_8 = (I_9 - (2.0 * (
    dot (tmpvar_7, I_9)
   * tmpvar_7)));
  tmpvar_1 = tmpvar_8;
  tmpvar_2.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_7;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD6 = ((tmpvar_3.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform lowp vec4 unity_FogColor;
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD4;
varying highp float xlv_TEXCOORD6;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = xlv_TEXCOORD1;
  tmpvar_2 = xlv_TEXCOORD2;
  lowp vec4 reflcol_4;
  lowp vec4 tmpvar_5;
  tmpvar_5 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_4 = (textureCube (_Cube, tmpvar_3) * tmpvar_5.w);
  mediump vec3 normalWorld_6;
  normalWorld_6 = tmpvar_2;
  mediump vec3 tmpvar_7;
  mediump vec3 ambient_8;
  mediump vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = normalWorld_6;
  mediump vec3 x_10;
  x_10.x = dot (unity_SHAr, tmpvar_9);
  x_10.y = dot (unity_SHAg, tmpvar_9);
  x_10.z = dot (unity_SHAb, tmpvar_9);
  mediump vec3 x1_11;
  mediump vec4 tmpvar_12;
  tmpvar_12 = (normalWorld_6.xyzz * normalWorld_6.yzzx);
  x1_11.x = dot (unity_SHBr, tmpvar_12);
  x1_11.y = dot (unity_SHBg, tmpvar_12);
  x1_11.z = dot (unity_SHBb, tmpvar_12);
  ambient_8 = max (vec3(0.0, 0.0, 0.0), (x_10 + (x1_11 + 
    (unity_SHC.xyz * ((normalWorld_6.x * normalWorld_6.x) - (normalWorld_6.y * normalWorld_6.y)))
  )));
  mediump vec3 tmpvar_13;
  tmpvar_13 = max (((1.055 * 
    pow (max (ambient_8, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  ambient_8 = tmpvar_13;
  mediump vec4 tmpvar_14;
  tmpvar_14 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_15;
  color_15 = tmpvar_14;
  tmpvar_7 = (tmpvar_13 + (unity_Lightmap_HDR.x * color_15.xyz));
  lowp vec4 c_16;
  lowp vec4 c_17;
  c_17.xyz = vec3(0.0, 0.0, 0.0);
  c_17.w = (reflcol_4.w * _ReflectColor.w);
  c_16.w = c_17.w;
  c_16.xyz = ((tmpvar_5 * _Color).xyz * tmpvar_7);
  c_1.w = c_16.w;
  c_1.xyz = (c_16.xyz + (reflcol_4.xyz * _ReflectColor.xyz));
  highp float tmpvar_18;
  tmpvar_18 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_1.xyz = mix (unity_FogColor.xyz, c_1.xyz, vec3(tmpvar_18));
  c_1.w = 1.0;
  gl_FragData[0] = c_1;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "FOG_LINEAR" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = _glesVertex.xyz;
  tmpvar_3 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
  highp vec3 tmpvar_5;
  tmpvar_5 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = unity_WorldToObject[0].xyz;
  tmpvar_6[1] = unity_WorldToObject[1].xyz;
  tmpvar_6[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_glesNormal * tmpvar_6));
  highp vec3 tmpvar_8;
  highp vec3 I_9;
  I_9 = (tmpvar_5 - _WorldSpaceCameraPos);
  tmpvar_8 = (I_9 - (2.0 * (
    dot (tmpvar_7, I_9)
   * tmpvar_7)));
  tmpvar_1 = tmpvar_8;
  highp vec2 tmpvar_10;
  tmpvar_10 = (_glesMultiTexCoord1.xy * unity_LightmapST.xy);
  tmpvar_2.xy = (tmpvar_10 + unity_LightmapST.zw);
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_7;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = (tmpvar_10 + unity_LightmapST.zw);
  xlv_TEXCOORD6 = ((tmpvar_3.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 unity_OcclusionMaskSelector;
uniform lowp vec4 unity_FogColor;
uniform mediump sampler2D unity_Lightmap;
uniform sampler2D unity_ShadowMask;
uniform mediump vec4 unity_Lightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp float atten_5;
  lowp vec3 tmpvar_6;
  lowp vec3 tmpvar_7;
  lowp vec3 lightDir_8;
  highp vec3 tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = _WorldSpaceLightPos0.xyz;
  lightDir_8 = tmpvar_10;
  tmpvar_9 = xlv_TEXCOORD1;
  tmpvar_7 = xlv_TEXCOORD2;
  lowp vec4 reflcol_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_11 = (textureCube (_Cube, tmpvar_9) * tmpvar_12.w);
  tmpvar_6 = (tmpvar_12 * _Color).xyz;
  mediump float shadowMaskAttenuation_13;
  lowp float tmpvar_14;
  tmpvar_14 = clamp (dot (texture2D (unity_ShadowMask, xlv_TEXCOORD5), unity_OcclusionMaskSelector), 0.0, 1.0);
  shadowMaskAttenuation_13 = tmpvar_14;
  atten_5 = shadowMaskAttenuation_13;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_8;
  tmpvar_1 = atten_5;
  mediump vec3 tmpvar_15;
  mediump vec3 tmpvar_16;
  tmpvar_15 = (tmpvar_2 * tmpvar_1);
  mediump vec4 tmpvar_17;
  tmpvar_17 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_18;
  color_18 = tmpvar_17;
  tmpvar_16 = (unity_Lightmap_HDR.x * color_18.xyz);
  tmpvar_2 = tmpvar_15;
  lowp vec4 c_19;
  lowp vec4 c_20;
  lowp float diff_21;
  mediump float tmpvar_22;
  tmpvar_22 = max (0.0, dot (tmpvar_7, tmpvar_3));
  diff_21 = tmpvar_22;
  c_20.xyz = ((tmpvar_6 * tmpvar_15) * diff_21);
  c_20.w = (reflcol_11.w * _ReflectColor.w);
  c_19.w = c_20.w;
  c_19.xyz = (c_20.xyz + (tmpvar_6 * tmpvar_16));
  c_4.w = c_19.w;
  c_4.xyz = (c_19.xyz + (reflcol_11.xyz * _ReflectColor.xyz));
  highp float tmpvar_23;
  tmpvar_23 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_4.xyz = mix (unity_FogColor.xyz, c_4.xyz, vec3(tmpvar_23));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "FOG_LINEAR" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = _glesVertex.xyz;
  tmpvar_3 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
  highp vec3 tmpvar_5;
  tmpvar_5 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = unity_WorldToObject[0].xyz;
  tmpvar_6[1] = unity_WorldToObject[1].xyz;
  tmpvar_6[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_glesNormal * tmpvar_6));
  highp vec3 tmpvar_8;
  highp vec3 I_9;
  I_9 = (tmpvar_5 - _WorldSpaceCameraPos);
  tmpvar_8 = (I_9 - (2.0 * (
    dot (tmpvar_7, I_9)
   * tmpvar_7)));
  tmpvar_1 = tmpvar_8;
  highp vec2 tmpvar_10;
  tmpvar_10 = (_glesMultiTexCoord1.xy * unity_LightmapST.xy);
  tmpvar_2.xy = (tmpvar_10 + unity_LightmapST.zw);
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_7;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = (tmpvar_10 + unity_LightmapST.zw);
  xlv_TEXCOORD6 = ((tmpvar_3.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 unity_OcclusionMaskSelector;
uniform lowp vec4 unity_FogColor;
uniform mediump sampler2D unity_Lightmap;
uniform sampler2D unity_ShadowMask;
uniform mediump vec4 unity_Lightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp float atten_5;
  lowp vec3 tmpvar_6;
  lowp vec3 tmpvar_7;
  lowp vec3 lightDir_8;
  highp vec3 tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = _WorldSpaceLightPos0.xyz;
  lightDir_8 = tmpvar_10;
  tmpvar_9 = xlv_TEXCOORD1;
  tmpvar_7 = xlv_TEXCOORD2;
  lowp vec4 reflcol_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_11 = (textureCube (_Cube, tmpvar_9) * tmpvar_12.w);
  tmpvar_6 = (tmpvar_12 * _Color).xyz;
  mediump float shadowMaskAttenuation_13;
  lowp float tmpvar_14;
  tmpvar_14 = clamp (dot (texture2D (unity_ShadowMask, xlv_TEXCOORD5), unity_OcclusionMaskSelector), 0.0, 1.0);
  shadowMaskAttenuation_13 = tmpvar_14;
  atten_5 = shadowMaskAttenuation_13;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_8;
  tmpvar_1 = atten_5;
  mediump vec3 tmpvar_15;
  mediump vec3 tmpvar_16;
  tmpvar_15 = (tmpvar_2 * tmpvar_1);
  mediump vec4 tmpvar_17;
  tmpvar_17 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_18;
  color_18 = tmpvar_17;
  tmpvar_16 = (unity_Lightmap_HDR.x * color_18.xyz);
  tmpvar_2 = tmpvar_15;
  lowp vec4 c_19;
  lowp vec4 c_20;
  lowp float diff_21;
  mediump float tmpvar_22;
  tmpvar_22 = max (0.0, dot (tmpvar_7, tmpvar_3));
  diff_21 = tmpvar_22;
  c_20.xyz = ((tmpvar_6 * tmpvar_15) * diff_21);
  c_20.w = (reflcol_11.w * _ReflectColor.w);
  c_19.w = c_20.w;
  c_19.xyz = (c_20.xyz + (tmpvar_6 * tmpvar_16));
  c_4.w = c_19.w;
  c_4.xyz = (c_19.xyz + (reflcol_11.xyz * _ReflectColor.xyz));
  highp float tmpvar_23;
  tmpvar_23 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_4.xyz = mix (unity_FogColor.xyz, c_4.xyz, vec3(tmpvar_23));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "FOG_LINEAR" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = _glesVertex.xyz;
  tmpvar_3 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
  highp vec3 tmpvar_5;
  tmpvar_5 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = unity_WorldToObject[0].xyz;
  tmpvar_6[1] = unity_WorldToObject[1].xyz;
  tmpvar_6[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_glesNormal * tmpvar_6));
  highp vec3 tmpvar_8;
  highp vec3 I_9;
  I_9 = (tmpvar_5 - _WorldSpaceCameraPos);
  tmpvar_8 = (I_9 - (2.0 * (
    dot (tmpvar_7, I_9)
   * tmpvar_7)));
  tmpvar_1 = tmpvar_8;
  highp vec2 tmpvar_10;
  tmpvar_10 = (_glesMultiTexCoord1.xy * unity_LightmapST.xy);
  tmpvar_2.xy = (tmpvar_10 + unity_LightmapST.zw);
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_7;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = (tmpvar_10 + unity_LightmapST.zw);
  xlv_TEXCOORD6 = ((tmpvar_3.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 unity_OcclusionMaskSelector;
uniform lowp vec4 unity_FogColor;
uniform mediump sampler2D unity_Lightmap;
uniform sampler2D unity_ShadowMask;
uniform mediump vec4 unity_Lightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp float atten_5;
  lowp vec3 tmpvar_6;
  lowp vec3 tmpvar_7;
  lowp vec3 lightDir_8;
  highp vec3 tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = _WorldSpaceLightPos0.xyz;
  lightDir_8 = tmpvar_10;
  tmpvar_9 = xlv_TEXCOORD1;
  tmpvar_7 = xlv_TEXCOORD2;
  lowp vec4 reflcol_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_11 = (textureCube (_Cube, tmpvar_9) * tmpvar_12.w);
  tmpvar_6 = (tmpvar_12 * _Color).xyz;
  mediump float shadowMaskAttenuation_13;
  lowp float tmpvar_14;
  tmpvar_14 = clamp (dot (texture2D (unity_ShadowMask, xlv_TEXCOORD5), unity_OcclusionMaskSelector), 0.0, 1.0);
  shadowMaskAttenuation_13 = tmpvar_14;
  atten_5 = shadowMaskAttenuation_13;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_8;
  tmpvar_1 = atten_5;
  mediump vec3 tmpvar_15;
  mediump vec3 tmpvar_16;
  tmpvar_15 = (tmpvar_2 * tmpvar_1);
  mediump vec4 tmpvar_17;
  tmpvar_17 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_18;
  color_18 = tmpvar_17;
  tmpvar_16 = (unity_Lightmap_HDR.x * color_18.xyz);
  tmpvar_2 = tmpvar_15;
  lowp vec4 c_19;
  lowp vec4 c_20;
  lowp float diff_21;
  mediump float tmpvar_22;
  tmpvar_22 = max (0.0, dot (tmpvar_7, tmpvar_3));
  diff_21 = tmpvar_22;
  c_20.xyz = ((tmpvar_6 * tmpvar_15) * diff_21);
  c_20.w = (reflcol_11.w * _ReflectColor.w);
  c_19.w = c_20.w;
  c_19.xyz = (c_20.xyz + (tmpvar_6 * tmpvar_16));
  c_4.w = c_19.w;
  c_4.xyz = (c_19.xyz + (reflcol_11.xyz * _ReflectColor.xyz));
  highp float tmpvar_23;
  tmpvar_23 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_4.xyz = mix (unity_FogColor.xyz, c_4.xyz, vec3(tmpvar_23));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = _glesVertex.xyz;
  tmpvar_3 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
  highp vec3 tmpvar_5;
  tmpvar_5 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = unity_WorldToObject[0].xyz;
  tmpvar_6[1] = unity_WorldToObject[1].xyz;
  tmpvar_6[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_glesNormal * tmpvar_6));
  highp vec3 tmpvar_8;
  highp vec3 I_9;
  I_9 = (tmpvar_5 - _WorldSpaceCameraPos);
  tmpvar_8 = (I_9 - (2.0 * (
    dot (tmpvar_7, I_9)
   * tmpvar_7)));
  tmpvar_1 = tmpvar_8;
  highp vec2 tmpvar_10;
  tmpvar_10 = (_glesMultiTexCoord1.xy * unity_LightmapST.xy);
  tmpvar_2.xy = (tmpvar_10 + unity_LightmapST.zw);
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_7;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = (tmpvar_10 + unity_LightmapST.zw);
  xlv_TEXCOORD6 = ((tmpvar_3.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform lowp vec4 unity_OcclusionMaskSelector;
uniform lowp vec4 unity_FogColor;
uniform mediump sampler2D unity_Lightmap;
uniform sampler2D unity_ShadowMask;
uniform mediump vec4 unity_Lightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp float atten_5;
  lowp vec3 tmpvar_6;
  lowp vec3 tmpvar_7;
  lowp vec3 lightDir_8;
  highp vec3 tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = _WorldSpaceLightPos0.xyz;
  lightDir_8 = tmpvar_10;
  tmpvar_9 = xlv_TEXCOORD1;
  tmpvar_7 = xlv_TEXCOORD2;
  lowp vec4 reflcol_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_11 = (textureCube (_Cube, tmpvar_9) * tmpvar_12.w);
  tmpvar_6 = (tmpvar_12 * _Color).xyz;
  mediump float shadowMaskAttenuation_13;
  lowp float tmpvar_14;
  tmpvar_14 = clamp (dot (texture2D (unity_ShadowMask, xlv_TEXCOORD5), unity_OcclusionMaskSelector), 0.0, 1.0);
  shadowMaskAttenuation_13 = tmpvar_14;
  atten_5 = shadowMaskAttenuation_13;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_8;
  tmpvar_1 = atten_5;
  mediump vec3 normalWorld_15;
  normalWorld_15 = tmpvar_7;
  mediump vec3 tmpvar_16;
  mediump vec3 tmpvar_17;
  tmpvar_16 = (tmpvar_2 * tmpvar_1);
  mediump vec3 ambient_18;
  mediump vec4 tmpvar_19;
  tmpvar_19.w = 1.0;
  tmpvar_19.xyz = normalWorld_15;
  mediump vec3 x_20;
  x_20.x = dot (unity_SHAr, tmpvar_19);
  x_20.y = dot (unity_SHAg, tmpvar_19);
  x_20.z = dot (unity_SHAb, tmpvar_19);
  mediump vec3 x1_21;
  mediump vec4 tmpvar_22;
  tmpvar_22 = (normalWorld_15.xyzz * normalWorld_15.yzzx);
  x1_21.x = dot (unity_SHBr, tmpvar_22);
  x1_21.y = dot (unity_SHBg, tmpvar_22);
  x1_21.z = dot (unity_SHBb, tmpvar_22);
  ambient_18 = max (vec3(0.0, 0.0, 0.0), (x_20 + (x1_21 + 
    (unity_SHC.xyz * ((normalWorld_15.x * normalWorld_15.x) - (normalWorld_15.y * normalWorld_15.y)))
  )));
  mediump vec3 tmpvar_23;
  tmpvar_23 = max (((1.055 * 
    pow (max (ambient_18, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  ambient_18 = tmpvar_23;
  mediump vec4 tmpvar_24;
  tmpvar_24 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_25;
  color_25 = tmpvar_24;
  tmpvar_17 = (tmpvar_23 + (unity_Lightmap_HDR.x * color_25.xyz));
  tmpvar_2 = tmpvar_16;
  lowp vec4 c_26;
  lowp vec4 c_27;
  lowp float diff_28;
  mediump float tmpvar_29;
  tmpvar_29 = max (0.0, dot (tmpvar_7, tmpvar_3));
  diff_28 = tmpvar_29;
  c_27.xyz = ((tmpvar_6 * tmpvar_16) * diff_28);
  c_27.w = (reflcol_11.w * _ReflectColor.w);
  c_26.w = c_27.w;
  c_26.xyz = (c_27.xyz + (tmpvar_6 * tmpvar_17));
  c_4.w = c_26.w;
  c_4.xyz = (c_26.xyz + (reflcol_11.xyz * _ReflectColor.xyz));
  highp float tmpvar_30;
  tmpvar_30 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_4.xyz = mix (unity_FogColor.xyz, c_4.xyz, vec3(tmpvar_30));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = _glesVertex.xyz;
  tmpvar_3 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
  highp vec3 tmpvar_5;
  tmpvar_5 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = unity_WorldToObject[0].xyz;
  tmpvar_6[1] = unity_WorldToObject[1].xyz;
  tmpvar_6[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_glesNormal * tmpvar_6));
  highp vec3 tmpvar_8;
  highp vec3 I_9;
  I_9 = (tmpvar_5 - _WorldSpaceCameraPos);
  tmpvar_8 = (I_9 - (2.0 * (
    dot (tmpvar_7, I_9)
   * tmpvar_7)));
  tmpvar_1 = tmpvar_8;
  highp vec2 tmpvar_10;
  tmpvar_10 = (_glesMultiTexCoord1.xy * unity_LightmapST.xy);
  tmpvar_2.xy = (tmpvar_10 + unity_LightmapST.zw);
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_7;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = (tmpvar_10 + unity_LightmapST.zw);
  xlv_TEXCOORD6 = ((tmpvar_3.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform lowp vec4 unity_OcclusionMaskSelector;
uniform lowp vec4 unity_FogColor;
uniform mediump sampler2D unity_Lightmap;
uniform sampler2D unity_ShadowMask;
uniform mediump vec4 unity_Lightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp float atten_5;
  lowp vec3 tmpvar_6;
  lowp vec3 tmpvar_7;
  lowp vec3 lightDir_8;
  highp vec3 tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = _WorldSpaceLightPos0.xyz;
  lightDir_8 = tmpvar_10;
  tmpvar_9 = xlv_TEXCOORD1;
  tmpvar_7 = xlv_TEXCOORD2;
  lowp vec4 reflcol_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_11 = (textureCube (_Cube, tmpvar_9) * tmpvar_12.w);
  tmpvar_6 = (tmpvar_12 * _Color).xyz;
  mediump float shadowMaskAttenuation_13;
  lowp float tmpvar_14;
  tmpvar_14 = clamp (dot (texture2D (unity_ShadowMask, xlv_TEXCOORD5), unity_OcclusionMaskSelector), 0.0, 1.0);
  shadowMaskAttenuation_13 = tmpvar_14;
  atten_5 = shadowMaskAttenuation_13;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_8;
  tmpvar_1 = atten_5;
  mediump vec3 normalWorld_15;
  normalWorld_15 = tmpvar_7;
  mediump vec3 tmpvar_16;
  mediump vec3 tmpvar_17;
  tmpvar_16 = (tmpvar_2 * tmpvar_1);
  mediump vec3 ambient_18;
  mediump vec4 tmpvar_19;
  tmpvar_19.w = 1.0;
  tmpvar_19.xyz = normalWorld_15;
  mediump vec3 x_20;
  x_20.x = dot (unity_SHAr, tmpvar_19);
  x_20.y = dot (unity_SHAg, tmpvar_19);
  x_20.z = dot (unity_SHAb, tmpvar_19);
  mediump vec3 x1_21;
  mediump vec4 tmpvar_22;
  tmpvar_22 = (normalWorld_15.xyzz * normalWorld_15.yzzx);
  x1_21.x = dot (unity_SHBr, tmpvar_22);
  x1_21.y = dot (unity_SHBg, tmpvar_22);
  x1_21.z = dot (unity_SHBb, tmpvar_22);
  ambient_18 = max (vec3(0.0, 0.0, 0.0), (x_20 + (x1_21 + 
    (unity_SHC.xyz * ((normalWorld_15.x * normalWorld_15.x) - (normalWorld_15.y * normalWorld_15.y)))
  )));
  mediump vec3 tmpvar_23;
  tmpvar_23 = max (((1.055 * 
    pow (max (ambient_18, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  ambient_18 = tmpvar_23;
  mediump vec4 tmpvar_24;
  tmpvar_24 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_25;
  color_25 = tmpvar_24;
  tmpvar_17 = (tmpvar_23 + (unity_Lightmap_HDR.x * color_25.xyz));
  tmpvar_2 = tmpvar_16;
  lowp vec4 c_26;
  lowp vec4 c_27;
  lowp float diff_28;
  mediump float tmpvar_29;
  tmpvar_29 = max (0.0, dot (tmpvar_7, tmpvar_3));
  diff_28 = tmpvar_29;
  c_27.xyz = ((tmpvar_6 * tmpvar_16) * diff_28);
  c_27.w = (reflcol_11.w * _ReflectColor.w);
  c_26.w = c_27.w;
  c_26.xyz = (c_27.xyz + (tmpvar_6 * tmpvar_17));
  c_4.w = c_26.w;
  c_4.xyz = (c_26.xyz + (reflcol_11.xyz * _ReflectColor.xyz));
  highp float tmpvar_30;
  tmpvar_30 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_4.xyz = mix (unity_FogColor.xyz, c_4.xyz, vec3(tmpvar_30));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = _glesVertex.xyz;
  tmpvar_3 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
  highp vec3 tmpvar_5;
  tmpvar_5 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = unity_WorldToObject[0].xyz;
  tmpvar_6[1] = unity_WorldToObject[1].xyz;
  tmpvar_6[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_glesNormal * tmpvar_6));
  highp vec3 tmpvar_8;
  highp vec3 I_9;
  I_9 = (tmpvar_5 - _WorldSpaceCameraPos);
  tmpvar_8 = (I_9 - (2.0 * (
    dot (tmpvar_7, I_9)
   * tmpvar_7)));
  tmpvar_1 = tmpvar_8;
  highp vec2 tmpvar_10;
  tmpvar_10 = (_glesMultiTexCoord1.xy * unity_LightmapST.xy);
  tmpvar_2.xy = (tmpvar_10 + unity_LightmapST.zw);
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_7;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = (tmpvar_10 + unity_LightmapST.zw);
  xlv_TEXCOORD6 = ((tmpvar_3.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform lowp vec4 unity_OcclusionMaskSelector;
uniform lowp vec4 unity_FogColor;
uniform mediump sampler2D unity_Lightmap;
uniform sampler2D unity_ShadowMask;
uniform mediump vec4 unity_Lightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp float atten_5;
  lowp vec3 tmpvar_6;
  lowp vec3 tmpvar_7;
  lowp vec3 lightDir_8;
  highp vec3 tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = _WorldSpaceLightPos0.xyz;
  lightDir_8 = tmpvar_10;
  tmpvar_9 = xlv_TEXCOORD1;
  tmpvar_7 = xlv_TEXCOORD2;
  lowp vec4 reflcol_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_11 = (textureCube (_Cube, tmpvar_9) * tmpvar_12.w);
  tmpvar_6 = (tmpvar_12 * _Color).xyz;
  mediump float shadowMaskAttenuation_13;
  lowp float tmpvar_14;
  tmpvar_14 = clamp (dot (texture2D (unity_ShadowMask, xlv_TEXCOORD5), unity_OcclusionMaskSelector), 0.0, 1.0);
  shadowMaskAttenuation_13 = tmpvar_14;
  atten_5 = shadowMaskAttenuation_13;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_8;
  tmpvar_1 = atten_5;
  mediump vec3 normalWorld_15;
  normalWorld_15 = tmpvar_7;
  mediump vec3 tmpvar_16;
  mediump vec3 tmpvar_17;
  tmpvar_16 = (tmpvar_2 * tmpvar_1);
  mediump vec3 ambient_18;
  mediump vec4 tmpvar_19;
  tmpvar_19.w = 1.0;
  tmpvar_19.xyz = normalWorld_15;
  mediump vec3 x_20;
  x_20.x = dot (unity_SHAr, tmpvar_19);
  x_20.y = dot (unity_SHAg, tmpvar_19);
  x_20.z = dot (unity_SHAb, tmpvar_19);
  mediump vec3 x1_21;
  mediump vec4 tmpvar_22;
  tmpvar_22 = (normalWorld_15.xyzz * normalWorld_15.yzzx);
  x1_21.x = dot (unity_SHBr, tmpvar_22);
  x1_21.y = dot (unity_SHBg, tmpvar_22);
  x1_21.z = dot (unity_SHBb, tmpvar_22);
  ambient_18 = max (vec3(0.0, 0.0, 0.0), (x_20 + (x1_21 + 
    (unity_SHC.xyz * ((normalWorld_15.x * normalWorld_15.x) - (normalWorld_15.y * normalWorld_15.y)))
  )));
  mediump vec3 tmpvar_23;
  tmpvar_23 = max (((1.055 * 
    pow (max (ambient_18, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  ambient_18 = tmpvar_23;
  mediump vec4 tmpvar_24;
  tmpvar_24 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_25;
  color_25 = tmpvar_24;
  tmpvar_17 = (tmpvar_23 + (unity_Lightmap_HDR.x * color_25.xyz));
  tmpvar_2 = tmpvar_16;
  lowp vec4 c_26;
  lowp vec4 c_27;
  lowp float diff_28;
  mediump float tmpvar_29;
  tmpvar_29 = max (0.0, dot (tmpvar_7, tmpvar_3));
  diff_28 = tmpvar_29;
  c_27.xyz = ((tmpvar_6 * tmpvar_16) * diff_28);
  c_27.w = (reflcol_11.w * _ReflectColor.w);
  c_26.w = c_27.w;
  c_26.xyz = (c_27.xyz + (tmpvar_6 * tmpvar_17));
  c_4.w = c_26.w;
  c_4.xyz = (c_26.xyz + (reflcol_11.xyz * _ReflectColor.xyz));
  highp float tmpvar_30;
  tmpvar_30 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_4.xyz = mix (unity_FogColor.xyz, c_4.xyz, vec3(tmpvar_30));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" "SHADOWS_SHADOWMASK" "FOG_LINEAR" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = _glesVertex.xyz;
  tmpvar_3 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
  highp vec3 tmpvar_5;
  tmpvar_5 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = unity_WorldToObject[0].xyz;
  tmpvar_6[1] = unity_WorldToObject[1].xyz;
  tmpvar_6[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_glesNormal * tmpvar_6));
  highp vec3 tmpvar_8;
  highp vec3 I_9;
  I_9 = (tmpvar_5 - _WorldSpaceCameraPos);
  tmpvar_8 = (I_9 - (2.0 * (
    dot (tmpvar_7, I_9)
   * tmpvar_7)));
  tmpvar_1 = tmpvar_8;
  highp vec2 tmpvar_10;
  tmpvar_10 = (_glesMultiTexCoord1.xy * unity_LightmapST.xy);
  tmpvar_2.xy = (tmpvar_10 + unity_LightmapST.zw);
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_7;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = (tmpvar_10 + unity_LightmapST.zw);
  xlv_TEXCOORD6 = ((tmpvar_3.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 unity_OcclusionMaskSelector;
uniform lowp vec4 unity_FogColor;
uniform mediump sampler2D unity_Lightmap;
uniform sampler2D unity_ShadowMask;
uniform mediump vec4 unity_Lightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp float atten_5;
  lowp vec3 tmpvar_6;
  lowp vec3 tmpvar_7;
  lowp vec3 lightDir_8;
  highp vec3 tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = _WorldSpaceLightPos0.xyz;
  lightDir_8 = tmpvar_10;
  tmpvar_9 = xlv_TEXCOORD1;
  tmpvar_7 = xlv_TEXCOORD2;
  lowp vec4 reflcol_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_11 = (textureCube (_Cube, tmpvar_9) * tmpvar_12.w);
  tmpvar_6 = (tmpvar_12 * _Color).xyz;
  mediump float shadowMaskAttenuation_13;
  lowp float tmpvar_14;
  tmpvar_14 = clamp (dot (texture2D (unity_ShadowMask, xlv_TEXCOORD5), unity_OcclusionMaskSelector), 0.0, 1.0);
  shadowMaskAttenuation_13 = tmpvar_14;
  atten_5 = shadowMaskAttenuation_13;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_8;
  tmpvar_1 = atten_5;
  mediump vec3 tmpvar_15;
  mediump vec3 tmpvar_16;
  tmpvar_15 = (tmpvar_2 * tmpvar_1);
  mediump vec4 tmpvar_17;
  tmpvar_17 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_18;
  color_18 = tmpvar_17;
  tmpvar_16 = (unity_Lightmap_HDR.x * color_18.xyz);
  tmpvar_2 = tmpvar_15;
  lowp vec4 c_19;
  lowp vec4 c_20;
  lowp float diff_21;
  mediump float tmpvar_22;
  tmpvar_22 = max (0.0, dot (tmpvar_7, tmpvar_3));
  diff_21 = tmpvar_22;
  c_20.xyz = ((tmpvar_6 * tmpvar_15) * diff_21);
  c_20.w = (reflcol_11.w * _ReflectColor.w);
  c_19.w = c_20.w;
  c_19.xyz = (c_20.xyz + (tmpvar_6 * tmpvar_16));
  c_4.w = c_19.w;
  c_4.xyz = (c_19.xyz + (reflcol_11.xyz * _ReflectColor.xyz));
  highp float tmpvar_23;
  tmpvar_23 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_4.xyz = mix (unity_FogColor.xyz, c_4.xyz, vec3(tmpvar_23));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" "SHADOWS_SHADOWMASK" "FOG_LINEAR" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = _glesVertex.xyz;
  tmpvar_3 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
  highp vec3 tmpvar_5;
  tmpvar_5 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = unity_WorldToObject[0].xyz;
  tmpvar_6[1] = unity_WorldToObject[1].xyz;
  tmpvar_6[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_glesNormal * tmpvar_6));
  highp vec3 tmpvar_8;
  highp vec3 I_9;
  I_9 = (tmpvar_5 - _WorldSpaceCameraPos);
  tmpvar_8 = (I_9 - (2.0 * (
    dot (tmpvar_7, I_9)
   * tmpvar_7)));
  tmpvar_1 = tmpvar_8;
  highp vec2 tmpvar_10;
  tmpvar_10 = (_glesMultiTexCoord1.xy * unity_LightmapST.xy);
  tmpvar_2.xy = (tmpvar_10 + unity_LightmapST.zw);
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_7;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = (tmpvar_10 + unity_LightmapST.zw);
  xlv_TEXCOORD6 = ((tmpvar_3.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 unity_OcclusionMaskSelector;
uniform lowp vec4 unity_FogColor;
uniform mediump sampler2D unity_Lightmap;
uniform sampler2D unity_ShadowMask;
uniform mediump vec4 unity_Lightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp float atten_5;
  lowp vec3 tmpvar_6;
  lowp vec3 tmpvar_7;
  lowp vec3 lightDir_8;
  highp vec3 tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = _WorldSpaceLightPos0.xyz;
  lightDir_8 = tmpvar_10;
  tmpvar_9 = xlv_TEXCOORD1;
  tmpvar_7 = xlv_TEXCOORD2;
  lowp vec4 reflcol_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_11 = (textureCube (_Cube, tmpvar_9) * tmpvar_12.w);
  tmpvar_6 = (tmpvar_12 * _Color).xyz;
  mediump float shadowMaskAttenuation_13;
  lowp float tmpvar_14;
  tmpvar_14 = clamp (dot (texture2D (unity_ShadowMask, xlv_TEXCOORD5), unity_OcclusionMaskSelector), 0.0, 1.0);
  shadowMaskAttenuation_13 = tmpvar_14;
  atten_5 = shadowMaskAttenuation_13;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_8;
  tmpvar_1 = atten_5;
  mediump vec3 tmpvar_15;
  mediump vec3 tmpvar_16;
  tmpvar_15 = (tmpvar_2 * tmpvar_1);
  mediump vec4 tmpvar_17;
  tmpvar_17 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_18;
  color_18 = tmpvar_17;
  tmpvar_16 = (unity_Lightmap_HDR.x * color_18.xyz);
  tmpvar_2 = tmpvar_15;
  lowp vec4 c_19;
  lowp vec4 c_20;
  lowp float diff_21;
  mediump float tmpvar_22;
  tmpvar_22 = max (0.0, dot (tmpvar_7, tmpvar_3));
  diff_21 = tmpvar_22;
  c_20.xyz = ((tmpvar_6 * tmpvar_15) * diff_21);
  c_20.w = (reflcol_11.w * _ReflectColor.w);
  c_19.w = c_20.w;
  c_19.xyz = (c_20.xyz + (tmpvar_6 * tmpvar_16));
  c_4.w = c_19.w;
  c_4.xyz = (c_19.xyz + (reflcol_11.xyz * _ReflectColor.xyz));
  highp float tmpvar_23;
  tmpvar_23 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_4.xyz = mix (unity_FogColor.xyz, c_4.xyz, vec3(tmpvar_23));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" "SHADOWS_SHADOWMASK" "FOG_LINEAR" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = _glesVertex.xyz;
  tmpvar_3 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
  highp vec3 tmpvar_5;
  tmpvar_5 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = unity_WorldToObject[0].xyz;
  tmpvar_6[1] = unity_WorldToObject[1].xyz;
  tmpvar_6[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_glesNormal * tmpvar_6));
  highp vec3 tmpvar_8;
  highp vec3 I_9;
  I_9 = (tmpvar_5 - _WorldSpaceCameraPos);
  tmpvar_8 = (I_9 - (2.0 * (
    dot (tmpvar_7, I_9)
   * tmpvar_7)));
  tmpvar_1 = tmpvar_8;
  highp vec2 tmpvar_10;
  tmpvar_10 = (_glesMultiTexCoord1.xy * unity_LightmapST.xy);
  tmpvar_2.xy = (tmpvar_10 + unity_LightmapST.zw);
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_7;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = (tmpvar_10 + unity_LightmapST.zw);
  xlv_TEXCOORD6 = ((tmpvar_3.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 unity_OcclusionMaskSelector;
uniform lowp vec4 unity_FogColor;
uniform mediump sampler2D unity_Lightmap;
uniform sampler2D unity_ShadowMask;
uniform mediump vec4 unity_Lightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp float atten_5;
  lowp vec3 tmpvar_6;
  lowp vec3 tmpvar_7;
  lowp vec3 lightDir_8;
  highp vec3 tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = _WorldSpaceLightPos0.xyz;
  lightDir_8 = tmpvar_10;
  tmpvar_9 = xlv_TEXCOORD1;
  tmpvar_7 = xlv_TEXCOORD2;
  lowp vec4 reflcol_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_11 = (textureCube (_Cube, tmpvar_9) * tmpvar_12.w);
  tmpvar_6 = (tmpvar_12 * _Color).xyz;
  mediump float shadowMaskAttenuation_13;
  lowp float tmpvar_14;
  tmpvar_14 = clamp (dot (texture2D (unity_ShadowMask, xlv_TEXCOORD5), unity_OcclusionMaskSelector), 0.0, 1.0);
  shadowMaskAttenuation_13 = tmpvar_14;
  atten_5 = shadowMaskAttenuation_13;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_8;
  tmpvar_1 = atten_5;
  mediump vec3 tmpvar_15;
  mediump vec3 tmpvar_16;
  tmpvar_15 = (tmpvar_2 * tmpvar_1);
  mediump vec4 tmpvar_17;
  tmpvar_17 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_18;
  color_18 = tmpvar_17;
  tmpvar_16 = (unity_Lightmap_HDR.x * color_18.xyz);
  tmpvar_2 = tmpvar_15;
  lowp vec4 c_19;
  lowp vec4 c_20;
  lowp float diff_21;
  mediump float tmpvar_22;
  tmpvar_22 = max (0.0, dot (tmpvar_7, tmpvar_3));
  diff_21 = tmpvar_22;
  c_20.xyz = ((tmpvar_6 * tmpvar_15) * diff_21);
  c_20.w = (reflcol_11.w * _ReflectColor.w);
  c_19.w = c_20.w;
  c_19.xyz = (c_20.xyz + (tmpvar_6 * tmpvar_16));
  c_4.w = c_19.w;
  c_4.xyz = (c_19.xyz + (reflcol_11.xyz * _ReflectColor.xyz));
  highp float tmpvar_23;
  tmpvar_23 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_4.xyz = mix (unity_FogColor.xyz, c_4.xyz, vec3(tmpvar_23));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = _glesVertex.xyz;
  tmpvar_3 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
  highp vec3 tmpvar_5;
  tmpvar_5 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = unity_WorldToObject[0].xyz;
  tmpvar_6[1] = unity_WorldToObject[1].xyz;
  tmpvar_6[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_glesNormal * tmpvar_6));
  highp vec3 tmpvar_8;
  highp vec3 I_9;
  I_9 = (tmpvar_5 - _WorldSpaceCameraPos);
  tmpvar_8 = (I_9 - (2.0 * (
    dot (tmpvar_7, I_9)
   * tmpvar_7)));
  tmpvar_1 = tmpvar_8;
  highp vec2 tmpvar_10;
  tmpvar_10 = (_glesMultiTexCoord1.xy * unity_LightmapST.xy);
  tmpvar_2.xy = (tmpvar_10 + unity_LightmapST.zw);
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_7;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = (tmpvar_10 + unity_LightmapST.zw);
  xlv_TEXCOORD6 = ((tmpvar_3.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform lowp vec4 unity_OcclusionMaskSelector;
uniform lowp vec4 unity_FogColor;
uniform mediump sampler2D unity_Lightmap;
uniform sampler2D unity_ShadowMask;
uniform mediump vec4 unity_Lightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp float atten_5;
  lowp vec3 tmpvar_6;
  lowp vec3 tmpvar_7;
  lowp vec3 lightDir_8;
  highp vec3 tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = _WorldSpaceLightPos0.xyz;
  lightDir_8 = tmpvar_10;
  tmpvar_9 = xlv_TEXCOORD1;
  tmpvar_7 = xlv_TEXCOORD2;
  lowp vec4 reflcol_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_11 = (textureCube (_Cube, tmpvar_9) * tmpvar_12.w);
  tmpvar_6 = (tmpvar_12 * _Color).xyz;
  mediump float shadowMaskAttenuation_13;
  lowp float tmpvar_14;
  tmpvar_14 = clamp (dot (texture2D (unity_ShadowMask, xlv_TEXCOORD5), unity_OcclusionMaskSelector), 0.0, 1.0);
  shadowMaskAttenuation_13 = tmpvar_14;
  atten_5 = shadowMaskAttenuation_13;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_8;
  tmpvar_1 = atten_5;
  mediump vec3 normalWorld_15;
  normalWorld_15 = tmpvar_7;
  mediump vec3 tmpvar_16;
  mediump vec3 tmpvar_17;
  tmpvar_16 = (tmpvar_2 * tmpvar_1);
  mediump vec3 ambient_18;
  mediump vec4 tmpvar_19;
  tmpvar_19.w = 1.0;
  tmpvar_19.xyz = normalWorld_15;
  mediump vec3 x_20;
  x_20.x = dot (unity_SHAr, tmpvar_19);
  x_20.y = dot (unity_SHAg, tmpvar_19);
  x_20.z = dot (unity_SHAb, tmpvar_19);
  mediump vec3 x1_21;
  mediump vec4 tmpvar_22;
  tmpvar_22 = (normalWorld_15.xyzz * normalWorld_15.yzzx);
  x1_21.x = dot (unity_SHBr, tmpvar_22);
  x1_21.y = dot (unity_SHBg, tmpvar_22);
  x1_21.z = dot (unity_SHBb, tmpvar_22);
  ambient_18 = max (vec3(0.0, 0.0, 0.0), (x_20 + (x1_21 + 
    (unity_SHC.xyz * ((normalWorld_15.x * normalWorld_15.x) - (normalWorld_15.y * normalWorld_15.y)))
  )));
  mediump vec3 tmpvar_23;
  tmpvar_23 = max (((1.055 * 
    pow (max (ambient_18, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  ambient_18 = tmpvar_23;
  mediump vec4 tmpvar_24;
  tmpvar_24 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_25;
  color_25 = tmpvar_24;
  tmpvar_17 = (tmpvar_23 + (unity_Lightmap_HDR.x * color_25.xyz));
  tmpvar_2 = tmpvar_16;
  lowp vec4 c_26;
  lowp vec4 c_27;
  lowp float diff_28;
  mediump float tmpvar_29;
  tmpvar_29 = max (0.0, dot (tmpvar_7, tmpvar_3));
  diff_28 = tmpvar_29;
  c_27.xyz = ((tmpvar_6 * tmpvar_16) * diff_28);
  c_27.w = (reflcol_11.w * _ReflectColor.w);
  c_26.w = c_27.w;
  c_26.xyz = (c_27.xyz + (tmpvar_6 * tmpvar_17));
  c_4.w = c_26.w;
  c_4.xyz = (c_26.xyz + (reflcol_11.xyz * _ReflectColor.xyz));
  highp float tmpvar_30;
  tmpvar_30 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_4.xyz = mix (unity_FogColor.xyz, c_4.xyz, vec3(tmpvar_30));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = _glesVertex.xyz;
  tmpvar_3 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
  highp vec3 tmpvar_5;
  tmpvar_5 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = unity_WorldToObject[0].xyz;
  tmpvar_6[1] = unity_WorldToObject[1].xyz;
  tmpvar_6[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_glesNormal * tmpvar_6));
  highp vec3 tmpvar_8;
  highp vec3 I_9;
  I_9 = (tmpvar_5 - _WorldSpaceCameraPos);
  tmpvar_8 = (I_9 - (2.0 * (
    dot (tmpvar_7, I_9)
   * tmpvar_7)));
  tmpvar_1 = tmpvar_8;
  highp vec2 tmpvar_10;
  tmpvar_10 = (_glesMultiTexCoord1.xy * unity_LightmapST.xy);
  tmpvar_2.xy = (tmpvar_10 + unity_LightmapST.zw);
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_7;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = (tmpvar_10 + unity_LightmapST.zw);
  xlv_TEXCOORD6 = ((tmpvar_3.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform lowp vec4 unity_OcclusionMaskSelector;
uniform lowp vec4 unity_FogColor;
uniform mediump sampler2D unity_Lightmap;
uniform sampler2D unity_ShadowMask;
uniform mediump vec4 unity_Lightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp float atten_5;
  lowp vec3 tmpvar_6;
  lowp vec3 tmpvar_7;
  lowp vec3 lightDir_8;
  highp vec3 tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = _WorldSpaceLightPos0.xyz;
  lightDir_8 = tmpvar_10;
  tmpvar_9 = xlv_TEXCOORD1;
  tmpvar_7 = xlv_TEXCOORD2;
  lowp vec4 reflcol_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_11 = (textureCube (_Cube, tmpvar_9) * tmpvar_12.w);
  tmpvar_6 = (tmpvar_12 * _Color).xyz;
  mediump float shadowMaskAttenuation_13;
  lowp float tmpvar_14;
  tmpvar_14 = clamp (dot (texture2D (unity_ShadowMask, xlv_TEXCOORD5), unity_OcclusionMaskSelector), 0.0, 1.0);
  shadowMaskAttenuation_13 = tmpvar_14;
  atten_5 = shadowMaskAttenuation_13;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_8;
  tmpvar_1 = atten_5;
  mediump vec3 normalWorld_15;
  normalWorld_15 = tmpvar_7;
  mediump vec3 tmpvar_16;
  mediump vec3 tmpvar_17;
  tmpvar_16 = (tmpvar_2 * tmpvar_1);
  mediump vec3 ambient_18;
  mediump vec4 tmpvar_19;
  tmpvar_19.w = 1.0;
  tmpvar_19.xyz = normalWorld_15;
  mediump vec3 x_20;
  x_20.x = dot (unity_SHAr, tmpvar_19);
  x_20.y = dot (unity_SHAg, tmpvar_19);
  x_20.z = dot (unity_SHAb, tmpvar_19);
  mediump vec3 x1_21;
  mediump vec4 tmpvar_22;
  tmpvar_22 = (normalWorld_15.xyzz * normalWorld_15.yzzx);
  x1_21.x = dot (unity_SHBr, tmpvar_22);
  x1_21.y = dot (unity_SHBg, tmpvar_22);
  x1_21.z = dot (unity_SHBb, tmpvar_22);
  ambient_18 = max (vec3(0.0, 0.0, 0.0), (x_20 + (x1_21 + 
    (unity_SHC.xyz * ((normalWorld_15.x * normalWorld_15.x) - (normalWorld_15.y * normalWorld_15.y)))
  )));
  mediump vec3 tmpvar_23;
  tmpvar_23 = max (((1.055 * 
    pow (max (ambient_18, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  ambient_18 = tmpvar_23;
  mediump vec4 tmpvar_24;
  tmpvar_24 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_25;
  color_25 = tmpvar_24;
  tmpvar_17 = (tmpvar_23 + (unity_Lightmap_HDR.x * color_25.xyz));
  tmpvar_2 = tmpvar_16;
  lowp vec4 c_26;
  lowp vec4 c_27;
  lowp float diff_28;
  mediump float tmpvar_29;
  tmpvar_29 = max (0.0, dot (tmpvar_7, tmpvar_3));
  diff_28 = tmpvar_29;
  c_27.xyz = ((tmpvar_6 * tmpvar_16) * diff_28);
  c_27.w = (reflcol_11.w * _ReflectColor.w);
  c_26.w = c_27.w;
  c_26.xyz = (c_27.xyz + (tmpvar_6 * tmpvar_17));
  c_4.w = c_26.w;
  c_4.xyz = (c_26.xyz + (reflcol_11.xyz * _ReflectColor.xyz));
  highp float tmpvar_30;
  tmpvar_30 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_4.xyz = mix (unity_FogColor.xyz, c_4.xyz, vec3(tmpvar_30));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = _glesVertex.xyz;
  tmpvar_3 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
  highp vec3 tmpvar_5;
  tmpvar_5 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = unity_WorldToObject[0].xyz;
  tmpvar_6[1] = unity_WorldToObject[1].xyz;
  tmpvar_6[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_glesNormal * tmpvar_6));
  highp vec3 tmpvar_8;
  highp vec3 I_9;
  I_9 = (tmpvar_5 - _WorldSpaceCameraPos);
  tmpvar_8 = (I_9 - (2.0 * (
    dot (tmpvar_7, I_9)
   * tmpvar_7)));
  tmpvar_1 = tmpvar_8;
  highp vec2 tmpvar_10;
  tmpvar_10 = (_glesMultiTexCoord1.xy * unity_LightmapST.xy);
  tmpvar_2.xy = (tmpvar_10 + unity_LightmapST.zw);
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_7;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = (tmpvar_10 + unity_LightmapST.zw);
  xlv_TEXCOORD6 = ((tmpvar_3.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform lowp vec4 unity_OcclusionMaskSelector;
uniform lowp vec4 unity_FogColor;
uniform mediump sampler2D unity_Lightmap;
uniform sampler2D unity_ShadowMask;
uniform mediump vec4 unity_Lightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp float atten_5;
  lowp vec3 tmpvar_6;
  lowp vec3 tmpvar_7;
  lowp vec3 lightDir_8;
  highp vec3 tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = _WorldSpaceLightPos0.xyz;
  lightDir_8 = tmpvar_10;
  tmpvar_9 = xlv_TEXCOORD1;
  tmpvar_7 = xlv_TEXCOORD2;
  lowp vec4 reflcol_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_11 = (textureCube (_Cube, tmpvar_9) * tmpvar_12.w);
  tmpvar_6 = (tmpvar_12 * _Color).xyz;
  mediump float shadowMaskAttenuation_13;
  lowp float tmpvar_14;
  tmpvar_14 = clamp (dot (texture2D (unity_ShadowMask, xlv_TEXCOORD5), unity_OcclusionMaskSelector), 0.0, 1.0);
  shadowMaskAttenuation_13 = tmpvar_14;
  atten_5 = shadowMaskAttenuation_13;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_8;
  tmpvar_1 = atten_5;
  mediump vec3 normalWorld_15;
  normalWorld_15 = tmpvar_7;
  mediump vec3 tmpvar_16;
  mediump vec3 tmpvar_17;
  tmpvar_16 = (tmpvar_2 * tmpvar_1);
  mediump vec3 ambient_18;
  mediump vec4 tmpvar_19;
  tmpvar_19.w = 1.0;
  tmpvar_19.xyz = normalWorld_15;
  mediump vec3 x_20;
  x_20.x = dot (unity_SHAr, tmpvar_19);
  x_20.y = dot (unity_SHAg, tmpvar_19);
  x_20.z = dot (unity_SHAb, tmpvar_19);
  mediump vec3 x1_21;
  mediump vec4 tmpvar_22;
  tmpvar_22 = (normalWorld_15.xyzz * normalWorld_15.yzzx);
  x1_21.x = dot (unity_SHBr, tmpvar_22);
  x1_21.y = dot (unity_SHBg, tmpvar_22);
  x1_21.z = dot (unity_SHBb, tmpvar_22);
  ambient_18 = max (vec3(0.0, 0.0, 0.0), (x_20 + (x1_21 + 
    (unity_SHC.xyz * ((normalWorld_15.x * normalWorld_15.x) - (normalWorld_15.y * normalWorld_15.y)))
  )));
  mediump vec3 tmpvar_23;
  tmpvar_23 = max (((1.055 * 
    pow (max (ambient_18, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  ambient_18 = tmpvar_23;
  mediump vec4 tmpvar_24;
  tmpvar_24 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_25;
  color_25 = tmpvar_24;
  tmpvar_17 = (tmpvar_23 + (unity_Lightmap_HDR.x * color_25.xyz));
  tmpvar_2 = tmpvar_16;
  lowp vec4 c_26;
  lowp vec4 c_27;
  lowp float diff_28;
  mediump float tmpvar_29;
  tmpvar_29 = max (0.0, dot (tmpvar_7, tmpvar_3));
  diff_28 = tmpvar_29;
  c_27.xyz = ((tmpvar_6 * tmpvar_16) * diff_28);
  c_27.w = (reflcol_11.w * _ReflectColor.w);
  c_26.w = c_27.w;
  c_26.xyz = (c_27.xyz + (tmpvar_6 * tmpvar_17));
  c_4.w = c_26.w;
  c_4.xyz = (c_26.xyz + (reflcol_11.xyz * _ReflectColor.xyz));
  highp float tmpvar_30;
  tmpvar_30 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_4.xyz = mix (unity_FogColor.xyz, c_4.xyz, vec3(tmpvar_30));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "FOG_LINEAR" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  tmpvar_5.w = 1.0;
  tmpvar_5.xyz = _glesVertex.xyz;
  tmpvar_4 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
  highp vec3 tmpvar_6;
  tmpvar_6 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_7;
  tmpvar_7[0] = unity_WorldToObject[0].xyz;
  tmpvar_7[1] = unity_WorldToObject[1].xyz;
  tmpvar_7[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_glesNormal * tmpvar_7));
  highp vec3 tmpvar_9;
  highp vec3 I_10;
  I_10 = (tmpvar_6 - _WorldSpaceCameraPos);
  tmpvar_9 = (I_10 - (2.0 * (
    dot (tmpvar_8, I_10)
   * tmpvar_8)));
  tmpvar_1 = tmpvar_9;
  gl_Position = tmpvar_4;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_8;
  xlv_TEXCOORD3 = tmpvar_6;
  xlv_TEXCOORD5 = tmpvar_2;
  xlv_TEXCOORD6 = ((tmpvar_4.z * unity_FogParams.z) + unity_FogParams.w);
  xlv_TEXCOORD7 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 unity_WorldToShadow[4];
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform lowp vec4 unity_FogColor;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp float atten_5;
  lowp vec3 tmpvar_6;
  lowp vec3 lightDir_7;
  highp vec3 tmpvar_8;
  mediump vec3 tmpvar_9;
  tmpvar_9 = _WorldSpaceLightPos0.xyz;
  lightDir_7 = tmpvar_9;
  tmpvar_8 = xlv_TEXCOORD1;
  tmpvar_6 = xlv_TEXCOORD2;
  lowp vec4 reflcol_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_10 = (textureCube (_Cube, tmpvar_8) * tmpvar_11.w);
  mediump float realtimeShadowAttenuation_12;
  highp vec4 v_13;
  v_13.x = unity_MatrixV[0].z;
  v_13.y = unity_MatrixV[1].z;
  v_13.z = unity_MatrixV[2].z;
  v_13.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_14;
  tmpvar_14 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_15;
  highp float tmpvar_16;
  tmpvar_16 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_13.xyz), sqrt(dot (tmpvar_14, tmpvar_14)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_15 = tmpvar_16;
  highp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = xlv_TEXCOORD3;
  lowp float tmpvar_18;
  highp vec4 shadowCoord_19;
  shadowCoord_19 = (unity_WorldToShadow[0] * tmpvar_17);
  highp float lightShadowDataX_20;
  mediump float tmpvar_21;
  tmpvar_21 = _LightShadowData.x;
  lightShadowDataX_20 = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = max (float((texture2D (_ShadowMapTexture, shadowCoord_19.xy).x > shadowCoord_19.z)), lightShadowDataX_20);
  tmpvar_18 = tmpvar_22;
  realtimeShadowAttenuation_12 = tmpvar_18;
  mediump float tmpvar_23;
  tmpvar_23 = clamp ((realtimeShadowAttenuation_12 + tmpvar_15), 0.0, 1.0);
  atten_5 = tmpvar_23;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_7;
  tmpvar_1 = atten_5;
  mediump vec3 tmpvar_24;
  tmpvar_24 = (tmpvar_2 * tmpvar_1);
  tmpvar_2 = tmpvar_24;
  lowp vec4 c_25;
  lowp vec4 c_26;
  lowp float diff_27;
  mediump float tmpvar_28;
  tmpvar_28 = max (0.0, dot (tmpvar_6, tmpvar_3));
  diff_27 = tmpvar_28;
  c_26.xyz = (((tmpvar_11 * _Color).xyz * tmpvar_24) * diff_27);
  c_26.w = (reflcol_10.w * _ReflectColor.w);
  c_25.w = c_26.w;
  c_25.xyz = c_26.xyz;
  c_4.w = c_25.w;
  c_4.xyz = (c_26.xyz + (reflcol_10.xyz * _ReflectColor.xyz));
  highp float tmpvar_29;
  tmpvar_29 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_4.xyz = mix (unity_FogColor.xyz, c_4.xyz, vec3(tmpvar_29));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "FOG_LINEAR" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  tmpvar_5.w = 1.0;
  tmpvar_5.xyz = _glesVertex.xyz;
  tmpvar_4 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
  highp vec3 tmpvar_6;
  tmpvar_6 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_7;
  tmpvar_7[0] = unity_WorldToObject[0].xyz;
  tmpvar_7[1] = unity_WorldToObject[1].xyz;
  tmpvar_7[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_glesNormal * tmpvar_7));
  highp vec3 tmpvar_9;
  highp vec3 I_10;
  I_10 = (tmpvar_6 - _WorldSpaceCameraPos);
  tmpvar_9 = (I_10 - (2.0 * (
    dot (tmpvar_8, I_10)
   * tmpvar_8)));
  tmpvar_1 = tmpvar_9;
  gl_Position = tmpvar_4;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_8;
  xlv_TEXCOORD3 = tmpvar_6;
  xlv_TEXCOORD5 = tmpvar_2;
  xlv_TEXCOORD6 = ((tmpvar_4.z * unity_FogParams.z) + unity_FogParams.w);
  xlv_TEXCOORD7 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 unity_WorldToShadow[4];
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform lowp vec4 unity_FogColor;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp float atten_5;
  lowp vec3 tmpvar_6;
  lowp vec3 lightDir_7;
  highp vec3 tmpvar_8;
  mediump vec3 tmpvar_9;
  tmpvar_9 = _WorldSpaceLightPos0.xyz;
  lightDir_7 = tmpvar_9;
  tmpvar_8 = xlv_TEXCOORD1;
  tmpvar_6 = xlv_TEXCOORD2;
  lowp vec4 reflcol_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_10 = (textureCube (_Cube, tmpvar_8) * tmpvar_11.w);
  mediump float realtimeShadowAttenuation_12;
  highp vec4 v_13;
  v_13.x = unity_MatrixV[0].z;
  v_13.y = unity_MatrixV[1].z;
  v_13.z = unity_MatrixV[2].z;
  v_13.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_14;
  tmpvar_14 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_15;
  highp float tmpvar_16;
  tmpvar_16 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_13.xyz), sqrt(dot (tmpvar_14, tmpvar_14)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_15 = tmpvar_16;
  highp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = xlv_TEXCOORD3;
  lowp float tmpvar_18;
  highp vec4 shadowCoord_19;
  shadowCoord_19 = (unity_WorldToShadow[0] * tmpvar_17);
  highp float lightShadowDataX_20;
  mediump float tmpvar_21;
  tmpvar_21 = _LightShadowData.x;
  lightShadowDataX_20 = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = max (float((texture2D (_ShadowMapTexture, shadowCoord_19.xy).x > shadowCoord_19.z)), lightShadowDataX_20);
  tmpvar_18 = tmpvar_22;
  realtimeShadowAttenuation_12 = tmpvar_18;
  mediump float tmpvar_23;
  tmpvar_23 = clamp ((realtimeShadowAttenuation_12 + tmpvar_15), 0.0, 1.0);
  atten_5 = tmpvar_23;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_7;
  tmpvar_1 = atten_5;
  mediump vec3 tmpvar_24;
  tmpvar_24 = (tmpvar_2 * tmpvar_1);
  tmpvar_2 = tmpvar_24;
  lowp vec4 c_25;
  lowp vec4 c_26;
  lowp float diff_27;
  mediump float tmpvar_28;
  tmpvar_28 = max (0.0, dot (tmpvar_6, tmpvar_3));
  diff_27 = tmpvar_28;
  c_26.xyz = (((tmpvar_11 * _Color).xyz * tmpvar_24) * diff_27);
  c_26.w = (reflcol_10.w * _ReflectColor.w);
  c_25.w = c_26.w;
  c_25.xyz = c_26.xyz;
  c_4.w = c_25.w;
  c_4.xyz = (c_26.xyz + (reflcol_10.xyz * _ReflectColor.xyz));
  highp float tmpvar_29;
  tmpvar_29 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_4.xyz = mix (unity_FogColor.xyz, c_4.xyz, vec3(tmpvar_29));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "FOG_LINEAR" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  tmpvar_5.w = 1.0;
  tmpvar_5.xyz = _glesVertex.xyz;
  tmpvar_4 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
  highp vec3 tmpvar_6;
  tmpvar_6 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_7;
  tmpvar_7[0] = unity_WorldToObject[0].xyz;
  tmpvar_7[1] = unity_WorldToObject[1].xyz;
  tmpvar_7[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_glesNormal * tmpvar_7));
  highp vec3 tmpvar_9;
  highp vec3 I_10;
  I_10 = (tmpvar_6 - _WorldSpaceCameraPos);
  tmpvar_9 = (I_10 - (2.0 * (
    dot (tmpvar_8, I_10)
   * tmpvar_8)));
  tmpvar_1 = tmpvar_9;
  gl_Position = tmpvar_4;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_8;
  xlv_TEXCOORD3 = tmpvar_6;
  xlv_TEXCOORD5 = tmpvar_2;
  xlv_TEXCOORD6 = ((tmpvar_4.z * unity_FogParams.z) + unity_FogParams.w);
  xlv_TEXCOORD7 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 unity_WorldToShadow[4];
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform lowp vec4 unity_FogColor;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp float atten_5;
  lowp vec3 tmpvar_6;
  lowp vec3 lightDir_7;
  highp vec3 tmpvar_8;
  mediump vec3 tmpvar_9;
  tmpvar_9 = _WorldSpaceLightPos0.xyz;
  lightDir_7 = tmpvar_9;
  tmpvar_8 = xlv_TEXCOORD1;
  tmpvar_6 = xlv_TEXCOORD2;
  lowp vec4 reflcol_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_10 = (textureCube (_Cube, tmpvar_8) * tmpvar_11.w);
  mediump float realtimeShadowAttenuation_12;
  highp vec4 v_13;
  v_13.x = unity_MatrixV[0].z;
  v_13.y = unity_MatrixV[1].z;
  v_13.z = unity_MatrixV[2].z;
  v_13.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_14;
  tmpvar_14 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_15;
  highp float tmpvar_16;
  tmpvar_16 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_13.xyz), sqrt(dot (tmpvar_14, tmpvar_14)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_15 = tmpvar_16;
  highp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = xlv_TEXCOORD3;
  lowp float tmpvar_18;
  highp vec4 shadowCoord_19;
  shadowCoord_19 = (unity_WorldToShadow[0] * tmpvar_17);
  highp float lightShadowDataX_20;
  mediump float tmpvar_21;
  tmpvar_21 = _LightShadowData.x;
  lightShadowDataX_20 = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = max (float((texture2D (_ShadowMapTexture, shadowCoord_19.xy).x > shadowCoord_19.z)), lightShadowDataX_20);
  tmpvar_18 = tmpvar_22;
  realtimeShadowAttenuation_12 = tmpvar_18;
  mediump float tmpvar_23;
  tmpvar_23 = clamp ((realtimeShadowAttenuation_12 + tmpvar_15), 0.0, 1.0);
  atten_5 = tmpvar_23;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_7;
  tmpvar_1 = atten_5;
  mediump vec3 tmpvar_24;
  tmpvar_24 = (tmpvar_2 * tmpvar_1);
  tmpvar_2 = tmpvar_24;
  lowp vec4 c_25;
  lowp vec4 c_26;
  lowp float diff_27;
  mediump float tmpvar_28;
  tmpvar_28 = max (0.0, dot (tmpvar_6, tmpvar_3));
  diff_27 = tmpvar_28;
  c_26.xyz = (((tmpvar_11 * _Color).xyz * tmpvar_24) * diff_27);
  c_26.w = (reflcol_10.w * _ReflectColor.w);
  c_25.w = c_26.w;
  c_25.xyz = c_26.xyz;
  c_4.w = c_25.w;
  c_4.xyz = (c_26.xyz + (reflcol_10.xyz * _ReflectColor.xyz));
  highp float tmpvar_29;
  tmpvar_29 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_4.xyz = mix (unity_FogColor.xyz, c_4.xyz, vec3(tmpvar_29));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "FOG_LINEAR" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  tmpvar_5.w = 1.0;
  tmpvar_5.xyz = _glesVertex.xyz;
  tmpvar_4 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
  highp vec3 tmpvar_6;
  tmpvar_6 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_7;
  tmpvar_7[0] = unity_WorldToObject[0].xyz;
  tmpvar_7[1] = unity_WorldToObject[1].xyz;
  tmpvar_7[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_glesNormal * tmpvar_7));
  highp vec3 tmpvar_9;
  highp vec3 I_10;
  I_10 = (tmpvar_6 - _WorldSpaceCameraPos);
  tmpvar_9 = (I_10 - (2.0 * (
    dot (tmpvar_8, I_10)
   * tmpvar_8)));
  tmpvar_1 = tmpvar_9;
  mediump vec3 normal_11;
  normal_11 = tmpvar_8;
  mediump vec3 x1_12;
  mediump vec4 tmpvar_13;
  tmpvar_13 = (normal_11.xyzz * normal_11.yzzx);
  x1_12.x = dot (unity_SHBr, tmpvar_13);
  x1_12.y = dot (unity_SHBg, tmpvar_13);
  x1_12.z = dot (unity_SHBb, tmpvar_13);
  gl_Position = tmpvar_4;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_8;
  xlv_TEXCOORD3 = tmpvar_6;
  xlv_TEXCOORD4 = (x1_12 + (unity_SHC.xyz * (
    (normal_11.x * normal_11.x)
   - 
    (normal_11.y * normal_11.y)
  )));
  xlv_TEXCOORD5 = tmpvar_2;
  xlv_TEXCOORD6 = ((tmpvar_4.z * unity_FogParams.z) + unity_FogParams.w);
  xlv_TEXCOORD7 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform highp mat4 unity_WorldToShadow[4];
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform lowp vec4 unity_FogColor;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD4;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp float atten_5;
  lowp vec3 tmpvar_6;
  lowp vec3 lightDir_7;
  highp vec3 tmpvar_8;
  mediump vec3 tmpvar_9;
  tmpvar_9 = _WorldSpaceLightPos0.xyz;
  lightDir_7 = tmpvar_9;
  tmpvar_8 = xlv_TEXCOORD1;
  tmpvar_6 = xlv_TEXCOORD2;
  lowp vec4 reflcol_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_12;
  tmpvar_12 = (tmpvar_11 * _Color);
  reflcol_10 = (textureCube (_Cube, tmpvar_8) * tmpvar_11.w);
  mediump float realtimeShadowAttenuation_13;
  highp vec4 v_14;
  v_14.x = unity_MatrixV[0].z;
  v_14.y = unity_MatrixV[1].z;
  v_14.z = unity_MatrixV[2].z;
  v_14.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_15;
  tmpvar_15 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_16;
  highp float tmpvar_17;
  tmpvar_17 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_14.xyz), sqrt(dot (tmpvar_15, tmpvar_15)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_16 = tmpvar_17;
  highp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = xlv_TEXCOORD3;
  lowp float tmpvar_19;
  highp vec4 shadowCoord_20;
  shadowCoord_20 = (unity_WorldToShadow[0] * tmpvar_18);
  highp float lightShadowDataX_21;
  mediump float tmpvar_22;
  tmpvar_22 = _LightShadowData.x;
  lightShadowDataX_21 = tmpvar_22;
  highp float tmpvar_23;
  tmpvar_23 = max (float((texture2D (_ShadowMapTexture, shadowCoord_20.xy).x > shadowCoord_20.z)), lightShadowDataX_21);
  tmpvar_19 = tmpvar_23;
  realtimeShadowAttenuation_13 = tmpvar_19;
  mediump float tmpvar_24;
  tmpvar_24 = clamp ((realtimeShadowAttenuation_13 + tmpvar_16), 0.0, 1.0);
  atten_5 = tmpvar_24;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_7;
  tmpvar_1 = atten_5;
  mediump vec3 normalWorld_25;
  normalWorld_25 = tmpvar_6;
  mediump vec3 tmpvar_26;
  tmpvar_26 = (tmpvar_2 * tmpvar_1);
  mediump vec4 tmpvar_27;
  tmpvar_27.w = 1.0;
  tmpvar_27.xyz = normalWorld_25;
  mediump vec3 x_28;
  x_28.x = dot (unity_SHAr, tmpvar_27);
  x_28.y = dot (unity_SHAg, tmpvar_27);
  x_28.z = dot (unity_SHAb, tmpvar_27);
  mediump vec3 tmpvar_29;
  tmpvar_29 = max (((1.055 * 
    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD4 + x_28)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  tmpvar_2 = tmpvar_26;
  lowp vec4 c_30;
  lowp vec4 c_31;
  lowp float diff_32;
  mediump float tmpvar_33;
  tmpvar_33 = max (0.0, dot (tmpvar_6, tmpvar_3));
  diff_32 = tmpvar_33;
  c_31.xyz = ((tmpvar_12.xyz * tmpvar_26) * diff_32);
  c_31.w = (reflcol_10.w * _ReflectColor.w);
  c_30.w = c_31.w;
  c_30.xyz = (c_31.xyz + (tmpvar_12.xyz * tmpvar_29));
  c_4.w = c_30.w;
  c_4.xyz = (c_30.xyz + (reflcol_10.xyz * _ReflectColor.xyz));
  highp float tmpvar_34;
  tmpvar_34 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_4.xyz = mix (unity_FogColor.xyz, c_4.xyz, vec3(tmpvar_34));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "FOG_LINEAR" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  tmpvar_5.w = 1.0;
  tmpvar_5.xyz = _glesVertex.xyz;
  tmpvar_4 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
  highp vec3 tmpvar_6;
  tmpvar_6 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_7;
  tmpvar_7[0] = unity_WorldToObject[0].xyz;
  tmpvar_7[1] = unity_WorldToObject[1].xyz;
  tmpvar_7[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_glesNormal * tmpvar_7));
  highp vec3 tmpvar_9;
  highp vec3 I_10;
  I_10 = (tmpvar_6 - _WorldSpaceCameraPos);
  tmpvar_9 = (I_10 - (2.0 * (
    dot (tmpvar_8, I_10)
   * tmpvar_8)));
  tmpvar_1 = tmpvar_9;
  mediump vec3 normal_11;
  normal_11 = tmpvar_8;
  mediump vec3 x1_12;
  mediump vec4 tmpvar_13;
  tmpvar_13 = (normal_11.xyzz * normal_11.yzzx);
  x1_12.x = dot (unity_SHBr, tmpvar_13);
  x1_12.y = dot (unity_SHBg, tmpvar_13);
  x1_12.z = dot (unity_SHBb, tmpvar_13);
  gl_Position = tmpvar_4;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_8;
  xlv_TEXCOORD3 = tmpvar_6;
  xlv_TEXCOORD4 = (x1_12 + (unity_SHC.xyz * (
    (normal_11.x * normal_11.x)
   - 
    (normal_11.y * normal_11.y)
  )));
  xlv_TEXCOORD5 = tmpvar_2;
  xlv_TEXCOORD6 = ((tmpvar_4.z * unity_FogParams.z) + unity_FogParams.w);
  xlv_TEXCOORD7 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform highp mat4 unity_WorldToShadow[4];
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform lowp vec4 unity_FogColor;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD4;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp float atten_5;
  lowp vec3 tmpvar_6;
  lowp vec3 lightDir_7;
  highp vec3 tmpvar_8;
  mediump vec3 tmpvar_9;
  tmpvar_9 = _WorldSpaceLightPos0.xyz;
  lightDir_7 = tmpvar_9;
  tmpvar_8 = xlv_TEXCOORD1;
  tmpvar_6 = xlv_TEXCOORD2;
  lowp vec4 reflcol_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_12;
  tmpvar_12 = (tmpvar_11 * _Color);
  reflcol_10 = (textureCube (_Cube, tmpvar_8) * tmpvar_11.w);
  mediump float realtimeShadowAttenuation_13;
  highp vec4 v_14;
  v_14.x = unity_MatrixV[0].z;
  v_14.y = unity_MatrixV[1].z;
  v_14.z = unity_MatrixV[2].z;
  v_14.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_15;
  tmpvar_15 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_16;
  highp float tmpvar_17;
  tmpvar_17 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_14.xyz), sqrt(dot (tmpvar_15, tmpvar_15)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_16 = tmpvar_17;
  highp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = xlv_TEXCOORD3;
  lowp float tmpvar_19;
  highp vec4 shadowCoord_20;
  shadowCoord_20 = (unity_WorldToShadow[0] * tmpvar_18);
  highp float lightShadowDataX_21;
  mediump float tmpvar_22;
  tmpvar_22 = _LightShadowData.x;
  lightShadowDataX_21 = tmpvar_22;
  highp float tmpvar_23;
  tmpvar_23 = max (float((texture2D (_ShadowMapTexture, shadowCoord_20.xy).x > shadowCoord_20.z)), lightShadowDataX_21);
  tmpvar_19 = tmpvar_23;
  realtimeShadowAttenuation_13 = tmpvar_19;
  mediump float tmpvar_24;
  tmpvar_24 = clamp ((realtimeShadowAttenuation_13 + tmpvar_16), 0.0, 1.0);
  atten_5 = tmpvar_24;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_7;
  tmpvar_1 = atten_5;
  mediump vec3 normalWorld_25;
  normalWorld_25 = tmpvar_6;
  mediump vec3 tmpvar_26;
  tmpvar_26 = (tmpvar_2 * tmpvar_1);
  mediump vec4 tmpvar_27;
  tmpvar_27.w = 1.0;
  tmpvar_27.xyz = normalWorld_25;
  mediump vec3 x_28;
  x_28.x = dot (unity_SHAr, tmpvar_27);
  x_28.y = dot (unity_SHAg, tmpvar_27);
  x_28.z = dot (unity_SHAb, tmpvar_27);
  mediump vec3 tmpvar_29;
  tmpvar_29 = max (((1.055 * 
    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD4 + x_28)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  tmpvar_2 = tmpvar_26;
  lowp vec4 c_30;
  lowp vec4 c_31;
  lowp float diff_32;
  mediump float tmpvar_33;
  tmpvar_33 = max (0.0, dot (tmpvar_6, tmpvar_3));
  diff_32 = tmpvar_33;
  c_31.xyz = ((tmpvar_12.xyz * tmpvar_26) * diff_32);
  c_31.w = (reflcol_10.w * _ReflectColor.w);
  c_30.w = c_31.w;
  c_30.xyz = (c_31.xyz + (tmpvar_12.xyz * tmpvar_29));
  c_4.w = c_30.w;
  c_4.xyz = (c_30.xyz + (reflcol_10.xyz * _ReflectColor.xyz));
  highp float tmpvar_34;
  tmpvar_34 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_4.xyz = mix (unity_FogColor.xyz, c_4.xyz, vec3(tmpvar_34));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "FOG_LINEAR" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  tmpvar_5.w = 1.0;
  tmpvar_5.xyz = _glesVertex.xyz;
  tmpvar_4 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
  highp vec3 tmpvar_6;
  tmpvar_6 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_7;
  tmpvar_7[0] = unity_WorldToObject[0].xyz;
  tmpvar_7[1] = unity_WorldToObject[1].xyz;
  tmpvar_7[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_glesNormal * tmpvar_7));
  highp vec3 tmpvar_9;
  highp vec3 I_10;
  I_10 = (tmpvar_6 - _WorldSpaceCameraPos);
  tmpvar_9 = (I_10 - (2.0 * (
    dot (tmpvar_8, I_10)
   * tmpvar_8)));
  tmpvar_1 = tmpvar_9;
  mediump vec3 normal_11;
  normal_11 = tmpvar_8;
  mediump vec3 x1_12;
  mediump vec4 tmpvar_13;
  tmpvar_13 = (normal_11.xyzz * normal_11.yzzx);
  x1_12.x = dot (unity_SHBr, tmpvar_13);
  x1_12.y = dot (unity_SHBg, tmpvar_13);
  x1_12.z = dot (unity_SHBb, tmpvar_13);
  gl_Position = tmpvar_4;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_8;
  xlv_TEXCOORD3 = tmpvar_6;
  xlv_TEXCOORD4 = (x1_12 + (unity_SHC.xyz * (
    (normal_11.x * normal_11.x)
   - 
    (normal_11.y * normal_11.y)
  )));
  xlv_TEXCOORD5 = tmpvar_2;
  xlv_TEXCOORD6 = ((tmpvar_4.z * unity_FogParams.z) + unity_FogParams.w);
  xlv_TEXCOORD7 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform highp mat4 unity_WorldToShadow[4];
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform lowp vec4 unity_FogColor;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD4;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp float atten_5;
  lowp vec3 tmpvar_6;
  lowp vec3 lightDir_7;
  highp vec3 tmpvar_8;
  mediump vec3 tmpvar_9;
  tmpvar_9 = _WorldSpaceLightPos0.xyz;
  lightDir_7 = tmpvar_9;
  tmpvar_8 = xlv_TEXCOORD1;
  tmpvar_6 = xlv_TEXCOORD2;
  lowp vec4 reflcol_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_12;
  tmpvar_12 = (tmpvar_11 * _Color);
  reflcol_10 = (textureCube (_Cube, tmpvar_8) * tmpvar_11.w);
  mediump float realtimeShadowAttenuation_13;
  highp vec4 v_14;
  v_14.x = unity_MatrixV[0].z;
  v_14.y = unity_MatrixV[1].z;
  v_14.z = unity_MatrixV[2].z;
  v_14.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_15;
  tmpvar_15 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_16;
  highp float tmpvar_17;
  tmpvar_17 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_14.xyz), sqrt(dot (tmpvar_15, tmpvar_15)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_16 = tmpvar_17;
  highp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = xlv_TEXCOORD3;
  lowp float tmpvar_19;
  highp vec4 shadowCoord_20;
  shadowCoord_20 = (unity_WorldToShadow[0] * tmpvar_18);
  highp float lightShadowDataX_21;
  mediump float tmpvar_22;
  tmpvar_22 = _LightShadowData.x;
  lightShadowDataX_21 = tmpvar_22;
  highp float tmpvar_23;
  tmpvar_23 = max (float((texture2D (_ShadowMapTexture, shadowCoord_20.xy).x > shadowCoord_20.z)), lightShadowDataX_21);
  tmpvar_19 = tmpvar_23;
  realtimeShadowAttenuation_13 = tmpvar_19;
  mediump float tmpvar_24;
  tmpvar_24 = clamp ((realtimeShadowAttenuation_13 + tmpvar_16), 0.0, 1.0);
  atten_5 = tmpvar_24;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_7;
  tmpvar_1 = atten_5;
  mediump vec3 normalWorld_25;
  normalWorld_25 = tmpvar_6;
  mediump vec3 tmpvar_26;
  tmpvar_26 = (tmpvar_2 * tmpvar_1);
  mediump vec4 tmpvar_27;
  tmpvar_27.w = 1.0;
  tmpvar_27.xyz = normalWorld_25;
  mediump vec3 x_28;
  x_28.x = dot (unity_SHAr, tmpvar_27);
  x_28.y = dot (unity_SHAg, tmpvar_27);
  x_28.z = dot (unity_SHAb, tmpvar_27);
  mediump vec3 tmpvar_29;
  tmpvar_29 = max (((1.055 * 
    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD4 + x_28)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  tmpvar_2 = tmpvar_26;
  lowp vec4 c_30;
  lowp vec4 c_31;
  lowp float diff_32;
  mediump float tmpvar_33;
  tmpvar_33 = max (0.0, dot (tmpvar_6, tmpvar_3));
  diff_32 = tmpvar_33;
  c_31.xyz = ((tmpvar_12.xyz * tmpvar_26) * diff_32);
  c_31.w = (reflcol_10.w * _ReflectColor.w);
  c_30.w = c_31.w;
  c_30.xyz = (c_31.xyz + (tmpvar_12.xyz * tmpvar_29));
  c_4.w = c_30.w;
  c_4.xyz = (c_30.xyz + (reflcol_10.xyz * _ReflectColor.xyz));
  highp float tmpvar_34;
  tmpvar_34 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_4.xyz = mix (unity_FogColor.xyz, c_4.xyz, vec3(tmpvar_34));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = _glesVertex.xyz;
  tmpvar_3 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
  highp vec3 tmpvar_5;
  tmpvar_5 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = unity_WorldToObject[0].xyz;
  tmpvar_6[1] = unity_WorldToObject[1].xyz;
  tmpvar_6[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_glesNormal * tmpvar_6));
  highp vec3 tmpvar_8;
  highp vec3 I_9;
  I_9 = (tmpvar_5 - _WorldSpaceCameraPos);
  tmpvar_8 = (I_9 - (2.0 * (
    dot (tmpvar_7, I_9)
   * tmpvar_7)));
  tmpvar_1 = tmpvar_8;
  mediump vec3 normal_10;
  normal_10 = tmpvar_7;
  mediump vec3 x1_11;
  mediump vec4 tmpvar_12;
  tmpvar_12 = (normal_10.xyzz * normal_10.yzzx);
  x1_11.x = dot (unity_SHBr, tmpvar_12);
  x1_11.y = dot (unity_SHBg, tmpvar_12);
  x1_11.z = dot (unity_SHBb, tmpvar_12);
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_7;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = (x1_11 + (unity_SHC.xyz * (
    (normal_10.x * normal_10.x)
   - 
    (normal_10.y * normal_10.y)
  )));
  xlv_TEXCOORD5 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD6 = ((tmpvar_3.z * unity_FogParams.z) + unity_FogParams.w);
  xlv_TEXCOORD7 = tmpvar_2;
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform lowp vec4 unity_OcclusionMaskSelector;
uniform highp mat4 unity_WorldToShadow[4];
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform lowp vec4 unity_FogColor;
uniform sampler2D unity_ShadowMask;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp float atten_5;
  lowp vec3 tmpvar_6;
  lowp vec3 lightDir_7;
  highp vec3 tmpvar_8;
  mediump vec3 tmpvar_9;
  tmpvar_9 = _WorldSpaceLightPos0.xyz;
  lightDir_7 = tmpvar_9;
  tmpvar_8 = xlv_TEXCOORD1;
  tmpvar_6 = xlv_TEXCOORD2;
  lowp vec4 reflcol_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_12;
  tmpvar_12 = (tmpvar_11 * _Color);
  reflcol_10 = (textureCube (_Cube, tmpvar_8) * tmpvar_11.w);
  mediump float realtimeShadowAttenuation_13;
  mediump float shadowMaskAttenuation_14;
  highp vec4 v_15;
  v_15.x = unity_MatrixV[0].z;
  v_15.y = unity_MatrixV[1].z;
  v_15.z = unity_MatrixV[2].z;
  v_15.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_16;
  tmpvar_16 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_17;
  highp float tmpvar_18;
  tmpvar_18 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_15.xyz), sqrt(dot (tmpvar_16, tmpvar_16)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_17 = tmpvar_18;
  lowp float tmpvar_19;
  tmpvar_19 = clamp (dot (texture2D (unity_ShadowMask, xlv_TEXCOORD5), unity_OcclusionMaskSelector), 0.0, 1.0);
  shadowMaskAttenuation_14 = tmpvar_19;
  highp vec4 tmpvar_20;
  tmpvar_20.w = 1.0;
  tmpvar_20.xyz = xlv_TEXCOORD3;
  lowp float tmpvar_21;
  highp vec4 shadowCoord_22;
  shadowCoord_22 = (unity_WorldToShadow[0] * tmpvar_20);
  highp float lightShadowDataX_23;
  mediump float tmpvar_24;
  tmpvar_24 = _LightShadowData.x;
  lightShadowDataX_23 = tmpvar_24;
  highp float tmpvar_25;
  tmpvar_25 = max (float((texture2D (_ShadowMapTexture, shadowCoord_22.xy).x > shadowCoord_22.z)), lightShadowDataX_23);
  tmpvar_21 = tmpvar_25;
  realtimeShadowAttenuation_13 = tmpvar_21;
  mediump float tmpvar_26;
  tmpvar_26 = mix (realtimeShadowAttenuation_13, shadowMaskAttenuation_14, tmpvar_17);
  atten_5 = tmpvar_26;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_7;
  tmpvar_1 = atten_5;
  mediump vec3 normalWorld_27;
  normalWorld_27 = tmpvar_6;
  mediump vec3 tmpvar_28;
  tmpvar_28 = (tmpvar_2 * tmpvar_1);
  mediump vec4 tmpvar_29;
  tmpvar_29.w = 1.0;
  tmpvar_29.xyz = normalWorld_27;
  mediump vec3 x_30;
  x_30.x = dot (unity_SHAr, tmpvar_29);
  x_30.y = dot (unity_SHAg, tmpvar_29);
  x_30.z = dot (unity_SHAb, tmpvar_29);
  mediump vec3 tmpvar_31;
  tmpvar_31 = max (((1.055 * 
    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD4 + x_30)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  tmpvar_2 = tmpvar_28;
  lowp vec4 c_32;
  lowp vec4 c_33;
  lowp float diff_34;
  mediump float tmpvar_35;
  tmpvar_35 = max (0.0, dot (tmpvar_6, tmpvar_3));
  diff_34 = tmpvar_35;
  c_33.xyz = ((tmpvar_12.xyz * tmpvar_28) * diff_34);
  c_33.w = (reflcol_10.w * _ReflectColor.w);
  c_32.w = c_33.w;
  c_32.xyz = (c_33.xyz + (tmpvar_12.xyz * tmpvar_31));
  c_4.w = c_32.w;
  c_4.xyz = (c_32.xyz + (reflcol_10.xyz * _ReflectColor.xyz));
  highp float tmpvar_36;
  tmpvar_36 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_4.xyz = mix (unity_FogColor.xyz, c_4.xyz, vec3(tmpvar_36));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = _glesVertex.xyz;
  tmpvar_3 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
  highp vec3 tmpvar_5;
  tmpvar_5 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = unity_WorldToObject[0].xyz;
  tmpvar_6[1] = unity_WorldToObject[1].xyz;
  tmpvar_6[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_glesNormal * tmpvar_6));
  highp vec3 tmpvar_8;
  highp vec3 I_9;
  I_9 = (tmpvar_5 - _WorldSpaceCameraPos);
  tmpvar_8 = (I_9 - (2.0 * (
    dot (tmpvar_7, I_9)
   * tmpvar_7)));
  tmpvar_1 = tmpvar_8;
  mediump vec3 normal_10;
  normal_10 = tmpvar_7;
  mediump vec3 x1_11;
  mediump vec4 tmpvar_12;
  tmpvar_12 = (normal_10.xyzz * normal_10.yzzx);
  x1_11.x = dot (unity_SHBr, tmpvar_12);
  x1_11.y = dot (unity_SHBg, tmpvar_12);
  x1_11.z = dot (unity_SHBb, tmpvar_12);
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_7;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = (x1_11 + (unity_SHC.xyz * (
    (normal_10.x * normal_10.x)
   - 
    (normal_10.y * normal_10.y)
  )));
  xlv_TEXCOORD5 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD6 = ((tmpvar_3.z * unity_FogParams.z) + unity_FogParams.w);
  xlv_TEXCOORD7 = tmpvar_2;
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform lowp vec4 unity_OcclusionMaskSelector;
uniform highp mat4 unity_WorldToShadow[4];
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform lowp vec4 unity_FogColor;
uniform sampler2D unity_ShadowMask;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp float atten_5;
  lowp vec3 tmpvar_6;
  lowp vec3 lightDir_7;
  highp vec3 tmpvar_8;
  mediump vec3 tmpvar_9;
  tmpvar_9 = _WorldSpaceLightPos0.xyz;
  lightDir_7 = tmpvar_9;
  tmpvar_8 = xlv_TEXCOORD1;
  tmpvar_6 = xlv_TEXCOORD2;
  lowp vec4 reflcol_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_12;
  tmpvar_12 = (tmpvar_11 * _Color);
  reflcol_10 = (textureCube (_Cube, tmpvar_8) * tmpvar_11.w);
  mediump float realtimeShadowAttenuation_13;
  mediump float shadowMaskAttenuation_14;
  highp vec4 v_15;
  v_15.x = unity_MatrixV[0].z;
  v_15.y = unity_MatrixV[1].z;
  v_15.z = unity_MatrixV[2].z;
  v_15.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_16;
  tmpvar_16 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_17;
  highp float tmpvar_18;
  tmpvar_18 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_15.xyz), sqrt(dot (tmpvar_16, tmpvar_16)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_17 = tmpvar_18;
  lowp float tmpvar_19;
  tmpvar_19 = clamp (dot (texture2D (unity_ShadowMask, xlv_TEXCOORD5), unity_OcclusionMaskSelector), 0.0, 1.0);
  shadowMaskAttenuation_14 = tmpvar_19;
  highp vec4 tmpvar_20;
  tmpvar_20.w = 1.0;
  tmpvar_20.xyz = xlv_TEXCOORD3;
  lowp float tmpvar_21;
  highp vec4 shadowCoord_22;
  shadowCoord_22 = (unity_WorldToShadow[0] * tmpvar_20);
  highp float lightShadowDataX_23;
  mediump float tmpvar_24;
  tmpvar_24 = _LightShadowData.x;
  lightShadowDataX_23 = tmpvar_24;
  highp float tmpvar_25;
  tmpvar_25 = max (float((texture2D (_ShadowMapTexture, shadowCoord_22.xy).x > shadowCoord_22.z)), lightShadowDataX_23);
  tmpvar_21 = tmpvar_25;
  realtimeShadowAttenuation_13 = tmpvar_21;
  mediump float tmpvar_26;
  tmpvar_26 = mix (realtimeShadowAttenuation_13, shadowMaskAttenuation_14, tmpvar_17);
  atten_5 = tmpvar_26;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_7;
  tmpvar_1 = atten_5;
  mediump vec3 normalWorld_27;
  normalWorld_27 = tmpvar_6;
  mediump vec3 tmpvar_28;
  tmpvar_28 = (tmpvar_2 * tmpvar_1);
  mediump vec4 tmpvar_29;
  tmpvar_29.w = 1.0;
  tmpvar_29.xyz = normalWorld_27;
  mediump vec3 x_30;
  x_30.x = dot (unity_SHAr, tmpvar_29);
  x_30.y = dot (unity_SHAg, tmpvar_29);
  x_30.z = dot (unity_SHAb, tmpvar_29);
  mediump vec3 tmpvar_31;
  tmpvar_31 = max (((1.055 * 
    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD4 + x_30)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  tmpvar_2 = tmpvar_28;
  lowp vec4 c_32;
  lowp vec4 c_33;
  lowp float diff_34;
  mediump float tmpvar_35;
  tmpvar_35 = max (0.0, dot (tmpvar_6, tmpvar_3));
  diff_34 = tmpvar_35;
  c_33.xyz = ((tmpvar_12.xyz * tmpvar_28) * diff_34);
  c_33.w = (reflcol_10.w * _ReflectColor.w);
  c_32.w = c_33.w;
  c_32.xyz = (c_33.xyz + (tmpvar_12.xyz * tmpvar_31));
  c_4.w = c_32.w;
  c_4.xyz = (c_32.xyz + (reflcol_10.xyz * _ReflectColor.xyz));
  highp float tmpvar_36;
  tmpvar_36 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_4.xyz = mix (unity_FogColor.xyz, c_4.xyz, vec3(tmpvar_36));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = _glesVertex.xyz;
  tmpvar_3 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
  highp vec3 tmpvar_5;
  tmpvar_5 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = unity_WorldToObject[0].xyz;
  tmpvar_6[1] = unity_WorldToObject[1].xyz;
  tmpvar_6[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_glesNormal * tmpvar_6));
  highp vec3 tmpvar_8;
  highp vec3 I_9;
  I_9 = (tmpvar_5 - _WorldSpaceCameraPos);
  tmpvar_8 = (I_9 - (2.0 * (
    dot (tmpvar_7, I_9)
   * tmpvar_7)));
  tmpvar_1 = tmpvar_8;
  mediump vec3 normal_10;
  normal_10 = tmpvar_7;
  mediump vec3 x1_11;
  mediump vec4 tmpvar_12;
  tmpvar_12 = (normal_10.xyzz * normal_10.yzzx);
  x1_11.x = dot (unity_SHBr, tmpvar_12);
  x1_11.y = dot (unity_SHBg, tmpvar_12);
  x1_11.z = dot (unity_SHBb, tmpvar_12);
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_7;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = (x1_11 + (unity_SHC.xyz * (
    (normal_10.x * normal_10.x)
   - 
    (normal_10.y * normal_10.y)
  )));
  xlv_TEXCOORD5 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD6 = ((tmpvar_3.z * unity_FogParams.z) + unity_FogParams.w);
  xlv_TEXCOORD7 = tmpvar_2;
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform lowp vec4 unity_OcclusionMaskSelector;
uniform highp mat4 unity_WorldToShadow[4];
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform lowp vec4 unity_FogColor;
uniform sampler2D unity_ShadowMask;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp float atten_5;
  lowp vec3 tmpvar_6;
  lowp vec3 lightDir_7;
  highp vec3 tmpvar_8;
  mediump vec3 tmpvar_9;
  tmpvar_9 = _WorldSpaceLightPos0.xyz;
  lightDir_7 = tmpvar_9;
  tmpvar_8 = xlv_TEXCOORD1;
  tmpvar_6 = xlv_TEXCOORD2;
  lowp vec4 reflcol_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_12;
  tmpvar_12 = (tmpvar_11 * _Color);
  reflcol_10 = (textureCube (_Cube, tmpvar_8) * tmpvar_11.w);
  mediump float realtimeShadowAttenuation_13;
  mediump float shadowMaskAttenuation_14;
  highp vec4 v_15;
  v_15.x = unity_MatrixV[0].z;
  v_15.y = unity_MatrixV[1].z;
  v_15.z = unity_MatrixV[2].z;
  v_15.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_16;
  tmpvar_16 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_17;
  highp float tmpvar_18;
  tmpvar_18 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_15.xyz), sqrt(dot (tmpvar_16, tmpvar_16)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_17 = tmpvar_18;
  lowp float tmpvar_19;
  tmpvar_19 = clamp (dot (texture2D (unity_ShadowMask, xlv_TEXCOORD5), unity_OcclusionMaskSelector), 0.0, 1.0);
  shadowMaskAttenuation_14 = tmpvar_19;
  highp vec4 tmpvar_20;
  tmpvar_20.w = 1.0;
  tmpvar_20.xyz = xlv_TEXCOORD3;
  lowp float tmpvar_21;
  highp vec4 shadowCoord_22;
  shadowCoord_22 = (unity_WorldToShadow[0] * tmpvar_20);
  highp float lightShadowDataX_23;
  mediump float tmpvar_24;
  tmpvar_24 = _LightShadowData.x;
  lightShadowDataX_23 = tmpvar_24;
  highp float tmpvar_25;
  tmpvar_25 = max (float((texture2D (_ShadowMapTexture, shadowCoord_22.xy).x > shadowCoord_22.z)), lightShadowDataX_23);
  tmpvar_21 = tmpvar_25;
  realtimeShadowAttenuation_13 = tmpvar_21;
  mediump float tmpvar_26;
  tmpvar_26 = mix (realtimeShadowAttenuation_13, shadowMaskAttenuation_14, tmpvar_17);
  atten_5 = tmpvar_26;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_7;
  tmpvar_1 = atten_5;
  mediump vec3 normalWorld_27;
  normalWorld_27 = tmpvar_6;
  mediump vec3 tmpvar_28;
  tmpvar_28 = (tmpvar_2 * tmpvar_1);
  mediump vec4 tmpvar_29;
  tmpvar_29.w = 1.0;
  tmpvar_29.xyz = normalWorld_27;
  mediump vec3 x_30;
  x_30.x = dot (unity_SHAr, tmpvar_29);
  x_30.y = dot (unity_SHAg, tmpvar_29);
  x_30.z = dot (unity_SHAb, tmpvar_29);
  mediump vec3 tmpvar_31;
  tmpvar_31 = max (((1.055 * 
    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD4 + x_30)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  tmpvar_2 = tmpvar_28;
  lowp vec4 c_32;
  lowp vec4 c_33;
  lowp float diff_34;
  mediump float tmpvar_35;
  tmpvar_35 = max (0.0, dot (tmpvar_6, tmpvar_3));
  diff_34 = tmpvar_35;
  c_33.xyz = ((tmpvar_12.xyz * tmpvar_28) * diff_34);
  c_33.w = (reflcol_10.w * _ReflectColor.w);
  c_32.w = c_33.w;
  c_32.xyz = (c_33.xyz + (tmpvar_12.xyz * tmpvar_31));
  c_4.w = c_32.w;
  c_4.xyz = (c_32.xyz + (reflcol_10.xyz * _ReflectColor.xyz));
  highp float tmpvar_36;
  tmpvar_36 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_4.xyz = mix (unity_FogColor.xyz, c_4.xyz, vec3(tmpvar_36));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_SHADOW_MIXING" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = _glesVertex.xyz;
  tmpvar_3 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
  highp vec3 tmpvar_5;
  tmpvar_5 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = unity_WorldToObject[0].xyz;
  tmpvar_6[1] = unity_WorldToObject[1].xyz;
  tmpvar_6[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_glesNormal * tmpvar_6));
  highp vec3 tmpvar_8;
  highp vec3 I_9;
  I_9 = (tmpvar_5 - _WorldSpaceCameraPos);
  tmpvar_8 = (I_9 - (2.0 * (
    dot (tmpvar_7, I_9)
   * tmpvar_7)));
  tmpvar_1 = tmpvar_8;
  mediump vec3 normal_10;
  normal_10 = tmpvar_7;
  mediump vec3 x1_11;
  mediump vec4 tmpvar_12;
  tmpvar_12 = (normal_10.xyzz * normal_10.yzzx);
  x1_11.x = dot (unity_SHBr, tmpvar_12);
  x1_11.y = dot (unity_SHBg, tmpvar_12);
  x1_11.z = dot (unity_SHBb, tmpvar_12);
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_7;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = (x1_11 + (unity_SHC.xyz * (
    (normal_10.x * normal_10.x)
   - 
    (normal_10.y * normal_10.y)
  )));
  xlv_TEXCOORD5 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD6 = ((tmpvar_3.z * unity_FogParams.z) + unity_FogParams.w);
  xlv_TEXCOORD7 = tmpvar_2;
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform lowp vec4 unity_OcclusionMaskSelector;
uniform highp mat4 unity_WorldToShadow[4];
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform lowp vec4 unity_FogColor;
uniform sampler2D unity_ShadowMask;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp float atten_5;
  lowp vec3 tmpvar_6;
  lowp vec3 lightDir_7;
  highp vec3 tmpvar_8;
  mediump vec3 tmpvar_9;
  tmpvar_9 = _WorldSpaceLightPos0.xyz;
  lightDir_7 = tmpvar_9;
  tmpvar_8 = xlv_TEXCOORD1;
  tmpvar_6 = xlv_TEXCOORD2;
  lowp vec4 reflcol_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_12;
  tmpvar_12 = (tmpvar_11 * _Color);
  reflcol_10 = (textureCube (_Cube, tmpvar_8) * tmpvar_11.w);
  mediump float realtimeShadowAttenuation_13;
  mediump float shadowMaskAttenuation_14;
  highp vec4 v_15;
  v_15.x = unity_MatrixV[0].z;
  v_15.y = unity_MatrixV[1].z;
  v_15.z = unity_MatrixV[2].z;
  v_15.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_16;
  tmpvar_16 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_17;
  highp float tmpvar_18;
  tmpvar_18 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_15.xyz), sqrt(dot (tmpvar_16, tmpvar_16)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_17 = tmpvar_18;
  lowp float tmpvar_19;
  tmpvar_19 = clamp (dot (texture2D (unity_ShadowMask, xlv_TEXCOORD5), unity_OcclusionMaskSelector), 0.0, 1.0);
  shadowMaskAttenuation_14 = tmpvar_19;
  highp vec4 tmpvar_20;
  tmpvar_20.w = 1.0;
  tmpvar_20.xyz = xlv_TEXCOORD3;
  lowp float tmpvar_21;
  highp vec4 shadowCoord_22;
  shadowCoord_22 = (unity_WorldToShadow[0] * tmpvar_20);
  highp float lightShadowDataX_23;
  mediump float tmpvar_24;
  tmpvar_24 = _LightShadowData.x;
  lightShadowDataX_23 = tmpvar_24;
  highp float tmpvar_25;
  tmpvar_25 = max (float((texture2D (_ShadowMapTexture, shadowCoord_22.xy).x > shadowCoord_22.z)), lightShadowDataX_23);
  tmpvar_21 = tmpvar_25;
  realtimeShadowAttenuation_13 = tmpvar_21;
  mediump float tmpvar_26;
  tmpvar_26 = min (clamp ((realtimeShadowAttenuation_13 + tmpvar_17), 0.0, 1.0), shadowMaskAttenuation_14);
  atten_5 = tmpvar_26;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_7;
  tmpvar_1 = atten_5;
  mediump vec3 normalWorld_27;
  normalWorld_27 = tmpvar_6;
  mediump vec3 tmpvar_28;
  tmpvar_28 = (tmpvar_2 * tmpvar_1);
  mediump vec4 tmpvar_29;
  tmpvar_29.w = 1.0;
  tmpvar_29.xyz = normalWorld_27;
  mediump vec3 x_30;
  x_30.x = dot (unity_SHAr, tmpvar_29);
  x_30.y = dot (unity_SHAg, tmpvar_29);
  x_30.z = dot (unity_SHAb, tmpvar_29);
  mediump vec3 tmpvar_31;
  tmpvar_31 = max (((1.055 * 
    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD4 + x_30)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  tmpvar_2 = tmpvar_28;
  lowp vec4 c_32;
  lowp vec4 c_33;
  lowp float diff_34;
  mediump float tmpvar_35;
  tmpvar_35 = max (0.0, dot (tmpvar_6, tmpvar_3));
  diff_34 = tmpvar_35;
  c_33.xyz = ((tmpvar_12.xyz * tmpvar_28) * diff_34);
  c_33.w = (reflcol_10.w * _ReflectColor.w);
  c_32.w = c_33.w;
  c_32.xyz = (c_33.xyz + (tmpvar_12.xyz * tmpvar_31));
  c_4.w = c_32.w;
  c_4.xyz = (c_32.xyz + (reflcol_10.xyz * _ReflectColor.xyz));
  highp float tmpvar_36;
  tmpvar_36 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_4.xyz = mix (unity_FogColor.xyz, c_4.xyz, vec3(tmpvar_36));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_SHADOW_MIXING" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = _glesVertex.xyz;
  tmpvar_3 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
  highp vec3 tmpvar_5;
  tmpvar_5 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = unity_WorldToObject[0].xyz;
  tmpvar_6[1] = unity_WorldToObject[1].xyz;
  tmpvar_6[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_glesNormal * tmpvar_6));
  highp vec3 tmpvar_8;
  highp vec3 I_9;
  I_9 = (tmpvar_5 - _WorldSpaceCameraPos);
  tmpvar_8 = (I_9 - (2.0 * (
    dot (tmpvar_7, I_9)
   * tmpvar_7)));
  tmpvar_1 = tmpvar_8;
  mediump vec3 normal_10;
  normal_10 = tmpvar_7;
  mediump vec3 x1_11;
  mediump vec4 tmpvar_12;
  tmpvar_12 = (normal_10.xyzz * normal_10.yzzx);
  x1_11.x = dot (unity_SHBr, tmpvar_12);
  x1_11.y = dot (unity_SHBg, tmpvar_12);
  x1_11.z = dot (unity_SHBb, tmpvar_12);
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_7;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = (x1_11 + (unity_SHC.xyz * (
    (normal_10.x * normal_10.x)
   - 
    (normal_10.y * normal_10.y)
  )));
  xlv_TEXCOORD5 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD6 = ((tmpvar_3.z * unity_FogParams.z) + unity_FogParams.w);
  xlv_TEXCOORD7 = tmpvar_2;
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform lowp vec4 unity_OcclusionMaskSelector;
uniform highp mat4 unity_WorldToShadow[4];
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform lowp vec4 unity_FogColor;
uniform sampler2D unity_ShadowMask;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp float atten_5;
  lowp vec3 tmpvar_6;
  lowp vec3 lightDir_7;
  highp vec3 tmpvar_8;
  mediump vec3 tmpvar_9;
  tmpvar_9 = _WorldSpaceLightPos0.xyz;
  lightDir_7 = tmpvar_9;
  tmpvar_8 = xlv_TEXCOORD1;
  tmpvar_6 = xlv_TEXCOORD2;
  lowp vec4 reflcol_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_12;
  tmpvar_12 = (tmpvar_11 * _Color);
  reflcol_10 = (textureCube (_Cube, tmpvar_8) * tmpvar_11.w);
  mediump float realtimeShadowAttenuation_13;
  mediump float shadowMaskAttenuation_14;
  highp vec4 v_15;
  v_15.x = unity_MatrixV[0].z;
  v_15.y = unity_MatrixV[1].z;
  v_15.z = unity_MatrixV[2].z;
  v_15.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_16;
  tmpvar_16 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_17;
  highp float tmpvar_18;
  tmpvar_18 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_15.xyz), sqrt(dot (tmpvar_16, tmpvar_16)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_17 = tmpvar_18;
  lowp float tmpvar_19;
  tmpvar_19 = clamp (dot (texture2D (unity_ShadowMask, xlv_TEXCOORD5), unity_OcclusionMaskSelector), 0.0, 1.0);
  shadowMaskAttenuation_14 = tmpvar_19;
  highp vec4 tmpvar_20;
  tmpvar_20.w = 1.0;
  tmpvar_20.xyz = xlv_TEXCOORD3;
  lowp float tmpvar_21;
  highp vec4 shadowCoord_22;
  shadowCoord_22 = (unity_WorldToShadow[0] * tmpvar_20);
  highp float lightShadowDataX_23;
  mediump float tmpvar_24;
  tmpvar_24 = _LightShadowData.x;
  lightShadowDataX_23 = tmpvar_24;
  highp float tmpvar_25;
  tmpvar_25 = max (float((texture2D (_ShadowMapTexture, shadowCoord_22.xy).x > shadowCoord_22.z)), lightShadowDataX_23);
  tmpvar_21 = tmpvar_25;
  realtimeShadowAttenuation_13 = tmpvar_21;
  mediump float tmpvar_26;
  tmpvar_26 = min (clamp ((realtimeShadowAttenuation_13 + tmpvar_17), 0.0, 1.0), shadowMaskAttenuation_14);
  atten_5 = tmpvar_26;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_7;
  tmpvar_1 = atten_5;
  mediump vec3 normalWorld_27;
  normalWorld_27 = tmpvar_6;
  mediump vec3 tmpvar_28;
  tmpvar_28 = (tmpvar_2 * tmpvar_1);
  mediump vec4 tmpvar_29;
  tmpvar_29.w = 1.0;
  tmpvar_29.xyz = normalWorld_27;
  mediump vec3 x_30;
  x_30.x = dot (unity_SHAr, tmpvar_29);
  x_30.y = dot (unity_SHAg, tmpvar_29);
  x_30.z = dot (unity_SHAb, tmpvar_29);
  mediump vec3 tmpvar_31;
  tmpvar_31 = max (((1.055 * 
    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD4 + x_30)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  tmpvar_2 = tmpvar_28;
  lowp vec4 c_32;
  lowp vec4 c_33;
  lowp float diff_34;
  mediump float tmpvar_35;
  tmpvar_35 = max (0.0, dot (tmpvar_6, tmpvar_3));
  diff_34 = tmpvar_35;
  c_33.xyz = ((tmpvar_12.xyz * tmpvar_28) * diff_34);
  c_33.w = (reflcol_10.w * _ReflectColor.w);
  c_32.w = c_33.w;
  c_32.xyz = (c_33.xyz + (tmpvar_12.xyz * tmpvar_31));
  c_4.w = c_32.w;
  c_4.xyz = (c_32.xyz + (reflcol_10.xyz * _ReflectColor.xyz));
  highp float tmpvar_36;
  tmpvar_36 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_4.xyz = mix (unity_FogColor.xyz, c_4.xyz, vec3(tmpvar_36));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_SHADOW_MIXING" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = _glesVertex.xyz;
  tmpvar_3 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
  highp vec3 tmpvar_5;
  tmpvar_5 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = unity_WorldToObject[0].xyz;
  tmpvar_6[1] = unity_WorldToObject[1].xyz;
  tmpvar_6[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_glesNormal * tmpvar_6));
  highp vec3 tmpvar_8;
  highp vec3 I_9;
  I_9 = (tmpvar_5 - _WorldSpaceCameraPos);
  tmpvar_8 = (I_9 - (2.0 * (
    dot (tmpvar_7, I_9)
   * tmpvar_7)));
  tmpvar_1 = tmpvar_8;
  mediump vec3 normal_10;
  normal_10 = tmpvar_7;
  mediump vec3 x1_11;
  mediump vec4 tmpvar_12;
  tmpvar_12 = (normal_10.xyzz * normal_10.yzzx);
  x1_11.x = dot (unity_SHBr, tmpvar_12);
  x1_11.y = dot (unity_SHBg, tmpvar_12);
  x1_11.z = dot (unity_SHBb, tmpvar_12);
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_7;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = (x1_11 + (unity_SHC.xyz * (
    (normal_10.x * normal_10.x)
   - 
    (normal_10.y * normal_10.y)
  )));
  xlv_TEXCOORD5 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD6 = ((tmpvar_3.z * unity_FogParams.z) + unity_FogParams.w);
  xlv_TEXCOORD7 = tmpvar_2;
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform lowp vec4 unity_OcclusionMaskSelector;
uniform highp mat4 unity_WorldToShadow[4];
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform lowp vec4 unity_FogColor;
uniform sampler2D unity_ShadowMask;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp float atten_5;
  lowp vec3 tmpvar_6;
  lowp vec3 lightDir_7;
  highp vec3 tmpvar_8;
  mediump vec3 tmpvar_9;
  tmpvar_9 = _WorldSpaceLightPos0.xyz;
  lightDir_7 = tmpvar_9;
  tmpvar_8 = xlv_TEXCOORD1;
  tmpvar_6 = xlv_TEXCOORD2;
  lowp vec4 reflcol_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_12;
  tmpvar_12 = (tmpvar_11 * _Color);
  reflcol_10 = (textureCube (_Cube, tmpvar_8) * tmpvar_11.w);
  mediump float realtimeShadowAttenuation_13;
  mediump float shadowMaskAttenuation_14;
  highp vec4 v_15;
  v_15.x = unity_MatrixV[0].z;
  v_15.y = unity_MatrixV[1].z;
  v_15.z = unity_MatrixV[2].z;
  v_15.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_16;
  tmpvar_16 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_17;
  highp float tmpvar_18;
  tmpvar_18 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_15.xyz), sqrt(dot (tmpvar_16, tmpvar_16)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_17 = tmpvar_18;
  lowp float tmpvar_19;
  tmpvar_19 = clamp (dot (texture2D (unity_ShadowMask, xlv_TEXCOORD5), unity_OcclusionMaskSelector), 0.0, 1.0);
  shadowMaskAttenuation_14 = tmpvar_19;
  highp vec4 tmpvar_20;
  tmpvar_20.w = 1.0;
  tmpvar_20.xyz = xlv_TEXCOORD3;
  lowp float tmpvar_21;
  highp vec4 shadowCoord_22;
  shadowCoord_22 = (unity_WorldToShadow[0] * tmpvar_20);
  highp float lightShadowDataX_23;
  mediump float tmpvar_24;
  tmpvar_24 = _LightShadowData.x;
  lightShadowDataX_23 = tmpvar_24;
  highp float tmpvar_25;
  tmpvar_25 = max (float((texture2D (_ShadowMapTexture, shadowCoord_22.xy).x > shadowCoord_22.z)), lightShadowDataX_23);
  tmpvar_21 = tmpvar_25;
  realtimeShadowAttenuation_13 = tmpvar_21;
  mediump float tmpvar_26;
  tmpvar_26 = min (clamp ((realtimeShadowAttenuation_13 + tmpvar_17), 0.0, 1.0), shadowMaskAttenuation_14);
  atten_5 = tmpvar_26;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_7;
  tmpvar_1 = atten_5;
  mediump vec3 normalWorld_27;
  normalWorld_27 = tmpvar_6;
  mediump vec3 tmpvar_28;
  tmpvar_28 = (tmpvar_2 * tmpvar_1);
  mediump vec4 tmpvar_29;
  tmpvar_29.w = 1.0;
  tmpvar_29.xyz = normalWorld_27;
  mediump vec3 x_30;
  x_30.x = dot (unity_SHAr, tmpvar_29);
  x_30.y = dot (unity_SHAg, tmpvar_29);
  x_30.z = dot (unity_SHAb, tmpvar_29);
  mediump vec3 tmpvar_31;
  tmpvar_31 = max (((1.055 * 
    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD4 + x_30)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  tmpvar_2 = tmpvar_28;
  lowp vec4 c_32;
  lowp vec4 c_33;
  lowp float diff_34;
  mediump float tmpvar_35;
  tmpvar_35 = max (0.0, dot (tmpvar_6, tmpvar_3));
  diff_34 = tmpvar_35;
  c_33.xyz = ((tmpvar_12.xyz * tmpvar_28) * diff_34);
  c_33.w = (reflcol_10.w * _ReflectColor.w);
  c_32.w = c_33.w;
  c_32.xyz = (c_33.xyz + (tmpvar_12.xyz * tmpvar_31));
  c_4.w = c_32.w;
  c_4.xyz = (c_32.xyz + (reflcol_10.xyz * _ReflectColor.xyz));
  highp float tmpvar_36;
  tmpvar_36 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_4.xyz = mix (unity_FogColor.xyz, c_4.xyz, vec3(tmpvar_36));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "FOG_LINEAR" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_WorldToShadow[4];
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = _glesVertex.xyz;
  tmpvar_3 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
  highp vec4 tmpvar_5;
  tmpvar_5 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_6;
  tmpvar_6[0] = unity_WorldToObject[0].xyz;
  tmpvar_6[1] = unity_WorldToObject[1].xyz;
  tmpvar_6[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_glesNormal * tmpvar_6));
  highp vec3 tmpvar_8;
  highp vec3 I_9;
  I_9 = (tmpvar_5.xyz - _WorldSpaceCameraPos);
  tmpvar_8 = (I_9 - (2.0 * (
    dot (tmpvar_7, I_9)
   * tmpvar_7)));
  tmpvar_1 = tmpvar_8;
  tmpvar_2.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_7;
  xlv_TEXCOORD3 = tmpvar_5.xyz;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = (unity_WorldToShadow[0] * tmpvar_5);
  xlv_TEXCOORD6 = ((tmpvar_3.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform lowp vec4 unity_FogColor;
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  mediump vec3 tmpvar_8;
  tmpvar_8 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_8;
  tmpvar_7 = xlv_TEXCOORD1;
  tmpvar_5 = xlv_TEXCOORD2;
  lowp vec4 reflcol_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_11;
  tmpvar_11 = (tmpvar_10 * _Color);
  reflcol_9 = (textureCube (_Cube, tmpvar_7) * tmpvar_10.w);
  lowp float tmpvar_12;
  highp float lightShadowDataX_13;
  mediump float tmpvar_14;
  tmpvar_14 = _LightShadowData.x;
  lightShadowDataX_13 = tmpvar_14;
  highp float tmpvar_15;
  tmpvar_15 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD5.xy).x > xlv_TEXCOORD5.z)), lightShadowDataX_13);
  tmpvar_12 = tmpvar_15;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_6;
  tmpvar_1 = tmpvar_12;
  mediump vec3 tmpvar_16;
  mediump vec3 tmpvar_17;
  highp vec4 v_18;
  v_18.x = unity_MatrixV[0].z;
  v_18.y = unity_MatrixV[1].z;
  v_18.z = unity_MatrixV[2].z;
  v_18.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_19;
  tmpvar_19 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_20;
  highp float tmpvar_21;
  tmpvar_21 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_18.xyz), sqrt(dot (tmpvar_19, tmpvar_19)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_20 = tmpvar_21;
  tmpvar_16 = (tmpvar_2 * clamp ((tmpvar_1 + tmpvar_20), 0.0, 1.0));
  mediump vec4 tmpvar_22;
  tmpvar_22 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_23;
  color_23 = tmpvar_22;
  tmpvar_17 = (unity_Lightmap_HDR.x * color_23.xyz);
  tmpvar_2 = tmpvar_16;
  lowp vec4 c_24;
  lowp vec4 c_25;
  lowp float diff_26;
  mediump float tmpvar_27;
  tmpvar_27 = max (0.0, dot (tmpvar_5, tmpvar_3));
  diff_26 = tmpvar_27;
  c_25.xyz = ((tmpvar_11.xyz * tmpvar_16) * diff_26);
  c_25.w = (reflcol_9.w * _ReflectColor.w);
  c_24.w = c_25.w;
  c_24.xyz = (c_25.xyz + (tmpvar_11.xyz * tmpvar_17));
  c_4.w = c_24.w;
  c_4.xyz = (c_24.xyz + (reflcol_9.xyz * _ReflectColor.xyz));
  highp float tmpvar_28;
  tmpvar_28 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_4.xyz = mix (unity_FogColor.xyz, c_4.xyz, vec3(tmpvar_28));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "FOG_LINEAR" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_WorldToShadow[4];
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = _glesVertex.xyz;
  tmpvar_3 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
  highp vec4 tmpvar_5;
  tmpvar_5 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_6;
  tmpvar_6[0] = unity_WorldToObject[0].xyz;
  tmpvar_6[1] = unity_WorldToObject[1].xyz;
  tmpvar_6[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_glesNormal * tmpvar_6));
  highp vec3 tmpvar_8;
  highp vec3 I_9;
  I_9 = (tmpvar_5.xyz - _WorldSpaceCameraPos);
  tmpvar_8 = (I_9 - (2.0 * (
    dot (tmpvar_7, I_9)
   * tmpvar_7)));
  tmpvar_1 = tmpvar_8;
  tmpvar_2.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_7;
  xlv_TEXCOORD3 = tmpvar_5.xyz;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = (unity_WorldToShadow[0] * tmpvar_5);
  xlv_TEXCOORD6 = ((tmpvar_3.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform lowp vec4 unity_FogColor;
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  mediump vec3 tmpvar_8;
  tmpvar_8 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_8;
  tmpvar_7 = xlv_TEXCOORD1;
  tmpvar_5 = xlv_TEXCOORD2;
  lowp vec4 reflcol_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_11;
  tmpvar_11 = (tmpvar_10 * _Color);
  reflcol_9 = (textureCube (_Cube, tmpvar_7) * tmpvar_10.w);
  lowp float tmpvar_12;
  highp float lightShadowDataX_13;
  mediump float tmpvar_14;
  tmpvar_14 = _LightShadowData.x;
  lightShadowDataX_13 = tmpvar_14;
  highp float tmpvar_15;
  tmpvar_15 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD5.xy).x > xlv_TEXCOORD5.z)), lightShadowDataX_13);
  tmpvar_12 = tmpvar_15;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_6;
  tmpvar_1 = tmpvar_12;
  mediump vec3 tmpvar_16;
  mediump vec3 tmpvar_17;
  highp vec4 v_18;
  v_18.x = unity_MatrixV[0].z;
  v_18.y = unity_MatrixV[1].z;
  v_18.z = unity_MatrixV[2].z;
  v_18.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_19;
  tmpvar_19 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_20;
  highp float tmpvar_21;
  tmpvar_21 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_18.xyz), sqrt(dot (tmpvar_19, tmpvar_19)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_20 = tmpvar_21;
  tmpvar_16 = (tmpvar_2 * clamp ((tmpvar_1 + tmpvar_20), 0.0, 1.0));
  mediump vec4 tmpvar_22;
  tmpvar_22 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_23;
  color_23 = tmpvar_22;
  tmpvar_17 = (unity_Lightmap_HDR.x * color_23.xyz);
  tmpvar_2 = tmpvar_16;
  lowp vec4 c_24;
  lowp vec4 c_25;
  lowp float diff_26;
  mediump float tmpvar_27;
  tmpvar_27 = max (0.0, dot (tmpvar_5, tmpvar_3));
  diff_26 = tmpvar_27;
  c_25.xyz = ((tmpvar_11.xyz * tmpvar_16) * diff_26);
  c_25.w = (reflcol_9.w * _ReflectColor.w);
  c_24.w = c_25.w;
  c_24.xyz = (c_25.xyz + (tmpvar_11.xyz * tmpvar_17));
  c_4.w = c_24.w;
  c_4.xyz = (c_24.xyz + (reflcol_9.xyz * _ReflectColor.xyz));
  highp float tmpvar_28;
  tmpvar_28 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_4.xyz = mix (unity_FogColor.xyz, c_4.xyz, vec3(tmpvar_28));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "FOG_LINEAR" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_WorldToShadow[4];
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = _glesVertex.xyz;
  tmpvar_3 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
  highp vec4 tmpvar_5;
  tmpvar_5 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_6;
  tmpvar_6[0] = unity_WorldToObject[0].xyz;
  tmpvar_6[1] = unity_WorldToObject[1].xyz;
  tmpvar_6[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_glesNormal * tmpvar_6));
  highp vec3 tmpvar_8;
  highp vec3 I_9;
  I_9 = (tmpvar_5.xyz - _WorldSpaceCameraPos);
  tmpvar_8 = (I_9 - (2.0 * (
    dot (tmpvar_7, I_9)
   * tmpvar_7)));
  tmpvar_1 = tmpvar_8;
  tmpvar_2.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_7;
  xlv_TEXCOORD3 = tmpvar_5.xyz;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = (unity_WorldToShadow[0] * tmpvar_5);
  xlv_TEXCOORD6 = ((tmpvar_3.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform lowp vec4 unity_FogColor;
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  mediump vec3 tmpvar_8;
  tmpvar_8 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_8;
  tmpvar_7 = xlv_TEXCOORD1;
  tmpvar_5 = xlv_TEXCOORD2;
  lowp vec4 reflcol_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_11;
  tmpvar_11 = (tmpvar_10 * _Color);
  reflcol_9 = (textureCube (_Cube, tmpvar_7) * tmpvar_10.w);
  lowp float tmpvar_12;
  highp float lightShadowDataX_13;
  mediump float tmpvar_14;
  tmpvar_14 = _LightShadowData.x;
  lightShadowDataX_13 = tmpvar_14;
  highp float tmpvar_15;
  tmpvar_15 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD5.xy).x > xlv_TEXCOORD5.z)), lightShadowDataX_13);
  tmpvar_12 = tmpvar_15;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_6;
  tmpvar_1 = tmpvar_12;
  mediump vec3 tmpvar_16;
  mediump vec3 tmpvar_17;
  highp vec4 v_18;
  v_18.x = unity_MatrixV[0].z;
  v_18.y = unity_MatrixV[1].z;
  v_18.z = unity_MatrixV[2].z;
  v_18.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_19;
  tmpvar_19 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_20;
  highp float tmpvar_21;
  tmpvar_21 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_18.xyz), sqrt(dot (tmpvar_19, tmpvar_19)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_20 = tmpvar_21;
  tmpvar_16 = (tmpvar_2 * clamp ((tmpvar_1 + tmpvar_20), 0.0, 1.0));
  mediump vec4 tmpvar_22;
  tmpvar_22 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_23;
  color_23 = tmpvar_22;
  tmpvar_17 = (unity_Lightmap_HDR.x * color_23.xyz);
  tmpvar_2 = tmpvar_16;
  lowp vec4 c_24;
  lowp vec4 c_25;
  lowp float diff_26;
  mediump float tmpvar_27;
  tmpvar_27 = max (0.0, dot (tmpvar_5, tmpvar_3));
  diff_26 = tmpvar_27;
  c_25.xyz = ((tmpvar_11.xyz * tmpvar_16) * diff_26);
  c_25.w = (reflcol_9.w * _ReflectColor.w);
  c_24.w = c_25.w;
  c_24.xyz = (c_25.xyz + (tmpvar_11.xyz * tmpvar_17));
  c_4.w = c_24.w;
  c_4.xyz = (c_24.xyz + (reflcol_9.xyz * _ReflectColor.xyz));
  highp float tmpvar_28;
  tmpvar_28 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_4.xyz = mix (unity_FogColor.xyz, c_4.xyz, vec3(tmpvar_28));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "LIGHTPROBE_SH" "FOG_LINEAR" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_WorldToShadow[4];
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = _glesVertex.xyz;
  tmpvar_3 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
  highp vec4 tmpvar_5;
  tmpvar_5 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_6;
  tmpvar_6[0] = unity_WorldToObject[0].xyz;
  tmpvar_6[1] = unity_WorldToObject[1].xyz;
  tmpvar_6[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_glesNormal * tmpvar_6));
  highp vec3 tmpvar_8;
  highp vec3 I_9;
  I_9 = (tmpvar_5.xyz - _WorldSpaceCameraPos);
  tmpvar_8 = (I_9 - (2.0 * (
    dot (tmpvar_7, I_9)
   * tmpvar_7)));
  tmpvar_1 = tmpvar_8;
  tmpvar_2.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_7;
  xlv_TEXCOORD3 = tmpvar_5.xyz;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = (unity_WorldToShadow[0] * tmpvar_5);
  xlv_TEXCOORD6 = ((tmpvar_3.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform lowp vec4 unity_FogColor;
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  mediump vec3 tmpvar_8;
  tmpvar_8 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_8;
  tmpvar_7 = xlv_TEXCOORD1;
  tmpvar_5 = xlv_TEXCOORD2;
  lowp vec4 reflcol_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_11;
  tmpvar_11 = (tmpvar_10 * _Color);
  reflcol_9 = (textureCube (_Cube, tmpvar_7) * tmpvar_10.w);
  lowp float tmpvar_12;
  highp float lightShadowDataX_13;
  mediump float tmpvar_14;
  tmpvar_14 = _LightShadowData.x;
  lightShadowDataX_13 = tmpvar_14;
  highp float tmpvar_15;
  tmpvar_15 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD5.xy).x > xlv_TEXCOORD5.z)), lightShadowDataX_13);
  tmpvar_12 = tmpvar_15;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_6;
  tmpvar_1 = tmpvar_12;
  mediump vec3 normalWorld_16;
  normalWorld_16 = tmpvar_5;
  mediump vec3 tmpvar_17;
  mediump vec3 tmpvar_18;
  highp vec4 v_19;
  v_19.x = unity_MatrixV[0].z;
  v_19.y = unity_MatrixV[1].z;
  v_19.z = unity_MatrixV[2].z;
  v_19.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_20;
  tmpvar_20 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_19.xyz), sqrt(dot (tmpvar_20, tmpvar_20)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_21 = tmpvar_22;
  tmpvar_17 = (tmpvar_2 * clamp ((tmpvar_1 + tmpvar_21), 0.0, 1.0));
  mediump vec3 ambient_23;
  mediump vec4 tmpvar_24;
  tmpvar_24.w = 1.0;
  tmpvar_24.xyz = normalWorld_16;
  mediump vec3 x_25;
  x_25.x = dot (unity_SHAr, tmpvar_24);
  x_25.y = dot (unity_SHAg, tmpvar_24);
  x_25.z = dot (unity_SHAb, tmpvar_24);
  mediump vec3 x1_26;
  mediump vec4 tmpvar_27;
  tmpvar_27 = (normalWorld_16.xyzz * normalWorld_16.yzzx);
  x1_26.x = dot (unity_SHBr, tmpvar_27);
  x1_26.y = dot (unity_SHBg, tmpvar_27);
  x1_26.z = dot (unity_SHBb, tmpvar_27);
  ambient_23 = max (vec3(0.0, 0.0, 0.0), (x_25 + (x1_26 + 
    (unity_SHC.xyz * ((normalWorld_16.x * normalWorld_16.x) - (normalWorld_16.y * normalWorld_16.y)))
  )));
  mediump vec3 tmpvar_28;
  tmpvar_28 = max (((1.055 * 
    pow (max (ambient_23, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  ambient_23 = tmpvar_28;
  mediump vec4 tmpvar_29;
  tmpvar_29 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_30;
  color_30 = tmpvar_29;
  tmpvar_18 = (tmpvar_28 + (unity_Lightmap_HDR.x * color_30.xyz));
  tmpvar_2 = tmpvar_17;
  lowp vec4 c_31;
  lowp vec4 c_32;
  lowp float diff_33;
  mediump float tmpvar_34;
  tmpvar_34 = max (0.0, dot (tmpvar_5, tmpvar_3));
  diff_33 = tmpvar_34;
  c_32.xyz = ((tmpvar_11.xyz * tmpvar_17) * diff_33);
  c_32.w = (reflcol_9.w * _ReflectColor.w);
  c_31.w = c_32.w;
  c_31.xyz = (c_32.xyz + (tmpvar_11.xyz * tmpvar_18));
  c_4.w = c_31.w;
  c_4.xyz = (c_31.xyz + (reflcol_9.xyz * _ReflectColor.xyz));
  highp float tmpvar_35;
  tmpvar_35 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_4.xyz = mix (unity_FogColor.xyz, c_4.xyz, vec3(tmpvar_35));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "LIGHTPROBE_SH" "FOG_LINEAR" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_WorldToShadow[4];
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = _glesVertex.xyz;
  tmpvar_3 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
  highp vec4 tmpvar_5;
  tmpvar_5 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_6;
  tmpvar_6[0] = unity_WorldToObject[0].xyz;
  tmpvar_6[1] = unity_WorldToObject[1].xyz;
  tmpvar_6[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_glesNormal * tmpvar_6));
  highp vec3 tmpvar_8;
  highp vec3 I_9;
  I_9 = (tmpvar_5.xyz - _WorldSpaceCameraPos);
  tmpvar_8 = (I_9 - (2.0 * (
    dot (tmpvar_7, I_9)
   * tmpvar_7)));
  tmpvar_1 = tmpvar_8;
  tmpvar_2.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_7;
  xlv_TEXCOORD3 = tmpvar_5.xyz;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = (unity_WorldToShadow[0] * tmpvar_5);
  xlv_TEXCOORD6 = ((tmpvar_3.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform lowp vec4 unity_FogColor;
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  mediump vec3 tmpvar_8;
  tmpvar_8 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_8;
  tmpvar_7 = xlv_TEXCOORD1;
  tmpvar_5 = xlv_TEXCOORD2;
  lowp vec4 reflcol_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_11;
  tmpvar_11 = (tmpvar_10 * _Color);
  reflcol_9 = (textureCube (_Cube, tmpvar_7) * tmpvar_10.w);
  lowp float tmpvar_12;
  highp float lightShadowDataX_13;
  mediump float tmpvar_14;
  tmpvar_14 = _LightShadowData.x;
  lightShadowDataX_13 = tmpvar_14;
  highp float tmpvar_15;
  tmpvar_15 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD5.xy).x > xlv_TEXCOORD5.z)), lightShadowDataX_13);
  tmpvar_12 = tmpvar_15;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_6;
  tmpvar_1 = tmpvar_12;
  mediump vec3 normalWorld_16;
  normalWorld_16 = tmpvar_5;
  mediump vec3 tmpvar_17;
  mediump vec3 tmpvar_18;
  highp vec4 v_19;
  v_19.x = unity_MatrixV[0].z;
  v_19.y = unity_MatrixV[1].z;
  v_19.z = unity_MatrixV[2].z;
  v_19.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_20;
  tmpvar_20 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_19.xyz), sqrt(dot (tmpvar_20, tmpvar_20)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_21 = tmpvar_22;
  tmpvar_17 = (tmpvar_2 * clamp ((tmpvar_1 + tmpvar_21), 0.0, 1.0));
  mediump vec3 ambient_23;
  mediump vec4 tmpvar_24;
  tmpvar_24.w = 1.0;
  tmpvar_24.xyz = normalWorld_16;
  mediump vec3 x_25;
  x_25.x = dot (unity_SHAr, tmpvar_24);
  x_25.y = dot (unity_SHAg, tmpvar_24);
  x_25.z = dot (unity_SHAb, tmpvar_24);
  mediump vec3 x1_26;
  mediump vec4 tmpvar_27;
  tmpvar_27 = (normalWorld_16.xyzz * normalWorld_16.yzzx);
  x1_26.x = dot (unity_SHBr, tmpvar_27);
  x1_26.y = dot (unity_SHBg, tmpvar_27);
  x1_26.z = dot (unity_SHBb, tmpvar_27);
  ambient_23 = max (vec3(0.0, 0.0, 0.0), (x_25 + (x1_26 + 
    (unity_SHC.xyz * ((normalWorld_16.x * normalWorld_16.x) - (normalWorld_16.y * normalWorld_16.y)))
  )));
  mediump vec3 tmpvar_28;
  tmpvar_28 = max (((1.055 * 
    pow (max (ambient_23, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  ambient_23 = tmpvar_28;
  mediump vec4 tmpvar_29;
  tmpvar_29 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_30;
  color_30 = tmpvar_29;
  tmpvar_18 = (tmpvar_28 + (unity_Lightmap_HDR.x * color_30.xyz));
  tmpvar_2 = tmpvar_17;
  lowp vec4 c_31;
  lowp vec4 c_32;
  lowp float diff_33;
  mediump float tmpvar_34;
  tmpvar_34 = max (0.0, dot (tmpvar_5, tmpvar_3));
  diff_33 = tmpvar_34;
  c_32.xyz = ((tmpvar_11.xyz * tmpvar_17) * diff_33);
  c_32.w = (reflcol_9.w * _ReflectColor.w);
  c_31.w = c_32.w;
  c_31.xyz = (c_32.xyz + (tmpvar_11.xyz * tmpvar_18));
  c_4.w = c_31.w;
  c_4.xyz = (c_31.xyz + (reflcol_9.xyz * _ReflectColor.xyz));
  highp float tmpvar_35;
  tmpvar_35 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_4.xyz = mix (unity_FogColor.xyz, c_4.xyz, vec3(tmpvar_35));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "LIGHTPROBE_SH" "FOG_LINEAR" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_WorldToShadow[4];
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = _glesVertex.xyz;
  tmpvar_3 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
  highp vec4 tmpvar_5;
  tmpvar_5 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_6;
  tmpvar_6[0] = unity_WorldToObject[0].xyz;
  tmpvar_6[1] = unity_WorldToObject[1].xyz;
  tmpvar_6[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_glesNormal * tmpvar_6));
  highp vec3 tmpvar_8;
  highp vec3 I_9;
  I_9 = (tmpvar_5.xyz - _WorldSpaceCameraPos);
  tmpvar_8 = (I_9 - (2.0 * (
    dot (tmpvar_7, I_9)
   * tmpvar_7)));
  tmpvar_1 = tmpvar_8;
  tmpvar_2.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_7;
  xlv_TEXCOORD3 = tmpvar_5.xyz;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = (unity_WorldToShadow[0] * tmpvar_5);
  xlv_TEXCOORD6 = ((tmpvar_3.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform lowp vec4 unity_FogColor;
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  mediump vec3 tmpvar_8;
  tmpvar_8 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_8;
  tmpvar_7 = xlv_TEXCOORD1;
  tmpvar_5 = xlv_TEXCOORD2;
  lowp vec4 reflcol_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_11;
  tmpvar_11 = (tmpvar_10 * _Color);
  reflcol_9 = (textureCube (_Cube, tmpvar_7) * tmpvar_10.w);
  lowp float tmpvar_12;
  highp float lightShadowDataX_13;
  mediump float tmpvar_14;
  tmpvar_14 = _LightShadowData.x;
  lightShadowDataX_13 = tmpvar_14;
  highp float tmpvar_15;
  tmpvar_15 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD5.xy).x > xlv_TEXCOORD5.z)), lightShadowDataX_13);
  tmpvar_12 = tmpvar_15;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_6;
  tmpvar_1 = tmpvar_12;
  mediump vec3 normalWorld_16;
  normalWorld_16 = tmpvar_5;
  mediump vec3 tmpvar_17;
  mediump vec3 tmpvar_18;
  highp vec4 v_19;
  v_19.x = unity_MatrixV[0].z;
  v_19.y = unity_MatrixV[1].z;
  v_19.z = unity_MatrixV[2].z;
  v_19.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_20;
  tmpvar_20 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_19.xyz), sqrt(dot (tmpvar_20, tmpvar_20)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_21 = tmpvar_22;
  tmpvar_17 = (tmpvar_2 * clamp ((tmpvar_1 + tmpvar_21), 0.0, 1.0));
  mediump vec3 ambient_23;
  mediump vec4 tmpvar_24;
  tmpvar_24.w = 1.0;
  tmpvar_24.xyz = normalWorld_16;
  mediump vec3 x_25;
  x_25.x = dot (unity_SHAr, tmpvar_24);
  x_25.y = dot (unity_SHAg, tmpvar_24);
  x_25.z = dot (unity_SHAb, tmpvar_24);
  mediump vec3 x1_26;
  mediump vec4 tmpvar_27;
  tmpvar_27 = (normalWorld_16.xyzz * normalWorld_16.yzzx);
  x1_26.x = dot (unity_SHBr, tmpvar_27);
  x1_26.y = dot (unity_SHBg, tmpvar_27);
  x1_26.z = dot (unity_SHBb, tmpvar_27);
  ambient_23 = max (vec3(0.0, 0.0, 0.0), (x_25 + (x1_26 + 
    (unity_SHC.xyz * ((normalWorld_16.x * normalWorld_16.x) - (normalWorld_16.y * normalWorld_16.y)))
  )));
  mediump vec3 tmpvar_28;
  tmpvar_28 = max (((1.055 * 
    pow (max (ambient_23, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  ambient_23 = tmpvar_28;
  mediump vec4 tmpvar_29;
  tmpvar_29 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_30;
  color_30 = tmpvar_29;
  tmpvar_18 = (tmpvar_28 + (unity_Lightmap_HDR.x * color_30.xyz));
  tmpvar_2 = tmpvar_17;
  lowp vec4 c_31;
  lowp vec4 c_32;
  lowp float diff_33;
  mediump float tmpvar_34;
  tmpvar_34 = max (0.0, dot (tmpvar_5, tmpvar_3));
  diff_33 = tmpvar_34;
  c_32.xyz = ((tmpvar_11.xyz * tmpvar_17) * diff_33);
  c_32.w = (reflcol_9.w * _ReflectColor.w);
  c_31.w = c_32.w;
  c_31.xyz = (c_32.xyz + (tmpvar_11.xyz * tmpvar_18));
  c_4.w = c_31.w;
  c_4.xyz = (c_31.xyz + (reflcol_9.xyz * _ReflectColor.xyz));
  highp float tmpvar_35;
  tmpvar_35 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_4.xyz = mix (unity_FogColor.xyz, c_4.xyz, vec3(tmpvar_35));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" "FOG_LINEAR" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_WorldToShadow[4];
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = _glesVertex.xyz;
  tmpvar_3 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
  highp vec4 tmpvar_5;
  tmpvar_5 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_6;
  tmpvar_6[0] = unity_WorldToObject[0].xyz;
  tmpvar_6[1] = unity_WorldToObject[1].xyz;
  tmpvar_6[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_glesNormal * tmpvar_6));
  highp vec3 tmpvar_8;
  highp vec3 I_9;
  I_9 = (tmpvar_5.xyz - _WorldSpaceCameraPos);
  tmpvar_8 = (I_9 - (2.0 * (
    dot (tmpvar_7, I_9)
   * tmpvar_7)));
  tmpvar_1 = tmpvar_8;
  tmpvar_2.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_7;
  xlv_TEXCOORD3 = tmpvar_5.xyz;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = (unity_WorldToShadow[0] * tmpvar_5);
  xlv_TEXCOORD6 = ((tmpvar_3.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform lowp vec4 unity_ShadowColor;
uniform lowp vec4 unity_FogColor;
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump float tmpvar_1;
  lowp vec4 c_2;
  lowp vec3 tmpvar_3;
  highp vec3 tmpvar_4;
  tmpvar_4 = xlv_TEXCOORD1;
  tmpvar_3 = xlv_TEXCOORD2;
  lowp vec4 reflcol_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_5 = (textureCube (_Cube, tmpvar_4) * tmpvar_6.w);
  lowp float tmpvar_7;
  highp float lightShadowDataX_8;
  mediump float tmpvar_9;
  tmpvar_9 = _LightShadowData.x;
  lightShadowDataX_8 = tmpvar_9;
  highp float tmpvar_10;
  tmpvar_10 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD5.xy).x > xlv_TEXCOORD5.z)), lightShadowDataX_8);
  tmpvar_7 = tmpvar_10;
  tmpvar_1 = tmpvar_7;
  mediump vec3 normalWorld_11;
  normalWorld_11 = tmpvar_3;
  mediump vec3 tmpvar_12;
  highp vec4 v_13;
  v_13.x = unity_MatrixV[0].z;
  v_13.y = unity_MatrixV[1].z;
  v_13.z = unity_MatrixV[2].z;
  v_13.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_14;
  tmpvar_14 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_15;
  highp float tmpvar_16;
  tmpvar_16 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_13.xyz), sqrt(dot (tmpvar_14, tmpvar_14)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_15 = tmpvar_16;
  mediump vec4 tmpvar_17;
  tmpvar_17 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_18;
  color_18 = tmpvar_17;
  tmpvar_12 = (unity_Lightmap_HDR.x * color_18.xyz);
  mediump vec3 shadowColor_19;
  lowp vec3 tmpvar_20;
  tmpvar_20 = unity_ShadowColor.xyz;
  shadowColor_19 = tmpvar_20;
  tmpvar_12 = min (tmpvar_12, mix (max (
    (tmpvar_12 - ((max (0.0, 
      dot (normalWorld_11, _WorldSpaceLightPos0.xyz)
    ) * (1.0 - 
      clamp ((tmpvar_1 + tmpvar_15), 0.0, 1.0)
    )) * _LightColor0.xyz))
  , shadowColor_19), tmpvar_12, _LightShadowData.xxx));
  lowp vec4 c_21;
  lowp vec4 c_22;
  c_22.xyz = vec3(0.0, 0.0, 0.0);
  c_22.w = (reflcol_5.w * _ReflectColor.w);
  c_21.w = c_22.w;
  c_21.xyz = ((tmpvar_6 * _Color).xyz * tmpvar_12);
  c_2.w = c_21.w;
  c_2.xyz = (c_21.xyz + (reflcol_5.xyz * _ReflectColor.xyz));
  highp float tmpvar_23;
  tmpvar_23 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_23));
  c_2.w = 1.0;
  gl_FragData[0] = c_2;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" "FOG_LINEAR" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_WorldToShadow[4];
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = _glesVertex.xyz;
  tmpvar_3 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
  highp vec4 tmpvar_5;
  tmpvar_5 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_6;
  tmpvar_6[0] = unity_WorldToObject[0].xyz;
  tmpvar_6[1] = unity_WorldToObject[1].xyz;
  tmpvar_6[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_glesNormal * tmpvar_6));
  highp vec3 tmpvar_8;
  highp vec3 I_9;
  I_9 = (tmpvar_5.xyz - _WorldSpaceCameraPos);
  tmpvar_8 = (I_9 - (2.0 * (
    dot (tmpvar_7, I_9)
   * tmpvar_7)));
  tmpvar_1 = tmpvar_8;
  tmpvar_2.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_7;
  xlv_TEXCOORD3 = tmpvar_5.xyz;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = (unity_WorldToShadow[0] * tmpvar_5);
  xlv_TEXCOORD6 = ((tmpvar_3.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform lowp vec4 unity_ShadowColor;
uniform lowp vec4 unity_FogColor;
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump float tmpvar_1;
  lowp vec4 c_2;
  lowp vec3 tmpvar_3;
  highp vec3 tmpvar_4;
  tmpvar_4 = xlv_TEXCOORD1;
  tmpvar_3 = xlv_TEXCOORD2;
  lowp vec4 reflcol_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_5 = (textureCube (_Cube, tmpvar_4) * tmpvar_6.w);
  lowp float tmpvar_7;
  highp float lightShadowDataX_8;
  mediump float tmpvar_9;
  tmpvar_9 = _LightShadowData.x;
  lightShadowDataX_8 = tmpvar_9;
  highp float tmpvar_10;
  tmpvar_10 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD5.xy).x > xlv_TEXCOORD5.z)), lightShadowDataX_8);
  tmpvar_7 = tmpvar_10;
  tmpvar_1 = tmpvar_7;
  mediump vec3 normalWorld_11;
  normalWorld_11 = tmpvar_3;
  mediump vec3 tmpvar_12;
  highp vec4 v_13;
  v_13.x = unity_MatrixV[0].z;
  v_13.y = unity_MatrixV[1].z;
  v_13.z = unity_MatrixV[2].z;
  v_13.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_14;
  tmpvar_14 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_15;
  highp float tmpvar_16;
  tmpvar_16 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_13.xyz), sqrt(dot (tmpvar_14, tmpvar_14)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_15 = tmpvar_16;
  mediump vec4 tmpvar_17;
  tmpvar_17 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_18;
  color_18 = tmpvar_17;
  tmpvar_12 = (unity_Lightmap_HDR.x * color_18.xyz);
  mediump vec3 shadowColor_19;
  lowp vec3 tmpvar_20;
  tmpvar_20 = unity_ShadowColor.xyz;
  shadowColor_19 = tmpvar_20;
  tmpvar_12 = min (tmpvar_12, mix (max (
    (tmpvar_12 - ((max (0.0, 
      dot (normalWorld_11, _WorldSpaceLightPos0.xyz)
    ) * (1.0 - 
      clamp ((tmpvar_1 + tmpvar_15), 0.0, 1.0)
    )) * _LightColor0.xyz))
  , shadowColor_19), tmpvar_12, _LightShadowData.xxx));
  lowp vec4 c_21;
  lowp vec4 c_22;
  c_22.xyz = vec3(0.0, 0.0, 0.0);
  c_22.w = (reflcol_5.w * _ReflectColor.w);
  c_21.w = c_22.w;
  c_21.xyz = ((tmpvar_6 * _Color).xyz * tmpvar_12);
  c_2.w = c_21.w;
  c_2.xyz = (c_21.xyz + (reflcol_5.xyz * _ReflectColor.xyz));
  highp float tmpvar_23;
  tmpvar_23 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_23));
  c_2.w = 1.0;
  gl_FragData[0] = c_2;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" "FOG_LINEAR" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_WorldToShadow[4];
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = _glesVertex.xyz;
  tmpvar_3 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
  highp vec4 tmpvar_5;
  tmpvar_5 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_6;
  tmpvar_6[0] = unity_WorldToObject[0].xyz;
  tmpvar_6[1] = unity_WorldToObject[1].xyz;
  tmpvar_6[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_glesNormal * tmpvar_6));
  highp vec3 tmpvar_8;
  highp vec3 I_9;
  I_9 = (tmpvar_5.xyz - _WorldSpaceCameraPos);
  tmpvar_8 = (I_9 - (2.0 * (
    dot (tmpvar_7, I_9)
   * tmpvar_7)));
  tmpvar_1 = tmpvar_8;
  tmpvar_2.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_7;
  xlv_TEXCOORD3 = tmpvar_5.xyz;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = (unity_WorldToShadow[0] * tmpvar_5);
  xlv_TEXCOORD6 = ((tmpvar_3.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform lowp vec4 unity_ShadowColor;
uniform lowp vec4 unity_FogColor;
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump float tmpvar_1;
  lowp vec4 c_2;
  lowp vec3 tmpvar_3;
  highp vec3 tmpvar_4;
  tmpvar_4 = xlv_TEXCOORD1;
  tmpvar_3 = xlv_TEXCOORD2;
  lowp vec4 reflcol_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_5 = (textureCube (_Cube, tmpvar_4) * tmpvar_6.w);
  lowp float tmpvar_7;
  highp float lightShadowDataX_8;
  mediump float tmpvar_9;
  tmpvar_9 = _LightShadowData.x;
  lightShadowDataX_8 = tmpvar_9;
  highp float tmpvar_10;
  tmpvar_10 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD5.xy).x > xlv_TEXCOORD5.z)), lightShadowDataX_8);
  tmpvar_7 = tmpvar_10;
  tmpvar_1 = tmpvar_7;
  mediump vec3 normalWorld_11;
  normalWorld_11 = tmpvar_3;
  mediump vec3 tmpvar_12;
  highp vec4 v_13;
  v_13.x = unity_MatrixV[0].z;
  v_13.y = unity_MatrixV[1].z;
  v_13.z = unity_MatrixV[2].z;
  v_13.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_14;
  tmpvar_14 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_15;
  highp float tmpvar_16;
  tmpvar_16 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_13.xyz), sqrt(dot (tmpvar_14, tmpvar_14)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_15 = tmpvar_16;
  mediump vec4 tmpvar_17;
  tmpvar_17 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_18;
  color_18 = tmpvar_17;
  tmpvar_12 = (unity_Lightmap_HDR.x * color_18.xyz);
  mediump vec3 shadowColor_19;
  lowp vec3 tmpvar_20;
  tmpvar_20 = unity_ShadowColor.xyz;
  shadowColor_19 = tmpvar_20;
  tmpvar_12 = min (tmpvar_12, mix (max (
    (tmpvar_12 - ((max (0.0, 
      dot (normalWorld_11, _WorldSpaceLightPos0.xyz)
    ) * (1.0 - 
      clamp ((tmpvar_1 + tmpvar_15), 0.0, 1.0)
    )) * _LightColor0.xyz))
  , shadowColor_19), tmpvar_12, _LightShadowData.xxx));
  lowp vec4 c_21;
  lowp vec4 c_22;
  c_22.xyz = vec3(0.0, 0.0, 0.0);
  c_22.w = (reflcol_5.w * _ReflectColor.w);
  c_21.w = c_22.w;
  c_21.xyz = ((tmpvar_6 * _Color).xyz * tmpvar_12);
  c_2.w = c_21.w;
  c_2.xyz = (c_21.xyz + (reflcol_5.xyz * _ReflectColor.xyz));
  highp float tmpvar_23;
  tmpvar_23 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_23));
  c_2.w = 1.0;
  gl_FragData[0] = c_2;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" "LIGHTPROBE_SH" "FOG_LINEAR" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_WorldToShadow[4];
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = _glesVertex.xyz;
  tmpvar_3 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
  highp vec4 tmpvar_5;
  tmpvar_5 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_6;
  tmpvar_6[0] = unity_WorldToObject[0].xyz;
  tmpvar_6[1] = unity_WorldToObject[1].xyz;
  tmpvar_6[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_glesNormal * tmpvar_6));
  highp vec3 tmpvar_8;
  highp vec3 I_9;
  I_9 = (tmpvar_5.xyz - _WorldSpaceCameraPos);
  tmpvar_8 = (I_9 - (2.0 * (
    dot (tmpvar_7, I_9)
   * tmpvar_7)));
  tmpvar_1 = tmpvar_8;
  tmpvar_2.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_7;
  xlv_TEXCOORD3 = tmpvar_5.xyz;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = (unity_WorldToShadow[0] * tmpvar_5);
  xlv_TEXCOORD6 = ((tmpvar_3.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform lowp vec4 unity_ShadowColor;
uniform lowp vec4 unity_FogColor;
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump float tmpvar_1;
  lowp vec4 c_2;
  lowp vec3 tmpvar_3;
  highp vec3 tmpvar_4;
  tmpvar_4 = xlv_TEXCOORD1;
  tmpvar_3 = xlv_TEXCOORD2;
  lowp vec4 reflcol_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_5 = (textureCube (_Cube, tmpvar_4) * tmpvar_6.w);
  lowp float tmpvar_7;
  highp float lightShadowDataX_8;
  mediump float tmpvar_9;
  tmpvar_9 = _LightShadowData.x;
  lightShadowDataX_8 = tmpvar_9;
  highp float tmpvar_10;
  tmpvar_10 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD5.xy).x > xlv_TEXCOORD5.z)), lightShadowDataX_8);
  tmpvar_7 = tmpvar_10;
  tmpvar_1 = tmpvar_7;
  mediump vec3 normalWorld_11;
  normalWorld_11 = tmpvar_3;
  mediump vec3 tmpvar_12;
  highp vec4 v_13;
  v_13.x = unity_MatrixV[0].z;
  v_13.y = unity_MatrixV[1].z;
  v_13.z = unity_MatrixV[2].z;
  v_13.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_14;
  tmpvar_14 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_15;
  highp float tmpvar_16;
  tmpvar_16 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_13.xyz), sqrt(dot (tmpvar_14, tmpvar_14)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_15 = tmpvar_16;
  mediump vec3 ambient_17;
  mediump vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = normalWorld_11;
  mediump vec3 x_19;
  x_19.x = dot (unity_SHAr, tmpvar_18);
  x_19.y = dot (unity_SHAg, tmpvar_18);
  x_19.z = dot (unity_SHAb, tmpvar_18);
  mediump vec3 x1_20;
  mediump vec4 tmpvar_21;
  tmpvar_21 = (normalWorld_11.xyzz * normalWorld_11.yzzx);
  x1_20.x = dot (unity_SHBr, tmpvar_21);
  x1_20.y = dot (unity_SHBg, tmpvar_21);
  x1_20.z = dot (unity_SHBb, tmpvar_21);
  ambient_17 = max (vec3(0.0, 0.0, 0.0), (x_19 + (x1_20 + 
    (unity_SHC.xyz * ((normalWorld_11.x * normalWorld_11.x) - (normalWorld_11.y * normalWorld_11.y)))
  )));
  mediump vec3 tmpvar_22;
  tmpvar_22 = max (((1.055 * 
    pow (max (ambient_17, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  ambient_17 = tmpvar_22;
  mediump vec4 tmpvar_23;
  tmpvar_23 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_24;
  color_24 = tmpvar_23;
  tmpvar_12 = (tmpvar_22 + (unity_Lightmap_HDR.x * color_24.xyz));
  mediump vec3 shadowColor_25;
  lowp vec3 tmpvar_26;
  tmpvar_26 = unity_ShadowColor.xyz;
  shadowColor_25 = tmpvar_26;
  tmpvar_12 = min (tmpvar_12, mix (max (
    (tmpvar_12 - ((max (0.0, 
      dot (normalWorld_11, _WorldSpaceLightPos0.xyz)
    ) * (1.0 - 
      clamp ((tmpvar_1 + tmpvar_15), 0.0, 1.0)
    )) * _LightColor0.xyz))
  , shadowColor_25), tmpvar_12, _LightShadowData.xxx));
  lowp vec4 c_27;
  lowp vec4 c_28;
  c_28.xyz = vec3(0.0, 0.0, 0.0);
  c_28.w = (reflcol_5.w * _ReflectColor.w);
  c_27.w = c_28.w;
  c_27.xyz = ((tmpvar_6 * _Color).xyz * tmpvar_12);
  c_2.w = c_27.w;
  c_2.xyz = (c_27.xyz + (reflcol_5.xyz * _ReflectColor.xyz));
  highp float tmpvar_29;
  tmpvar_29 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_29));
  c_2.w = 1.0;
  gl_FragData[0] = c_2;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" "LIGHTPROBE_SH" "FOG_LINEAR" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_WorldToShadow[4];
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = _glesVertex.xyz;
  tmpvar_3 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
  highp vec4 tmpvar_5;
  tmpvar_5 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_6;
  tmpvar_6[0] = unity_WorldToObject[0].xyz;
  tmpvar_6[1] = unity_WorldToObject[1].xyz;
  tmpvar_6[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_glesNormal * tmpvar_6));
  highp vec3 tmpvar_8;
  highp vec3 I_9;
  I_9 = (tmpvar_5.xyz - _WorldSpaceCameraPos);
  tmpvar_8 = (I_9 - (2.0 * (
    dot (tmpvar_7, I_9)
   * tmpvar_7)));
  tmpvar_1 = tmpvar_8;
  tmpvar_2.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_7;
  xlv_TEXCOORD3 = tmpvar_5.xyz;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = (unity_WorldToShadow[0] * tmpvar_5);
  xlv_TEXCOORD6 = ((tmpvar_3.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform lowp vec4 unity_ShadowColor;
uniform lowp vec4 unity_FogColor;
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump float tmpvar_1;
  lowp vec4 c_2;
  lowp vec3 tmpvar_3;
  highp vec3 tmpvar_4;
  tmpvar_4 = xlv_TEXCOORD1;
  tmpvar_3 = xlv_TEXCOORD2;
  lowp vec4 reflcol_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_5 = (textureCube (_Cube, tmpvar_4) * tmpvar_6.w);
  lowp float tmpvar_7;
  highp float lightShadowDataX_8;
  mediump float tmpvar_9;
  tmpvar_9 = _LightShadowData.x;
  lightShadowDataX_8 = tmpvar_9;
  highp float tmpvar_10;
  tmpvar_10 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD5.xy).x > xlv_TEXCOORD5.z)), lightShadowDataX_8);
  tmpvar_7 = tmpvar_10;
  tmpvar_1 = tmpvar_7;
  mediump vec3 normalWorld_11;
  normalWorld_11 = tmpvar_3;
  mediump vec3 tmpvar_12;
  highp vec4 v_13;
  v_13.x = unity_MatrixV[0].z;
  v_13.y = unity_MatrixV[1].z;
  v_13.z = unity_MatrixV[2].z;
  v_13.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_14;
  tmpvar_14 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_15;
  highp float tmpvar_16;
  tmpvar_16 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_13.xyz), sqrt(dot (tmpvar_14, tmpvar_14)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_15 = tmpvar_16;
  mediump vec3 ambient_17;
  mediump vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = normalWorld_11;
  mediump vec3 x_19;
  x_19.x = dot (unity_SHAr, tmpvar_18);
  x_19.y = dot (unity_SHAg, tmpvar_18);
  x_19.z = dot (unity_SHAb, tmpvar_18);
  mediump vec3 x1_20;
  mediump vec4 tmpvar_21;
  tmpvar_21 = (normalWorld_11.xyzz * normalWorld_11.yzzx);
  x1_20.x = dot (unity_SHBr, tmpvar_21);
  x1_20.y = dot (unity_SHBg, tmpvar_21);
  x1_20.z = dot (unity_SHBb, tmpvar_21);
  ambient_17 = max (vec3(0.0, 0.0, 0.0), (x_19 + (x1_20 + 
    (unity_SHC.xyz * ((normalWorld_11.x * normalWorld_11.x) - (normalWorld_11.y * normalWorld_11.y)))
  )));
  mediump vec3 tmpvar_22;
  tmpvar_22 = max (((1.055 * 
    pow (max (ambient_17, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  ambient_17 = tmpvar_22;
  mediump vec4 tmpvar_23;
  tmpvar_23 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_24;
  color_24 = tmpvar_23;
  tmpvar_12 = (tmpvar_22 + (unity_Lightmap_HDR.x * color_24.xyz));
  mediump vec3 shadowColor_25;
  lowp vec3 tmpvar_26;
  tmpvar_26 = unity_ShadowColor.xyz;
  shadowColor_25 = tmpvar_26;
  tmpvar_12 = min (tmpvar_12, mix (max (
    (tmpvar_12 - ((max (0.0, 
      dot (normalWorld_11, _WorldSpaceLightPos0.xyz)
    ) * (1.0 - 
      clamp ((tmpvar_1 + tmpvar_15), 0.0, 1.0)
    )) * _LightColor0.xyz))
  , shadowColor_25), tmpvar_12, _LightShadowData.xxx));
  lowp vec4 c_27;
  lowp vec4 c_28;
  c_28.xyz = vec3(0.0, 0.0, 0.0);
  c_28.w = (reflcol_5.w * _ReflectColor.w);
  c_27.w = c_28.w;
  c_27.xyz = ((tmpvar_6 * _Color).xyz * tmpvar_12);
  c_2.w = c_27.w;
  c_2.xyz = (c_27.xyz + (reflcol_5.xyz * _ReflectColor.xyz));
  highp float tmpvar_29;
  tmpvar_29 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_29));
  c_2.w = 1.0;
  gl_FragData[0] = c_2;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" "LIGHTPROBE_SH" "FOG_LINEAR" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_WorldToShadow[4];
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = _glesVertex.xyz;
  tmpvar_3 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
  highp vec4 tmpvar_5;
  tmpvar_5 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_6;
  tmpvar_6[0] = unity_WorldToObject[0].xyz;
  tmpvar_6[1] = unity_WorldToObject[1].xyz;
  tmpvar_6[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_glesNormal * tmpvar_6));
  highp vec3 tmpvar_8;
  highp vec3 I_9;
  I_9 = (tmpvar_5.xyz - _WorldSpaceCameraPos);
  tmpvar_8 = (I_9 - (2.0 * (
    dot (tmpvar_7, I_9)
   * tmpvar_7)));
  tmpvar_1 = tmpvar_8;
  tmpvar_2.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_7;
  xlv_TEXCOORD3 = tmpvar_5.xyz;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = (unity_WorldToShadow[0] * tmpvar_5);
  xlv_TEXCOORD6 = ((tmpvar_3.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform lowp vec4 unity_ShadowColor;
uniform lowp vec4 unity_FogColor;
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump float tmpvar_1;
  lowp vec4 c_2;
  lowp vec3 tmpvar_3;
  highp vec3 tmpvar_4;
  tmpvar_4 = xlv_TEXCOORD1;
  tmpvar_3 = xlv_TEXCOORD2;
  lowp vec4 reflcol_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_5 = (textureCube (_Cube, tmpvar_4) * tmpvar_6.w);
  lowp float tmpvar_7;
  highp float lightShadowDataX_8;
  mediump float tmpvar_9;
  tmpvar_9 = _LightShadowData.x;
  lightShadowDataX_8 = tmpvar_9;
  highp float tmpvar_10;
  tmpvar_10 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD5.xy).x > xlv_TEXCOORD5.z)), lightShadowDataX_8);
  tmpvar_7 = tmpvar_10;
  tmpvar_1 = tmpvar_7;
  mediump vec3 normalWorld_11;
  normalWorld_11 = tmpvar_3;
  mediump vec3 tmpvar_12;
  highp vec4 v_13;
  v_13.x = unity_MatrixV[0].z;
  v_13.y = unity_MatrixV[1].z;
  v_13.z = unity_MatrixV[2].z;
  v_13.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_14;
  tmpvar_14 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_15;
  highp float tmpvar_16;
  tmpvar_16 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_13.xyz), sqrt(dot (tmpvar_14, tmpvar_14)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_15 = tmpvar_16;
  mediump vec3 ambient_17;
  mediump vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = normalWorld_11;
  mediump vec3 x_19;
  x_19.x = dot (unity_SHAr, tmpvar_18);
  x_19.y = dot (unity_SHAg, tmpvar_18);
  x_19.z = dot (unity_SHAb, tmpvar_18);
  mediump vec3 x1_20;
  mediump vec4 tmpvar_21;
  tmpvar_21 = (normalWorld_11.xyzz * normalWorld_11.yzzx);
  x1_20.x = dot (unity_SHBr, tmpvar_21);
  x1_20.y = dot (unity_SHBg, tmpvar_21);
  x1_20.z = dot (unity_SHBb, tmpvar_21);
  ambient_17 = max (vec3(0.0, 0.0, 0.0), (x_19 + (x1_20 + 
    (unity_SHC.xyz * ((normalWorld_11.x * normalWorld_11.x) - (normalWorld_11.y * normalWorld_11.y)))
  )));
  mediump vec3 tmpvar_22;
  tmpvar_22 = max (((1.055 * 
    pow (max (ambient_17, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  ambient_17 = tmpvar_22;
  mediump vec4 tmpvar_23;
  tmpvar_23 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_24;
  color_24 = tmpvar_23;
  tmpvar_12 = (tmpvar_22 + (unity_Lightmap_HDR.x * color_24.xyz));
  mediump vec3 shadowColor_25;
  lowp vec3 tmpvar_26;
  tmpvar_26 = unity_ShadowColor.xyz;
  shadowColor_25 = tmpvar_26;
  tmpvar_12 = min (tmpvar_12, mix (max (
    (tmpvar_12 - ((max (0.0, 
      dot (normalWorld_11, _WorldSpaceLightPos0.xyz)
    ) * (1.0 - 
      clamp ((tmpvar_1 + tmpvar_15), 0.0, 1.0)
    )) * _LightColor0.xyz))
  , shadowColor_25), tmpvar_12, _LightShadowData.xxx));
  lowp vec4 c_27;
  lowp vec4 c_28;
  c_28.xyz = vec3(0.0, 0.0, 0.0);
  c_28.w = (reflcol_5.w * _ReflectColor.w);
  c_27.w = c_28.w;
  c_27.xyz = ((tmpvar_6 * _Color).xyz * tmpvar_12);
  c_2.w = c_27.w;
  c_2.xyz = (c_27.xyz + (reflcol_5.xyz * _ReflectColor.xyz));
  highp float tmpvar_29;
  tmpvar_29 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_29));
  c_2.w = 1.0;
  gl_FragData[0] = c_2;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "FOG_LINEAR" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_WorldToShadow[4];
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = _glesVertex.xyz;
  tmpvar_3 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
  highp vec4 tmpvar_5;
  tmpvar_5 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_6;
  tmpvar_6[0] = unity_WorldToObject[0].xyz;
  tmpvar_6[1] = unity_WorldToObject[1].xyz;
  tmpvar_6[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_glesNormal * tmpvar_6));
  highp vec3 tmpvar_8;
  highp vec3 I_9;
  I_9 = (tmpvar_5.xyz - _WorldSpaceCameraPos);
  tmpvar_8 = (I_9 - (2.0 * (
    dot (tmpvar_7, I_9)
   * tmpvar_7)));
  tmpvar_1 = tmpvar_8;
  tmpvar_2.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_7;
  xlv_TEXCOORD3 = tmpvar_5.xyz;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = (unity_WorldToShadow[0] * tmpvar_5);
  xlv_TEXCOORD6 = ((tmpvar_3.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 unity_OcclusionMaskSelector;
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform lowp vec4 unity_FogColor;
uniform mediump sampler2D unity_Lightmap;
uniform sampler2D unity_ShadowMask;
uniform mediump vec4 unity_Lightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  mediump vec3 tmpvar_8;
  tmpvar_8 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_8;
  tmpvar_7 = xlv_TEXCOORD1;
  tmpvar_5 = xlv_TEXCOORD2;
  lowp vec4 reflcol_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_11;
  tmpvar_11 = (tmpvar_10 * _Color);
  reflcol_9 = (textureCube (_Cube, tmpvar_7) * tmpvar_10.w);
  lowp float tmpvar_12;
  highp float lightShadowDataX_13;
  mediump float tmpvar_14;
  tmpvar_14 = _LightShadowData.x;
  lightShadowDataX_13 = tmpvar_14;
  highp float tmpvar_15;
  tmpvar_15 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD5.xy).x > xlv_TEXCOORD5.z)), lightShadowDataX_13);
  tmpvar_12 = tmpvar_15;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_6;
  tmpvar_1 = tmpvar_12;
  mediump float bakedAtten_16;
  mediump vec3 tmpvar_17;
  mediump vec3 tmpvar_18;
  lowp float tmpvar_19;
  tmpvar_19 = clamp (dot (texture2D (unity_ShadowMask, xlv_TEXCOORD4.xy), unity_OcclusionMaskSelector), 0.0, 1.0);
  bakedAtten_16 = tmpvar_19;
  highp vec4 v_20;
  v_20.x = unity_MatrixV[0].z;
  v_20.y = unity_MatrixV[1].z;
  v_20.z = unity_MatrixV[2].z;
  v_20.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_21;
  tmpvar_21 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_22;
  highp float tmpvar_23;
  tmpvar_23 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_20.xyz), sqrt(dot (tmpvar_21, tmpvar_21)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_22 = tmpvar_23;
  tmpvar_17 = (tmpvar_2 * mix (tmpvar_1, bakedAtten_16, tmpvar_22));
  mediump vec4 tmpvar_24;
  tmpvar_24 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_25;
  color_25 = tmpvar_24;
  tmpvar_18 = (unity_Lightmap_HDR.x * color_25.xyz);
  tmpvar_2 = tmpvar_17;
  lowp vec4 c_26;
  lowp vec4 c_27;
  lowp float diff_28;
  mediump float tmpvar_29;
  tmpvar_29 = max (0.0, dot (tmpvar_5, tmpvar_3));
  diff_28 = tmpvar_29;
  c_27.xyz = ((tmpvar_11.xyz * tmpvar_17) * diff_28);
  c_27.w = (reflcol_9.w * _ReflectColor.w);
  c_26.w = c_27.w;
  c_26.xyz = (c_27.xyz + (tmpvar_11.xyz * tmpvar_18));
  c_4.w = c_26.w;
  c_4.xyz = (c_26.xyz + (reflcol_9.xyz * _ReflectColor.xyz));
  highp float tmpvar_30;
  tmpvar_30 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_4.xyz = mix (unity_FogColor.xyz, c_4.xyz, vec3(tmpvar_30));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "FOG_LINEAR" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_WorldToShadow[4];
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = _glesVertex.xyz;
  tmpvar_3 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
  highp vec4 tmpvar_5;
  tmpvar_5 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_6;
  tmpvar_6[0] = unity_WorldToObject[0].xyz;
  tmpvar_6[1] = unity_WorldToObject[1].xyz;
  tmpvar_6[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_glesNormal * tmpvar_6));
  highp vec3 tmpvar_8;
  highp vec3 I_9;
  I_9 = (tmpvar_5.xyz - _WorldSpaceCameraPos);
  tmpvar_8 = (I_9 - (2.0 * (
    dot (tmpvar_7, I_9)
   * tmpvar_7)));
  tmpvar_1 = tmpvar_8;
  tmpvar_2.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_7;
  xlv_TEXCOORD3 = tmpvar_5.xyz;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = (unity_WorldToShadow[0] * tmpvar_5);
  xlv_TEXCOORD6 = ((tmpvar_3.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 unity_OcclusionMaskSelector;
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform lowp vec4 unity_FogColor;
uniform mediump sampler2D unity_Lightmap;
uniform sampler2D unity_ShadowMask;
uniform mediump vec4 unity_Lightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  mediump vec3 tmpvar_8;
  tmpvar_8 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_8;
  tmpvar_7 = xlv_TEXCOORD1;
  tmpvar_5 = xlv_TEXCOORD2;
  lowp vec4 reflcol_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_11;
  tmpvar_11 = (tmpvar_10 * _Color);
  reflcol_9 = (textureCube (_Cube, tmpvar_7) * tmpvar_10.w);
  lowp float tmpvar_12;
  highp float lightShadowDataX_13;
  mediump float tmpvar_14;
  tmpvar_14 = _LightShadowData.x;
  lightShadowDataX_13 = tmpvar_14;
  highp float tmpvar_15;
  tmpvar_15 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD5.xy).x > xlv_TEXCOORD5.z)), lightShadowDataX_13);
  tmpvar_12 = tmpvar_15;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_6;
  tmpvar_1 = tmpvar_12;
  mediump float bakedAtten_16;
  mediump vec3 tmpvar_17;
  mediump vec3 tmpvar_18;
  lowp float tmpvar_19;
  tmpvar_19 = clamp (dot (texture2D (unity_ShadowMask, xlv_TEXCOORD4.xy), unity_OcclusionMaskSelector), 0.0, 1.0);
  bakedAtten_16 = tmpvar_19;
  highp vec4 v_20;
  v_20.x = unity_MatrixV[0].z;
  v_20.y = unity_MatrixV[1].z;
  v_20.z = unity_MatrixV[2].z;
  v_20.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_21;
  tmpvar_21 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_22;
  highp float tmpvar_23;
  tmpvar_23 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_20.xyz), sqrt(dot (tmpvar_21, tmpvar_21)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_22 = tmpvar_23;
  tmpvar_17 = (tmpvar_2 * mix (tmpvar_1, bakedAtten_16, tmpvar_22));
  mediump vec4 tmpvar_24;
  tmpvar_24 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_25;
  color_25 = tmpvar_24;
  tmpvar_18 = (unity_Lightmap_HDR.x * color_25.xyz);
  tmpvar_2 = tmpvar_17;
  lowp vec4 c_26;
  lowp vec4 c_27;
  lowp float diff_28;
  mediump float tmpvar_29;
  tmpvar_29 = max (0.0, dot (tmpvar_5, tmpvar_3));
  diff_28 = tmpvar_29;
  c_27.xyz = ((tmpvar_11.xyz * tmpvar_17) * diff_28);
  c_27.w = (reflcol_9.w * _ReflectColor.w);
  c_26.w = c_27.w;
  c_26.xyz = (c_27.xyz + (tmpvar_11.xyz * tmpvar_18));
  c_4.w = c_26.w;
  c_4.xyz = (c_26.xyz + (reflcol_9.xyz * _ReflectColor.xyz));
  highp float tmpvar_30;
  tmpvar_30 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_4.xyz = mix (unity_FogColor.xyz, c_4.xyz, vec3(tmpvar_30));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "FOG_LINEAR" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_WorldToShadow[4];
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = _glesVertex.xyz;
  tmpvar_3 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
  highp vec4 tmpvar_5;
  tmpvar_5 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_6;
  tmpvar_6[0] = unity_WorldToObject[0].xyz;
  tmpvar_6[1] = unity_WorldToObject[1].xyz;
  tmpvar_6[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_glesNormal * tmpvar_6));
  highp vec3 tmpvar_8;
  highp vec3 I_9;
  I_9 = (tmpvar_5.xyz - _WorldSpaceCameraPos);
  tmpvar_8 = (I_9 - (2.0 * (
    dot (tmpvar_7, I_9)
   * tmpvar_7)));
  tmpvar_1 = tmpvar_8;
  tmpvar_2.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_7;
  xlv_TEXCOORD3 = tmpvar_5.xyz;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = (unity_WorldToShadow[0] * tmpvar_5);
  xlv_TEXCOORD6 = ((tmpvar_3.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 unity_OcclusionMaskSelector;
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform lowp vec4 unity_FogColor;
uniform mediump sampler2D unity_Lightmap;
uniform sampler2D unity_ShadowMask;
uniform mediump vec4 unity_Lightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  mediump vec3 tmpvar_8;
  tmpvar_8 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_8;
  tmpvar_7 = xlv_TEXCOORD1;
  tmpvar_5 = xlv_TEXCOORD2;
  lowp vec4 reflcol_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_11;
  tmpvar_11 = (tmpvar_10 * _Color);
  reflcol_9 = (textureCube (_Cube, tmpvar_7) * tmpvar_10.w);
  lowp float tmpvar_12;
  highp float lightShadowDataX_13;
  mediump float tmpvar_14;
  tmpvar_14 = _LightShadowData.x;
  lightShadowDataX_13 = tmpvar_14;
  highp float tmpvar_15;
  tmpvar_15 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD5.xy).x > xlv_TEXCOORD5.z)), lightShadowDataX_13);
  tmpvar_12 = tmpvar_15;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_6;
  tmpvar_1 = tmpvar_12;
  mediump float bakedAtten_16;
  mediump vec3 tmpvar_17;
  mediump vec3 tmpvar_18;
  lowp float tmpvar_19;
  tmpvar_19 = clamp (dot (texture2D (unity_ShadowMask, xlv_TEXCOORD4.xy), unity_OcclusionMaskSelector), 0.0, 1.0);
  bakedAtten_16 = tmpvar_19;
  highp vec4 v_20;
  v_20.x = unity_MatrixV[0].z;
  v_20.y = unity_MatrixV[1].z;
  v_20.z = unity_MatrixV[2].z;
  v_20.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_21;
  tmpvar_21 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_22;
  highp float tmpvar_23;
  tmpvar_23 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_20.xyz), sqrt(dot (tmpvar_21, tmpvar_21)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_22 = tmpvar_23;
  tmpvar_17 = (tmpvar_2 * mix (tmpvar_1, bakedAtten_16, tmpvar_22));
  mediump vec4 tmpvar_24;
  tmpvar_24 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_25;
  color_25 = tmpvar_24;
  tmpvar_18 = (unity_Lightmap_HDR.x * color_25.xyz);
  tmpvar_2 = tmpvar_17;
  lowp vec4 c_26;
  lowp vec4 c_27;
  lowp float diff_28;
  mediump float tmpvar_29;
  tmpvar_29 = max (0.0, dot (tmpvar_5, tmpvar_3));
  diff_28 = tmpvar_29;
  c_27.xyz = ((tmpvar_11.xyz * tmpvar_17) * diff_28);
  c_27.w = (reflcol_9.w * _ReflectColor.w);
  c_26.w = c_27.w;
  c_26.xyz = (c_27.xyz + (tmpvar_11.xyz * tmpvar_18));
  c_4.w = c_26.w;
  c_4.xyz = (c_26.xyz + (reflcol_9.xyz * _ReflectColor.xyz));
  highp float tmpvar_30;
  tmpvar_30 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_4.xyz = mix (unity_FogColor.xyz, c_4.xyz, vec3(tmpvar_30));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_WorldToShadow[4];
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = _glesVertex.xyz;
  tmpvar_3 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
  highp vec4 tmpvar_5;
  tmpvar_5 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_6;
  tmpvar_6[0] = unity_WorldToObject[0].xyz;
  tmpvar_6[1] = unity_WorldToObject[1].xyz;
  tmpvar_6[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_glesNormal * tmpvar_6));
  highp vec3 tmpvar_8;
  highp vec3 I_9;
  I_9 = (tmpvar_5.xyz - _WorldSpaceCameraPos);
  tmpvar_8 = (I_9 - (2.0 * (
    dot (tmpvar_7, I_9)
   * tmpvar_7)));
  tmpvar_1 = tmpvar_8;
  tmpvar_2.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_7;
  xlv_TEXCOORD3 = tmpvar_5.xyz;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = (unity_WorldToShadow[0] * tmpvar_5);
  xlv_TEXCOORD6 = ((tmpvar_3.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform lowp vec4 unity_OcclusionMaskSelector;
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform lowp vec4 unity_FogColor;
uniform mediump sampler2D unity_Lightmap;
uniform sampler2D unity_ShadowMask;
uniform mediump vec4 unity_Lightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  mediump vec3 tmpvar_8;
  tmpvar_8 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_8;
  tmpvar_7 = xlv_TEXCOORD1;
  tmpvar_5 = xlv_TEXCOORD2;
  lowp vec4 reflcol_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_11;
  tmpvar_11 = (tmpvar_10 * _Color);
  reflcol_9 = (textureCube (_Cube, tmpvar_7) * tmpvar_10.w);
  lowp float tmpvar_12;
  highp float lightShadowDataX_13;
  mediump float tmpvar_14;
  tmpvar_14 = _LightShadowData.x;
  lightShadowDataX_13 = tmpvar_14;
  highp float tmpvar_15;
  tmpvar_15 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD5.xy).x > xlv_TEXCOORD5.z)), lightShadowDataX_13);
  tmpvar_12 = tmpvar_15;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_6;
  tmpvar_1 = tmpvar_12;
  mediump vec3 normalWorld_16;
  normalWorld_16 = tmpvar_5;
  mediump float bakedAtten_17;
  mediump vec3 tmpvar_18;
  mediump vec3 tmpvar_19;
  lowp float tmpvar_20;
  tmpvar_20 = clamp (dot (texture2D (unity_ShadowMask, xlv_TEXCOORD4.xy), unity_OcclusionMaskSelector), 0.0, 1.0);
  bakedAtten_17 = tmpvar_20;
  highp vec4 v_21;
  v_21.x = unity_MatrixV[0].z;
  v_21.y = unity_MatrixV[1].z;
  v_21.z = unity_MatrixV[2].z;
  v_21.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_22;
  tmpvar_22 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_23;
  highp float tmpvar_24;
  tmpvar_24 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_21.xyz), sqrt(dot (tmpvar_22, tmpvar_22)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_23 = tmpvar_24;
  tmpvar_18 = (tmpvar_2 * mix (tmpvar_1, bakedAtten_17, tmpvar_23));
  mediump vec3 ambient_25;
  mediump vec4 tmpvar_26;
  tmpvar_26.w = 1.0;
  tmpvar_26.xyz = normalWorld_16;
  mediump vec3 x_27;
  x_27.x = dot (unity_SHAr, tmpvar_26);
  x_27.y = dot (unity_SHAg, tmpvar_26);
  x_27.z = dot (unity_SHAb, tmpvar_26);
  mediump vec3 x1_28;
  mediump vec4 tmpvar_29;
  tmpvar_29 = (normalWorld_16.xyzz * normalWorld_16.yzzx);
  x1_28.x = dot (unity_SHBr, tmpvar_29);
  x1_28.y = dot (unity_SHBg, tmpvar_29);
  x1_28.z = dot (unity_SHBb, tmpvar_29);
  ambient_25 = max (vec3(0.0, 0.0, 0.0), (x_27 + (x1_28 + 
    (unity_SHC.xyz * ((normalWorld_16.x * normalWorld_16.x) - (normalWorld_16.y * normalWorld_16.y)))
  )));
  mediump vec3 tmpvar_30;
  tmpvar_30 = max (((1.055 * 
    pow (max (ambient_25, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  ambient_25 = tmpvar_30;
  mediump vec4 tmpvar_31;
  tmpvar_31 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_32;
  color_32 = tmpvar_31;
  tmpvar_19 = (tmpvar_30 + (unity_Lightmap_HDR.x * color_32.xyz));
  tmpvar_2 = tmpvar_18;
  lowp vec4 c_33;
  lowp vec4 c_34;
  lowp float diff_35;
  mediump float tmpvar_36;
  tmpvar_36 = max (0.0, dot (tmpvar_5, tmpvar_3));
  diff_35 = tmpvar_36;
  c_34.xyz = ((tmpvar_11.xyz * tmpvar_18) * diff_35);
  c_34.w = (reflcol_9.w * _ReflectColor.w);
  c_33.w = c_34.w;
  c_33.xyz = (c_34.xyz + (tmpvar_11.xyz * tmpvar_19));
  c_4.w = c_33.w;
  c_4.xyz = (c_33.xyz + (reflcol_9.xyz * _ReflectColor.xyz));
  highp float tmpvar_37;
  tmpvar_37 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_4.xyz = mix (unity_FogColor.xyz, c_4.xyz, vec3(tmpvar_37));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_WorldToShadow[4];
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = _glesVertex.xyz;
  tmpvar_3 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
  highp vec4 tmpvar_5;
  tmpvar_5 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_6;
  tmpvar_6[0] = unity_WorldToObject[0].xyz;
  tmpvar_6[1] = unity_WorldToObject[1].xyz;
  tmpvar_6[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_glesNormal * tmpvar_6));
  highp vec3 tmpvar_8;
  highp vec3 I_9;
  I_9 = (tmpvar_5.xyz - _WorldSpaceCameraPos);
  tmpvar_8 = (I_9 - (2.0 * (
    dot (tmpvar_7, I_9)
   * tmpvar_7)));
  tmpvar_1 = tmpvar_8;
  tmpvar_2.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_7;
  xlv_TEXCOORD3 = tmpvar_5.xyz;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = (unity_WorldToShadow[0] * tmpvar_5);
  xlv_TEXCOORD6 = ((tmpvar_3.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform lowp vec4 unity_OcclusionMaskSelector;
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform lowp vec4 unity_FogColor;
uniform mediump sampler2D unity_Lightmap;
uniform sampler2D unity_ShadowMask;
uniform mediump vec4 unity_Lightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  mediump vec3 tmpvar_8;
  tmpvar_8 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_8;
  tmpvar_7 = xlv_TEXCOORD1;
  tmpvar_5 = xlv_TEXCOORD2;
  lowp vec4 reflcol_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_11;
  tmpvar_11 = (tmpvar_10 * _Color);
  reflcol_9 = (textureCube (_Cube, tmpvar_7) * tmpvar_10.w);
  lowp float tmpvar_12;
  highp float lightShadowDataX_13;
  mediump float tmpvar_14;
  tmpvar_14 = _LightShadowData.x;
  lightShadowDataX_13 = tmpvar_14;
  highp float tmpvar_15;
  tmpvar_15 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD5.xy).x > xlv_TEXCOORD5.z)), lightShadowDataX_13);
  tmpvar_12 = tmpvar_15;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_6;
  tmpvar_1 = tmpvar_12;
  mediump vec3 normalWorld_16;
  normalWorld_16 = tmpvar_5;
  mediump float bakedAtten_17;
  mediump vec3 tmpvar_18;
  mediump vec3 tmpvar_19;
  lowp float tmpvar_20;
  tmpvar_20 = clamp (dot (texture2D (unity_ShadowMask, xlv_TEXCOORD4.xy), unity_OcclusionMaskSelector), 0.0, 1.0);
  bakedAtten_17 = tmpvar_20;
  highp vec4 v_21;
  v_21.x = unity_MatrixV[0].z;
  v_21.y = unity_MatrixV[1].z;
  v_21.z = unity_MatrixV[2].z;
  v_21.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_22;
  tmpvar_22 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_23;
  highp float tmpvar_24;
  tmpvar_24 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_21.xyz), sqrt(dot (tmpvar_22, tmpvar_22)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_23 = tmpvar_24;
  tmpvar_18 = (tmpvar_2 * mix (tmpvar_1, bakedAtten_17, tmpvar_23));
  mediump vec3 ambient_25;
  mediump vec4 tmpvar_26;
  tmpvar_26.w = 1.0;
  tmpvar_26.xyz = normalWorld_16;
  mediump vec3 x_27;
  x_27.x = dot (unity_SHAr, tmpvar_26);
  x_27.y = dot (unity_SHAg, tmpvar_26);
  x_27.z = dot (unity_SHAb, tmpvar_26);
  mediump vec3 x1_28;
  mediump vec4 tmpvar_29;
  tmpvar_29 = (normalWorld_16.xyzz * normalWorld_16.yzzx);
  x1_28.x = dot (unity_SHBr, tmpvar_29);
  x1_28.y = dot (unity_SHBg, tmpvar_29);
  x1_28.z = dot (unity_SHBb, tmpvar_29);
  ambient_25 = max (vec3(0.0, 0.0, 0.0), (x_27 + (x1_28 + 
    (unity_SHC.xyz * ((normalWorld_16.x * normalWorld_16.x) - (normalWorld_16.y * normalWorld_16.y)))
  )));
  mediump vec3 tmpvar_30;
  tmpvar_30 = max (((1.055 * 
    pow (max (ambient_25, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  ambient_25 = tmpvar_30;
  mediump vec4 tmpvar_31;
  tmpvar_31 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_32;
  color_32 = tmpvar_31;
  tmpvar_19 = (tmpvar_30 + (unity_Lightmap_HDR.x * color_32.xyz));
  tmpvar_2 = tmpvar_18;
  lowp vec4 c_33;
  lowp vec4 c_34;
  lowp float diff_35;
  mediump float tmpvar_36;
  tmpvar_36 = max (0.0, dot (tmpvar_5, tmpvar_3));
  diff_35 = tmpvar_36;
  c_34.xyz = ((tmpvar_11.xyz * tmpvar_18) * diff_35);
  c_34.w = (reflcol_9.w * _ReflectColor.w);
  c_33.w = c_34.w;
  c_33.xyz = (c_34.xyz + (tmpvar_11.xyz * tmpvar_19));
  c_4.w = c_33.w;
  c_4.xyz = (c_33.xyz + (reflcol_9.xyz * _ReflectColor.xyz));
  highp float tmpvar_37;
  tmpvar_37 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_4.xyz = mix (unity_FogColor.xyz, c_4.xyz, vec3(tmpvar_37));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_WorldToShadow[4];
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = _glesVertex.xyz;
  tmpvar_3 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
  highp vec4 tmpvar_5;
  tmpvar_5 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_6;
  tmpvar_6[0] = unity_WorldToObject[0].xyz;
  tmpvar_6[1] = unity_WorldToObject[1].xyz;
  tmpvar_6[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_glesNormal * tmpvar_6));
  highp vec3 tmpvar_8;
  highp vec3 I_9;
  I_9 = (tmpvar_5.xyz - _WorldSpaceCameraPos);
  tmpvar_8 = (I_9 - (2.0 * (
    dot (tmpvar_7, I_9)
   * tmpvar_7)));
  tmpvar_1 = tmpvar_8;
  tmpvar_2.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_7;
  xlv_TEXCOORD3 = tmpvar_5.xyz;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = (unity_WorldToShadow[0] * tmpvar_5);
  xlv_TEXCOORD6 = ((tmpvar_3.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform lowp vec4 unity_OcclusionMaskSelector;
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform lowp vec4 unity_FogColor;
uniform mediump sampler2D unity_Lightmap;
uniform sampler2D unity_ShadowMask;
uniform mediump vec4 unity_Lightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  mediump vec3 tmpvar_8;
  tmpvar_8 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_8;
  tmpvar_7 = xlv_TEXCOORD1;
  tmpvar_5 = xlv_TEXCOORD2;
  lowp vec4 reflcol_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_11;
  tmpvar_11 = (tmpvar_10 * _Color);
  reflcol_9 = (textureCube (_Cube, tmpvar_7) * tmpvar_10.w);
  lowp float tmpvar_12;
  highp float lightShadowDataX_13;
  mediump float tmpvar_14;
  tmpvar_14 = _LightShadowData.x;
  lightShadowDataX_13 = tmpvar_14;
  highp float tmpvar_15;
  tmpvar_15 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD5.xy).x > xlv_TEXCOORD5.z)), lightShadowDataX_13);
  tmpvar_12 = tmpvar_15;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_6;
  tmpvar_1 = tmpvar_12;
  mediump vec3 normalWorld_16;
  normalWorld_16 = tmpvar_5;
  mediump float bakedAtten_17;
  mediump vec3 tmpvar_18;
  mediump vec3 tmpvar_19;
  lowp float tmpvar_20;
  tmpvar_20 = clamp (dot (texture2D (unity_ShadowMask, xlv_TEXCOORD4.xy), unity_OcclusionMaskSelector), 0.0, 1.0);
  bakedAtten_17 = tmpvar_20;
  highp vec4 v_21;
  v_21.x = unity_MatrixV[0].z;
  v_21.y = unity_MatrixV[1].z;
  v_21.z = unity_MatrixV[2].z;
  v_21.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_22;
  tmpvar_22 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_23;
  highp float tmpvar_24;
  tmpvar_24 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_21.xyz), sqrt(dot (tmpvar_22, tmpvar_22)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_23 = tmpvar_24;
  tmpvar_18 = (tmpvar_2 * mix (tmpvar_1, bakedAtten_17, tmpvar_23));
  mediump vec3 ambient_25;
  mediump vec4 tmpvar_26;
  tmpvar_26.w = 1.0;
  tmpvar_26.xyz = normalWorld_16;
  mediump vec3 x_27;
  x_27.x = dot (unity_SHAr, tmpvar_26);
  x_27.y = dot (unity_SHAg, tmpvar_26);
  x_27.z = dot (unity_SHAb, tmpvar_26);
  mediump vec3 x1_28;
  mediump vec4 tmpvar_29;
  tmpvar_29 = (normalWorld_16.xyzz * normalWorld_16.yzzx);
  x1_28.x = dot (unity_SHBr, tmpvar_29);
  x1_28.y = dot (unity_SHBg, tmpvar_29);
  x1_28.z = dot (unity_SHBb, tmpvar_29);
  ambient_25 = max (vec3(0.0, 0.0, 0.0), (x_27 + (x1_28 + 
    (unity_SHC.xyz * ((normalWorld_16.x * normalWorld_16.x) - (normalWorld_16.y * normalWorld_16.y)))
  )));
  mediump vec3 tmpvar_30;
  tmpvar_30 = max (((1.055 * 
    pow (max (ambient_25, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  ambient_25 = tmpvar_30;
  mediump vec4 tmpvar_31;
  tmpvar_31 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_32;
  color_32 = tmpvar_31;
  tmpvar_19 = (tmpvar_30 + (unity_Lightmap_HDR.x * color_32.xyz));
  tmpvar_2 = tmpvar_18;
  lowp vec4 c_33;
  lowp vec4 c_34;
  lowp float diff_35;
  mediump float tmpvar_36;
  tmpvar_36 = max (0.0, dot (tmpvar_5, tmpvar_3));
  diff_35 = tmpvar_36;
  c_34.xyz = ((tmpvar_11.xyz * tmpvar_18) * diff_35);
  c_34.w = (reflcol_9.w * _ReflectColor.w);
  c_33.w = c_34.w;
  c_33.xyz = (c_34.xyz + (tmpvar_11.xyz * tmpvar_19));
  c_4.w = c_33.w;
  c_4.xyz = (c_33.xyz + (reflcol_9.xyz * _ReflectColor.xyz));
  highp float tmpvar_37;
  tmpvar_37 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_4.xyz = mix (unity_FogColor.xyz, c_4.xyz, vec3(tmpvar_37));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" "SHADOWS_SHADOWMASK" "FOG_LINEAR" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_WorldToShadow[4];
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = _glesVertex.xyz;
  tmpvar_3 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
  highp vec4 tmpvar_5;
  tmpvar_5 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_6;
  tmpvar_6[0] = unity_WorldToObject[0].xyz;
  tmpvar_6[1] = unity_WorldToObject[1].xyz;
  tmpvar_6[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_glesNormal * tmpvar_6));
  highp vec3 tmpvar_8;
  highp vec3 I_9;
  I_9 = (tmpvar_5.xyz - _WorldSpaceCameraPos);
  tmpvar_8 = (I_9 - (2.0 * (
    dot (tmpvar_7, I_9)
   * tmpvar_7)));
  tmpvar_1 = tmpvar_8;
  tmpvar_2.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_7;
  xlv_TEXCOORD3 = tmpvar_5.xyz;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = (unity_WorldToShadow[0] * tmpvar_5);
  xlv_TEXCOORD6 = ((tmpvar_3.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 unity_OcclusionMaskSelector;
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform lowp vec4 unity_FogColor;
uniform mediump sampler2D unity_Lightmap;
uniform sampler2D unity_ShadowMask;
uniform mediump vec4 unity_Lightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  mediump vec3 tmpvar_8;
  tmpvar_8 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_8;
  tmpvar_7 = xlv_TEXCOORD1;
  tmpvar_5 = xlv_TEXCOORD2;
  lowp vec4 reflcol_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_11;
  tmpvar_11 = (tmpvar_10 * _Color);
  reflcol_9 = (textureCube (_Cube, tmpvar_7) * tmpvar_10.w);
  lowp float tmpvar_12;
  highp float lightShadowDataX_13;
  mediump float tmpvar_14;
  tmpvar_14 = _LightShadowData.x;
  lightShadowDataX_13 = tmpvar_14;
  highp float tmpvar_15;
  tmpvar_15 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD5.xy).x > xlv_TEXCOORD5.z)), lightShadowDataX_13);
  tmpvar_12 = tmpvar_15;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_6;
  tmpvar_1 = tmpvar_12;
  mediump float bakedAtten_16;
  mediump vec3 tmpvar_17;
  mediump vec3 tmpvar_18;
  lowp float tmpvar_19;
  tmpvar_19 = clamp (dot (texture2D (unity_ShadowMask, xlv_TEXCOORD4.xy), unity_OcclusionMaskSelector), 0.0, 1.0);
  bakedAtten_16 = tmpvar_19;
  highp vec4 v_20;
  v_20.x = unity_MatrixV[0].z;
  v_20.y = unity_MatrixV[1].z;
  v_20.z = unity_MatrixV[2].z;
  v_20.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_21;
  tmpvar_21 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_22;
  highp float tmpvar_23;
  tmpvar_23 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_20.xyz), sqrt(dot (tmpvar_21, tmpvar_21)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_22 = tmpvar_23;
  tmpvar_17 = (tmpvar_2 * min (clamp (
    (tmpvar_1 + tmpvar_22)
  , 0.0, 1.0), bakedAtten_16));
  mediump vec4 tmpvar_24;
  tmpvar_24 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_25;
  color_25 = tmpvar_24;
  tmpvar_18 = (unity_Lightmap_HDR.x * color_25.xyz);
  tmpvar_2 = tmpvar_17;
  lowp vec4 c_26;
  lowp vec4 c_27;
  lowp float diff_28;
  mediump float tmpvar_29;
  tmpvar_29 = max (0.0, dot (tmpvar_5, tmpvar_3));
  diff_28 = tmpvar_29;
  c_27.xyz = ((tmpvar_11.xyz * tmpvar_17) * diff_28);
  c_27.w = (reflcol_9.w * _ReflectColor.w);
  c_26.w = c_27.w;
  c_26.xyz = (c_27.xyz + (tmpvar_11.xyz * tmpvar_18));
  c_4.w = c_26.w;
  c_4.xyz = (c_26.xyz + (reflcol_9.xyz * _ReflectColor.xyz));
  highp float tmpvar_30;
  tmpvar_30 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_4.xyz = mix (unity_FogColor.xyz, c_4.xyz, vec3(tmpvar_30));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" "SHADOWS_SHADOWMASK" "FOG_LINEAR" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_WorldToShadow[4];
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = _glesVertex.xyz;
  tmpvar_3 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
  highp vec4 tmpvar_5;
  tmpvar_5 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_6;
  tmpvar_6[0] = unity_WorldToObject[0].xyz;
  tmpvar_6[1] = unity_WorldToObject[1].xyz;
  tmpvar_6[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_glesNormal * tmpvar_6));
  highp vec3 tmpvar_8;
  highp vec3 I_9;
  I_9 = (tmpvar_5.xyz - _WorldSpaceCameraPos);
  tmpvar_8 = (I_9 - (2.0 * (
    dot (tmpvar_7, I_9)
   * tmpvar_7)));
  tmpvar_1 = tmpvar_8;
  tmpvar_2.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_7;
  xlv_TEXCOORD3 = tmpvar_5.xyz;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = (unity_WorldToShadow[0] * tmpvar_5);
  xlv_TEXCOORD6 = ((tmpvar_3.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 unity_OcclusionMaskSelector;
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform lowp vec4 unity_FogColor;
uniform mediump sampler2D unity_Lightmap;
uniform sampler2D unity_ShadowMask;
uniform mediump vec4 unity_Lightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  mediump vec3 tmpvar_8;
  tmpvar_8 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_8;
  tmpvar_7 = xlv_TEXCOORD1;
  tmpvar_5 = xlv_TEXCOORD2;
  lowp vec4 reflcol_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_11;
  tmpvar_11 = (tmpvar_10 * _Color);
  reflcol_9 = (textureCube (_Cube, tmpvar_7) * tmpvar_10.w);
  lowp float tmpvar_12;
  highp float lightShadowDataX_13;
  mediump float tmpvar_14;
  tmpvar_14 = _LightShadowData.x;
  lightShadowDataX_13 = tmpvar_14;
  highp float tmpvar_15;
  tmpvar_15 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD5.xy).x > xlv_TEXCOORD5.z)), lightShadowDataX_13);
  tmpvar_12 = tmpvar_15;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_6;
  tmpvar_1 = tmpvar_12;
  mediump float bakedAtten_16;
  mediump vec3 tmpvar_17;
  mediump vec3 tmpvar_18;
  lowp float tmpvar_19;
  tmpvar_19 = clamp (dot (texture2D (unity_ShadowMask, xlv_TEXCOORD4.xy), unity_OcclusionMaskSelector), 0.0, 1.0);
  bakedAtten_16 = tmpvar_19;
  highp vec4 v_20;
  v_20.x = unity_MatrixV[0].z;
  v_20.y = unity_MatrixV[1].z;
  v_20.z = unity_MatrixV[2].z;
  v_20.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_21;
  tmpvar_21 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_22;
  highp float tmpvar_23;
  tmpvar_23 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_20.xyz), sqrt(dot (tmpvar_21, tmpvar_21)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_22 = tmpvar_23;
  tmpvar_17 = (tmpvar_2 * min (clamp (
    (tmpvar_1 + tmpvar_22)
  , 0.0, 1.0), bakedAtten_16));
  mediump vec4 tmpvar_24;
  tmpvar_24 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_25;
  color_25 = tmpvar_24;
  tmpvar_18 = (unity_Lightmap_HDR.x * color_25.xyz);
  tmpvar_2 = tmpvar_17;
  lowp vec4 c_26;
  lowp vec4 c_27;
  lowp float diff_28;
  mediump float tmpvar_29;
  tmpvar_29 = max (0.0, dot (tmpvar_5, tmpvar_3));
  diff_28 = tmpvar_29;
  c_27.xyz = ((tmpvar_11.xyz * tmpvar_17) * diff_28);
  c_27.w = (reflcol_9.w * _ReflectColor.w);
  c_26.w = c_27.w;
  c_26.xyz = (c_27.xyz + (tmpvar_11.xyz * tmpvar_18));
  c_4.w = c_26.w;
  c_4.xyz = (c_26.xyz + (reflcol_9.xyz * _ReflectColor.xyz));
  highp float tmpvar_30;
  tmpvar_30 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_4.xyz = mix (unity_FogColor.xyz, c_4.xyz, vec3(tmpvar_30));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" "SHADOWS_SHADOWMASK" "FOG_LINEAR" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_WorldToShadow[4];
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = _glesVertex.xyz;
  tmpvar_3 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
  highp vec4 tmpvar_5;
  tmpvar_5 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_6;
  tmpvar_6[0] = unity_WorldToObject[0].xyz;
  tmpvar_6[1] = unity_WorldToObject[1].xyz;
  tmpvar_6[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_glesNormal * tmpvar_6));
  highp vec3 tmpvar_8;
  highp vec3 I_9;
  I_9 = (tmpvar_5.xyz - _WorldSpaceCameraPos);
  tmpvar_8 = (I_9 - (2.0 * (
    dot (tmpvar_7, I_9)
   * tmpvar_7)));
  tmpvar_1 = tmpvar_8;
  tmpvar_2.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_7;
  xlv_TEXCOORD3 = tmpvar_5.xyz;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = (unity_WorldToShadow[0] * tmpvar_5);
  xlv_TEXCOORD6 = ((tmpvar_3.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 unity_OcclusionMaskSelector;
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform lowp vec4 unity_FogColor;
uniform mediump sampler2D unity_Lightmap;
uniform sampler2D unity_ShadowMask;
uniform mediump vec4 unity_Lightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  mediump vec3 tmpvar_8;
  tmpvar_8 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_8;
  tmpvar_7 = xlv_TEXCOORD1;
  tmpvar_5 = xlv_TEXCOORD2;
  lowp vec4 reflcol_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_11;
  tmpvar_11 = (tmpvar_10 * _Color);
  reflcol_9 = (textureCube (_Cube, tmpvar_7) * tmpvar_10.w);
  lowp float tmpvar_12;
  highp float lightShadowDataX_13;
  mediump float tmpvar_14;
  tmpvar_14 = _LightShadowData.x;
  lightShadowDataX_13 = tmpvar_14;
  highp float tmpvar_15;
  tmpvar_15 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD5.xy).x > xlv_TEXCOORD5.z)), lightShadowDataX_13);
  tmpvar_12 = tmpvar_15;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_6;
  tmpvar_1 = tmpvar_12;
  mediump float bakedAtten_16;
  mediump vec3 tmpvar_17;
  mediump vec3 tmpvar_18;
  lowp float tmpvar_19;
  tmpvar_19 = clamp (dot (texture2D (unity_ShadowMask, xlv_TEXCOORD4.xy), unity_OcclusionMaskSelector), 0.0, 1.0);
  bakedAtten_16 = tmpvar_19;
  highp vec4 v_20;
  v_20.x = unity_MatrixV[0].z;
  v_20.y = unity_MatrixV[1].z;
  v_20.z = unity_MatrixV[2].z;
  v_20.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_21;
  tmpvar_21 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_22;
  highp float tmpvar_23;
  tmpvar_23 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_20.xyz), sqrt(dot (tmpvar_21, tmpvar_21)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_22 = tmpvar_23;
  tmpvar_17 = (tmpvar_2 * min (clamp (
    (tmpvar_1 + tmpvar_22)
  , 0.0, 1.0), bakedAtten_16));
  mediump vec4 tmpvar_24;
  tmpvar_24 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_25;
  color_25 = tmpvar_24;
  tmpvar_18 = (unity_Lightmap_HDR.x * color_25.xyz);
  tmpvar_2 = tmpvar_17;
  lowp vec4 c_26;
  lowp vec4 c_27;
  lowp float diff_28;
  mediump float tmpvar_29;
  tmpvar_29 = max (0.0, dot (tmpvar_5, tmpvar_3));
  diff_28 = tmpvar_29;
  c_27.xyz = ((tmpvar_11.xyz * tmpvar_17) * diff_28);
  c_27.w = (reflcol_9.w * _ReflectColor.w);
  c_26.w = c_27.w;
  c_26.xyz = (c_27.xyz + (tmpvar_11.xyz * tmpvar_18));
  c_4.w = c_26.w;
  c_4.xyz = (c_26.xyz + (reflcol_9.xyz * _ReflectColor.xyz));
  highp float tmpvar_30;
  tmpvar_30 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_4.xyz = mix (unity_FogColor.xyz, c_4.xyz, vec3(tmpvar_30));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_WorldToShadow[4];
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = _glesVertex.xyz;
  tmpvar_3 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
  highp vec4 tmpvar_5;
  tmpvar_5 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_6;
  tmpvar_6[0] = unity_WorldToObject[0].xyz;
  tmpvar_6[1] = unity_WorldToObject[1].xyz;
  tmpvar_6[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_glesNormal * tmpvar_6));
  highp vec3 tmpvar_8;
  highp vec3 I_9;
  I_9 = (tmpvar_5.xyz - _WorldSpaceCameraPos);
  tmpvar_8 = (I_9 - (2.0 * (
    dot (tmpvar_7, I_9)
   * tmpvar_7)));
  tmpvar_1 = tmpvar_8;
  tmpvar_2.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_7;
  xlv_TEXCOORD3 = tmpvar_5.xyz;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = (unity_WorldToShadow[0] * tmpvar_5);
  xlv_TEXCOORD6 = ((tmpvar_3.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform lowp vec4 unity_OcclusionMaskSelector;
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform lowp vec4 unity_FogColor;
uniform mediump sampler2D unity_Lightmap;
uniform sampler2D unity_ShadowMask;
uniform mediump vec4 unity_Lightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  mediump vec3 tmpvar_8;
  tmpvar_8 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_8;
  tmpvar_7 = xlv_TEXCOORD1;
  tmpvar_5 = xlv_TEXCOORD2;
  lowp vec4 reflcol_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_11;
  tmpvar_11 = (tmpvar_10 * _Color);
  reflcol_9 = (textureCube (_Cube, tmpvar_7) * tmpvar_10.w);
  lowp float tmpvar_12;
  highp float lightShadowDataX_13;
  mediump float tmpvar_14;
  tmpvar_14 = _LightShadowData.x;
  lightShadowDataX_13 = tmpvar_14;
  highp float tmpvar_15;
  tmpvar_15 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD5.xy).x > xlv_TEXCOORD5.z)), lightShadowDataX_13);
  tmpvar_12 = tmpvar_15;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_6;
  tmpvar_1 = tmpvar_12;
  mediump vec3 normalWorld_16;
  normalWorld_16 = tmpvar_5;
  mediump float bakedAtten_17;
  mediump vec3 tmpvar_18;
  mediump vec3 tmpvar_19;
  lowp float tmpvar_20;
  tmpvar_20 = clamp (dot (texture2D (unity_ShadowMask, xlv_TEXCOORD4.xy), unity_OcclusionMaskSelector), 0.0, 1.0);
  bakedAtten_17 = tmpvar_20;
  highp vec4 v_21;
  v_21.x = unity_MatrixV[0].z;
  v_21.y = unity_MatrixV[1].z;
  v_21.z = unity_MatrixV[2].z;
  v_21.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_22;
  tmpvar_22 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_23;
  highp float tmpvar_24;
  tmpvar_24 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_21.xyz), sqrt(dot (tmpvar_22, tmpvar_22)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_23 = tmpvar_24;
  tmpvar_18 = (tmpvar_2 * min (clamp (
    (tmpvar_1 + tmpvar_23)
  , 0.0, 1.0), bakedAtten_17));
  mediump vec3 ambient_25;
  mediump vec4 tmpvar_26;
  tmpvar_26.w = 1.0;
  tmpvar_26.xyz = normalWorld_16;
  mediump vec3 x_27;
  x_27.x = dot (unity_SHAr, tmpvar_26);
  x_27.y = dot (unity_SHAg, tmpvar_26);
  x_27.z = dot (unity_SHAb, tmpvar_26);
  mediump vec3 x1_28;
  mediump vec4 tmpvar_29;
  tmpvar_29 = (normalWorld_16.xyzz * normalWorld_16.yzzx);
  x1_28.x = dot (unity_SHBr, tmpvar_29);
  x1_28.y = dot (unity_SHBg, tmpvar_29);
  x1_28.z = dot (unity_SHBb, tmpvar_29);
  ambient_25 = max (vec3(0.0, 0.0, 0.0), (x_27 + (x1_28 + 
    (unity_SHC.xyz * ((normalWorld_16.x * normalWorld_16.x) - (normalWorld_16.y * normalWorld_16.y)))
  )));
  mediump vec3 tmpvar_30;
  tmpvar_30 = max (((1.055 * 
    pow (max (ambient_25, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  ambient_25 = tmpvar_30;
  mediump vec4 tmpvar_31;
  tmpvar_31 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_32;
  color_32 = tmpvar_31;
  tmpvar_19 = (tmpvar_30 + (unity_Lightmap_HDR.x * color_32.xyz));
  tmpvar_2 = tmpvar_18;
  lowp vec4 c_33;
  lowp vec4 c_34;
  lowp float diff_35;
  mediump float tmpvar_36;
  tmpvar_36 = max (0.0, dot (tmpvar_5, tmpvar_3));
  diff_35 = tmpvar_36;
  c_34.xyz = ((tmpvar_11.xyz * tmpvar_18) * diff_35);
  c_34.w = (reflcol_9.w * _ReflectColor.w);
  c_33.w = c_34.w;
  c_33.xyz = (c_34.xyz + (tmpvar_11.xyz * tmpvar_19));
  c_4.w = c_33.w;
  c_4.xyz = (c_33.xyz + (reflcol_9.xyz * _ReflectColor.xyz));
  highp float tmpvar_37;
  tmpvar_37 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_4.xyz = mix (unity_FogColor.xyz, c_4.xyz, vec3(tmpvar_37));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_WorldToShadow[4];
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = _glesVertex.xyz;
  tmpvar_3 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
  highp vec4 tmpvar_5;
  tmpvar_5 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_6;
  tmpvar_6[0] = unity_WorldToObject[0].xyz;
  tmpvar_6[1] = unity_WorldToObject[1].xyz;
  tmpvar_6[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_glesNormal * tmpvar_6));
  highp vec3 tmpvar_8;
  highp vec3 I_9;
  I_9 = (tmpvar_5.xyz - _WorldSpaceCameraPos);
  tmpvar_8 = (I_9 - (2.0 * (
    dot (tmpvar_7, I_9)
   * tmpvar_7)));
  tmpvar_1 = tmpvar_8;
  tmpvar_2.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_7;
  xlv_TEXCOORD3 = tmpvar_5.xyz;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = (unity_WorldToShadow[0] * tmpvar_5);
  xlv_TEXCOORD6 = ((tmpvar_3.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform lowp vec4 unity_OcclusionMaskSelector;
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform lowp vec4 unity_FogColor;
uniform mediump sampler2D unity_Lightmap;
uniform sampler2D unity_ShadowMask;
uniform mediump vec4 unity_Lightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  mediump vec3 tmpvar_8;
  tmpvar_8 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_8;
  tmpvar_7 = xlv_TEXCOORD1;
  tmpvar_5 = xlv_TEXCOORD2;
  lowp vec4 reflcol_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_11;
  tmpvar_11 = (tmpvar_10 * _Color);
  reflcol_9 = (textureCube (_Cube, tmpvar_7) * tmpvar_10.w);
  lowp float tmpvar_12;
  highp float lightShadowDataX_13;
  mediump float tmpvar_14;
  tmpvar_14 = _LightShadowData.x;
  lightShadowDataX_13 = tmpvar_14;
  highp float tmpvar_15;
  tmpvar_15 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD5.xy).x > xlv_TEXCOORD5.z)), lightShadowDataX_13);
  tmpvar_12 = tmpvar_15;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_6;
  tmpvar_1 = tmpvar_12;
  mediump vec3 normalWorld_16;
  normalWorld_16 = tmpvar_5;
  mediump float bakedAtten_17;
  mediump vec3 tmpvar_18;
  mediump vec3 tmpvar_19;
  lowp float tmpvar_20;
  tmpvar_20 = clamp (dot (texture2D (unity_ShadowMask, xlv_TEXCOORD4.xy), unity_OcclusionMaskSelector), 0.0, 1.0);
  bakedAtten_17 = tmpvar_20;
  highp vec4 v_21;
  v_21.x = unity_MatrixV[0].z;
  v_21.y = unity_MatrixV[1].z;
  v_21.z = unity_MatrixV[2].z;
  v_21.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_22;
  tmpvar_22 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_23;
  highp float tmpvar_24;
  tmpvar_24 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_21.xyz), sqrt(dot (tmpvar_22, tmpvar_22)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_23 = tmpvar_24;
  tmpvar_18 = (tmpvar_2 * min (clamp (
    (tmpvar_1 + tmpvar_23)
  , 0.0, 1.0), bakedAtten_17));
  mediump vec3 ambient_25;
  mediump vec4 tmpvar_26;
  tmpvar_26.w = 1.0;
  tmpvar_26.xyz = normalWorld_16;
  mediump vec3 x_27;
  x_27.x = dot (unity_SHAr, tmpvar_26);
  x_27.y = dot (unity_SHAg, tmpvar_26);
  x_27.z = dot (unity_SHAb, tmpvar_26);
  mediump vec3 x1_28;
  mediump vec4 tmpvar_29;
  tmpvar_29 = (normalWorld_16.xyzz * normalWorld_16.yzzx);
  x1_28.x = dot (unity_SHBr, tmpvar_29);
  x1_28.y = dot (unity_SHBg, tmpvar_29);
  x1_28.z = dot (unity_SHBb, tmpvar_29);
  ambient_25 = max (vec3(0.0, 0.0, 0.0), (x_27 + (x1_28 + 
    (unity_SHC.xyz * ((normalWorld_16.x * normalWorld_16.x) - (normalWorld_16.y * normalWorld_16.y)))
  )));
  mediump vec3 tmpvar_30;
  tmpvar_30 = max (((1.055 * 
    pow (max (ambient_25, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  ambient_25 = tmpvar_30;
  mediump vec4 tmpvar_31;
  tmpvar_31 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_32;
  color_32 = tmpvar_31;
  tmpvar_19 = (tmpvar_30 + (unity_Lightmap_HDR.x * color_32.xyz));
  tmpvar_2 = tmpvar_18;
  lowp vec4 c_33;
  lowp vec4 c_34;
  lowp float diff_35;
  mediump float tmpvar_36;
  tmpvar_36 = max (0.0, dot (tmpvar_5, tmpvar_3));
  diff_35 = tmpvar_36;
  c_34.xyz = ((tmpvar_11.xyz * tmpvar_18) * diff_35);
  c_34.w = (reflcol_9.w * _ReflectColor.w);
  c_33.w = c_34.w;
  c_33.xyz = (c_34.xyz + (tmpvar_11.xyz * tmpvar_19));
  c_4.w = c_33.w;
  c_4.xyz = (c_33.xyz + (reflcol_9.xyz * _ReflectColor.xyz));
  highp float tmpvar_37;
  tmpvar_37 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_4.xyz = mix (unity_FogColor.xyz, c_4.xyz, vec3(tmpvar_37));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_WorldToShadow[4];
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = _glesVertex.xyz;
  tmpvar_3 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
  highp vec4 tmpvar_5;
  tmpvar_5 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_6;
  tmpvar_6[0] = unity_WorldToObject[0].xyz;
  tmpvar_6[1] = unity_WorldToObject[1].xyz;
  tmpvar_6[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_glesNormal * tmpvar_6));
  highp vec3 tmpvar_8;
  highp vec3 I_9;
  I_9 = (tmpvar_5.xyz - _WorldSpaceCameraPos);
  tmpvar_8 = (I_9 - (2.0 * (
    dot (tmpvar_7, I_9)
   * tmpvar_7)));
  tmpvar_1 = tmpvar_8;
  tmpvar_2.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_7;
  xlv_TEXCOORD3 = tmpvar_5.xyz;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = (unity_WorldToShadow[0] * tmpvar_5);
  xlv_TEXCOORD6 = ((tmpvar_3.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform lowp vec4 unity_OcclusionMaskSelector;
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform lowp vec4 unity_FogColor;
uniform mediump sampler2D unity_Lightmap;
uniform sampler2D unity_ShadowMask;
uniform mediump vec4 unity_Lightmap_HDR;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  mediump vec3 tmpvar_8;
  tmpvar_8 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_8;
  tmpvar_7 = xlv_TEXCOORD1;
  tmpvar_5 = xlv_TEXCOORD2;
  lowp vec4 reflcol_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_11;
  tmpvar_11 = (tmpvar_10 * _Color);
  reflcol_9 = (textureCube (_Cube, tmpvar_7) * tmpvar_10.w);
  lowp float tmpvar_12;
  highp float lightShadowDataX_13;
  mediump float tmpvar_14;
  tmpvar_14 = _LightShadowData.x;
  lightShadowDataX_13 = tmpvar_14;
  highp float tmpvar_15;
  tmpvar_15 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD5.xy).x > xlv_TEXCOORD5.z)), lightShadowDataX_13);
  tmpvar_12 = tmpvar_15;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_6;
  tmpvar_1 = tmpvar_12;
  mediump vec3 normalWorld_16;
  normalWorld_16 = tmpvar_5;
  mediump float bakedAtten_17;
  mediump vec3 tmpvar_18;
  mediump vec3 tmpvar_19;
  lowp float tmpvar_20;
  tmpvar_20 = clamp (dot (texture2D (unity_ShadowMask, xlv_TEXCOORD4.xy), unity_OcclusionMaskSelector), 0.0, 1.0);
  bakedAtten_17 = tmpvar_20;
  highp vec4 v_21;
  v_21.x = unity_MatrixV[0].z;
  v_21.y = unity_MatrixV[1].z;
  v_21.z = unity_MatrixV[2].z;
  v_21.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_22;
  tmpvar_22 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_23;
  highp float tmpvar_24;
  tmpvar_24 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_21.xyz), sqrt(dot (tmpvar_22, tmpvar_22)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_23 = tmpvar_24;
  tmpvar_18 = (tmpvar_2 * min (clamp (
    (tmpvar_1 + tmpvar_23)
  , 0.0, 1.0), bakedAtten_17));
  mediump vec3 ambient_25;
  mediump vec4 tmpvar_26;
  tmpvar_26.w = 1.0;
  tmpvar_26.xyz = normalWorld_16;
  mediump vec3 x_27;
  x_27.x = dot (unity_SHAr, tmpvar_26);
  x_27.y = dot (unity_SHAg, tmpvar_26);
  x_27.z = dot (unity_SHAb, tmpvar_26);
  mediump vec3 x1_28;
  mediump vec4 tmpvar_29;
  tmpvar_29 = (normalWorld_16.xyzz * normalWorld_16.yzzx);
  x1_28.x = dot (unity_SHBr, tmpvar_29);
  x1_28.y = dot (unity_SHBg, tmpvar_29);
  x1_28.z = dot (unity_SHBb, tmpvar_29);
  ambient_25 = max (vec3(0.0, 0.0, 0.0), (x_27 + (x1_28 + 
    (unity_SHC.xyz * ((normalWorld_16.x * normalWorld_16.x) - (normalWorld_16.y * normalWorld_16.y)))
  )));
  mediump vec3 tmpvar_30;
  tmpvar_30 = max (((1.055 * 
    pow (max (ambient_25, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  ambient_25 = tmpvar_30;
  mediump vec4 tmpvar_31;
  tmpvar_31 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_32;
  color_32 = tmpvar_31;
  tmpvar_19 = (tmpvar_30 + (unity_Lightmap_HDR.x * color_32.xyz));
  tmpvar_2 = tmpvar_18;
  lowp vec4 c_33;
  lowp vec4 c_34;
  lowp float diff_35;
  mediump float tmpvar_36;
  tmpvar_36 = max (0.0, dot (tmpvar_5, tmpvar_3));
  diff_35 = tmpvar_36;
  c_34.xyz = ((tmpvar_11.xyz * tmpvar_18) * diff_35);
  c_34.w = (reflcol_9.w * _ReflectColor.w);
  c_33.w = c_34.w;
  c_33.xyz = (c_34.xyz + (tmpvar_11.xyz * tmpvar_19));
  c_4.w = c_33.w;
  c_4.xyz = (c_33.xyz + (reflcol_9.xyz * _ReflectColor.xyz));
  highp float tmpvar_37;
  tmpvar_37 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_4.xyz = mix (unity_FogColor.xyz, c_4.xyz, vec3(tmpvar_37));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "FOG_LINEAR" "VERTEXLIGHT_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec3 tmpvar_4;
  tmpvar_4 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_5;
  tmpvar_5[0] = unity_WorldToObject[0].xyz;
  tmpvar_5[1] = unity_WorldToObject[1].xyz;
  tmpvar_5[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_glesNormal * tmpvar_5));
  highp vec3 tmpvar_7;
  highp vec3 I_8;
  I_8 = (tmpvar_4 - _WorldSpaceCameraPos);
  tmpvar_7 = (I_8 - (2.0 * (
    dot (tmpvar_6, I_8)
   * tmpvar_6)));
  tmpvar_1 = tmpvar_7;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD6 = ((tmpvar_2.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 unity_FogColor;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec4 c_3;
  lowp vec3 tmpvar_4;
  lowp vec3 lightDir_5;
  highp vec3 tmpvar_6;
  mediump vec3 tmpvar_7;
  tmpvar_7 = _WorldSpaceLightPos0.xyz;
  lightDir_5 = tmpvar_7;
  tmpvar_6 = xlv_TEXCOORD1;
  tmpvar_4 = xlv_TEXCOORD2;
  lowp vec4 reflcol_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_8 = (textureCube (_Cube, tmpvar_6) * tmpvar_9.w);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_5;
  lowp vec4 c_10;
  lowp vec4 c_11;
  lowp float diff_12;
  mediump float tmpvar_13;
  tmpvar_13 = max (0.0, dot (tmpvar_4, tmpvar_2));
  diff_12 = tmpvar_13;
  c_11.xyz = (((tmpvar_9 * _Color).xyz * tmpvar_1) * diff_12);
  c_11.w = (reflcol_8.w * _ReflectColor.w);
  c_10.w = c_11.w;
  c_10.xyz = c_11.xyz;
  c_3.w = c_10.w;
  c_3.xyz = (c_11.xyz + (reflcol_8.xyz * _ReflectColor.xyz));
  highp float tmpvar_14;
  tmpvar_14 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_3.xyz = mix (unity_FogColor.xyz, c_3.xyz, vec3(tmpvar_14));
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "FOG_LINEAR" "VERTEXLIGHT_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec3 tmpvar_4;
  tmpvar_4 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_5;
  tmpvar_5[0] = unity_WorldToObject[0].xyz;
  tmpvar_5[1] = unity_WorldToObject[1].xyz;
  tmpvar_5[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_glesNormal * tmpvar_5));
  highp vec3 tmpvar_7;
  highp vec3 I_8;
  I_8 = (tmpvar_4 - _WorldSpaceCameraPos);
  tmpvar_7 = (I_8 - (2.0 * (
    dot (tmpvar_6, I_8)
   * tmpvar_6)));
  tmpvar_1 = tmpvar_7;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD6 = ((tmpvar_2.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 unity_FogColor;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec4 c_3;
  lowp vec3 tmpvar_4;
  lowp vec3 lightDir_5;
  highp vec3 tmpvar_6;
  mediump vec3 tmpvar_7;
  tmpvar_7 = _WorldSpaceLightPos0.xyz;
  lightDir_5 = tmpvar_7;
  tmpvar_6 = xlv_TEXCOORD1;
  tmpvar_4 = xlv_TEXCOORD2;
  lowp vec4 reflcol_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_8 = (textureCube (_Cube, tmpvar_6) * tmpvar_9.w);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_5;
  lowp vec4 c_10;
  lowp vec4 c_11;
  lowp float diff_12;
  mediump float tmpvar_13;
  tmpvar_13 = max (0.0, dot (tmpvar_4, tmpvar_2));
  diff_12 = tmpvar_13;
  c_11.xyz = (((tmpvar_9 * _Color).xyz * tmpvar_1) * diff_12);
  c_11.w = (reflcol_8.w * _ReflectColor.w);
  c_10.w = c_11.w;
  c_10.xyz = c_11.xyz;
  c_3.w = c_10.w;
  c_3.xyz = (c_11.xyz + (reflcol_8.xyz * _ReflectColor.xyz));
  highp float tmpvar_14;
  tmpvar_14 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_3.xyz = mix (unity_FogColor.xyz, c_3.xyz, vec3(tmpvar_14));
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "FOG_LINEAR" "VERTEXLIGHT_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec3 tmpvar_4;
  tmpvar_4 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_5;
  tmpvar_5[0] = unity_WorldToObject[0].xyz;
  tmpvar_5[1] = unity_WorldToObject[1].xyz;
  tmpvar_5[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_glesNormal * tmpvar_5));
  highp vec3 tmpvar_7;
  highp vec3 I_8;
  I_8 = (tmpvar_4 - _WorldSpaceCameraPos);
  tmpvar_7 = (I_8 - (2.0 * (
    dot (tmpvar_6, I_8)
   * tmpvar_6)));
  tmpvar_1 = tmpvar_7;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD6 = ((tmpvar_2.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 unity_FogColor;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec4 c_3;
  lowp vec3 tmpvar_4;
  lowp vec3 lightDir_5;
  highp vec3 tmpvar_6;
  mediump vec3 tmpvar_7;
  tmpvar_7 = _WorldSpaceLightPos0.xyz;
  lightDir_5 = tmpvar_7;
  tmpvar_6 = xlv_TEXCOORD1;
  tmpvar_4 = xlv_TEXCOORD2;
  lowp vec4 reflcol_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_8 = (textureCube (_Cube, tmpvar_6) * tmpvar_9.w);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_5;
  lowp vec4 c_10;
  lowp vec4 c_11;
  lowp float diff_12;
  mediump float tmpvar_13;
  tmpvar_13 = max (0.0, dot (tmpvar_4, tmpvar_2));
  diff_12 = tmpvar_13;
  c_11.xyz = (((tmpvar_9 * _Color).xyz * tmpvar_1) * diff_12);
  c_11.w = (reflcol_8.w * _ReflectColor.w);
  c_10.w = c_11.w;
  c_10.xyz = c_11.xyz;
  c_3.w = c_10.w;
  c_3.xyz = (c_11.xyz + (reflcol_8.xyz * _ReflectColor.xyz));
  highp float tmpvar_14;
  tmpvar_14 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_3.xyz = mix (unity_FogColor.xyz, c_3.xyz, vec3(tmpvar_14));
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "FOG_LINEAR" "VERTEXLIGHT_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD4;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = _glesVertex.xyz;
  tmpvar_3 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
  highp vec3 tmpvar_5;
  tmpvar_5 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = unity_WorldToObject[0].xyz;
  tmpvar_6[1] = unity_WorldToObject[1].xyz;
  tmpvar_6[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_glesNormal * tmpvar_6));
  highp vec3 tmpvar_8;
  highp vec3 I_9;
  I_9 = (tmpvar_5 - _WorldSpaceCameraPos);
  tmpvar_8 = (I_9 - (2.0 * (
    dot (tmpvar_7, I_9)
   * tmpvar_7)));
  tmpvar_1 = tmpvar_8;
  highp vec3 lightColor0_10;
  lightColor0_10 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_11;
  lightColor1_11 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_12;
  lightColor2_12 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_13;
  lightColor3_13 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_14;
  lightAttenSq_14 = unity_4LightAtten0;
  highp vec3 col_15;
  highp vec4 ndotl_16;
  highp vec4 lengthSq_17;
  highp vec4 tmpvar_18;
  tmpvar_18 = (unity_4LightPosX0 - tmpvar_5.x);
  highp vec4 tmpvar_19;
  tmpvar_19 = (unity_4LightPosY0 - tmpvar_5.y);
  highp vec4 tmpvar_20;
  tmpvar_20 = (unity_4LightPosZ0 - tmpvar_5.z);
  lengthSq_17 = (tmpvar_18 * tmpvar_18);
  lengthSq_17 = (lengthSq_17 + (tmpvar_19 * tmpvar_19));
  lengthSq_17 = (lengthSq_17 + (tmpvar_20 * tmpvar_20));
  highp vec4 tmpvar_21;
  tmpvar_21 = max (lengthSq_17, vec4(1e-06, 1e-06, 1e-06, 1e-06));
  lengthSq_17 = tmpvar_21;
  ndotl_16 = (tmpvar_18 * tmpvar_7.x);
  ndotl_16 = (ndotl_16 + (tmpvar_19 * tmpvar_7.y));
  ndotl_16 = (ndotl_16 + (tmpvar_20 * tmpvar_7.z));
  highp vec4 tmpvar_22;
  tmpvar_22 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_16 * inversesqrt(tmpvar_21)));
  ndotl_16 = tmpvar_22;
  highp vec4 tmpvar_23;
  tmpvar_23 = (tmpvar_22 * (1.0/((1.0 + 
    (tmpvar_21 * lightAttenSq_14)
  ))));
  col_15 = (lightColor0_10 * tmpvar_23.x);
  col_15 = (col_15 + (lightColor1_11 * tmpvar_23.y));
  col_15 = (col_15 + (lightColor2_12 * tmpvar_23.z));
  col_15 = (col_15 + (lightColor3_13 * tmpvar_23.w));
  tmpvar_2 = col_15;
  mediump vec3 normal_24;
  normal_24 = tmpvar_7;
  mediump vec3 ambient_25;
  mediump vec4 tmpvar_26;
  tmpvar_26.w = 1.0;
  tmpvar_26.xyz = normal_24;
  mediump vec3 res_27;
  mediump vec3 x_28;
  x_28.x = dot (unity_SHAr, tmpvar_26);
  x_28.y = dot (unity_SHAg, tmpvar_26);
  x_28.z = dot (unity_SHAb, tmpvar_26);
  mediump vec3 x1_29;
  mediump vec4 tmpvar_30;
  tmpvar_30 = (normal_24.xyzz * normal_24.yzzx);
  x1_29.x = dot (unity_SHBr, tmpvar_30);
  x1_29.y = dot (unity_SHBg, tmpvar_30);
  x1_29.z = dot (unity_SHBb, tmpvar_30);
  res_27 = (x_28 + (x1_29 + (unity_SHC.xyz * 
    ((normal_24.x * normal_24.x) - (normal_24.y * normal_24.y))
  )));
  mediump vec3 tmpvar_31;
  tmpvar_31 = max (((1.055 * 
    pow (max (res_27, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_27 = tmpvar_31;
  ambient_25 = (tmpvar_2 + max (vec3(0.0, 0.0, 0.0), tmpvar_31));
  tmpvar_2 = ambient_25;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_7;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = ambient_25;
  xlv_TEXCOORD6 = ((tmpvar_3.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 unity_FogColor;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD4;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec4 c_3;
  lowp vec3 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  mediump vec3 tmpvar_8;
  tmpvar_8 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_8;
  tmpvar_7 = xlv_TEXCOORD1;
  tmpvar_5 = xlv_TEXCOORD2;
  lowp vec4 reflcol_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_9 = (textureCube (_Cube, tmpvar_7) * tmpvar_10.w);
  tmpvar_4 = (tmpvar_10 * _Color).xyz;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  lowp vec4 c_11;
  lowp vec4 c_12;
  lowp float diff_13;
  mediump float tmpvar_14;
  tmpvar_14 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_13 = tmpvar_14;
  c_12.xyz = ((tmpvar_4 * tmpvar_1) * diff_13);
  c_12.w = (reflcol_9.w * _ReflectColor.w);
  c_11.w = c_12.w;
  c_11.xyz = (c_12.xyz + (tmpvar_4 * xlv_TEXCOORD4));
  c_3.w = c_11.w;
  c_3.xyz = (c_11.xyz + (reflcol_9.xyz * _ReflectColor.xyz));
  highp float tmpvar_15;
  tmpvar_15 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_3.xyz = mix (unity_FogColor.xyz, c_3.xyz, vec3(tmpvar_15));
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "FOG_LINEAR" "VERTEXLIGHT_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD4;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = _glesVertex.xyz;
  tmpvar_3 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
  highp vec3 tmpvar_5;
  tmpvar_5 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = unity_WorldToObject[0].xyz;
  tmpvar_6[1] = unity_WorldToObject[1].xyz;
  tmpvar_6[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_glesNormal * tmpvar_6));
  highp vec3 tmpvar_8;
  highp vec3 I_9;
  I_9 = (tmpvar_5 - _WorldSpaceCameraPos);
  tmpvar_8 = (I_9 - (2.0 * (
    dot (tmpvar_7, I_9)
   * tmpvar_7)));
  tmpvar_1 = tmpvar_8;
  highp vec3 lightColor0_10;
  lightColor0_10 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_11;
  lightColor1_11 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_12;
  lightColor2_12 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_13;
  lightColor3_13 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_14;
  lightAttenSq_14 = unity_4LightAtten0;
  highp vec3 col_15;
  highp vec4 ndotl_16;
  highp vec4 lengthSq_17;
  highp vec4 tmpvar_18;
  tmpvar_18 = (unity_4LightPosX0 - tmpvar_5.x);
  highp vec4 tmpvar_19;
  tmpvar_19 = (unity_4LightPosY0 - tmpvar_5.y);
  highp vec4 tmpvar_20;
  tmpvar_20 = (unity_4LightPosZ0 - tmpvar_5.z);
  lengthSq_17 = (tmpvar_18 * tmpvar_18);
  lengthSq_17 = (lengthSq_17 + (tmpvar_19 * tmpvar_19));
  lengthSq_17 = (lengthSq_17 + (tmpvar_20 * tmpvar_20));
  highp vec4 tmpvar_21;
  tmpvar_21 = max (lengthSq_17, vec4(1e-06, 1e-06, 1e-06, 1e-06));
  lengthSq_17 = tmpvar_21;
  ndotl_16 = (tmpvar_18 * tmpvar_7.x);
  ndotl_16 = (ndotl_16 + (tmpvar_19 * tmpvar_7.y));
  ndotl_16 = (ndotl_16 + (tmpvar_20 * tmpvar_7.z));
  highp vec4 tmpvar_22;
  tmpvar_22 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_16 * inversesqrt(tmpvar_21)));
  ndotl_16 = tmpvar_22;
  highp vec4 tmpvar_23;
  tmpvar_23 = (tmpvar_22 * (1.0/((1.0 + 
    (tmpvar_21 * lightAttenSq_14)
  ))));
  col_15 = (lightColor0_10 * tmpvar_23.x);
  col_15 = (col_15 + (lightColor1_11 * tmpvar_23.y));
  col_15 = (col_15 + (lightColor2_12 * tmpvar_23.z));
  col_15 = (col_15 + (lightColor3_13 * tmpvar_23.w));
  tmpvar_2 = col_15;
  mediump vec3 normal_24;
  normal_24 = tmpvar_7;
  mediump vec3 ambient_25;
  mediump vec4 tmpvar_26;
  tmpvar_26.w = 1.0;
  tmpvar_26.xyz = normal_24;
  mediump vec3 res_27;
  mediump vec3 x_28;
  x_28.x = dot (unity_SHAr, tmpvar_26);
  x_28.y = dot (unity_SHAg, tmpvar_26);
  x_28.z = dot (unity_SHAb, tmpvar_26);
  mediump vec3 x1_29;
  mediump vec4 tmpvar_30;
  tmpvar_30 = (normal_24.xyzz * normal_24.yzzx);
  x1_29.x = dot (unity_SHBr, tmpvar_30);
  x1_29.y = dot (unity_SHBg, tmpvar_30);
  x1_29.z = dot (unity_SHBb, tmpvar_30);
  res_27 = (x_28 + (x1_29 + (unity_SHC.xyz * 
    ((normal_24.x * normal_24.x) - (normal_24.y * normal_24.y))
  )));
  mediump vec3 tmpvar_31;
  tmpvar_31 = max (((1.055 * 
    pow (max (res_27, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_27 = tmpvar_31;
  ambient_25 = (tmpvar_2 + max (vec3(0.0, 0.0, 0.0), tmpvar_31));
  tmpvar_2 = ambient_25;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_7;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = ambient_25;
  xlv_TEXCOORD6 = ((tmpvar_3.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 unity_FogColor;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD4;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec4 c_3;
  lowp vec3 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  mediump vec3 tmpvar_8;
  tmpvar_8 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_8;
  tmpvar_7 = xlv_TEXCOORD1;
  tmpvar_5 = xlv_TEXCOORD2;
  lowp vec4 reflcol_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_9 = (textureCube (_Cube, tmpvar_7) * tmpvar_10.w);
  tmpvar_4 = (tmpvar_10 * _Color).xyz;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  lowp vec4 c_11;
  lowp vec4 c_12;
  lowp float diff_13;
  mediump float tmpvar_14;
  tmpvar_14 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_13 = tmpvar_14;
  c_12.xyz = ((tmpvar_4 * tmpvar_1) * diff_13);
  c_12.w = (reflcol_9.w * _ReflectColor.w);
  c_11.w = c_12.w;
  c_11.xyz = (c_12.xyz + (tmpvar_4 * xlv_TEXCOORD4));
  c_3.w = c_11.w;
  c_3.xyz = (c_11.xyz + (reflcol_9.xyz * _ReflectColor.xyz));
  highp float tmpvar_15;
  tmpvar_15 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_3.xyz = mix (unity_FogColor.xyz, c_3.xyz, vec3(tmpvar_15));
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "FOG_LINEAR" "VERTEXLIGHT_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD4;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = _glesVertex.xyz;
  tmpvar_3 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
  highp vec3 tmpvar_5;
  tmpvar_5 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = unity_WorldToObject[0].xyz;
  tmpvar_6[1] = unity_WorldToObject[1].xyz;
  tmpvar_6[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_glesNormal * tmpvar_6));
  highp vec3 tmpvar_8;
  highp vec3 I_9;
  I_9 = (tmpvar_5 - _WorldSpaceCameraPos);
  tmpvar_8 = (I_9 - (2.0 * (
    dot (tmpvar_7, I_9)
   * tmpvar_7)));
  tmpvar_1 = tmpvar_8;
  highp vec3 lightColor0_10;
  lightColor0_10 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_11;
  lightColor1_11 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_12;
  lightColor2_12 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_13;
  lightColor3_13 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_14;
  lightAttenSq_14 = unity_4LightAtten0;
  highp vec3 col_15;
  highp vec4 ndotl_16;
  highp vec4 lengthSq_17;
  highp vec4 tmpvar_18;
  tmpvar_18 = (unity_4LightPosX0 - tmpvar_5.x);
  highp vec4 tmpvar_19;
  tmpvar_19 = (unity_4LightPosY0 - tmpvar_5.y);
  highp vec4 tmpvar_20;
  tmpvar_20 = (unity_4LightPosZ0 - tmpvar_5.z);
  lengthSq_17 = (tmpvar_18 * tmpvar_18);
  lengthSq_17 = (lengthSq_17 + (tmpvar_19 * tmpvar_19));
  lengthSq_17 = (lengthSq_17 + (tmpvar_20 * tmpvar_20));
  highp vec4 tmpvar_21;
  tmpvar_21 = max (lengthSq_17, vec4(1e-06, 1e-06, 1e-06, 1e-06));
  lengthSq_17 = tmpvar_21;
  ndotl_16 = (tmpvar_18 * tmpvar_7.x);
  ndotl_16 = (ndotl_16 + (tmpvar_19 * tmpvar_7.y));
  ndotl_16 = (ndotl_16 + (tmpvar_20 * tmpvar_7.z));
  highp vec4 tmpvar_22;
  tmpvar_22 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_16 * inversesqrt(tmpvar_21)));
  ndotl_16 = tmpvar_22;
  highp vec4 tmpvar_23;
  tmpvar_23 = (tmpvar_22 * (1.0/((1.0 + 
    (tmpvar_21 * lightAttenSq_14)
  ))));
  col_15 = (lightColor0_10 * tmpvar_23.x);
  col_15 = (col_15 + (lightColor1_11 * tmpvar_23.y));
  col_15 = (col_15 + (lightColor2_12 * tmpvar_23.z));
  col_15 = (col_15 + (lightColor3_13 * tmpvar_23.w));
  tmpvar_2 = col_15;
  mediump vec3 normal_24;
  normal_24 = tmpvar_7;
  mediump vec3 ambient_25;
  mediump vec4 tmpvar_26;
  tmpvar_26.w = 1.0;
  tmpvar_26.xyz = normal_24;
  mediump vec3 res_27;
  mediump vec3 x_28;
  x_28.x = dot (unity_SHAr, tmpvar_26);
  x_28.y = dot (unity_SHAg, tmpvar_26);
  x_28.z = dot (unity_SHAb, tmpvar_26);
  mediump vec3 x1_29;
  mediump vec4 tmpvar_30;
  tmpvar_30 = (normal_24.xyzz * normal_24.yzzx);
  x1_29.x = dot (unity_SHBr, tmpvar_30);
  x1_29.y = dot (unity_SHBg, tmpvar_30);
  x1_29.z = dot (unity_SHBb, tmpvar_30);
  res_27 = (x_28 + (x1_29 + (unity_SHC.xyz * 
    ((normal_24.x * normal_24.x) - (normal_24.y * normal_24.y))
  )));
  mediump vec3 tmpvar_31;
  tmpvar_31 = max (((1.055 * 
    pow (max (res_27, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_27 = tmpvar_31;
  ambient_25 = (tmpvar_2 + max (vec3(0.0, 0.0, 0.0), tmpvar_31));
  tmpvar_2 = ambient_25;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_7;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = ambient_25;
  xlv_TEXCOORD6 = ((tmpvar_3.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 unity_FogColor;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD4;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec4 c_3;
  lowp vec3 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  mediump vec3 tmpvar_8;
  tmpvar_8 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_8;
  tmpvar_7 = xlv_TEXCOORD1;
  tmpvar_5 = xlv_TEXCOORD2;
  lowp vec4 reflcol_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_9 = (textureCube (_Cube, tmpvar_7) * tmpvar_10.w);
  tmpvar_4 = (tmpvar_10 * _Color).xyz;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  lowp vec4 c_11;
  lowp vec4 c_12;
  lowp float diff_13;
  mediump float tmpvar_14;
  tmpvar_14 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_13 = tmpvar_14;
  c_12.xyz = ((tmpvar_4 * tmpvar_1) * diff_13);
  c_12.w = (reflcol_9.w * _ReflectColor.w);
  c_11.w = c_12.w;
  c_11.xyz = (c_12.xyz + (tmpvar_4 * xlv_TEXCOORD4));
  c_3.w = c_11.w;
  c_3.xyz = (c_11.xyz + (reflcol_9.xyz * _ReflectColor.xyz));
  highp float tmpvar_15;
  tmpvar_15 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_3.xyz = mix (unity_FogColor.xyz, c_3.xyz, vec3(tmpvar_15));
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "FOG_LINEAR" "VERTEXLIGHT_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  tmpvar_5.w = 1.0;
  tmpvar_5.xyz = _glesVertex.xyz;
  tmpvar_4 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
  highp vec3 tmpvar_6;
  tmpvar_6 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_7;
  tmpvar_7[0] = unity_WorldToObject[0].xyz;
  tmpvar_7[1] = unity_WorldToObject[1].xyz;
  tmpvar_7[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_glesNormal * tmpvar_7));
  highp vec3 tmpvar_9;
  highp vec3 I_10;
  I_10 = (tmpvar_6 - _WorldSpaceCameraPos);
  tmpvar_9 = (I_10 - (2.0 * (
    dot (tmpvar_8, I_10)
   * tmpvar_8)));
  tmpvar_1 = tmpvar_9;
  gl_Position = tmpvar_4;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_8;
  xlv_TEXCOORD3 = tmpvar_6;
  xlv_TEXCOORD5 = tmpvar_2;
  xlv_TEXCOORD6 = ((tmpvar_4.z * unity_FogParams.z) + unity_FogParams.w);
  xlv_TEXCOORD7 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 unity_WorldToShadow[4];
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform lowp vec4 unity_FogColor;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp float atten_5;
  lowp vec3 tmpvar_6;
  lowp vec3 lightDir_7;
  highp vec3 tmpvar_8;
  mediump vec3 tmpvar_9;
  tmpvar_9 = _WorldSpaceLightPos0.xyz;
  lightDir_7 = tmpvar_9;
  tmpvar_8 = xlv_TEXCOORD1;
  tmpvar_6 = xlv_TEXCOORD2;
  lowp vec4 reflcol_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_10 = (textureCube (_Cube, tmpvar_8) * tmpvar_11.w);
  mediump float realtimeShadowAttenuation_12;
  highp vec4 v_13;
  v_13.x = unity_MatrixV[0].z;
  v_13.y = unity_MatrixV[1].z;
  v_13.z = unity_MatrixV[2].z;
  v_13.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_14;
  tmpvar_14 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_15;
  highp float tmpvar_16;
  tmpvar_16 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_13.xyz), sqrt(dot (tmpvar_14, tmpvar_14)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_15 = tmpvar_16;
  highp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = xlv_TEXCOORD3;
  lowp float tmpvar_18;
  highp vec4 shadowCoord_19;
  shadowCoord_19 = (unity_WorldToShadow[0] * tmpvar_17);
  highp float lightShadowDataX_20;
  mediump float tmpvar_21;
  tmpvar_21 = _LightShadowData.x;
  lightShadowDataX_20 = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = max (float((texture2D (_ShadowMapTexture, shadowCoord_19.xy).x > shadowCoord_19.z)), lightShadowDataX_20);
  tmpvar_18 = tmpvar_22;
  realtimeShadowAttenuation_12 = tmpvar_18;
  mediump float tmpvar_23;
  tmpvar_23 = clamp ((realtimeShadowAttenuation_12 + tmpvar_15), 0.0, 1.0);
  atten_5 = tmpvar_23;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_7;
  tmpvar_1 = atten_5;
  mediump vec3 tmpvar_24;
  tmpvar_24 = (tmpvar_2 * tmpvar_1);
  tmpvar_2 = tmpvar_24;
  lowp vec4 c_25;
  lowp vec4 c_26;
  lowp float diff_27;
  mediump float tmpvar_28;
  tmpvar_28 = max (0.0, dot (tmpvar_6, tmpvar_3));
  diff_27 = tmpvar_28;
  c_26.xyz = (((tmpvar_11 * _Color).xyz * tmpvar_24) * diff_27);
  c_26.w = (reflcol_10.w * _ReflectColor.w);
  c_25.w = c_26.w;
  c_25.xyz = c_26.xyz;
  c_4.w = c_25.w;
  c_4.xyz = (c_26.xyz + (reflcol_10.xyz * _ReflectColor.xyz));
  highp float tmpvar_29;
  tmpvar_29 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_4.xyz = mix (unity_FogColor.xyz, c_4.xyz, vec3(tmpvar_29));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "FOG_LINEAR" "VERTEXLIGHT_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  tmpvar_5.w = 1.0;
  tmpvar_5.xyz = _glesVertex.xyz;
  tmpvar_4 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
  highp vec3 tmpvar_6;
  tmpvar_6 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_7;
  tmpvar_7[0] = unity_WorldToObject[0].xyz;
  tmpvar_7[1] = unity_WorldToObject[1].xyz;
  tmpvar_7[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_glesNormal * tmpvar_7));
  highp vec3 tmpvar_9;
  highp vec3 I_10;
  I_10 = (tmpvar_6 - _WorldSpaceCameraPos);
  tmpvar_9 = (I_10 - (2.0 * (
    dot (tmpvar_8, I_10)
   * tmpvar_8)));
  tmpvar_1 = tmpvar_9;
  gl_Position = tmpvar_4;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_8;
  xlv_TEXCOORD3 = tmpvar_6;
  xlv_TEXCOORD5 = tmpvar_2;
  xlv_TEXCOORD6 = ((tmpvar_4.z * unity_FogParams.z) + unity_FogParams.w);
  xlv_TEXCOORD7 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 unity_WorldToShadow[4];
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform lowp vec4 unity_FogColor;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp float atten_5;
  lowp vec3 tmpvar_6;
  lowp vec3 lightDir_7;
  highp vec3 tmpvar_8;
  mediump vec3 tmpvar_9;
  tmpvar_9 = _WorldSpaceLightPos0.xyz;
  lightDir_7 = tmpvar_9;
  tmpvar_8 = xlv_TEXCOORD1;
  tmpvar_6 = xlv_TEXCOORD2;
  lowp vec4 reflcol_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_10 = (textureCube (_Cube, tmpvar_8) * tmpvar_11.w);
  mediump float realtimeShadowAttenuation_12;
  highp vec4 v_13;
  v_13.x = unity_MatrixV[0].z;
  v_13.y = unity_MatrixV[1].z;
  v_13.z = unity_MatrixV[2].z;
  v_13.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_14;
  tmpvar_14 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_15;
  highp float tmpvar_16;
  tmpvar_16 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_13.xyz), sqrt(dot (tmpvar_14, tmpvar_14)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_15 = tmpvar_16;
  highp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = xlv_TEXCOORD3;
  lowp float tmpvar_18;
  highp vec4 shadowCoord_19;
  shadowCoord_19 = (unity_WorldToShadow[0] * tmpvar_17);
  highp float lightShadowDataX_20;
  mediump float tmpvar_21;
  tmpvar_21 = _LightShadowData.x;
  lightShadowDataX_20 = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = max (float((texture2D (_ShadowMapTexture, shadowCoord_19.xy).x > shadowCoord_19.z)), lightShadowDataX_20);
  tmpvar_18 = tmpvar_22;
  realtimeShadowAttenuation_12 = tmpvar_18;
  mediump float tmpvar_23;
  tmpvar_23 = clamp ((realtimeShadowAttenuation_12 + tmpvar_15), 0.0, 1.0);
  atten_5 = tmpvar_23;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_7;
  tmpvar_1 = atten_5;
  mediump vec3 tmpvar_24;
  tmpvar_24 = (tmpvar_2 * tmpvar_1);
  tmpvar_2 = tmpvar_24;
  lowp vec4 c_25;
  lowp vec4 c_26;
  lowp float diff_27;
  mediump float tmpvar_28;
  tmpvar_28 = max (0.0, dot (tmpvar_6, tmpvar_3));
  diff_27 = tmpvar_28;
  c_26.xyz = (((tmpvar_11 * _Color).xyz * tmpvar_24) * diff_27);
  c_26.w = (reflcol_10.w * _ReflectColor.w);
  c_25.w = c_26.w;
  c_25.xyz = c_26.xyz;
  c_4.w = c_25.w;
  c_4.xyz = (c_26.xyz + (reflcol_10.xyz * _ReflectColor.xyz));
  highp float tmpvar_29;
  tmpvar_29 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_4.xyz = mix (unity_FogColor.xyz, c_4.xyz, vec3(tmpvar_29));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "FOG_LINEAR" "VERTEXLIGHT_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  tmpvar_5.w = 1.0;
  tmpvar_5.xyz = _glesVertex.xyz;
  tmpvar_4 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
  highp vec3 tmpvar_6;
  tmpvar_6 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_7;
  tmpvar_7[0] = unity_WorldToObject[0].xyz;
  tmpvar_7[1] = unity_WorldToObject[1].xyz;
  tmpvar_7[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_glesNormal * tmpvar_7));
  highp vec3 tmpvar_9;
  highp vec3 I_10;
  I_10 = (tmpvar_6 - _WorldSpaceCameraPos);
  tmpvar_9 = (I_10 - (2.0 * (
    dot (tmpvar_8, I_10)
   * tmpvar_8)));
  tmpvar_1 = tmpvar_9;
  gl_Position = tmpvar_4;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_8;
  xlv_TEXCOORD3 = tmpvar_6;
  xlv_TEXCOORD5 = tmpvar_2;
  xlv_TEXCOORD6 = ((tmpvar_4.z * unity_FogParams.z) + unity_FogParams.w);
  xlv_TEXCOORD7 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 unity_WorldToShadow[4];
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform lowp vec4 unity_FogColor;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp float atten_5;
  lowp vec3 tmpvar_6;
  lowp vec3 lightDir_7;
  highp vec3 tmpvar_8;
  mediump vec3 tmpvar_9;
  tmpvar_9 = _WorldSpaceLightPos0.xyz;
  lightDir_7 = tmpvar_9;
  tmpvar_8 = xlv_TEXCOORD1;
  tmpvar_6 = xlv_TEXCOORD2;
  lowp vec4 reflcol_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_10 = (textureCube (_Cube, tmpvar_8) * tmpvar_11.w);
  mediump float realtimeShadowAttenuation_12;
  highp vec4 v_13;
  v_13.x = unity_MatrixV[0].z;
  v_13.y = unity_MatrixV[1].z;
  v_13.z = unity_MatrixV[2].z;
  v_13.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_14;
  tmpvar_14 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_15;
  highp float tmpvar_16;
  tmpvar_16 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_13.xyz), sqrt(dot (tmpvar_14, tmpvar_14)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_15 = tmpvar_16;
  highp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = xlv_TEXCOORD3;
  lowp float tmpvar_18;
  highp vec4 shadowCoord_19;
  shadowCoord_19 = (unity_WorldToShadow[0] * tmpvar_17);
  highp float lightShadowDataX_20;
  mediump float tmpvar_21;
  tmpvar_21 = _LightShadowData.x;
  lightShadowDataX_20 = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = max (float((texture2D (_ShadowMapTexture, shadowCoord_19.xy).x > shadowCoord_19.z)), lightShadowDataX_20);
  tmpvar_18 = tmpvar_22;
  realtimeShadowAttenuation_12 = tmpvar_18;
  mediump float tmpvar_23;
  tmpvar_23 = clamp ((realtimeShadowAttenuation_12 + tmpvar_15), 0.0, 1.0);
  atten_5 = tmpvar_23;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_7;
  tmpvar_1 = atten_5;
  mediump vec3 tmpvar_24;
  tmpvar_24 = (tmpvar_2 * tmpvar_1);
  tmpvar_2 = tmpvar_24;
  lowp vec4 c_25;
  lowp vec4 c_26;
  lowp float diff_27;
  mediump float tmpvar_28;
  tmpvar_28 = max (0.0, dot (tmpvar_6, tmpvar_3));
  diff_27 = tmpvar_28;
  c_26.xyz = (((tmpvar_11 * _Color).xyz * tmpvar_24) * diff_27);
  c_26.w = (reflcol_10.w * _ReflectColor.w);
  c_25.w = c_26.w;
  c_25.xyz = c_26.xyz;
  c_4.w = c_25.w;
  c_4.xyz = (c_26.xyz + (reflcol_10.xyz * _ReflectColor.xyz));
  highp float tmpvar_29;
  tmpvar_29 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_4.xyz = mix (unity_FogColor.xyz, c_4.xyz, vec3(tmpvar_29));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "FOG_LINEAR" "VERTEXLIGHT_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  highp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = _glesVertex.xyz;
  tmpvar_5 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
  highp vec3 tmpvar_7;
  tmpvar_7 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_8;
  tmpvar_8[0] = unity_WorldToObject[0].xyz;
  tmpvar_8[1] = unity_WorldToObject[1].xyz;
  tmpvar_8[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_9;
  tmpvar_9 = normalize((_glesNormal * tmpvar_8));
  highp vec3 tmpvar_10;
  highp vec3 I_11;
  I_11 = (tmpvar_7 - _WorldSpaceCameraPos);
  tmpvar_10 = (I_11 - (2.0 * (
    dot (tmpvar_9, I_11)
   * tmpvar_9)));
  tmpvar_1 = tmpvar_10;
  highp vec3 lightColor0_12;
  lightColor0_12 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_13;
  lightColor1_13 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_14;
  lightColor2_14 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_15;
  lightColor3_15 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_16;
  lightAttenSq_16 = unity_4LightAtten0;
  highp vec3 col_17;
  highp vec4 ndotl_18;
  highp vec4 lengthSq_19;
  highp vec4 tmpvar_20;
  tmpvar_20 = (unity_4LightPosX0 - tmpvar_7.x);
  highp vec4 tmpvar_21;
  tmpvar_21 = (unity_4LightPosY0 - tmpvar_7.y);
  highp vec4 tmpvar_22;
  tmpvar_22 = (unity_4LightPosZ0 - tmpvar_7.z);
  lengthSq_19 = (tmpvar_20 * tmpvar_20);
  lengthSq_19 = (lengthSq_19 + (tmpvar_21 * tmpvar_21));
  lengthSq_19 = (lengthSq_19 + (tmpvar_22 * tmpvar_22));
  highp vec4 tmpvar_23;
  tmpvar_23 = max (lengthSq_19, vec4(1e-06, 1e-06, 1e-06, 1e-06));
  lengthSq_19 = tmpvar_23;
  ndotl_18 = (tmpvar_20 * tmpvar_9.x);
  ndotl_18 = (ndotl_18 + (tmpvar_21 * tmpvar_9.y));
  ndotl_18 = (ndotl_18 + (tmpvar_22 * tmpvar_9.z));
  highp vec4 tmpvar_24;
  tmpvar_24 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_18 * inversesqrt(tmpvar_23)));
  ndotl_18 = tmpvar_24;
  highp vec4 tmpvar_25;
  tmpvar_25 = (tmpvar_24 * (1.0/((1.0 + 
    (tmpvar_23 * lightAttenSq_16)
  ))));
  col_17 = (lightColor0_12 * tmpvar_25.x);
  col_17 = (col_17 + (lightColor1_13 * tmpvar_25.y));
  col_17 = (col_17 + (lightColor2_14 * tmpvar_25.z));
  col_17 = (col_17 + (lightColor3_15 * tmpvar_25.w));
  tmpvar_2 = col_17;
  mediump vec3 normal_26;
  normal_26 = tmpvar_9;
  mediump vec3 ambient_27;
  mediump vec3 x1_28;
  mediump vec4 tmpvar_29;
  tmpvar_29 = (normal_26.xyzz * normal_26.yzzx);
  x1_28.x = dot (unity_SHBr, tmpvar_29);
  x1_28.y = dot (unity_SHBg, tmpvar_29);
  x1_28.z = dot (unity_SHBb, tmpvar_29);
  ambient_27 = ((tmpvar_2 * (
    (tmpvar_2 * ((tmpvar_2 * 0.305306) + 0.6821711))
   + 0.01252288)) + (x1_28 + (unity_SHC.xyz * 
    ((normal_26.x * normal_26.x) - (normal_26.y * normal_26.y))
  )));
  tmpvar_2 = ambient_27;
  gl_Position = tmpvar_5;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_9;
  xlv_TEXCOORD3 = tmpvar_7;
  xlv_TEXCOORD4 = ambient_27;
  xlv_TEXCOORD5 = tmpvar_3;
  xlv_TEXCOORD6 = ((tmpvar_5.z * unity_FogParams.z) + unity_FogParams.w);
  xlv_TEXCOORD7 = tmpvar_4;
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform highp mat4 unity_WorldToShadow[4];
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform lowp vec4 unity_FogColor;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD4;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp float atten_5;
  lowp vec3 tmpvar_6;
  lowp vec3 lightDir_7;
  highp vec3 tmpvar_8;
  mediump vec3 tmpvar_9;
  tmpvar_9 = _WorldSpaceLightPos0.xyz;
  lightDir_7 = tmpvar_9;
  tmpvar_8 = xlv_TEXCOORD1;
  tmpvar_6 = xlv_TEXCOORD2;
  lowp vec4 reflcol_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_12;
  tmpvar_12 = (tmpvar_11 * _Color);
  reflcol_10 = (textureCube (_Cube, tmpvar_8) * tmpvar_11.w);
  mediump float realtimeShadowAttenuation_13;
  highp vec4 v_14;
  v_14.x = unity_MatrixV[0].z;
  v_14.y = unity_MatrixV[1].z;
  v_14.z = unity_MatrixV[2].z;
  v_14.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_15;
  tmpvar_15 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_16;
  highp float tmpvar_17;
  tmpvar_17 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_14.xyz), sqrt(dot (tmpvar_15, tmpvar_15)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_16 = tmpvar_17;
  highp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = xlv_TEXCOORD3;
  lowp float tmpvar_19;
  highp vec4 shadowCoord_20;
  shadowCoord_20 = (unity_WorldToShadow[0] * tmpvar_18);
  highp float lightShadowDataX_21;
  mediump float tmpvar_22;
  tmpvar_22 = _LightShadowData.x;
  lightShadowDataX_21 = tmpvar_22;
  highp float tmpvar_23;
  tmpvar_23 = max (float((texture2D (_ShadowMapTexture, shadowCoord_20.xy).x > shadowCoord_20.z)), lightShadowDataX_21);
  tmpvar_19 = tmpvar_23;
  realtimeShadowAttenuation_13 = tmpvar_19;
  mediump float tmpvar_24;
  tmpvar_24 = clamp ((realtimeShadowAttenuation_13 + tmpvar_16), 0.0, 1.0);
  atten_5 = tmpvar_24;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_7;
  tmpvar_1 = atten_5;
  mediump vec3 normalWorld_25;
  normalWorld_25 = tmpvar_6;
  mediump vec3 tmpvar_26;
  tmpvar_26 = (tmpvar_2 * tmpvar_1);
  mediump vec4 tmpvar_27;
  tmpvar_27.w = 1.0;
  tmpvar_27.xyz = normalWorld_25;
  mediump vec3 x_28;
  x_28.x = dot (unity_SHAr, tmpvar_27);
  x_28.y = dot (unity_SHAg, tmpvar_27);
  x_28.z = dot (unity_SHAb, tmpvar_27);
  mediump vec3 tmpvar_29;
  tmpvar_29 = max (((1.055 * 
    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD4 + x_28)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  tmpvar_2 = tmpvar_26;
  lowp vec4 c_30;
  lowp vec4 c_31;
  lowp float diff_32;
  mediump float tmpvar_33;
  tmpvar_33 = max (0.0, dot (tmpvar_6, tmpvar_3));
  diff_32 = tmpvar_33;
  c_31.xyz = ((tmpvar_12.xyz * tmpvar_26) * diff_32);
  c_31.w = (reflcol_10.w * _ReflectColor.w);
  c_30.w = c_31.w;
  c_30.xyz = (c_31.xyz + (tmpvar_12.xyz * tmpvar_29));
  c_4.w = c_30.w;
  c_4.xyz = (c_30.xyz + (reflcol_10.xyz * _ReflectColor.xyz));
  highp float tmpvar_34;
  tmpvar_34 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_4.xyz = mix (unity_FogColor.xyz, c_4.xyz, vec3(tmpvar_34));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "FOG_LINEAR" "VERTEXLIGHT_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  highp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = _glesVertex.xyz;
  tmpvar_5 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
  highp vec3 tmpvar_7;
  tmpvar_7 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_8;
  tmpvar_8[0] = unity_WorldToObject[0].xyz;
  tmpvar_8[1] = unity_WorldToObject[1].xyz;
  tmpvar_8[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_9;
  tmpvar_9 = normalize((_glesNormal * tmpvar_8));
  highp vec3 tmpvar_10;
  highp vec3 I_11;
  I_11 = (tmpvar_7 - _WorldSpaceCameraPos);
  tmpvar_10 = (I_11 - (2.0 * (
    dot (tmpvar_9, I_11)
   * tmpvar_9)));
  tmpvar_1 = tmpvar_10;
  highp vec3 lightColor0_12;
  lightColor0_12 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_13;
  lightColor1_13 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_14;
  lightColor2_14 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_15;
  lightColor3_15 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_16;
  lightAttenSq_16 = unity_4LightAtten0;
  highp vec3 col_17;
  highp vec4 ndotl_18;
  highp vec4 lengthSq_19;
  highp vec4 tmpvar_20;
  tmpvar_20 = (unity_4LightPosX0 - tmpvar_7.x);
  highp vec4 tmpvar_21;
  tmpvar_21 = (unity_4LightPosY0 - tmpvar_7.y);
  highp vec4 tmpvar_22;
  tmpvar_22 = (unity_4LightPosZ0 - tmpvar_7.z);
  lengthSq_19 = (tmpvar_20 * tmpvar_20);
  lengthSq_19 = (lengthSq_19 + (tmpvar_21 * tmpvar_21));
  lengthSq_19 = (lengthSq_19 + (tmpvar_22 * tmpvar_22));
  highp vec4 tmpvar_23;
  tmpvar_23 = max (lengthSq_19, vec4(1e-06, 1e-06, 1e-06, 1e-06));
  lengthSq_19 = tmpvar_23;
  ndotl_18 = (tmpvar_20 * tmpvar_9.x);
  ndotl_18 = (ndotl_18 + (tmpvar_21 * tmpvar_9.y));
  ndotl_18 = (ndotl_18 + (tmpvar_22 * tmpvar_9.z));
  highp vec4 tmpvar_24;
  tmpvar_24 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_18 * inversesqrt(tmpvar_23)));
  ndotl_18 = tmpvar_24;
  highp vec4 tmpvar_25;
  tmpvar_25 = (tmpvar_24 * (1.0/((1.0 + 
    (tmpvar_23 * lightAttenSq_16)
  ))));
  col_17 = (lightColor0_12 * tmpvar_25.x);
  col_17 = (col_17 + (lightColor1_13 * tmpvar_25.y));
  col_17 = (col_17 + (lightColor2_14 * tmpvar_25.z));
  col_17 = (col_17 + (lightColor3_15 * tmpvar_25.w));
  tmpvar_2 = col_17;
  mediump vec3 normal_26;
  normal_26 = tmpvar_9;
  mediump vec3 ambient_27;
  mediump vec3 x1_28;
  mediump vec4 tmpvar_29;
  tmpvar_29 = (normal_26.xyzz * normal_26.yzzx);
  x1_28.x = dot (unity_SHBr, tmpvar_29);
  x1_28.y = dot (unity_SHBg, tmpvar_29);
  x1_28.z = dot (unity_SHBb, tmpvar_29);
  ambient_27 = ((tmpvar_2 * (
    (tmpvar_2 * ((tmpvar_2 * 0.305306) + 0.6821711))
   + 0.01252288)) + (x1_28 + (unity_SHC.xyz * 
    ((normal_26.x * normal_26.x) - (normal_26.y * normal_26.y))
  )));
  tmpvar_2 = ambient_27;
  gl_Position = tmpvar_5;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_9;
  xlv_TEXCOORD3 = tmpvar_7;
  xlv_TEXCOORD4 = ambient_27;
  xlv_TEXCOORD5 = tmpvar_3;
  xlv_TEXCOORD6 = ((tmpvar_5.z * unity_FogParams.z) + unity_FogParams.w);
  xlv_TEXCOORD7 = tmpvar_4;
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform highp mat4 unity_WorldToShadow[4];
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform lowp vec4 unity_FogColor;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD4;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp float atten_5;
  lowp vec3 tmpvar_6;
  lowp vec3 lightDir_7;
  highp vec3 tmpvar_8;
  mediump vec3 tmpvar_9;
  tmpvar_9 = _WorldSpaceLightPos0.xyz;
  lightDir_7 = tmpvar_9;
  tmpvar_8 = xlv_TEXCOORD1;
  tmpvar_6 = xlv_TEXCOORD2;
  lowp vec4 reflcol_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_12;
  tmpvar_12 = (tmpvar_11 * _Color);
  reflcol_10 = (textureCube (_Cube, tmpvar_8) * tmpvar_11.w);
  mediump float realtimeShadowAttenuation_13;
  highp vec4 v_14;
  v_14.x = unity_MatrixV[0].z;
  v_14.y = unity_MatrixV[1].z;
  v_14.z = unity_MatrixV[2].z;
  v_14.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_15;
  tmpvar_15 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_16;
  highp float tmpvar_17;
  tmpvar_17 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_14.xyz), sqrt(dot (tmpvar_15, tmpvar_15)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_16 = tmpvar_17;
  highp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = xlv_TEXCOORD3;
  lowp float tmpvar_19;
  highp vec4 shadowCoord_20;
  shadowCoord_20 = (unity_WorldToShadow[0] * tmpvar_18);
  highp float lightShadowDataX_21;
  mediump float tmpvar_22;
  tmpvar_22 = _LightShadowData.x;
  lightShadowDataX_21 = tmpvar_22;
  highp float tmpvar_23;
  tmpvar_23 = max (float((texture2D (_ShadowMapTexture, shadowCoord_20.xy).x > shadowCoord_20.z)), lightShadowDataX_21);
  tmpvar_19 = tmpvar_23;
  realtimeShadowAttenuation_13 = tmpvar_19;
  mediump float tmpvar_24;
  tmpvar_24 = clamp ((realtimeShadowAttenuation_13 + tmpvar_16), 0.0, 1.0);
  atten_5 = tmpvar_24;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_7;
  tmpvar_1 = atten_5;
  mediump vec3 normalWorld_25;
  normalWorld_25 = tmpvar_6;
  mediump vec3 tmpvar_26;
  tmpvar_26 = (tmpvar_2 * tmpvar_1);
  mediump vec4 tmpvar_27;
  tmpvar_27.w = 1.0;
  tmpvar_27.xyz = normalWorld_25;
  mediump vec3 x_28;
  x_28.x = dot (unity_SHAr, tmpvar_27);
  x_28.y = dot (unity_SHAg, tmpvar_27);
  x_28.z = dot (unity_SHAb, tmpvar_27);
  mediump vec3 tmpvar_29;
  tmpvar_29 = max (((1.055 * 
    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD4 + x_28)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  tmpvar_2 = tmpvar_26;
  lowp vec4 c_30;
  lowp vec4 c_31;
  lowp float diff_32;
  mediump float tmpvar_33;
  tmpvar_33 = max (0.0, dot (tmpvar_6, tmpvar_3));
  diff_32 = tmpvar_33;
  c_31.xyz = ((tmpvar_12.xyz * tmpvar_26) * diff_32);
  c_31.w = (reflcol_10.w * _ReflectColor.w);
  c_30.w = c_31.w;
  c_30.xyz = (c_31.xyz + (tmpvar_12.xyz * tmpvar_29));
  c_4.w = c_30.w;
  c_4.xyz = (c_30.xyz + (reflcol_10.xyz * _ReflectColor.xyz));
  highp float tmpvar_34;
  tmpvar_34 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_4.xyz = mix (unity_FogColor.xyz, c_4.xyz, vec3(tmpvar_34));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "FOG_LINEAR" "VERTEXLIGHT_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  highp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = _glesVertex.xyz;
  tmpvar_5 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
  highp vec3 tmpvar_7;
  tmpvar_7 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_8;
  tmpvar_8[0] = unity_WorldToObject[0].xyz;
  tmpvar_8[1] = unity_WorldToObject[1].xyz;
  tmpvar_8[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_9;
  tmpvar_9 = normalize((_glesNormal * tmpvar_8));
  highp vec3 tmpvar_10;
  highp vec3 I_11;
  I_11 = (tmpvar_7 - _WorldSpaceCameraPos);
  tmpvar_10 = (I_11 - (2.0 * (
    dot (tmpvar_9, I_11)
   * tmpvar_9)));
  tmpvar_1 = tmpvar_10;
  highp vec3 lightColor0_12;
  lightColor0_12 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_13;
  lightColor1_13 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_14;
  lightColor2_14 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_15;
  lightColor3_15 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_16;
  lightAttenSq_16 = unity_4LightAtten0;
  highp vec3 col_17;
  highp vec4 ndotl_18;
  highp vec4 lengthSq_19;
  highp vec4 tmpvar_20;
  tmpvar_20 = (unity_4LightPosX0 - tmpvar_7.x);
  highp vec4 tmpvar_21;
  tmpvar_21 = (unity_4LightPosY0 - tmpvar_7.y);
  highp vec4 tmpvar_22;
  tmpvar_22 = (unity_4LightPosZ0 - tmpvar_7.z);
  lengthSq_19 = (tmpvar_20 * tmpvar_20);
  lengthSq_19 = (lengthSq_19 + (tmpvar_21 * tmpvar_21));
  lengthSq_19 = (lengthSq_19 + (tmpvar_22 * tmpvar_22));
  highp vec4 tmpvar_23;
  tmpvar_23 = max (lengthSq_19, vec4(1e-06, 1e-06, 1e-06, 1e-06));
  lengthSq_19 = tmpvar_23;
  ndotl_18 = (tmpvar_20 * tmpvar_9.x);
  ndotl_18 = (ndotl_18 + (tmpvar_21 * tmpvar_9.y));
  ndotl_18 = (ndotl_18 + (tmpvar_22 * tmpvar_9.z));
  highp vec4 tmpvar_24;
  tmpvar_24 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_18 * inversesqrt(tmpvar_23)));
  ndotl_18 = tmpvar_24;
  highp vec4 tmpvar_25;
  tmpvar_25 = (tmpvar_24 * (1.0/((1.0 + 
    (tmpvar_23 * lightAttenSq_16)
  ))));
  col_17 = (lightColor0_12 * tmpvar_25.x);
  col_17 = (col_17 + (lightColor1_13 * tmpvar_25.y));
  col_17 = (col_17 + (lightColor2_14 * tmpvar_25.z));
  col_17 = (col_17 + (lightColor3_15 * tmpvar_25.w));
  tmpvar_2 = col_17;
  mediump vec3 normal_26;
  normal_26 = tmpvar_9;
  mediump vec3 ambient_27;
  mediump vec3 x1_28;
  mediump vec4 tmpvar_29;
  tmpvar_29 = (normal_26.xyzz * normal_26.yzzx);
  x1_28.x = dot (unity_SHBr, tmpvar_29);
  x1_28.y = dot (unity_SHBg, tmpvar_29);
  x1_28.z = dot (unity_SHBb, tmpvar_29);
  ambient_27 = ((tmpvar_2 * (
    (tmpvar_2 * ((tmpvar_2 * 0.305306) + 0.6821711))
   + 0.01252288)) + (x1_28 + (unity_SHC.xyz * 
    ((normal_26.x * normal_26.x) - (normal_26.y * normal_26.y))
  )));
  tmpvar_2 = ambient_27;
  gl_Position = tmpvar_5;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_9;
  xlv_TEXCOORD3 = tmpvar_7;
  xlv_TEXCOORD4 = ambient_27;
  xlv_TEXCOORD5 = tmpvar_3;
  xlv_TEXCOORD6 = ((tmpvar_5.z * unity_FogParams.z) + unity_FogParams.w);
  xlv_TEXCOORD7 = tmpvar_4;
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform highp mat4 unity_WorldToShadow[4];
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform lowp vec4 unity_FogColor;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD4;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp float atten_5;
  lowp vec3 tmpvar_6;
  lowp vec3 lightDir_7;
  highp vec3 tmpvar_8;
  mediump vec3 tmpvar_9;
  tmpvar_9 = _WorldSpaceLightPos0.xyz;
  lightDir_7 = tmpvar_9;
  tmpvar_8 = xlv_TEXCOORD1;
  tmpvar_6 = xlv_TEXCOORD2;
  lowp vec4 reflcol_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_12;
  tmpvar_12 = (tmpvar_11 * _Color);
  reflcol_10 = (textureCube (_Cube, tmpvar_8) * tmpvar_11.w);
  mediump float realtimeShadowAttenuation_13;
  highp vec4 v_14;
  v_14.x = unity_MatrixV[0].z;
  v_14.y = unity_MatrixV[1].z;
  v_14.z = unity_MatrixV[2].z;
  v_14.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_15;
  tmpvar_15 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_16;
  highp float tmpvar_17;
  tmpvar_17 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_14.xyz), sqrt(dot (tmpvar_15, tmpvar_15)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_16 = tmpvar_17;
  highp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = xlv_TEXCOORD3;
  lowp float tmpvar_19;
  highp vec4 shadowCoord_20;
  shadowCoord_20 = (unity_WorldToShadow[0] * tmpvar_18);
  highp float lightShadowDataX_21;
  mediump float tmpvar_22;
  tmpvar_22 = _LightShadowData.x;
  lightShadowDataX_21 = tmpvar_22;
  highp float tmpvar_23;
  tmpvar_23 = max (float((texture2D (_ShadowMapTexture, shadowCoord_20.xy).x > shadowCoord_20.z)), lightShadowDataX_21);
  tmpvar_19 = tmpvar_23;
  realtimeShadowAttenuation_13 = tmpvar_19;
  mediump float tmpvar_24;
  tmpvar_24 = clamp ((realtimeShadowAttenuation_13 + tmpvar_16), 0.0, 1.0);
  atten_5 = tmpvar_24;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_7;
  tmpvar_1 = atten_5;
  mediump vec3 normalWorld_25;
  normalWorld_25 = tmpvar_6;
  mediump vec3 tmpvar_26;
  tmpvar_26 = (tmpvar_2 * tmpvar_1);
  mediump vec4 tmpvar_27;
  tmpvar_27.w = 1.0;
  tmpvar_27.xyz = normalWorld_25;
  mediump vec3 x_28;
  x_28.x = dot (unity_SHAr, tmpvar_27);
  x_28.y = dot (unity_SHAg, tmpvar_27);
  x_28.z = dot (unity_SHAb, tmpvar_27);
  mediump vec3 tmpvar_29;
  tmpvar_29 = max (((1.055 * 
    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD4 + x_28)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  tmpvar_2 = tmpvar_26;
  lowp vec4 c_30;
  lowp vec4 c_31;
  lowp float diff_32;
  mediump float tmpvar_33;
  tmpvar_33 = max (0.0, dot (tmpvar_6, tmpvar_3));
  diff_32 = tmpvar_33;
  c_31.xyz = ((tmpvar_12.xyz * tmpvar_26) * diff_32);
  c_31.w = (reflcol_10.w * _ReflectColor.w);
  c_30.w = c_31.w;
  c_30.xyz = (c_31.xyz + (tmpvar_12.xyz * tmpvar_29));
  c_4.w = c_30.w;
  c_4.xyz = (c_30.xyz + (reflcol_10.xyz * _ReflectColor.xyz));
  highp float tmpvar_34;
  tmpvar_34 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_4.xyz = mix (unity_FogColor.xyz, c_4.xyz, vec3(tmpvar_34));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_SHADOWMASK" "FOG_LINEAR" "VERTEXLIGHT_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec2 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = _glesVertex.xyz;
  tmpvar_3 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
  highp vec3 tmpvar_5;
  tmpvar_5 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = unity_WorldToObject[0].xyz;
  tmpvar_6[1] = unity_WorldToObject[1].xyz;
  tmpvar_6[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_glesNormal * tmpvar_6));
  highp vec3 tmpvar_8;
  highp vec3 I_9;
  I_9 = (tmpvar_5 - _WorldSpaceCameraPos);
  tmpvar_8 = (I_9 - (2.0 * (
    dot (tmpvar_7, I_9)
   * tmpvar_7)));
  tmpvar_1 = tmpvar_8;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_7;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD5 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD6 = ((tmpvar_3.z * unity_FogParams.z) + unity_FogParams.w);
  xlv_TEXCOORD7 = tmpvar_2;
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 unity_OcclusionMaskSelector;
uniform highp mat4 unity_WorldToShadow[4];
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform lowp vec4 unity_FogColor;
uniform sampler2D unity_ShadowMask;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec2 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp float atten_5;
  lowp vec3 tmpvar_6;
  lowp vec3 lightDir_7;
  highp vec3 tmpvar_8;
  mediump vec3 tmpvar_9;
  tmpvar_9 = _WorldSpaceLightPos0.xyz;
  lightDir_7 = tmpvar_9;
  tmpvar_8 = xlv_TEXCOORD1;
  tmpvar_6 = xlv_TEXCOORD2;
  lowp vec4 reflcol_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_10 = (textureCube (_Cube, tmpvar_8) * tmpvar_11.w);
  mediump float realtimeShadowAttenuation_12;
  mediump float shadowMaskAttenuation_13;
  highp vec4 v_14;
  v_14.x = unity_MatrixV[0].z;
  v_14.y = unity_MatrixV[1].z;
  v_14.z = unity_MatrixV[2].z;
  v_14.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_15;
  tmpvar_15 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_16;
  highp float tmpvar_17;
  tmpvar_17 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_14.xyz), sqrt(dot (tmpvar_15, tmpvar_15)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_16 = tmpvar_17;
  lowp float tmpvar_18;
  tmpvar_18 = clamp (dot (texture2D (unity_ShadowMask, xlv_TEXCOORD5), unity_OcclusionMaskSelector), 0.0, 1.0);
  shadowMaskAttenuation_13 = tmpvar_18;
  highp vec4 tmpvar_19;
  tmpvar_19.w = 1.0;
  tmpvar_19.xyz = xlv_TEXCOORD3;
  lowp float tmpvar_20;
  highp vec4 shadowCoord_21;
  shadowCoord_21 = (unity_WorldToShadow[0] * tmpvar_19);
  highp float lightShadowDataX_22;
  mediump float tmpvar_23;
  tmpvar_23 = _LightShadowData.x;
  lightShadowDataX_22 = tmpvar_23;
  highp float tmpvar_24;
  tmpvar_24 = max (float((texture2D (_ShadowMapTexture, shadowCoord_21.xy).x > shadowCoord_21.z)), lightShadowDataX_22);
  tmpvar_20 = tmpvar_24;
  realtimeShadowAttenuation_12 = tmpvar_20;
  mediump float tmpvar_25;
  tmpvar_25 = mix (realtimeShadowAttenuation_12, shadowMaskAttenuation_13, tmpvar_16);
  atten_5 = tmpvar_25;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_7;
  tmpvar_1 = atten_5;
  mediump vec3 tmpvar_26;
  tmpvar_26 = (tmpvar_2 * tmpvar_1);
  tmpvar_2 = tmpvar_26;
  lowp vec4 c_27;
  lowp vec4 c_28;
  lowp float diff_29;
  mediump float tmpvar_30;
  tmpvar_30 = max (0.0, dot (tmpvar_6, tmpvar_3));
  diff_29 = tmpvar_30;
  c_28.xyz = (((tmpvar_11 * _Color).xyz * tmpvar_26) * diff_29);
  c_28.w = (reflcol_10.w * _ReflectColor.w);
  c_27.w = c_28.w;
  c_27.xyz = c_28.xyz;
  c_4.w = c_27.w;
  c_4.xyz = (c_28.xyz + (reflcol_10.xyz * _ReflectColor.xyz));
  highp float tmpvar_31;
  tmpvar_31 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_4.xyz = mix (unity_FogColor.xyz, c_4.xyz, vec3(tmpvar_31));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_SHADOWMASK" "FOG_LINEAR" "VERTEXLIGHT_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec2 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = _glesVertex.xyz;
  tmpvar_3 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
  highp vec3 tmpvar_5;
  tmpvar_5 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = unity_WorldToObject[0].xyz;
  tmpvar_6[1] = unity_WorldToObject[1].xyz;
  tmpvar_6[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_glesNormal * tmpvar_6));
  highp vec3 tmpvar_8;
  highp vec3 I_9;
  I_9 = (tmpvar_5 - _WorldSpaceCameraPos);
  tmpvar_8 = (I_9 - (2.0 * (
    dot (tmpvar_7, I_9)
   * tmpvar_7)));
  tmpvar_1 = tmpvar_8;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_7;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD5 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD6 = ((tmpvar_3.z * unity_FogParams.z) + unity_FogParams.w);
  xlv_TEXCOORD7 = tmpvar_2;
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 unity_OcclusionMaskSelector;
uniform highp mat4 unity_WorldToShadow[4];
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform lowp vec4 unity_FogColor;
uniform sampler2D unity_ShadowMask;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec2 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp float atten_5;
  lowp vec3 tmpvar_6;
  lowp vec3 lightDir_7;
  highp vec3 tmpvar_8;
  mediump vec3 tmpvar_9;
  tmpvar_9 = _WorldSpaceLightPos0.xyz;
  lightDir_7 = tmpvar_9;
  tmpvar_8 = xlv_TEXCOORD1;
  tmpvar_6 = xlv_TEXCOORD2;
  lowp vec4 reflcol_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_10 = (textureCube (_Cube, tmpvar_8) * tmpvar_11.w);
  mediump float realtimeShadowAttenuation_12;
  mediump float shadowMaskAttenuation_13;
  highp vec4 v_14;
  v_14.x = unity_MatrixV[0].z;
  v_14.y = unity_MatrixV[1].z;
  v_14.z = unity_MatrixV[2].z;
  v_14.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_15;
  tmpvar_15 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_16;
  highp float tmpvar_17;
  tmpvar_17 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_14.xyz), sqrt(dot (tmpvar_15, tmpvar_15)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_16 = tmpvar_17;
  lowp float tmpvar_18;
  tmpvar_18 = clamp (dot (texture2D (unity_ShadowMask, xlv_TEXCOORD5), unity_OcclusionMaskSelector), 0.0, 1.0);
  shadowMaskAttenuation_13 = tmpvar_18;
  highp vec4 tmpvar_19;
  tmpvar_19.w = 1.0;
  tmpvar_19.xyz = xlv_TEXCOORD3;
  lowp float tmpvar_20;
  highp vec4 shadowCoord_21;
  shadowCoord_21 = (unity_WorldToShadow[0] * tmpvar_19);
  highp float lightShadowDataX_22;
  mediump float tmpvar_23;
  tmpvar_23 = _LightShadowData.x;
  lightShadowDataX_22 = tmpvar_23;
  highp float tmpvar_24;
  tmpvar_24 = max (float((texture2D (_ShadowMapTexture, shadowCoord_21.xy).x > shadowCoord_21.z)), lightShadowDataX_22);
  tmpvar_20 = tmpvar_24;
  realtimeShadowAttenuation_12 = tmpvar_20;
  mediump float tmpvar_25;
  tmpvar_25 = mix (realtimeShadowAttenuation_12, shadowMaskAttenuation_13, tmpvar_16);
  atten_5 = tmpvar_25;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_7;
  tmpvar_1 = atten_5;
  mediump vec3 tmpvar_26;
  tmpvar_26 = (tmpvar_2 * tmpvar_1);
  tmpvar_2 = tmpvar_26;
  lowp vec4 c_27;
  lowp vec4 c_28;
  lowp float diff_29;
  mediump float tmpvar_30;
  tmpvar_30 = max (0.0, dot (tmpvar_6, tmpvar_3));
  diff_29 = tmpvar_30;
  c_28.xyz = (((tmpvar_11 * _Color).xyz * tmpvar_26) * diff_29);
  c_28.w = (reflcol_10.w * _ReflectColor.w);
  c_27.w = c_28.w;
  c_27.xyz = c_28.xyz;
  c_4.w = c_27.w;
  c_4.xyz = (c_28.xyz + (reflcol_10.xyz * _ReflectColor.xyz));
  highp float tmpvar_31;
  tmpvar_31 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_4.xyz = mix (unity_FogColor.xyz, c_4.xyz, vec3(tmpvar_31));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_SHADOWMASK" "FOG_LINEAR" "VERTEXLIGHT_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec2 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = _glesVertex.xyz;
  tmpvar_3 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
  highp vec3 tmpvar_5;
  tmpvar_5 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = unity_WorldToObject[0].xyz;
  tmpvar_6[1] = unity_WorldToObject[1].xyz;
  tmpvar_6[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_glesNormal * tmpvar_6));
  highp vec3 tmpvar_8;
  highp vec3 I_9;
  I_9 = (tmpvar_5 - _WorldSpaceCameraPos);
  tmpvar_8 = (I_9 - (2.0 * (
    dot (tmpvar_7, I_9)
   * tmpvar_7)));
  tmpvar_1 = tmpvar_8;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_7;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD5 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD6 = ((tmpvar_3.z * unity_FogParams.z) + unity_FogParams.w);
  xlv_TEXCOORD7 = tmpvar_2;
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 unity_OcclusionMaskSelector;
uniform highp mat4 unity_WorldToShadow[4];
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform lowp vec4 unity_FogColor;
uniform sampler2D unity_ShadowMask;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec2 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp float atten_5;
  lowp vec3 tmpvar_6;
  lowp vec3 lightDir_7;
  highp vec3 tmpvar_8;
  mediump vec3 tmpvar_9;
  tmpvar_9 = _WorldSpaceLightPos0.xyz;
  lightDir_7 = tmpvar_9;
  tmpvar_8 = xlv_TEXCOORD1;
  tmpvar_6 = xlv_TEXCOORD2;
  lowp vec4 reflcol_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_10 = (textureCube (_Cube, tmpvar_8) * tmpvar_11.w);
  mediump float realtimeShadowAttenuation_12;
  mediump float shadowMaskAttenuation_13;
  highp vec4 v_14;
  v_14.x = unity_MatrixV[0].z;
  v_14.y = unity_MatrixV[1].z;
  v_14.z = unity_MatrixV[2].z;
  v_14.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_15;
  tmpvar_15 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_16;
  highp float tmpvar_17;
  tmpvar_17 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_14.xyz), sqrt(dot (tmpvar_15, tmpvar_15)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_16 = tmpvar_17;
  lowp float tmpvar_18;
  tmpvar_18 = clamp (dot (texture2D (unity_ShadowMask, xlv_TEXCOORD5), unity_OcclusionMaskSelector), 0.0, 1.0);
  shadowMaskAttenuation_13 = tmpvar_18;
  highp vec4 tmpvar_19;
  tmpvar_19.w = 1.0;
  tmpvar_19.xyz = xlv_TEXCOORD3;
  lowp float tmpvar_20;
  highp vec4 shadowCoord_21;
  shadowCoord_21 = (unity_WorldToShadow[0] * tmpvar_19);
  highp float lightShadowDataX_22;
  mediump float tmpvar_23;
  tmpvar_23 = _LightShadowData.x;
  lightShadowDataX_22 = tmpvar_23;
  highp float tmpvar_24;
  tmpvar_24 = max (float((texture2D (_ShadowMapTexture, shadowCoord_21.xy).x > shadowCoord_21.z)), lightShadowDataX_22);
  tmpvar_20 = tmpvar_24;
  realtimeShadowAttenuation_12 = tmpvar_20;
  mediump float tmpvar_25;
  tmpvar_25 = mix (realtimeShadowAttenuation_12, shadowMaskAttenuation_13, tmpvar_16);
  atten_5 = tmpvar_25;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_7;
  tmpvar_1 = atten_5;
  mediump vec3 tmpvar_26;
  tmpvar_26 = (tmpvar_2 * tmpvar_1);
  tmpvar_2 = tmpvar_26;
  lowp vec4 c_27;
  lowp vec4 c_28;
  lowp float diff_29;
  mediump float tmpvar_30;
  tmpvar_30 = max (0.0, dot (tmpvar_6, tmpvar_3));
  diff_29 = tmpvar_30;
  c_28.xyz = (((tmpvar_11 * _Color).xyz * tmpvar_26) * diff_29);
  c_28.w = (reflcol_10.w * _ReflectColor.w);
  c_27.w = c_28.w;
  c_27.xyz = c_28.xyz;
  c_4.w = c_27.w;
  c_4.xyz = (c_28.xyz + (reflcol_10.xyz * _ReflectColor.xyz));
  highp float tmpvar_31;
  tmpvar_31 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_4.xyz = mix (unity_FogColor.xyz, c_4.xyz, vec3(tmpvar_31));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" "VERTEXLIGHT_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  tmpvar_5.w = 1.0;
  tmpvar_5.xyz = _glesVertex.xyz;
  tmpvar_4 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
  highp vec3 tmpvar_6;
  tmpvar_6 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_7;
  tmpvar_7[0] = unity_WorldToObject[0].xyz;
  tmpvar_7[1] = unity_WorldToObject[1].xyz;
  tmpvar_7[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_glesNormal * tmpvar_7));
  highp vec3 tmpvar_9;
  highp vec3 I_10;
  I_10 = (tmpvar_6 - _WorldSpaceCameraPos);
  tmpvar_9 = (I_10 - (2.0 * (
    dot (tmpvar_8, I_10)
   * tmpvar_8)));
  tmpvar_1 = tmpvar_9;
  highp vec3 lightColor0_11;
  lightColor0_11 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_12;
  lightColor1_12 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_13;
  lightColor2_13 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_14;
  lightColor3_14 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_15;
  lightAttenSq_15 = unity_4LightAtten0;
  highp vec3 col_16;
  highp vec4 ndotl_17;
  highp vec4 lengthSq_18;
  highp vec4 tmpvar_19;
  tmpvar_19 = (unity_4LightPosX0 - tmpvar_6.x);
  highp vec4 tmpvar_20;
  tmpvar_20 = (unity_4LightPosY0 - tmpvar_6.y);
  highp vec4 tmpvar_21;
  tmpvar_21 = (unity_4LightPosZ0 - tmpvar_6.z);
  lengthSq_18 = (tmpvar_19 * tmpvar_19);
  lengthSq_18 = (lengthSq_18 + (tmpvar_20 * tmpvar_20));
  lengthSq_18 = (lengthSq_18 + (tmpvar_21 * tmpvar_21));
  highp vec4 tmpvar_22;
  tmpvar_22 = max (lengthSq_18, vec4(1e-06, 1e-06, 1e-06, 1e-06));
  lengthSq_18 = tmpvar_22;
  ndotl_17 = (tmpvar_19 * tmpvar_8.x);
  ndotl_17 = (ndotl_17 + (tmpvar_20 * tmpvar_8.y));
  ndotl_17 = (ndotl_17 + (tmpvar_21 * tmpvar_8.z));
  highp vec4 tmpvar_23;
  tmpvar_23 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_17 * inversesqrt(tmpvar_22)));
  ndotl_17 = tmpvar_23;
  highp vec4 tmpvar_24;
  tmpvar_24 = (tmpvar_23 * (1.0/((1.0 + 
    (tmpvar_22 * lightAttenSq_15)
  ))));
  col_16 = (lightColor0_11 * tmpvar_24.x);
  col_16 = (col_16 + (lightColor1_12 * tmpvar_24.y));
  col_16 = (col_16 + (lightColor2_13 * tmpvar_24.z));
  col_16 = (col_16 + (lightColor3_14 * tmpvar_24.w));
  tmpvar_2 = col_16;
  mediump vec3 normal_25;
  normal_25 = tmpvar_8;
  mediump vec3 ambient_26;
  mediump vec3 x1_27;
  mediump vec4 tmpvar_28;
  tmpvar_28 = (normal_25.xyzz * normal_25.yzzx);
  x1_27.x = dot (unity_SHBr, tmpvar_28);
  x1_27.y = dot (unity_SHBg, tmpvar_28);
  x1_27.z = dot (unity_SHBb, tmpvar_28);
  ambient_26 = ((tmpvar_2 * (
    (tmpvar_2 * ((tmpvar_2 * 0.305306) + 0.6821711))
   + 0.01252288)) + (x1_27 + (unity_SHC.xyz * 
    ((normal_25.x * normal_25.x) - (normal_25.y * normal_25.y))
  )));
  tmpvar_2 = ambient_26;
  gl_Position = tmpvar_4;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_8;
  xlv_TEXCOORD3 = tmpvar_6;
  xlv_TEXCOORD4 = ambient_26;
  xlv_TEXCOORD5 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD6 = ((tmpvar_4.z * unity_FogParams.z) + unity_FogParams.w);
  xlv_TEXCOORD7 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform lowp vec4 unity_OcclusionMaskSelector;
uniform highp mat4 unity_WorldToShadow[4];
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform lowp vec4 unity_FogColor;
uniform sampler2D unity_ShadowMask;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp float atten_5;
  lowp vec3 tmpvar_6;
  lowp vec3 lightDir_7;
  highp vec3 tmpvar_8;
  mediump vec3 tmpvar_9;
  tmpvar_9 = _WorldSpaceLightPos0.xyz;
  lightDir_7 = tmpvar_9;
  tmpvar_8 = xlv_TEXCOORD1;
  tmpvar_6 = xlv_TEXCOORD2;
  lowp vec4 reflcol_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_12;
  tmpvar_12 = (tmpvar_11 * _Color);
  reflcol_10 = (textureCube (_Cube, tmpvar_8) * tmpvar_11.w);
  mediump float realtimeShadowAttenuation_13;
  mediump float shadowMaskAttenuation_14;
  highp vec4 v_15;
  v_15.x = unity_MatrixV[0].z;
  v_15.y = unity_MatrixV[1].z;
  v_15.z = unity_MatrixV[2].z;
  v_15.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_16;
  tmpvar_16 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_17;
  highp float tmpvar_18;
  tmpvar_18 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_15.xyz), sqrt(dot (tmpvar_16, tmpvar_16)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_17 = tmpvar_18;
  lowp float tmpvar_19;
  tmpvar_19 = clamp (dot (texture2D (unity_ShadowMask, xlv_TEXCOORD5), unity_OcclusionMaskSelector), 0.0, 1.0);
  shadowMaskAttenuation_14 = tmpvar_19;
  highp vec4 tmpvar_20;
  tmpvar_20.w = 1.0;
  tmpvar_20.xyz = xlv_TEXCOORD3;
  lowp float tmpvar_21;
  highp vec4 shadowCoord_22;
  shadowCoord_22 = (unity_WorldToShadow[0] * tmpvar_20);
  highp float lightShadowDataX_23;
  mediump float tmpvar_24;
  tmpvar_24 = _LightShadowData.x;
  lightShadowDataX_23 = tmpvar_24;
  highp float tmpvar_25;
  tmpvar_25 = max (float((texture2D (_ShadowMapTexture, shadowCoord_22.xy).x > shadowCoord_22.z)), lightShadowDataX_23);
  tmpvar_21 = tmpvar_25;
  realtimeShadowAttenuation_13 = tmpvar_21;
  mediump float tmpvar_26;
  tmpvar_26 = mix (realtimeShadowAttenuation_13, shadowMaskAttenuation_14, tmpvar_17);
  atten_5 = tmpvar_26;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_7;
  tmpvar_1 = atten_5;
  mediump vec3 normalWorld_27;
  normalWorld_27 = tmpvar_6;
  mediump vec3 tmpvar_28;
  tmpvar_28 = (tmpvar_2 * tmpvar_1);
  mediump vec4 tmpvar_29;
  tmpvar_29.w = 1.0;
  tmpvar_29.xyz = normalWorld_27;
  mediump vec3 x_30;
  x_30.x = dot (unity_SHAr, tmpvar_29);
  x_30.y = dot (unity_SHAg, tmpvar_29);
  x_30.z = dot (unity_SHAb, tmpvar_29);
  mediump vec3 tmpvar_31;
  tmpvar_31 = max (((1.055 * 
    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD4 + x_30)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  tmpvar_2 = tmpvar_28;
  lowp vec4 c_32;
  lowp vec4 c_33;
  lowp float diff_34;
  mediump float tmpvar_35;
  tmpvar_35 = max (0.0, dot (tmpvar_6, tmpvar_3));
  diff_34 = tmpvar_35;
  c_33.xyz = ((tmpvar_12.xyz * tmpvar_28) * diff_34);
  c_33.w = (reflcol_10.w * _ReflectColor.w);
  c_32.w = c_33.w;
  c_32.xyz = (c_33.xyz + (tmpvar_12.xyz * tmpvar_31));
  c_4.w = c_32.w;
  c_4.xyz = (c_32.xyz + (reflcol_10.xyz * _ReflectColor.xyz));
  highp float tmpvar_36;
  tmpvar_36 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_4.xyz = mix (unity_FogColor.xyz, c_4.xyz, vec3(tmpvar_36));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" "VERTEXLIGHT_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  tmpvar_5.w = 1.0;
  tmpvar_5.xyz = _glesVertex.xyz;
  tmpvar_4 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
  highp vec3 tmpvar_6;
  tmpvar_6 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_7;
  tmpvar_7[0] = unity_WorldToObject[0].xyz;
  tmpvar_7[1] = unity_WorldToObject[1].xyz;
  tmpvar_7[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_glesNormal * tmpvar_7));
  highp vec3 tmpvar_9;
  highp vec3 I_10;
  I_10 = (tmpvar_6 - _WorldSpaceCameraPos);
  tmpvar_9 = (I_10 - (2.0 * (
    dot (tmpvar_8, I_10)
   * tmpvar_8)));
  tmpvar_1 = tmpvar_9;
  highp vec3 lightColor0_11;
  lightColor0_11 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_12;
  lightColor1_12 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_13;
  lightColor2_13 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_14;
  lightColor3_14 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_15;
  lightAttenSq_15 = unity_4LightAtten0;
  highp vec3 col_16;
  highp vec4 ndotl_17;
  highp vec4 lengthSq_18;
  highp vec4 tmpvar_19;
  tmpvar_19 = (unity_4LightPosX0 - tmpvar_6.x);
  highp vec4 tmpvar_20;
  tmpvar_20 = (unity_4LightPosY0 - tmpvar_6.y);
  highp vec4 tmpvar_21;
  tmpvar_21 = (unity_4LightPosZ0 - tmpvar_6.z);
  lengthSq_18 = (tmpvar_19 * tmpvar_19);
  lengthSq_18 = (lengthSq_18 + (tmpvar_20 * tmpvar_20));
  lengthSq_18 = (lengthSq_18 + (tmpvar_21 * tmpvar_21));
  highp vec4 tmpvar_22;
  tmpvar_22 = max (lengthSq_18, vec4(1e-06, 1e-06, 1e-06, 1e-06));
  lengthSq_18 = tmpvar_22;
  ndotl_17 = (tmpvar_19 * tmpvar_8.x);
  ndotl_17 = (ndotl_17 + (tmpvar_20 * tmpvar_8.y));
  ndotl_17 = (ndotl_17 + (tmpvar_21 * tmpvar_8.z));
  highp vec4 tmpvar_23;
  tmpvar_23 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_17 * inversesqrt(tmpvar_22)));
  ndotl_17 = tmpvar_23;
  highp vec4 tmpvar_24;
  tmpvar_24 = (tmpvar_23 * (1.0/((1.0 + 
    (tmpvar_22 * lightAttenSq_15)
  ))));
  col_16 = (lightColor0_11 * tmpvar_24.x);
  col_16 = (col_16 + (lightColor1_12 * tmpvar_24.y));
  col_16 = (col_16 + (lightColor2_13 * tmpvar_24.z));
  col_16 = (col_16 + (lightColor3_14 * tmpvar_24.w));
  tmpvar_2 = col_16;
  mediump vec3 normal_25;
  normal_25 = tmpvar_8;
  mediump vec3 ambient_26;
  mediump vec3 x1_27;
  mediump vec4 tmpvar_28;
  tmpvar_28 = (normal_25.xyzz * normal_25.yzzx);
  x1_27.x = dot (unity_SHBr, tmpvar_28);
  x1_27.y = dot (unity_SHBg, tmpvar_28);
  x1_27.z = dot (unity_SHBb, tmpvar_28);
  ambient_26 = ((tmpvar_2 * (
    (tmpvar_2 * ((tmpvar_2 * 0.305306) + 0.6821711))
   + 0.01252288)) + (x1_27 + (unity_SHC.xyz * 
    ((normal_25.x * normal_25.x) - (normal_25.y * normal_25.y))
  )));
  tmpvar_2 = ambient_26;
  gl_Position = tmpvar_4;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_8;
  xlv_TEXCOORD3 = tmpvar_6;
  xlv_TEXCOORD4 = ambient_26;
  xlv_TEXCOORD5 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD6 = ((tmpvar_4.z * unity_FogParams.z) + unity_FogParams.w);
  xlv_TEXCOORD7 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform lowp vec4 unity_OcclusionMaskSelector;
uniform highp mat4 unity_WorldToShadow[4];
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform lowp vec4 unity_FogColor;
uniform sampler2D unity_ShadowMask;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp float atten_5;
  lowp vec3 tmpvar_6;
  lowp vec3 lightDir_7;
  highp vec3 tmpvar_8;
  mediump vec3 tmpvar_9;
  tmpvar_9 = _WorldSpaceLightPos0.xyz;
  lightDir_7 = tmpvar_9;
  tmpvar_8 = xlv_TEXCOORD1;
  tmpvar_6 = xlv_TEXCOORD2;
  lowp vec4 reflcol_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_12;
  tmpvar_12 = (tmpvar_11 * _Color);
  reflcol_10 = (textureCube (_Cube, tmpvar_8) * tmpvar_11.w);
  mediump float realtimeShadowAttenuation_13;
  mediump float shadowMaskAttenuation_14;
  highp vec4 v_15;
  v_15.x = unity_MatrixV[0].z;
  v_15.y = unity_MatrixV[1].z;
  v_15.z = unity_MatrixV[2].z;
  v_15.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_16;
  tmpvar_16 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_17;
  highp float tmpvar_18;
  tmpvar_18 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_15.xyz), sqrt(dot (tmpvar_16, tmpvar_16)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_17 = tmpvar_18;
  lowp float tmpvar_19;
  tmpvar_19 = clamp (dot (texture2D (unity_ShadowMask, xlv_TEXCOORD5), unity_OcclusionMaskSelector), 0.0, 1.0);
  shadowMaskAttenuation_14 = tmpvar_19;
  highp vec4 tmpvar_20;
  tmpvar_20.w = 1.0;
  tmpvar_20.xyz = xlv_TEXCOORD3;
  lowp float tmpvar_21;
  highp vec4 shadowCoord_22;
  shadowCoord_22 = (unity_WorldToShadow[0] * tmpvar_20);
  highp float lightShadowDataX_23;
  mediump float tmpvar_24;
  tmpvar_24 = _LightShadowData.x;
  lightShadowDataX_23 = tmpvar_24;
  highp float tmpvar_25;
  tmpvar_25 = max (float((texture2D (_ShadowMapTexture, shadowCoord_22.xy).x > shadowCoord_22.z)), lightShadowDataX_23);
  tmpvar_21 = tmpvar_25;
  realtimeShadowAttenuation_13 = tmpvar_21;
  mediump float tmpvar_26;
  tmpvar_26 = mix (realtimeShadowAttenuation_13, shadowMaskAttenuation_14, tmpvar_17);
  atten_5 = tmpvar_26;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_7;
  tmpvar_1 = atten_5;
  mediump vec3 normalWorld_27;
  normalWorld_27 = tmpvar_6;
  mediump vec3 tmpvar_28;
  tmpvar_28 = (tmpvar_2 * tmpvar_1);
  mediump vec4 tmpvar_29;
  tmpvar_29.w = 1.0;
  tmpvar_29.xyz = normalWorld_27;
  mediump vec3 x_30;
  x_30.x = dot (unity_SHAr, tmpvar_29);
  x_30.y = dot (unity_SHAg, tmpvar_29);
  x_30.z = dot (unity_SHAb, tmpvar_29);
  mediump vec3 tmpvar_31;
  tmpvar_31 = max (((1.055 * 
    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD4 + x_30)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  tmpvar_2 = tmpvar_28;
  lowp vec4 c_32;
  lowp vec4 c_33;
  lowp float diff_34;
  mediump float tmpvar_35;
  tmpvar_35 = max (0.0, dot (tmpvar_6, tmpvar_3));
  diff_34 = tmpvar_35;
  c_33.xyz = ((tmpvar_12.xyz * tmpvar_28) * diff_34);
  c_33.w = (reflcol_10.w * _ReflectColor.w);
  c_32.w = c_33.w;
  c_32.xyz = (c_33.xyz + (tmpvar_12.xyz * tmpvar_31));
  c_4.w = c_32.w;
  c_4.xyz = (c_32.xyz + (reflcol_10.xyz * _ReflectColor.xyz));
  highp float tmpvar_36;
  tmpvar_36 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_4.xyz = mix (unity_FogColor.xyz, c_4.xyz, vec3(tmpvar_36));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" "VERTEXLIGHT_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  tmpvar_5.w = 1.0;
  tmpvar_5.xyz = _glesVertex.xyz;
  tmpvar_4 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
  highp vec3 tmpvar_6;
  tmpvar_6 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_7;
  tmpvar_7[0] = unity_WorldToObject[0].xyz;
  tmpvar_7[1] = unity_WorldToObject[1].xyz;
  tmpvar_7[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_glesNormal * tmpvar_7));
  highp vec3 tmpvar_9;
  highp vec3 I_10;
  I_10 = (tmpvar_6 - _WorldSpaceCameraPos);
  tmpvar_9 = (I_10 - (2.0 * (
    dot (tmpvar_8, I_10)
   * tmpvar_8)));
  tmpvar_1 = tmpvar_9;
  highp vec3 lightColor0_11;
  lightColor0_11 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_12;
  lightColor1_12 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_13;
  lightColor2_13 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_14;
  lightColor3_14 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_15;
  lightAttenSq_15 = unity_4LightAtten0;
  highp vec3 col_16;
  highp vec4 ndotl_17;
  highp vec4 lengthSq_18;
  highp vec4 tmpvar_19;
  tmpvar_19 = (unity_4LightPosX0 - tmpvar_6.x);
  highp vec4 tmpvar_20;
  tmpvar_20 = (unity_4LightPosY0 - tmpvar_6.y);
  highp vec4 tmpvar_21;
  tmpvar_21 = (unity_4LightPosZ0 - tmpvar_6.z);
  lengthSq_18 = (tmpvar_19 * tmpvar_19);
  lengthSq_18 = (lengthSq_18 + (tmpvar_20 * tmpvar_20));
  lengthSq_18 = (lengthSq_18 + (tmpvar_21 * tmpvar_21));
  highp vec4 tmpvar_22;
  tmpvar_22 = max (lengthSq_18, vec4(1e-06, 1e-06, 1e-06, 1e-06));
  lengthSq_18 = tmpvar_22;
  ndotl_17 = (tmpvar_19 * tmpvar_8.x);
  ndotl_17 = (ndotl_17 + (tmpvar_20 * tmpvar_8.y));
  ndotl_17 = (ndotl_17 + (tmpvar_21 * tmpvar_8.z));
  highp vec4 tmpvar_23;
  tmpvar_23 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_17 * inversesqrt(tmpvar_22)));
  ndotl_17 = tmpvar_23;
  highp vec4 tmpvar_24;
  tmpvar_24 = (tmpvar_23 * (1.0/((1.0 + 
    (tmpvar_22 * lightAttenSq_15)
  ))));
  col_16 = (lightColor0_11 * tmpvar_24.x);
  col_16 = (col_16 + (lightColor1_12 * tmpvar_24.y));
  col_16 = (col_16 + (lightColor2_13 * tmpvar_24.z));
  col_16 = (col_16 + (lightColor3_14 * tmpvar_24.w));
  tmpvar_2 = col_16;
  mediump vec3 normal_25;
  normal_25 = tmpvar_8;
  mediump vec3 ambient_26;
  mediump vec3 x1_27;
  mediump vec4 tmpvar_28;
  tmpvar_28 = (normal_25.xyzz * normal_25.yzzx);
  x1_27.x = dot (unity_SHBr, tmpvar_28);
  x1_27.y = dot (unity_SHBg, tmpvar_28);
  x1_27.z = dot (unity_SHBb, tmpvar_28);
  ambient_26 = ((tmpvar_2 * (
    (tmpvar_2 * ((tmpvar_2 * 0.305306) + 0.6821711))
   + 0.01252288)) + (x1_27 + (unity_SHC.xyz * 
    ((normal_25.x * normal_25.x) - (normal_25.y * normal_25.y))
  )));
  tmpvar_2 = ambient_26;
  gl_Position = tmpvar_4;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_8;
  xlv_TEXCOORD3 = tmpvar_6;
  xlv_TEXCOORD4 = ambient_26;
  xlv_TEXCOORD5 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD6 = ((tmpvar_4.z * unity_FogParams.z) + unity_FogParams.w);
  xlv_TEXCOORD7 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform lowp vec4 unity_OcclusionMaskSelector;
uniform highp mat4 unity_WorldToShadow[4];
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform lowp vec4 unity_FogColor;
uniform sampler2D unity_ShadowMask;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp float atten_5;
  lowp vec3 tmpvar_6;
  lowp vec3 lightDir_7;
  highp vec3 tmpvar_8;
  mediump vec3 tmpvar_9;
  tmpvar_9 = _WorldSpaceLightPos0.xyz;
  lightDir_7 = tmpvar_9;
  tmpvar_8 = xlv_TEXCOORD1;
  tmpvar_6 = xlv_TEXCOORD2;
  lowp vec4 reflcol_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_12;
  tmpvar_12 = (tmpvar_11 * _Color);
  reflcol_10 = (textureCube (_Cube, tmpvar_8) * tmpvar_11.w);
  mediump float realtimeShadowAttenuation_13;
  mediump float shadowMaskAttenuation_14;
  highp vec4 v_15;
  v_15.x = unity_MatrixV[0].z;
  v_15.y = unity_MatrixV[1].z;
  v_15.z = unity_MatrixV[2].z;
  v_15.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_16;
  tmpvar_16 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_17;
  highp float tmpvar_18;
  tmpvar_18 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_15.xyz), sqrt(dot (tmpvar_16, tmpvar_16)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_17 = tmpvar_18;
  lowp float tmpvar_19;
  tmpvar_19 = clamp (dot (texture2D (unity_ShadowMask, xlv_TEXCOORD5), unity_OcclusionMaskSelector), 0.0, 1.0);
  shadowMaskAttenuation_14 = tmpvar_19;
  highp vec4 tmpvar_20;
  tmpvar_20.w = 1.0;
  tmpvar_20.xyz = xlv_TEXCOORD3;
  lowp float tmpvar_21;
  highp vec4 shadowCoord_22;
  shadowCoord_22 = (unity_WorldToShadow[0] * tmpvar_20);
  highp float lightShadowDataX_23;
  mediump float tmpvar_24;
  tmpvar_24 = _LightShadowData.x;
  lightShadowDataX_23 = tmpvar_24;
  highp float tmpvar_25;
  tmpvar_25 = max (float((texture2D (_ShadowMapTexture, shadowCoord_22.xy).x > shadowCoord_22.z)), lightShadowDataX_23);
  tmpvar_21 = tmpvar_25;
  realtimeShadowAttenuation_13 = tmpvar_21;
  mediump float tmpvar_26;
  tmpvar_26 = mix (realtimeShadowAttenuation_13, shadowMaskAttenuation_14, tmpvar_17);
  atten_5 = tmpvar_26;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_7;
  tmpvar_1 = atten_5;
  mediump vec3 normalWorld_27;
  normalWorld_27 = tmpvar_6;
  mediump vec3 tmpvar_28;
  tmpvar_28 = (tmpvar_2 * tmpvar_1);
  mediump vec4 tmpvar_29;
  tmpvar_29.w = 1.0;
  tmpvar_29.xyz = normalWorld_27;
  mediump vec3 x_30;
  x_30.x = dot (unity_SHAr, tmpvar_29);
  x_30.y = dot (unity_SHAg, tmpvar_29);
  x_30.z = dot (unity_SHAb, tmpvar_29);
  mediump vec3 tmpvar_31;
  tmpvar_31 = max (((1.055 * 
    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD4 + x_30)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  tmpvar_2 = tmpvar_28;
  lowp vec4 c_32;
  lowp vec4 c_33;
  lowp float diff_34;
  mediump float tmpvar_35;
  tmpvar_35 = max (0.0, dot (tmpvar_6, tmpvar_3));
  diff_34 = tmpvar_35;
  c_33.xyz = ((tmpvar_12.xyz * tmpvar_28) * diff_34);
  c_33.w = (reflcol_10.w * _ReflectColor.w);
  c_32.w = c_33.w;
  c_32.xyz = (c_33.xyz + (tmpvar_12.xyz * tmpvar_31));
  c_4.w = c_32.w;
  c_4.xyz = (c_32.xyz + (reflcol_10.xyz * _ReflectColor.xyz));
  highp float tmpvar_36;
  tmpvar_36 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_4.xyz = mix (unity_FogColor.xyz, c_4.xyz, vec3(tmpvar_36));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_SHADOW_MIXING" "SHADOWS_SHADOWMASK" "FOG_LINEAR" "VERTEXLIGHT_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec2 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = _glesVertex.xyz;
  tmpvar_3 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
  highp vec3 tmpvar_5;
  tmpvar_5 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = unity_WorldToObject[0].xyz;
  tmpvar_6[1] = unity_WorldToObject[1].xyz;
  tmpvar_6[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_glesNormal * tmpvar_6));
  highp vec3 tmpvar_8;
  highp vec3 I_9;
  I_9 = (tmpvar_5 - _WorldSpaceCameraPos);
  tmpvar_8 = (I_9 - (2.0 * (
    dot (tmpvar_7, I_9)
   * tmpvar_7)));
  tmpvar_1 = tmpvar_8;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_7;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD5 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD6 = ((tmpvar_3.z * unity_FogParams.z) + unity_FogParams.w);
  xlv_TEXCOORD7 = tmpvar_2;
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 unity_OcclusionMaskSelector;
uniform highp mat4 unity_WorldToShadow[4];
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform lowp vec4 unity_FogColor;
uniform sampler2D unity_ShadowMask;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec2 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp float atten_5;
  lowp vec3 tmpvar_6;
  lowp vec3 lightDir_7;
  highp vec3 tmpvar_8;
  mediump vec3 tmpvar_9;
  tmpvar_9 = _WorldSpaceLightPos0.xyz;
  lightDir_7 = tmpvar_9;
  tmpvar_8 = xlv_TEXCOORD1;
  tmpvar_6 = xlv_TEXCOORD2;
  lowp vec4 reflcol_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_10 = (textureCube (_Cube, tmpvar_8) * tmpvar_11.w);
  mediump float realtimeShadowAttenuation_12;
  mediump float shadowMaskAttenuation_13;
  highp vec4 v_14;
  v_14.x = unity_MatrixV[0].z;
  v_14.y = unity_MatrixV[1].z;
  v_14.z = unity_MatrixV[2].z;
  v_14.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_15;
  tmpvar_15 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_16;
  highp float tmpvar_17;
  tmpvar_17 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_14.xyz), sqrt(dot (tmpvar_15, tmpvar_15)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_16 = tmpvar_17;
  lowp float tmpvar_18;
  tmpvar_18 = clamp (dot (texture2D (unity_ShadowMask, xlv_TEXCOORD5), unity_OcclusionMaskSelector), 0.0, 1.0);
  shadowMaskAttenuation_13 = tmpvar_18;
  highp vec4 tmpvar_19;
  tmpvar_19.w = 1.0;
  tmpvar_19.xyz = xlv_TEXCOORD3;
  lowp float tmpvar_20;
  highp vec4 shadowCoord_21;
  shadowCoord_21 = (unity_WorldToShadow[0] * tmpvar_19);
  highp float lightShadowDataX_22;
  mediump float tmpvar_23;
  tmpvar_23 = _LightShadowData.x;
  lightShadowDataX_22 = tmpvar_23;
  highp float tmpvar_24;
  tmpvar_24 = max (float((texture2D (_ShadowMapTexture, shadowCoord_21.xy).x > shadowCoord_21.z)), lightShadowDataX_22);
  tmpvar_20 = tmpvar_24;
  realtimeShadowAttenuation_12 = tmpvar_20;
  mediump float tmpvar_25;
  tmpvar_25 = min (clamp ((realtimeShadowAttenuation_12 + tmpvar_16), 0.0, 1.0), shadowMaskAttenuation_13);
  atten_5 = tmpvar_25;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_7;
  tmpvar_1 = atten_5;
  mediump vec3 tmpvar_26;
  tmpvar_26 = (tmpvar_2 * tmpvar_1);
  tmpvar_2 = tmpvar_26;
  lowp vec4 c_27;
  lowp vec4 c_28;
  lowp float diff_29;
  mediump float tmpvar_30;
  tmpvar_30 = max (0.0, dot (tmpvar_6, tmpvar_3));
  diff_29 = tmpvar_30;
  c_28.xyz = (((tmpvar_11 * _Color).xyz * tmpvar_26) * diff_29);
  c_28.w = (reflcol_10.w * _ReflectColor.w);
  c_27.w = c_28.w;
  c_27.xyz = c_28.xyz;
  c_4.w = c_27.w;
  c_4.xyz = (c_28.xyz + (reflcol_10.xyz * _ReflectColor.xyz));
  highp float tmpvar_31;
  tmpvar_31 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_4.xyz = mix (unity_FogColor.xyz, c_4.xyz, vec3(tmpvar_31));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_SHADOW_MIXING" "SHADOWS_SHADOWMASK" "FOG_LINEAR" "VERTEXLIGHT_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec2 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = _glesVertex.xyz;
  tmpvar_3 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
  highp vec3 tmpvar_5;
  tmpvar_5 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = unity_WorldToObject[0].xyz;
  tmpvar_6[1] = unity_WorldToObject[1].xyz;
  tmpvar_6[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_glesNormal * tmpvar_6));
  highp vec3 tmpvar_8;
  highp vec3 I_9;
  I_9 = (tmpvar_5 - _WorldSpaceCameraPos);
  tmpvar_8 = (I_9 - (2.0 * (
    dot (tmpvar_7, I_9)
   * tmpvar_7)));
  tmpvar_1 = tmpvar_8;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_7;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD5 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD6 = ((tmpvar_3.z * unity_FogParams.z) + unity_FogParams.w);
  xlv_TEXCOORD7 = tmpvar_2;
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 unity_OcclusionMaskSelector;
uniform highp mat4 unity_WorldToShadow[4];
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform lowp vec4 unity_FogColor;
uniform sampler2D unity_ShadowMask;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec2 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp float atten_5;
  lowp vec3 tmpvar_6;
  lowp vec3 lightDir_7;
  highp vec3 tmpvar_8;
  mediump vec3 tmpvar_9;
  tmpvar_9 = _WorldSpaceLightPos0.xyz;
  lightDir_7 = tmpvar_9;
  tmpvar_8 = xlv_TEXCOORD1;
  tmpvar_6 = xlv_TEXCOORD2;
  lowp vec4 reflcol_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_10 = (textureCube (_Cube, tmpvar_8) * tmpvar_11.w);
  mediump float realtimeShadowAttenuation_12;
  mediump float shadowMaskAttenuation_13;
  highp vec4 v_14;
  v_14.x = unity_MatrixV[0].z;
  v_14.y = unity_MatrixV[1].z;
  v_14.z = unity_MatrixV[2].z;
  v_14.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_15;
  tmpvar_15 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_16;
  highp float tmpvar_17;
  tmpvar_17 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_14.xyz), sqrt(dot (tmpvar_15, tmpvar_15)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_16 = tmpvar_17;
  lowp float tmpvar_18;
  tmpvar_18 = clamp (dot (texture2D (unity_ShadowMask, xlv_TEXCOORD5), unity_OcclusionMaskSelector), 0.0, 1.0);
  shadowMaskAttenuation_13 = tmpvar_18;
  highp vec4 tmpvar_19;
  tmpvar_19.w = 1.0;
  tmpvar_19.xyz = xlv_TEXCOORD3;
  lowp float tmpvar_20;
  highp vec4 shadowCoord_21;
  shadowCoord_21 = (unity_WorldToShadow[0] * tmpvar_19);
  highp float lightShadowDataX_22;
  mediump float tmpvar_23;
  tmpvar_23 = _LightShadowData.x;
  lightShadowDataX_22 = tmpvar_23;
  highp float tmpvar_24;
  tmpvar_24 = max (float((texture2D (_ShadowMapTexture, shadowCoord_21.xy).x > shadowCoord_21.z)), lightShadowDataX_22);
  tmpvar_20 = tmpvar_24;
  realtimeShadowAttenuation_12 = tmpvar_20;
  mediump float tmpvar_25;
  tmpvar_25 = min (clamp ((realtimeShadowAttenuation_12 + tmpvar_16), 0.0, 1.0), shadowMaskAttenuation_13);
  atten_5 = tmpvar_25;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_7;
  tmpvar_1 = atten_5;
  mediump vec3 tmpvar_26;
  tmpvar_26 = (tmpvar_2 * tmpvar_1);
  tmpvar_2 = tmpvar_26;
  lowp vec4 c_27;
  lowp vec4 c_28;
  lowp float diff_29;
  mediump float tmpvar_30;
  tmpvar_30 = max (0.0, dot (tmpvar_6, tmpvar_3));
  diff_29 = tmpvar_30;
  c_28.xyz = (((tmpvar_11 * _Color).xyz * tmpvar_26) * diff_29);
  c_28.w = (reflcol_10.w * _ReflectColor.w);
  c_27.w = c_28.w;
  c_27.xyz = c_28.xyz;
  c_4.w = c_27.w;
  c_4.xyz = (c_28.xyz + (reflcol_10.xyz * _ReflectColor.xyz));
  highp float tmpvar_31;
  tmpvar_31 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_4.xyz = mix (unity_FogColor.xyz, c_4.xyz, vec3(tmpvar_31));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_SHADOW_MIXING" "SHADOWS_SHADOWMASK" "FOG_LINEAR" "VERTEXLIGHT_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec2 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = _glesVertex.xyz;
  tmpvar_3 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
  highp vec3 tmpvar_5;
  tmpvar_5 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = unity_WorldToObject[0].xyz;
  tmpvar_6[1] = unity_WorldToObject[1].xyz;
  tmpvar_6[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_glesNormal * tmpvar_6));
  highp vec3 tmpvar_8;
  highp vec3 I_9;
  I_9 = (tmpvar_5 - _WorldSpaceCameraPos);
  tmpvar_8 = (I_9 - (2.0 * (
    dot (tmpvar_7, I_9)
   * tmpvar_7)));
  tmpvar_1 = tmpvar_8;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_7;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD5 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD6 = ((tmpvar_3.z * unity_FogParams.z) + unity_FogParams.w);
  xlv_TEXCOORD7 = tmpvar_2;
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 unity_OcclusionMaskSelector;
uniform highp mat4 unity_WorldToShadow[4];
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform lowp vec4 unity_FogColor;
uniform sampler2D unity_ShadowMask;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec2 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp float atten_5;
  lowp vec3 tmpvar_6;
  lowp vec3 lightDir_7;
  highp vec3 tmpvar_8;
  mediump vec3 tmpvar_9;
  tmpvar_9 = _WorldSpaceLightPos0.xyz;
  lightDir_7 = tmpvar_9;
  tmpvar_8 = xlv_TEXCOORD1;
  tmpvar_6 = xlv_TEXCOORD2;
  lowp vec4 reflcol_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_10 = (textureCube (_Cube, tmpvar_8) * tmpvar_11.w);
  mediump float realtimeShadowAttenuation_12;
  mediump float shadowMaskAttenuation_13;
  highp vec4 v_14;
  v_14.x = unity_MatrixV[0].z;
  v_14.y = unity_MatrixV[1].z;
  v_14.z = unity_MatrixV[2].z;
  v_14.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_15;
  tmpvar_15 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_16;
  highp float tmpvar_17;
  tmpvar_17 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_14.xyz), sqrt(dot (tmpvar_15, tmpvar_15)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_16 = tmpvar_17;
  lowp float tmpvar_18;
  tmpvar_18 = clamp (dot (texture2D (unity_ShadowMask, xlv_TEXCOORD5), unity_OcclusionMaskSelector), 0.0, 1.0);
  shadowMaskAttenuation_13 = tmpvar_18;
  highp vec4 tmpvar_19;
  tmpvar_19.w = 1.0;
  tmpvar_19.xyz = xlv_TEXCOORD3;
  lowp float tmpvar_20;
  highp vec4 shadowCoord_21;
  shadowCoord_21 = (unity_WorldToShadow[0] * tmpvar_19);
  highp float lightShadowDataX_22;
  mediump float tmpvar_23;
  tmpvar_23 = _LightShadowData.x;
  lightShadowDataX_22 = tmpvar_23;
  highp float tmpvar_24;
  tmpvar_24 = max (float((texture2D (_ShadowMapTexture, shadowCoord_21.xy).x > shadowCoord_21.z)), lightShadowDataX_22);
  tmpvar_20 = tmpvar_24;
  realtimeShadowAttenuation_12 = tmpvar_20;
  mediump float tmpvar_25;
  tmpvar_25 = min (clamp ((realtimeShadowAttenuation_12 + tmpvar_16), 0.0, 1.0), shadowMaskAttenuation_13);
  atten_5 = tmpvar_25;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_7;
  tmpvar_1 = atten_5;
  mediump vec3 tmpvar_26;
  tmpvar_26 = (tmpvar_2 * tmpvar_1);
  tmpvar_2 = tmpvar_26;
  lowp vec4 c_27;
  lowp vec4 c_28;
  lowp float diff_29;
  mediump float tmpvar_30;
  tmpvar_30 = max (0.0, dot (tmpvar_6, tmpvar_3));
  diff_29 = tmpvar_30;
  c_28.xyz = (((tmpvar_11 * _Color).xyz * tmpvar_26) * diff_29);
  c_28.w = (reflcol_10.w * _ReflectColor.w);
  c_27.w = c_28.w;
  c_27.xyz = c_28.xyz;
  c_4.w = c_27.w;
  c_4.xyz = (c_28.xyz + (reflcol_10.xyz * _ReflectColor.xyz));
  highp float tmpvar_31;
  tmpvar_31 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_4.xyz = mix (unity_FogColor.xyz, c_4.xyz, vec3(tmpvar_31));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_SHADOW_MIXING" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" "VERTEXLIGHT_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  tmpvar_5.w = 1.0;
  tmpvar_5.xyz = _glesVertex.xyz;
  tmpvar_4 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
  highp vec3 tmpvar_6;
  tmpvar_6 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_7;
  tmpvar_7[0] = unity_WorldToObject[0].xyz;
  tmpvar_7[1] = unity_WorldToObject[1].xyz;
  tmpvar_7[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_glesNormal * tmpvar_7));
  highp vec3 tmpvar_9;
  highp vec3 I_10;
  I_10 = (tmpvar_6 - _WorldSpaceCameraPos);
  tmpvar_9 = (I_10 - (2.0 * (
    dot (tmpvar_8, I_10)
   * tmpvar_8)));
  tmpvar_1 = tmpvar_9;
  highp vec3 lightColor0_11;
  lightColor0_11 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_12;
  lightColor1_12 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_13;
  lightColor2_13 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_14;
  lightColor3_14 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_15;
  lightAttenSq_15 = unity_4LightAtten0;
  highp vec3 col_16;
  highp vec4 ndotl_17;
  highp vec4 lengthSq_18;
  highp vec4 tmpvar_19;
  tmpvar_19 = (unity_4LightPosX0 - tmpvar_6.x);
  highp vec4 tmpvar_20;
  tmpvar_20 = (unity_4LightPosY0 - tmpvar_6.y);
  highp vec4 tmpvar_21;
  tmpvar_21 = (unity_4LightPosZ0 - tmpvar_6.z);
  lengthSq_18 = (tmpvar_19 * tmpvar_19);
  lengthSq_18 = (lengthSq_18 + (tmpvar_20 * tmpvar_20));
  lengthSq_18 = (lengthSq_18 + (tmpvar_21 * tmpvar_21));
  highp vec4 tmpvar_22;
  tmpvar_22 = max (lengthSq_18, vec4(1e-06, 1e-06, 1e-06, 1e-06));
  lengthSq_18 = tmpvar_22;
  ndotl_17 = (tmpvar_19 * tmpvar_8.x);
  ndotl_17 = (ndotl_17 + (tmpvar_20 * tmpvar_8.y));
  ndotl_17 = (ndotl_17 + (tmpvar_21 * tmpvar_8.z));
  highp vec4 tmpvar_23;
  tmpvar_23 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_17 * inversesqrt(tmpvar_22)));
  ndotl_17 = tmpvar_23;
  highp vec4 tmpvar_24;
  tmpvar_24 = (tmpvar_23 * (1.0/((1.0 + 
    (tmpvar_22 * lightAttenSq_15)
  ))));
  col_16 = (lightColor0_11 * tmpvar_24.x);
  col_16 = (col_16 + (lightColor1_12 * tmpvar_24.y));
  col_16 = (col_16 + (lightColor2_13 * tmpvar_24.z));
  col_16 = (col_16 + (lightColor3_14 * tmpvar_24.w));
  tmpvar_2 = col_16;
  mediump vec3 normal_25;
  normal_25 = tmpvar_8;
  mediump vec3 ambient_26;
  mediump vec3 x1_27;
  mediump vec4 tmpvar_28;
  tmpvar_28 = (normal_25.xyzz * normal_25.yzzx);
  x1_27.x = dot (unity_SHBr, tmpvar_28);
  x1_27.y = dot (unity_SHBg, tmpvar_28);
  x1_27.z = dot (unity_SHBb, tmpvar_28);
  ambient_26 = ((tmpvar_2 * (
    (tmpvar_2 * ((tmpvar_2 * 0.305306) + 0.6821711))
   + 0.01252288)) + (x1_27 + (unity_SHC.xyz * 
    ((normal_25.x * normal_25.x) - (normal_25.y * normal_25.y))
  )));
  tmpvar_2 = ambient_26;
  gl_Position = tmpvar_4;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_8;
  xlv_TEXCOORD3 = tmpvar_6;
  xlv_TEXCOORD4 = ambient_26;
  xlv_TEXCOORD5 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD6 = ((tmpvar_4.z * unity_FogParams.z) + unity_FogParams.w);
  xlv_TEXCOORD7 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform lowp vec4 unity_OcclusionMaskSelector;
uniform highp mat4 unity_WorldToShadow[4];
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform lowp vec4 unity_FogColor;
uniform sampler2D unity_ShadowMask;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp float atten_5;
  lowp vec3 tmpvar_6;
  lowp vec3 lightDir_7;
  highp vec3 tmpvar_8;
  mediump vec3 tmpvar_9;
  tmpvar_9 = _WorldSpaceLightPos0.xyz;
  lightDir_7 = tmpvar_9;
  tmpvar_8 = xlv_TEXCOORD1;
  tmpvar_6 = xlv_TEXCOORD2;
  lowp vec4 reflcol_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_12;
  tmpvar_12 = (tmpvar_11 * _Color);
  reflcol_10 = (textureCube (_Cube, tmpvar_8) * tmpvar_11.w);
  mediump float realtimeShadowAttenuation_13;
  mediump float shadowMaskAttenuation_14;
  highp vec4 v_15;
  v_15.x = unity_MatrixV[0].z;
  v_15.y = unity_MatrixV[1].z;
  v_15.z = unity_MatrixV[2].z;
  v_15.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_16;
  tmpvar_16 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_17;
  highp float tmpvar_18;
  tmpvar_18 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_15.xyz), sqrt(dot (tmpvar_16, tmpvar_16)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_17 = tmpvar_18;
  lowp float tmpvar_19;
  tmpvar_19 = clamp (dot (texture2D (unity_ShadowMask, xlv_TEXCOORD5), unity_OcclusionMaskSelector), 0.0, 1.0);
  shadowMaskAttenuation_14 = tmpvar_19;
  highp vec4 tmpvar_20;
  tmpvar_20.w = 1.0;
  tmpvar_20.xyz = xlv_TEXCOORD3;
  lowp float tmpvar_21;
  highp vec4 shadowCoord_22;
  shadowCoord_22 = (unity_WorldToShadow[0] * tmpvar_20);
  highp float lightShadowDataX_23;
  mediump float tmpvar_24;
  tmpvar_24 = _LightShadowData.x;
  lightShadowDataX_23 = tmpvar_24;
  highp float tmpvar_25;
  tmpvar_25 = max (float((texture2D (_ShadowMapTexture, shadowCoord_22.xy).x > shadowCoord_22.z)), lightShadowDataX_23);
  tmpvar_21 = tmpvar_25;
  realtimeShadowAttenuation_13 = tmpvar_21;
  mediump float tmpvar_26;
  tmpvar_26 = min (clamp ((realtimeShadowAttenuation_13 + tmpvar_17), 0.0, 1.0), shadowMaskAttenuation_14);
  atten_5 = tmpvar_26;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_7;
  tmpvar_1 = atten_5;
  mediump vec3 normalWorld_27;
  normalWorld_27 = tmpvar_6;
  mediump vec3 tmpvar_28;
  tmpvar_28 = (tmpvar_2 * tmpvar_1);
  mediump vec4 tmpvar_29;
  tmpvar_29.w = 1.0;
  tmpvar_29.xyz = normalWorld_27;
  mediump vec3 x_30;
  x_30.x = dot (unity_SHAr, tmpvar_29);
  x_30.y = dot (unity_SHAg, tmpvar_29);
  x_30.z = dot (unity_SHAb, tmpvar_29);
  mediump vec3 tmpvar_31;
  tmpvar_31 = max (((1.055 * 
    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD4 + x_30)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  tmpvar_2 = tmpvar_28;
  lowp vec4 c_32;
  lowp vec4 c_33;
  lowp float diff_34;
  mediump float tmpvar_35;
  tmpvar_35 = max (0.0, dot (tmpvar_6, tmpvar_3));
  diff_34 = tmpvar_35;
  c_33.xyz = ((tmpvar_12.xyz * tmpvar_28) * diff_34);
  c_33.w = (reflcol_10.w * _ReflectColor.w);
  c_32.w = c_33.w;
  c_32.xyz = (c_33.xyz + (tmpvar_12.xyz * tmpvar_31));
  c_4.w = c_32.w;
  c_4.xyz = (c_32.xyz + (reflcol_10.xyz * _ReflectColor.xyz));
  highp float tmpvar_36;
  tmpvar_36 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_4.xyz = mix (unity_FogColor.xyz, c_4.xyz, vec3(tmpvar_36));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_SHADOW_MIXING" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" "VERTEXLIGHT_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  tmpvar_5.w = 1.0;
  tmpvar_5.xyz = _glesVertex.xyz;
  tmpvar_4 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
  highp vec3 tmpvar_6;
  tmpvar_6 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_7;
  tmpvar_7[0] = unity_WorldToObject[0].xyz;
  tmpvar_7[1] = unity_WorldToObject[1].xyz;
  tmpvar_7[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_glesNormal * tmpvar_7));
  highp vec3 tmpvar_9;
  highp vec3 I_10;
  I_10 = (tmpvar_6 - _WorldSpaceCameraPos);
  tmpvar_9 = (I_10 - (2.0 * (
    dot (tmpvar_8, I_10)
   * tmpvar_8)));
  tmpvar_1 = tmpvar_9;
  highp vec3 lightColor0_11;
  lightColor0_11 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_12;
  lightColor1_12 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_13;
  lightColor2_13 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_14;
  lightColor3_14 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_15;
  lightAttenSq_15 = unity_4LightAtten0;
  highp vec3 col_16;
  highp vec4 ndotl_17;
  highp vec4 lengthSq_18;
  highp vec4 tmpvar_19;
  tmpvar_19 = (unity_4LightPosX0 - tmpvar_6.x);
  highp vec4 tmpvar_20;
  tmpvar_20 = (unity_4LightPosY0 - tmpvar_6.y);
  highp vec4 tmpvar_21;
  tmpvar_21 = (unity_4LightPosZ0 - tmpvar_6.z);
  lengthSq_18 = (tmpvar_19 * tmpvar_19);
  lengthSq_18 = (lengthSq_18 + (tmpvar_20 * tmpvar_20));
  lengthSq_18 = (lengthSq_18 + (tmpvar_21 * tmpvar_21));
  highp vec4 tmpvar_22;
  tmpvar_22 = max (lengthSq_18, vec4(1e-06, 1e-06, 1e-06, 1e-06));
  lengthSq_18 = tmpvar_22;
  ndotl_17 = (tmpvar_19 * tmpvar_8.x);
  ndotl_17 = (ndotl_17 + (tmpvar_20 * tmpvar_8.y));
  ndotl_17 = (ndotl_17 + (tmpvar_21 * tmpvar_8.z));
  highp vec4 tmpvar_23;
  tmpvar_23 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_17 * inversesqrt(tmpvar_22)));
  ndotl_17 = tmpvar_23;
  highp vec4 tmpvar_24;
  tmpvar_24 = (tmpvar_23 * (1.0/((1.0 + 
    (tmpvar_22 * lightAttenSq_15)
  ))));
  col_16 = (lightColor0_11 * tmpvar_24.x);
  col_16 = (col_16 + (lightColor1_12 * tmpvar_24.y));
  col_16 = (col_16 + (lightColor2_13 * tmpvar_24.z));
  col_16 = (col_16 + (lightColor3_14 * tmpvar_24.w));
  tmpvar_2 = col_16;
  mediump vec3 normal_25;
  normal_25 = tmpvar_8;
  mediump vec3 ambient_26;
  mediump vec3 x1_27;
  mediump vec4 tmpvar_28;
  tmpvar_28 = (normal_25.xyzz * normal_25.yzzx);
  x1_27.x = dot (unity_SHBr, tmpvar_28);
  x1_27.y = dot (unity_SHBg, tmpvar_28);
  x1_27.z = dot (unity_SHBb, tmpvar_28);
  ambient_26 = ((tmpvar_2 * (
    (tmpvar_2 * ((tmpvar_2 * 0.305306) + 0.6821711))
   + 0.01252288)) + (x1_27 + (unity_SHC.xyz * 
    ((normal_25.x * normal_25.x) - (normal_25.y * normal_25.y))
  )));
  tmpvar_2 = ambient_26;
  gl_Position = tmpvar_4;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_8;
  xlv_TEXCOORD3 = tmpvar_6;
  xlv_TEXCOORD4 = ambient_26;
  xlv_TEXCOORD5 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD6 = ((tmpvar_4.z * unity_FogParams.z) + unity_FogParams.w);
  xlv_TEXCOORD7 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform lowp vec4 unity_OcclusionMaskSelector;
uniform highp mat4 unity_WorldToShadow[4];
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform lowp vec4 unity_FogColor;
uniform sampler2D unity_ShadowMask;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp float atten_5;
  lowp vec3 tmpvar_6;
  lowp vec3 lightDir_7;
  highp vec3 tmpvar_8;
  mediump vec3 tmpvar_9;
  tmpvar_9 = _WorldSpaceLightPos0.xyz;
  lightDir_7 = tmpvar_9;
  tmpvar_8 = xlv_TEXCOORD1;
  tmpvar_6 = xlv_TEXCOORD2;
  lowp vec4 reflcol_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_12;
  tmpvar_12 = (tmpvar_11 * _Color);
  reflcol_10 = (textureCube (_Cube, tmpvar_8) * tmpvar_11.w);
  mediump float realtimeShadowAttenuation_13;
  mediump float shadowMaskAttenuation_14;
  highp vec4 v_15;
  v_15.x = unity_MatrixV[0].z;
  v_15.y = unity_MatrixV[1].z;
  v_15.z = unity_MatrixV[2].z;
  v_15.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_16;
  tmpvar_16 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_17;
  highp float tmpvar_18;
  tmpvar_18 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_15.xyz), sqrt(dot (tmpvar_16, tmpvar_16)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_17 = tmpvar_18;
  lowp float tmpvar_19;
  tmpvar_19 = clamp (dot (texture2D (unity_ShadowMask, xlv_TEXCOORD5), unity_OcclusionMaskSelector), 0.0, 1.0);
  shadowMaskAttenuation_14 = tmpvar_19;
  highp vec4 tmpvar_20;
  tmpvar_20.w = 1.0;
  tmpvar_20.xyz = xlv_TEXCOORD3;
  lowp float tmpvar_21;
  highp vec4 shadowCoord_22;
  shadowCoord_22 = (unity_WorldToShadow[0] * tmpvar_20);
  highp float lightShadowDataX_23;
  mediump float tmpvar_24;
  tmpvar_24 = _LightShadowData.x;
  lightShadowDataX_23 = tmpvar_24;
  highp float tmpvar_25;
  tmpvar_25 = max (float((texture2D (_ShadowMapTexture, shadowCoord_22.xy).x > shadowCoord_22.z)), lightShadowDataX_23);
  tmpvar_21 = tmpvar_25;
  realtimeShadowAttenuation_13 = tmpvar_21;
  mediump float tmpvar_26;
  tmpvar_26 = min (clamp ((realtimeShadowAttenuation_13 + tmpvar_17), 0.0, 1.0), shadowMaskAttenuation_14);
  atten_5 = tmpvar_26;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_7;
  tmpvar_1 = atten_5;
  mediump vec3 normalWorld_27;
  normalWorld_27 = tmpvar_6;
  mediump vec3 tmpvar_28;
  tmpvar_28 = (tmpvar_2 * tmpvar_1);
  mediump vec4 tmpvar_29;
  tmpvar_29.w = 1.0;
  tmpvar_29.xyz = normalWorld_27;
  mediump vec3 x_30;
  x_30.x = dot (unity_SHAr, tmpvar_29);
  x_30.y = dot (unity_SHAg, tmpvar_29);
  x_30.z = dot (unity_SHAb, tmpvar_29);
  mediump vec3 tmpvar_31;
  tmpvar_31 = max (((1.055 * 
    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD4 + x_30)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  tmpvar_2 = tmpvar_28;
  lowp vec4 c_32;
  lowp vec4 c_33;
  lowp float diff_34;
  mediump float tmpvar_35;
  tmpvar_35 = max (0.0, dot (tmpvar_6, tmpvar_3));
  diff_34 = tmpvar_35;
  c_33.xyz = ((tmpvar_12.xyz * tmpvar_28) * diff_34);
  c_33.w = (reflcol_10.w * _ReflectColor.w);
  c_32.w = c_33.w;
  c_32.xyz = (c_33.xyz + (tmpvar_12.xyz * tmpvar_31));
  c_4.w = c_32.w;
  c_4.xyz = (c_32.xyz + (reflcol_10.xyz * _ReflectColor.xyz));
  highp float tmpvar_36;
  tmpvar_36 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_4.xyz = mix (unity_FogColor.xyz, c_4.xyz, vec3(tmpvar_36));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_SHADOW_MIXING" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" "VERTEXLIGHT_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
varying highp vec4 xlv_TEXCOORD7;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  tmpvar_5.w = 1.0;
  tmpvar_5.xyz = _glesVertex.xyz;
  tmpvar_4 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
  highp vec3 tmpvar_6;
  tmpvar_6 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_7;
  tmpvar_7[0] = unity_WorldToObject[0].xyz;
  tmpvar_7[1] = unity_WorldToObject[1].xyz;
  tmpvar_7[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_glesNormal * tmpvar_7));
  highp vec3 tmpvar_9;
  highp vec3 I_10;
  I_10 = (tmpvar_6 - _WorldSpaceCameraPos);
  tmpvar_9 = (I_10 - (2.0 * (
    dot (tmpvar_8, I_10)
   * tmpvar_8)));
  tmpvar_1 = tmpvar_9;
  highp vec3 lightColor0_11;
  lightColor0_11 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_12;
  lightColor1_12 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_13;
  lightColor2_13 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_14;
  lightColor3_14 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_15;
  lightAttenSq_15 = unity_4LightAtten0;
  highp vec3 col_16;
  highp vec4 ndotl_17;
  highp vec4 lengthSq_18;
  highp vec4 tmpvar_19;
  tmpvar_19 = (unity_4LightPosX0 - tmpvar_6.x);
  highp vec4 tmpvar_20;
  tmpvar_20 = (unity_4LightPosY0 - tmpvar_6.y);
  highp vec4 tmpvar_21;
  tmpvar_21 = (unity_4LightPosZ0 - tmpvar_6.z);
  lengthSq_18 = (tmpvar_19 * tmpvar_19);
  lengthSq_18 = (lengthSq_18 + (tmpvar_20 * tmpvar_20));
  lengthSq_18 = (lengthSq_18 + (tmpvar_21 * tmpvar_21));
  highp vec4 tmpvar_22;
  tmpvar_22 = max (lengthSq_18, vec4(1e-06, 1e-06, 1e-06, 1e-06));
  lengthSq_18 = tmpvar_22;
  ndotl_17 = (tmpvar_19 * tmpvar_8.x);
  ndotl_17 = (ndotl_17 + (tmpvar_20 * tmpvar_8.y));
  ndotl_17 = (ndotl_17 + (tmpvar_21 * tmpvar_8.z));
  highp vec4 tmpvar_23;
  tmpvar_23 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_17 * inversesqrt(tmpvar_22)));
  ndotl_17 = tmpvar_23;
  highp vec4 tmpvar_24;
  tmpvar_24 = (tmpvar_23 * (1.0/((1.0 + 
    (tmpvar_22 * lightAttenSq_15)
  ))));
  col_16 = (lightColor0_11 * tmpvar_24.x);
  col_16 = (col_16 + (lightColor1_12 * tmpvar_24.y));
  col_16 = (col_16 + (lightColor2_13 * tmpvar_24.z));
  col_16 = (col_16 + (lightColor3_14 * tmpvar_24.w));
  tmpvar_2 = col_16;
  mediump vec3 normal_25;
  normal_25 = tmpvar_8;
  mediump vec3 ambient_26;
  mediump vec3 x1_27;
  mediump vec4 tmpvar_28;
  tmpvar_28 = (normal_25.xyzz * normal_25.yzzx);
  x1_27.x = dot (unity_SHBr, tmpvar_28);
  x1_27.y = dot (unity_SHBg, tmpvar_28);
  x1_27.z = dot (unity_SHBb, tmpvar_28);
  ambient_26 = ((tmpvar_2 * (
    (tmpvar_2 * ((tmpvar_2 * 0.305306) + 0.6821711))
   + 0.01252288)) + (x1_27 + (unity_SHC.xyz * 
    ((normal_25.x * normal_25.x) - (normal_25.y * normal_25.y))
  )));
  tmpvar_2 = ambient_26;
  gl_Position = tmpvar_4;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_8;
  xlv_TEXCOORD3 = tmpvar_6;
  xlv_TEXCOORD4 = ambient_26;
  xlv_TEXCOORD5 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD6 = ((tmpvar_4.z * unity_FogParams.z) + unity_FogParams.w);
  xlv_TEXCOORD7 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform lowp vec4 unity_OcclusionMaskSelector;
uniform highp mat4 unity_WorldToShadow[4];
uniform mediump vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_MatrixV;
uniform lowp vec4 unity_FogColor;
uniform sampler2D unity_ShadowMask;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump float tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 c_4;
  lowp float atten_5;
  lowp vec3 tmpvar_6;
  lowp vec3 lightDir_7;
  highp vec3 tmpvar_8;
  mediump vec3 tmpvar_9;
  tmpvar_9 = _WorldSpaceLightPos0.xyz;
  lightDir_7 = tmpvar_9;
  tmpvar_8 = xlv_TEXCOORD1;
  tmpvar_6 = xlv_TEXCOORD2;
  lowp vec4 reflcol_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_12;
  tmpvar_12 = (tmpvar_11 * _Color);
  reflcol_10 = (textureCube (_Cube, tmpvar_8) * tmpvar_11.w);
  mediump float realtimeShadowAttenuation_13;
  mediump float shadowMaskAttenuation_14;
  highp vec4 v_15;
  v_15.x = unity_MatrixV[0].z;
  v_15.y = unity_MatrixV[1].z;
  v_15.z = unity_MatrixV[2].z;
  v_15.w = unity_MatrixV[3].z;
  highp vec3 tmpvar_16;
  tmpvar_16 = (xlv_TEXCOORD3 - unity_ShadowFadeCenterAndType.xyz);
  mediump float tmpvar_17;
  highp float tmpvar_18;
  tmpvar_18 = clamp (((
    mix (dot ((_WorldSpaceCameraPos - xlv_TEXCOORD3), v_15.xyz), sqrt(dot (tmpvar_16, tmpvar_16)), unity_ShadowFadeCenterAndType.w)
   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  tmpvar_17 = tmpvar_18;
  lowp float tmpvar_19;
  tmpvar_19 = clamp (dot (texture2D (unity_ShadowMask, xlv_TEXCOORD5), unity_OcclusionMaskSelector), 0.0, 1.0);
  shadowMaskAttenuation_14 = tmpvar_19;
  highp vec4 tmpvar_20;
  tmpvar_20.w = 1.0;
  tmpvar_20.xyz = xlv_TEXCOORD3;
  lowp float tmpvar_21;
  highp vec4 shadowCoord_22;
  shadowCoord_22 = (unity_WorldToShadow[0] * tmpvar_20);
  highp float lightShadowDataX_23;
  mediump float tmpvar_24;
  tmpvar_24 = _LightShadowData.x;
  lightShadowDataX_23 = tmpvar_24;
  highp float tmpvar_25;
  tmpvar_25 = max (float((texture2D (_ShadowMapTexture, shadowCoord_22.xy).x > shadowCoord_22.z)), lightShadowDataX_23);
  tmpvar_21 = tmpvar_25;
  realtimeShadowAttenuation_13 = tmpvar_21;
  mediump float tmpvar_26;
  tmpvar_26 = min (clamp ((realtimeShadowAttenuation_13 + tmpvar_17), 0.0, 1.0), shadowMaskAttenuation_14);
  atten_5 = tmpvar_26;
  tmpvar_2 = _LightColor0.xyz;
  tmpvar_3 = lightDir_7;
  tmpvar_1 = atten_5;
  mediump vec3 normalWorld_27;
  normalWorld_27 = tmpvar_6;
  mediump vec3 tmpvar_28;
  tmpvar_28 = (tmpvar_2 * tmpvar_1);
  mediump vec4 tmpvar_29;
  tmpvar_29.w = 1.0;
  tmpvar_29.xyz = normalWorld_27;
  mediump vec3 x_30;
  x_30.x = dot (unity_SHAr, tmpvar_29);
  x_30.y = dot (unity_SHAg, tmpvar_29);
  x_30.z = dot (unity_SHAb, tmpvar_29);
  mediump vec3 tmpvar_31;
  tmpvar_31 = max (((1.055 * 
    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD4 + x_30)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  tmpvar_2 = tmpvar_28;
  lowp vec4 c_32;
  lowp vec4 c_33;
  lowp float diff_34;
  mediump float tmpvar_35;
  tmpvar_35 = max (0.0, dot (tmpvar_6, tmpvar_3));
  diff_34 = tmpvar_35;
  c_33.xyz = ((tmpvar_12.xyz * tmpvar_28) * diff_34);
  c_33.w = (reflcol_10.w * _ReflectColor.w);
  c_32.w = c_33.w;
  c_32.xyz = (c_33.xyz + (tmpvar_12.xyz * tmpvar_31));
  c_4.w = c_32.w;
  c_4.xyz = (c_32.xyz + (reflcol_10.xyz * _ReflectColor.xyz));
  highp float tmpvar_36;
  tmpvar_36 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_4.xyz = mix (unity_FogColor.xyz, c_4.xyz, vec3(tmpvar_36));
  c_4.w = 1.0;
  gl_FragData[0] = c_4;
}


#endif
"
}
}
Program "fp" {
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTPROBE_SH" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTPROBE_SH" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTPROBE_SH" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" "LIGHTPROBE_SH" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" "LIGHTPROBE_SH" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" "LIGHTPROBE_SH" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" "SHADOWS_SHADOWMASK" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" "SHADOWS_SHADOWMASK" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" "SHADOWS_SHADOWMASK" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_SHADOW_MIXING" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_SHADOW_MIXING" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_SHADOW_MIXING" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "LIGHTPROBE_SH" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "LIGHTPROBE_SH" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "LIGHTPROBE_SH" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" "LIGHTPROBE_SH" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" "LIGHTPROBE_SH" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" "LIGHTPROBE_SH" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" "SHADOWS_SHADOWMASK" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" "SHADOWS_SHADOWMASK" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" "SHADOWS_SHADOWMASK" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTPROBE_SH" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTPROBE_SH" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTPROBE_SH" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" "LIGHTPROBE_SH" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" "LIGHTPROBE_SH" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" "LIGHTPROBE_SH" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" "SHADOWS_SHADOWMASK" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" "SHADOWS_SHADOWMASK" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" "SHADOWS_SHADOWMASK" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_SHADOW_MIXING" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_SHADOW_MIXING" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_SHADOW_MIXING" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "LIGHTPROBE_SH" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "LIGHTPROBE_SH" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "LIGHTPROBE_SH" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" "LIGHTPROBE_SH" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" "LIGHTPROBE_SH" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" "LIGHTPROBE_SH" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" "SHADOWS_SHADOWMASK" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" "SHADOWS_SHADOWMASK" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" "SHADOWS_SHADOWMASK" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" }
""
}
}
}
 Pass {
  Name "FORWARD"
  LOD 200
  Tags { "LIGHTMODE" = "FORWARDADD" "RenderType" = "Opaque" }
  ZWrite Off
  GpuProgramID 82803
Program "vp" {
SubProgram "gles hw_tier00 " {
Keywords { "POINT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_2;
  tmpvar_2[0] = unity_WorldToObject[0].xyz;
  tmpvar_2[1] = unity_WorldToObject[1].xyz;
  tmpvar_2[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = normalize((_glesNormal * tmpvar_2));
  xlv_TEXCOORD2 = (unity_ObjectToWorld * _glesVertex).xyz;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec4 c_3;
  lowp float atten_4;
  highp vec3 lightCoord_5;
  lowp vec3 tmpvar_6;
  lowp vec3 lightDir_7;
  highp vec3 tmpvar_8;
  tmpvar_8.x = 1.0;
  highp vec3 tmpvar_9;
  tmpvar_9 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD2));
  lightDir_7 = tmpvar_9;
  tmpvar_6 = xlv_TEXCOORD1;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD0);
  highp vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = xlv_TEXCOORD2;
  lightCoord_5 = (unity_WorldToLight * tmpvar_11).xyz;
  highp float tmpvar_12;
  tmpvar_12 = texture2D (_LightTexture0, vec2(dot (lightCoord_5, lightCoord_5))).w;
  atten_4 = tmpvar_12;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_7;
  tmpvar_1 = (tmpvar_1 * atten_4);
  lowp vec4 c_13;
  lowp vec4 c_14;
  lowp float diff_15;
  mediump float tmpvar_16;
  tmpvar_16 = max (0.0, dot (tmpvar_6, tmpvar_2));
  diff_15 = tmpvar_16;
  c_14.xyz = (((tmpvar_10 * _Color).xyz * tmpvar_1) * diff_15);
  c_14.w = ((textureCube (_Cube, tmpvar_8) * tmpvar_10.w).w * _ReflectColor.w);
  c_13.w = c_14.w;
  c_13.xyz = c_14.xyz;
  c_3.xyz = c_13.xyz;
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "POINT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_2;
  tmpvar_2[0] = unity_WorldToObject[0].xyz;
  tmpvar_2[1] = unity_WorldToObject[1].xyz;
  tmpvar_2[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = normalize((_glesNormal * tmpvar_2));
  xlv_TEXCOORD2 = (unity_ObjectToWorld * _glesVertex).xyz;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec4 c_3;
  lowp float atten_4;
  highp vec3 lightCoord_5;
  lowp vec3 tmpvar_6;
  lowp vec3 lightDir_7;
  highp vec3 tmpvar_8;
  tmpvar_8.x = 1.0;
  highp vec3 tmpvar_9;
  tmpvar_9 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD2));
  lightDir_7 = tmpvar_9;
  tmpvar_6 = xlv_TEXCOORD1;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD0);
  highp vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = xlv_TEXCOORD2;
  lightCoord_5 = (unity_WorldToLight * tmpvar_11).xyz;
  highp float tmpvar_12;
  tmpvar_12 = texture2D (_LightTexture0, vec2(dot (lightCoord_5, lightCoord_5))).w;
  atten_4 = tmpvar_12;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_7;
  tmpvar_1 = (tmpvar_1 * atten_4);
  lowp vec4 c_13;
  lowp vec4 c_14;
  lowp float diff_15;
  mediump float tmpvar_16;
  tmpvar_16 = max (0.0, dot (tmpvar_6, tmpvar_2));
  diff_15 = tmpvar_16;
  c_14.xyz = (((tmpvar_10 * _Color).xyz * tmpvar_1) * diff_15);
  c_14.w = ((textureCube (_Cube, tmpvar_8) * tmpvar_10.w).w * _ReflectColor.w);
  c_13.w = c_14.w;
  c_13.xyz = c_14.xyz;
  c_3.xyz = c_13.xyz;
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "POINT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_2;
  tmpvar_2[0] = unity_WorldToObject[0].xyz;
  tmpvar_2[1] = unity_WorldToObject[1].xyz;
  tmpvar_2[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = normalize((_glesNormal * tmpvar_2));
  xlv_TEXCOORD2 = (unity_ObjectToWorld * _glesVertex).xyz;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec4 c_3;
  lowp float atten_4;
  highp vec3 lightCoord_5;
  lowp vec3 tmpvar_6;
  lowp vec3 lightDir_7;
  highp vec3 tmpvar_8;
  tmpvar_8.x = 1.0;
  highp vec3 tmpvar_9;
  tmpvar_9 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD2));
  lightDir_7 = tmpvar_9;
  tmpvar_6 = xlv_TEXCOORD1;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD0);
  highp vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = xlv_TEXCOORD2;
  lightCoord_5 = (unity_WorldToLight * tmpvar_11).xyz;
  highp float tmpvar_12;
  tmpvar_12 = texture2D (_LightTexture0, vec2(dot (lightCoord_5, lightCoord_5))).w;
  atten_4 = tmpvar_12;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_7;
  tmpvar_1 = (tmpvar_1 * atten_4);
  lowp vec4 c_13;
  lowp vec4 c_14;
  lowp float diff_15;
  mediump float tmpvar_16;
  tmpvar_16 = max (0.0, dot (tmpvar_6, tmpvar_2));
  diff_15 = tmpvar_16;
  c_14.xyz = (((tmpvar_10 * _Color).xyz * tmpvar_1) * diff_15);
  c_14.w = ((textureCube (_Cube, tmpvar_8) * tmpvar_10.w).w * _ReflectColor.w);
  c_13.w = c_14.w;
  c_13.xyz = c_14.xyz;
  c_3.xyz = c_13.xyz;
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_2;
  tmpvar_2[0] = unity_WorldToObject[0].xyz;
  tmpvar_2[1] = unity_WorldToObject[1].xyz;
  tmpvar_2[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = normalize((_glesNormal * tmpvar_2));
  xlv_TEXCOORD2 = (unity_ObjectToWorld * _glesVertex).xyz;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec4 c_3;
  lowp vec3 tmpvar_4;
  lowp vec3 lightDir_5;
  highp vec3 tmpvar_6;
  tmpvar_6.x = 1.0;
  mediump vec3 tmpvar_7;
  tmpvar_7 = _WorldSpaceLightPos0.xyz;
  lightDir_5 = tmpvar_7;
  tmpvar_4 = xlv_TEXCOORD1;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD0);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_5;
  lowp vec4 c_9;
  lowp vec4 c_10;
  lowp float diff_11;
  mediump float tmpvar_12;
  tmpvar_12 = max (0.0, dot (tmpvar_4, tmpvar_2));
  diff_11 = tmpvar_12;
  c_10.xyz = (((tmpvar_8 * _Color).xyz * tmpvar_1) * diff_11);
  c_10.w = ((textureCube (_Cube, tmpvar_6) * tmpvar_8.w).w * _ReflectColor.w);
  c_9.w = c_10.w;
  c_9.xyz = c_10.xyz;
  c_3.xyz = c_9.xyz;
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_2;
  tmpvar_2[0] = unity_WorldToObject[0].xyz;
  tmpvar_2[1] = unity_WorldToObject[1].xyz;
  tmpvar_2[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = normalize((_glesNormal * tmpvar_2));
  xlv_TEXCOORD2 = (unity_ObjectToWorld * _glesVertex).xyz;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec4 c_3;
  lowp vec3 tmpvar_4;
  lowp vec3 lightDir_5;
  highp vec3 tmpvar_6;
  tmpvar_6.x = 1.0;
  mediump vec3 tmpvar_7;
  tmpvar_7 = _WorldSpaceLightPos0.xyz;
  lightDir_5 = tmpvar_7;
  tmpvar_4 = xlv_TEXCOORD1;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD0);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_5;
  lowp vec4 c_9;
  lowp vec4 c_10;
  lowp float diff_11;
  mediump float tmpvar_12;
  tmpvar_12 = max (0.0, dot (tmpvar_4, tmpvar_2));
  diff_11 = tmpvar_12;
  c_10.xyz = (((tmpvar_8 * _Color).xyz * tmpvar_1) * diff_11);
  c_10.w = ((textureCube (_Cube, tmpvar_6) * tmpvar_8.w).w * _ReflectColor.w);
  c_9.w = c_10.w;
  c_9.xyz = c_10.xyz;
  c_3.xyz = c_9.xyz;
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_2;
  tmpvar_2[0] = unity_WorldToObject[0].xyz;
  tmpvar_2[1] = unity_WorldToObject[1].xyz;
  tmpvar_2[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = normalize((_glesNormal * tmpvar_2));
  xlv_TEXCOORD2 = (unity_ObjectToWorld * _glesVertex).xyz;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec4 c_3;
  lowp vec3 tmpvar_4;
  lowp vec3 lightDir_5;
  highp vec3 tmpvar_6;
  tmpvar_6.x = 1.0;
  mediump vec3 tmpvar_7;
  tmpvar_7 = _WorldSpaceLightPos0.xyz;
  lightDir_5 = tmpvar_7;
  tmpvar_4 = xlv_TEXCOORD1;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD0);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_5;
  lowp vec4 c_9;
  lowp vec4 c_10;
  lowp float diff_11;
  mediump float tmpvar_12;
  tmpvar_12 = max (0.0, dot (tmpvar_4, tmpvar_2));
  diff_11 = tmpvar_12;
  c_10.xyz = (((tmpvar_8 * _Color).xyz * tmpvar_1) * diff_11);
  c_10.w = ((textureCube (_Cube, tmpvar_6) * tmpvar_8.w).w * _ReflectColor.w);
  c_9.w = c_10.w;
  c_9.xyz = c_10.xyz;
  c_3.xyz = c_9.xyz;
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "SPOT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_2;
  tmpvar_2[0] = unity_WorldToObject[0].xyz;
  tmpvar_2[1] = unity_WorldToObject[1].xyz;
  tmpvar_2[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = normalize((_glesNormal * tmpvar_2));
  xlv_TEXCOORD2 = (unity_ObjectToWorld * _glesVertex).xyz;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform highp sampler2D _LightTextureB0;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec4 c_3;
  lowp float atten_4;
  highp vec4 lightCoord_5;
  lowp vec3 tmpvar_6;
  lowp vec3 lightDir_7;
  highp vec3 tmpvar_8;
  tmpvar_8.x = 1.0;
  highp vec3 tmpvar_9;
  tmpvar_9 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD2));
  lightDir_7 = tmpvar_9;
  tmpvar_6 = xlv_TEXCOORD1;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD0);
  highp vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = xlv_TEXCOORD2;
  lightCoord_5 = (unity_WorldToLight * tmpvar_11);
  lowp float tmpvar_12;
  highp vec4 tmpvar_13;
  tmpvar_13 = texture2D (_LightTexture0, ((lightCoord_5.xy / lightCoord_5.w) + 0.5));
  tmpvar_12 = tmpvar_13.w;
  lowp float tmpvar_14;
  highp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_LightTextureB0, vec2(dot (lightCoord_5.xyz, lightCoord_5.xyz)));
  tmpvar_14 = tmpvar_15.w;
  highp float tmpvar_16;
  tmpvar_16 = ((float(
    (lightCoord_5.z > 0.0)
  ) * tmpvar_12) * tmpvar_14);
  atten_4 = tmpvar_16;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_7;
  tmpvar_1 = (tmpvar_1 * atten_4);
  lowp vec4 c_17;
  lowp vec4 c_18;
  lowp float diff_19;
  mediump float tmpvar_20;
  tmpvar_20 = max (0.0, dot (tmpvar_6, tmpvar_2));
  diff_19 = tmpvar_20;
  c_18.xyz = (((tmpvar_10 * _Color).xyz * tmpvar_1) * diff_19);
  c_18.w = ((textureCube (_Cube, tmpvar_8) * tmpvar_10.w).w * _ReflectColor.w);
  c_17.w = c_18.w;
  c_17.xyz = c_18.xyz;
  c_3.xyz = c_17.xyz;
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "SPOT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_2;
  tmpvar_2[0] = unity_WorldToObject[0].xyz;
  tmpvar_2[1] = unity_WorldToObject[1].xyz;
  tmpvar_2[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = normalize((_glesNormal * tmpvar_2));
  xlv_TEXCOORD2 = (unity_ObjectToWorld * _glesVertex).xyz;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform highp sampler2D _LightTextureB0;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec4 c_3;
  lowp float atten_4;
  highp vec4 lightCoord_5;
  lowp vec3 tmpvar_6;
  lowp vec3 lightDir_7;
  highp vec3 tmpvar_8;
  tmpvar_8.x = 1.0;
  highp vec3 tmpvar_9;
  tmpvar_9 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD2));
  lightDir_7 = tmpvar_9;
  tmpvar_6 = xlv_TEXCOORD1;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD0);
  highp vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = xlv_TEXCOORD2;
  lightCoord_5 = (unity_WorldToLight * tmpvar_11);
  lowp float tmpvar_12;
  highp vec4 tmpvar_13;
  tmpvar_13 = texture2D (_LightTexture0, ((lightCoord_5.xy / lightCoord_5.w) + 0.5));
  tmpvar_12 = tmpvar_13.w;
  lowp float tmpvar_14;
  highp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_LightTextureB0, vec2(dot (lightCoord_5.xyz, lightCoord_5.xyz)));
  tmpvar_14 = tmpvar_15.w;
  highp float tmpvar_16;
  tmpvar_16 = ((float(
    (lightCoord_5.z > 0.0)
  ) * tmpvar_12) * tmpvar_14);
  atten_4 = tmpvar_16;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_7;
  tmpvar_1 = (tmpvar_1 * atten_4);
  lowp vec4 c_17;
  lowp vec4 c_18;
  lowp float diff_19;
  mediump float tmpvar_20;
  tmpvar_20 = max (0.0, dot (tmpvar_6, tmpvar_2));
  diff_19 = tmpvar_20;
  c_18.xyz = (((tmpvar_10 * _Color).xyz * tmpvar_1) * diff_19);
  c_18.w = ((textureCube (_Cube, tmpvar_8) * tmpvar_10.w).w * _ReflectColor.w);
  c_17.w = c_18.w;
  c_17.xyz = c_18.xyz;
  c_3.xyz = c_17.xyz;
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "SPOT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_2;
  tmpvar_2[0] = unity_WorldToObject[0].xyz;
  tmpvar_2[1] = unity_WorldToObject[1].xyz;
  tmpvar_2[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = normalize((_glesNormal * tmpvar_2));
  xlv_TEXCOORD2 = (unity_ObjectToWorld * _glesVertex).xyz;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform highp sampler2D _LightTextureB0;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec4 c_3;
  lowp float atten_4;
  highp vec4 lightCoord_5;
  lowp vec3 tmpvar_6;
  lowp vec3 lightDir_7;
  highp vec3 tmpvar_8;
  tmpvar_8.x = 1.0;
  highp vec3 tmpvar_9;
  tmpvar_9 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD2));
  lightDir_7 = tmpvar_9;
  tmpvar_6 = xlv_TEXCOORD1;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD0);
  highp vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = xlv_TEXCOORD2;
  lightCoord_5 = (unity_WorldToLight * tmpvar_11);
  lowp float tmpvar_12;
  highp vec4 tmpvar_13;
  tmpvar_13 = texture2D (_LightTexture0, ((lightCoord_5.xy / lightCoord_5.w) + 0.5));
  tmpvar_12 = tmpvar_13.w;
  lowp float tmpvar_14;
  highp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_LightTextureB0, vec2(dot (lightCoord_5.xyz, lightCoord_5.xyz)));
  tmpvar_14 = tmpvar_15.w;
  highp float tmpvar_16;
  tmpvar_16 = ((float(
    (lightCoord_5.z > 0.0)
  ) * tmpvar_12) * tmpvar_14);
  atten_4 = tmpvar_16;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_7;
  tmpvar_1 = (tmpvar_1 * atten_4);
  lowp vec4 c_17;
  lowp vec4 c_18;
  lowp float diff_19;
  mediump float tmpvar_20;
  tmpvar_20 = max (0.0, dot (tmpvar_6, tmpvar_2));
  diff_19 = tmpvar_20;
  c_18.xyz = (((tmpvar_10 * _Color).xyz * tmpvar_1) * diff_19);
  c_18.w = ((textureCube (_Cube, tmpvar_8) * tmpvar_10.w).w * _ReflectColor.w);
  c_17.w = c_18.w;
  c_17.xyz = c_18.xyz;
  c_3.xyz = c_17.xyz;
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "POINT_COOKIE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_2;
  tmpvar_2[0] = unity_WorldToObject[0].xyz;
  tmpvar_2[1] = unity_WorldToObject[1].xyz;
  tmpvar_2[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = normalize((_glesNormal * tmpvar_2));
  xlv_TEXCOORD2 = (unity_ObjectToWorld * _glesVertex).xyz;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp samplerCube _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform highp sampler2D _LightTextureB0;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec4 c_3;
  lowp float atten_4;
  highp vec3 lightCoord_5;
  lowp vec3 tmpvar_6;
  lowp vec3 lightDir_7;
  highp vec3 tmpvar_8;
  tmpvar_8.x = 1.0;
  highp vec3 tmpvar_9;
  tmpvar_9 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD2));
  lightDir_7 = tmpvar_9;
  tmpvar_6 = xlv_TEXCOORD1;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD0);
  highp vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = xlv_TEXCOORD2;
  lightCoord_5 = (unity_WorldToLight * tmpvar_11).xyz;
  highp float tmpvar_12;
  tmpvar_12 = (texture2D (_LightTextureB0, vec2(dot (lightCoord_5, lightCoord_5))).w * textureCube (_LightTexture0, lightCoord_5).w);
  atten_4 = tmpvar_12;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_7;
  tmpvar_1 = (tmpvar_1 * atten_4);
  lowp vec4 c_13;
  lowp vec4 c_14;
  lowp float diff_15;
  mediump float tmpvar_16;
  tmpvar_16 = max (0.0, dot (tmpvar_6, tmpvar_2));
  diff_15 = tmpvar_16;
  c_14.xyz = (((tmpvar_10 * _Color).xyz * tmpvar_1) * diff_15);
  c_14.w = ((textureCube (_Cube, tmpvar_8) * tmpvar_10.w).w * _ReflectColor.w);
  c_13.w = c_14.w;
  c_13.xyz = c_14.xyz;
  c_3.xyz = c_13.xyz;
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "POINT_COOKIE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_2;
  tmpvar_2[0] = unity_WorldToObject[0].xyz;
  tmpvar_2[1] = unity_WorldToObject[1].xyz;
  tmpvar_2[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = normalize((_glesNormal * tmpvar_2));
  xlv_TEXCOORD2 = (unity_ObjectToWorld * _glesVertex).xyz;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp samplerCube _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform highp sampler2D _LightTextureB0;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec4 c_3;
  lowp float atten_4;
  highp vec3 lightCoord_5;
  lowp vec3 tmpvar_6;
  lowp vec3 lightDir_7;
  highp vec3 tmpvar_8;
  tmpvar_8.x = 1.0;
  highp vec3 tmpvar_9;
  tmpvar_9 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD2));
  lightDir_7 = tmpvar_9;
  tmpvar_6 = xlv_TEXCOORD1;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD0);
  highp vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = xlv_TEXCOORD2;
  lightCoord_5 = (unity_WorldToLight * tmpvar_11).xyz;
  highp float tmpvar_12;
  tmpvar_12 = (texture2D (_LightTextureB0, vec2(dot (lightCoord_5, lightCoord_5))).w * textureCube (_LightTexture0, lightCoord_5).w);
  atten_4 = tmpvar_12;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_7;
  tmpvar_1 = (tmpvar_1 * atten_4);
  lowp vec4 c_13;
  lowp vec4 c_14;
  lowp float diff_15;
  mediump float tmpvar_16;
  tmpvar_16 = max (0.0, dot (tmpvar_6, tmpvar_2));
  diff_15 = tmpvar_16;
  c_14.xyz = (((tmpvar_10 * _Color).xyz * tmpvar_1) * diff_15);
  c_14.w = ((textureCube (_Cube, tmpvar_8) * tmpvar_10.w).w * _ReflectColor.w);
  c_13.w = c_14.w;
  c_13.xyz = c_14.xyz;
  c_3.xyz = c_13.xyz;
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "POINT_COOKIE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_2;
  tmpvar_2[0] = unity_WorldToObject[0].xyz;
  tmpvar_2[1] = unity_WorldToObject[1].xyz;
  tmpvar_2[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = normalize((_glesNormal * tmpvar_2));
  xlv_TEXCOORD2 = (unity_ObjectToWorld * _glesVertex).xyz;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp samplerCube _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform highp sampler2D _LightTextureB0;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec4 c_3;
  lowp float atten_4;
  highp vec3 lightCoord_5;
  lowp vec3 tmpvar_6;
  lowp vec3 lightDir_7;
  highp vec3 tmpvar_8;
  tmpvar_8.x = 1.0;
  highp vec3 tmpvar_9;
  tmpvar_9 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD2));
  lightDir_7 = tmpvar_9;
  tmpvar_6 = xlv_TEXCOORD1;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD0);
  highp vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = xlv_TEXCOORD2;
  lightCoord_5 = (unity_WorldToLight * tmpvar_11).xyz;
  highp float tmpvar_12;
  tmpvar_12 = (texture2D (_LightTextureB0, vec2(dot (lightCoord_5, lightCoord_5))).w * textureCube (_LightTexture0, lightCoord_5).w);
  atten_4 = tmpvar_12;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_7;
  tmpvar_1 = (tmpvar_1 * atten_4);
  lowp vec4 c_13;
  lowp vec4 c_14;
  lowp float diff_15;
  mediump float tmpvar_16;
  tmpvar_16 = max (0.0, dot (tmpvar_6, tmpvar_2));
  diff_15 = tmpvar_16;
  c_14.xyz = (((tmpvar_10 * _Color).xyz * tmpvar_1) * diff_15);
  c_14.w = ((textureCube (_Cube, tmpvar_8) * tmpvar_10.w).w * _ReflectColor.w);
  c_13.w = c_14.w;
  c_13.xyz = c_14.xyz;
  c_3.xyz = c_13.xyz;
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL_COOKIE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_2;
  tmpvar_2[0] = unity_WorldToObject[0].xyz;
  tmpvar_2[1] = unity_WorldToObject[1].xyz;
  tmpvar_2[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = normalize((_glesNormal * tmpvar_2));
  xlv_TEXCOORD2 = (unity_ObjectToWorld * _glesVertex).xyz;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec4 c_3;
  lowp float atten_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7.x = 1.0;
  mediump vec3 tmpvar_8;
  tmpvar_8 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_8;
  tmpvar_5 = xlv_TEXCOORD1;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD0);
  highp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = xlv_TEXCOORD2;
  highp float tmpvar_11;
  tmpvar_11 = texture2D (_LightTexture0, (unity_WorldToLight * tmpvar_10).xy).w;
  atten_4 = tmpvar_11;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_4);
  lowp vec4 c_12;
  lowp vec4 c_13;
  lowp float diff_14;
  mediump float tmpvar_15;
  tmpvar_15 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_14 = tmpvar_15;
  c_13.xyz = (((tmpvar_9 * _Color).xyz * tmpvar_1) * diff_14);
  c_13.w = ((textureCube (_Cube, tmpvar_7) * tmpvar_9.w).w * _ReflectColor.w);
  c_12.w = c_13.w;
  c_12.xyz = c_13.xyz;
  c_3.xyz = c_12.xyz;
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL_COOKIE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_2;
  tmpvar_2[0] = unity_WorldToObject[0].xyz;
  tmpvar_2[1] = unity_WorldToObject[1].xyz;
  tmpvar_2[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = normalize((_glesNormal * tmpvar_2));
  xlv_TEXCOORD2 = (unity_ObjectToWorld * _glesVertex).xyz;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec4 c_3;
  lowp float atten_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7.x = 1.0;
  mediump vec3 tmpvar_8;
  tmpvar_8 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_8;
  tmpvar_5 = xlv_TEXCOORD1;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD0);
  highp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = xlv_TEXCOORD2;
  highp float tmpvar_11;
  tmpvar_11 = texture2D (_LightTexture0, (unity_WorldToLight * tmpvar_10).xy).w;
  atten_4 = tmpvar_11;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_4);
  lowp vec4 c_12;
  lowp vec4 c_13;
  lowp float diff_14;
  mediump float tmpvar_15;
  tmpvar_15 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_14 = tmpvar_15;
  c_13.xyz = (((tmpvar_9 * _Color).xyz * tmpvar_1) * diff_14);
  c_13.w = ((textureCube (_Cube, tmpvar_7) * tmpvar_9.w).w * _ReflectColor.w);
  c_12.w = c_13.w;
  c_12.xyz = c_13.xyz;
  c_3.xyz = c_12.xyz;
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL_COOKIE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_2;
  tmpvar_2[0] = unity_WorldToObject[0].xyz;
  tmpvar_2[1] = unity_WorldToObject[1].xyz;
  tmpvar_2[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = normalize((_glesNormal * tmpvar_2));
  xlv_TEXCOORD2 = (unity_ObjectToWorld * _glesVertex).xyz;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec4 c_3;
  lowp float atten_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7.x = 1.0;
  mediump vec3 tmpvar_8;
  tmpvar_8 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_8;
  tmpvar_5 = xlv_TEXCOORD1;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD0);
  highp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = xlv_TEXCOORD2;
  highp float tmpvar_11;
  tmpvar_11 = texture2D (_LightTexture0, (unity_WorldToLight * tmpvar_10).xy).w;
  atten_4 = tmpvar_11;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_4);
  lowp vec4 c_12;
  lowp vec4 c_13;
  lowp float diff_14;
  mediump float tmpvar_15;
  tmpvar_15 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_14 = tmpvar_15;
  c_13.xyz = (((tmpvar_9 * _Color).xyz * tmpvar_1) * diff_14);
  c_13.w = ((textureCube (_Cube, tmpvar_7) * tmpvar_9.w).w * _ReflectColor.w);
  c_12.w = c_13.w;
  c_12.xyz = c_13.xyz;
  c_3.xyz = c_12.xyz;
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "POINT" "FOG_LINEAR" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp float xlv_TEXCOORD4;
void main ()
{
  highp vec4 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  highp mat3 tmpvar_3;
  tmpvar_3[0] = unity_WorldToObject[0].xyz;
  tmpvar_3[1] = unity_WorldToObject[1].xyz;
  tmpvar_3[2] = unity_WorldToObject[2].xyz;
  gl_Position = tmpvar_1;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = normalize((_glesNormal * tmpvar_3));
  xlv_TEXCOORD2 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD4 = ((tmpvar_1.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp float xlv_TEXCOORD4;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec4 c_3;
  lowp float atten_4;
  highp vec3 lightCoord_5;
  lowp vec3 tmpvar_6;
  lowp vec3 lightDir_7;
  highp vec3 tmpvar_8;
  tmpvar_8.x = 1.0;
  highp vec3 tmpvar_9;
  tmpvar_9 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD2));
  lightDir_7 = tmpvar_9;
  tmpvar_6 = xlv_TEXCOORD1;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD0);
  highp vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = xlv_TEXCOORD2;
  lightCoord_5 = (unity_WorldToLight * tmpvar_11).xyz;
  highp float tmpvar_12;
  tmpvar_12 = texture2D (_LightTexture0, vec2(dot (lightCoord_5, lightCoord_5))).w;
  atten_4 = tmpvar_12;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_7;
  tmpvar_1 = (tmpvar_1 * atten_4);
  lowp vec4 c_13;
  lowp float diff_14;
  mediump float tmpvar_15;
  tmpvar_15 = max (0.0, dot (tmpvar_6, tmpvar_2));
  diff_14 = tmpvar_15;
  c_13.xyz = (((tmpvar_10 * _Color).xyz * tmpvar_1) * diff_14);
  c_13.w = ((textureCube (_Cube, tmpvar_8) * tmpvar_10.w).w * _ReflectColor.w);
  highp float tmpvar_16;
  tmpvar_16 = clamp (xlv_TEXCOORD4, 0.0, 1.0);
  c_3.xyz = (c_13.xyz * vec3(tmpvar_16));
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "POINT" "FOG_LINEAR" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp float xlv_TEXCOORD4;
void main ()
{
  highp vec4 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  highp mat3 tmpvar_3;
  tmpvar_3[0] = unity_WorldToObject[0].xyz;
  tmpvar_3[1] = unity_WorldToObject[1].xyz;
  tmpvar_3[2] = unity_WorldToObject[2].xyz;
  gl_Position = tmpvar_1;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = normalize((_glesNormal * tmpvar_3));
  xlv_TEXCOORD2 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD4 = ((tmpvar_1.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp float xlv_TEXCOORD4;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec4 c_3;
  lowp float atten_4;
  highp vec3 lightCoord_5;
  lowp vec3 tmpvar_6;
  lowp vec3 lightDir_7;
  highp vec3 tmpvar_8;
  tmpvar_8.x = 1.0;
  highp vec3 tmpvar_9;
  tmpvar_9 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD2));
  lightDir_7 = tmpvar_9;
  tmpvar_6 = xlv_TEXCOORD1;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD0);
  highp vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = xlv_TEXCOORD2;
  lightCoord_5 = (unity_WorldToLight * tmpvar_11).xyz;
  highp float tmpvar_12;
  tmpvar_12 = texture2D (_LightTexture0, vec2(dot (lightCoord_5, lightCoord_5))).w;
  atten_4 = tmpvar_12;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_7;
  tmpvar_1 = (tmpvar_1 * atten_4);
  lowp vec4 c_13;
  lowp float diff_14;
  mediump float tmpvar_15;
  tmpvar_15 = max (0.0, dot (tmpvar_6, tmpvar_2));
  diff_14 = tmpvar_15;
  c_13.xyz = (((tmpvar_10 * _Color).xyz * tmpvar_1) * diff_14);
  c_13.w = ((textureCube (_Cube, tmpvar_8) * tmpvar_10.w).w * _ReflectColor.w);
  highp float tmpvar_16;
  tmpvar_16 = clamp (xlv_TEXCOORD4, 0.0, 1.0);
  c_3.xyz = (c_13.xyz * vec3(tmpvar_16));
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "POINT" "FOG_LINEAR" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp float xlv_TEXCOORD4;
void main ()
{
  highp vec4 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  highp mat3 tmpvar_3;
  tmpvar_3[0] = unity_WorldToObject[0].xyz;
  tmpvar_3[1] = unity_WorldToObject[1].xyz;
  tmpvar_3[2] = unity_WorldToObject[2].xyz;
  gl_Position = tmpvar_1;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = normalize((_glesNormal * tmpvar_3));
  xlv_TEXCOORD2 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD4 = ((tmpvar_1.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp float xlv_TEXCOORD4;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec4 c_3;
  lowp float atten_4;
  highp vec3 lightCoord_5;
  lowp vec3 tmpvar_6;
  lowp vec3 lightDir_7;
  highp vec3 tmpvar_8;
  tmpvar_8.x = 1.0;
  highp vec3 tmpvar_9;
  tmpvar_9 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD2));
  lightDir_7 = tmpvar_9;
  tmpvar_6 = xlv_TEXCOORD1;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD0);
  highp vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = xlv_TEXCOORD2;
  lightCoord_5 = (unity_WorldToLight * tmpvar_11).xyz;
  highp float tmpvar_12;
  tmpvar_12 = texture2D (_LightTexture0, vec2(dot (lightCoord_5, lightCoord_5))).w;
  atten_4 = tmpvar_12;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_7;
  tmpvar_1 = (tmpvar_1 * atten_4);
  lowp vec4 c_13;
  lowp float diff_14;
  mediump float tmpvar_15;
  tmpvar_15 = max (0.0, dot (tmpvar_6, tmpvar_2));
  diff_14 = tmpvar_15;
  c_13.xyz = (((tmpvar_10 * _Color).xyz * tmpvar_1) * diff_14);
  c_13.w = ((textureCube (_Cube, tmpvar_8) * tmpvar_10.w).w * _ReflectColor.w);
  highp float tmpvar_16;
  tmpvar_16 = clamp (xlv_TEXCOORD4, 0.0, 1.0);
  c_3.xyz = (c_13.xyz * vec3(tmpvar_16));
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "FOG_LINEAR" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp float xlv_TEXCOORD4;
void main ()
{
  highp vec4 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  highp mat3 tmpvar_3;
  tmpvar_3[0] = unity_WorldToObject[0].xyz;
  tmpvar_3[1] = unity_WorldToObject[1].xyz;
  tmpvar_3[2] = unity_WorldToObject[2].xyz;
  gl_Position = tmpvar_1;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = normalize((_glesNormal * tmpvar_3));
  xlv_TEXCOORD2 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD4 = ((tmpvar_1.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp float xlv_TEXCOORD4;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec4 c_3;
  lowp vec3 tmpvar_4;
  lowp vec3 lightDir_5;
  highp vec3 tmpvar_6;
  tmpvar_6.x = 1.0;
  mediump vec3 tmpvar_7;
  tmpvar_7 = _WorldSpaceLightPos0.xyz;
  lightDir_5 = tmpvar_7;
  tmpvar_4 = xlv_TEXCOORD1;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD0);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_5;
  lowp vec4 c_9;
  lowp float diff_10;
  mediump float tmpvar_11;
  tmpvar_11 = max (0.0, dot (tmpvar_4, tmpvar_2));
  diff_10 = tmpvar_11;
  c_9.xyz = (((tmpvar_8 * _Color).xyz * tmpvar_1) * diff_10);
  c_9.w = ((textureCube (_Cube, tmpvar_6) * tmpvar_8.w).w * _ReflectColor.w);
  highp float tmpvar_12;
  tmpvar_12 = clamp (xlv_TEXCOORD4, 0.0, 1.0);
  c_3.xyz = (c_9.xyz * vec3(tmpvar_12));
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "FOG_LINEAR" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp float xlv_TEXCOORD4;
void main ()
{
  highp vec4 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  highp mat3 tmpvar_3;
  tmpvar_3[0] = unity_WorldToObject[0].xyz;
  tmpvar_3[1] = unity_WorldToObject[1].xyz;
  tmpvar_3[2] = unity_WorldToObject[2].xyz;
  gl_Position = tmpvar_1;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = normalize((_glesNormal * tmpvar_3));
  xlv_TEXCOORD2 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD4 = ((tmpvar_1.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp float xlv_TEXCOORD4;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec4 c_3;
  lowp vec3 tmpvar_4;
  lowp vec3 lightDir_5;
  highp vec3 tmpvar_6;
  tmpvar_6.x = 1.0;
  mediump vec3 tmpvar_7;
  tmpvar_7 = _WorldSpaceLightPos0.xyz;
  lightDir_5 = tmpvar_7;
  tmpvar_4 = xlv_TEXCOORD1;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD0);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_5;
  lowp vec4 c_9;
  lowp float diff_10;
  mediump float tmpvar_11;
  tmpvar_11 = max (0.0, dot (tmpvar_4, tmpvar_2));
  diff_10 = tmpvar_11;
  c_9.xyz = (((tmpvar_8 * _Color).xyz * tmpvar_1) * diff_10);
  c_9.w = ((textureCube (_Cube, tmpvar_6) * tmpvar_8.w).w * _ReflectColor.w);
  highp float tmpvar_12;
  tmpvar_12 = clamp (xlv_TEXCOORD4, 0.0, 1.0);
  c_3.xyz = (c_9.xyz * vec3(tmpvar_12));
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "FOG_LINEAR" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp float xlv_TEXCOORD4;
void main ()
{
  highp vec4 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  highp mat3 tmpvar_3;
  tmpvar_3[0] = unity_WorldToObject[0].xyz;
  tmpvar_3[1] = unity_WorldToObject[1].xyz;
  tmpvar_3[2] = unity_WorldToObject[2].xyz;
  gl_Position = tmpvar_1;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = normalize((_glesNormal * tmpvar_3));
  xlv_TEXCOORD2 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD4 = ((tmpvar_1.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp float xlv_TEXCOORD4;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec4 c_3;
  lowp vec3 tmpvar_4;
  lowp vec3 lightDir_5;
  highp vec3 tmpvar_6;
  tmpvar_6.x = 1.0;
  mediump vec3 tmpvar_7;
  tmpvar_7 = _WorldSpaceLightPos0.xyz;
  lightDir_5 = tmpvar_7;
  tmpvar_4 = xlv_TEXCOORD1;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD0);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_5;
  lowp vec4 c_9;
  lowp float diff_10;
  mediump float tmpvar_11;
  tmpvar_11 = max (0.0, dot (tmpvar_4, tmpvar_2));
  diff_10 = tmpvar_11;
  c_9.xyz = (((tmpvar_8 * _Color).xyz * tmpvar_1) * diff_10);
  c_9.w = ((textureCube (_Cube, tmpvar_6) * tmpvar_8.w).w * _ReflectColor.w);
  highp float tmpvar_12;
  tmpvar_12 = clamp (xlv_TEXCOORD4, 0.0, 1.0);
  c_3.xyz = (c_9.xyz * vec3(tmpvar_12));
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "SPOT" "FOG_LINEAR" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp float xlv_TEXCOORD4;
void main ()
{
  highp vec4 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  highp mat3 tmpvar_3;
  tmpvar_3[0] = unity_WorldToObject[0].xyz;
  tmpvar_3[1] = unity_WorldToObject[1].xyz;
  tmpvar_3[2] = unity_WorldToObject[2].xyz;
  gl_Position = tmpvar_1;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = normalize((_glesNormal * tmpvar_3));
  xlv_TEXCOORD2 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD4 = ((tmpvar_1.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform highp sampler2D _LightTextureB0;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp float xlv_TEXCOORD4;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec4 c_3;
  lowp float atten_4;
  highp vec4 lightCoord_5;
  lowp vec3 tmpvar_6;
  lowp vec3 lightDir_7;
  highp vec3 tmpvar_8;
  tmpvar_8.x = 1.0;
  highp vec3 tmpvar_9;
  tmpvar_9 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD2));
  lightDir_7 = tmpvar_9;
  tmpvar_6 = xlv_TEXCOORD1;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD0);
  highp vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = xlv_TEXCOORD2;
  lightCoord_5 = (unity_WorldToLight * tmpvar_11);
  lowp float tmpvar_12;
  highp vec4 tmpvar_13;
  tmpvar_13 = texture2D (_LightTexture0, ((lightCoord_5.xy / lightCoord_5.w) + 0.5));
  tmpvar_12 = tmpvar_13.w;
  lowp float tmpvar_14;
  highp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_LightTextureB0, vec2(dot (lightCoord_5.xyz, lightCoord_5.xyz)));
  tmpvar_14 = tmpvar_15.w;
  highp float tmpvar_16;
  tmpvar_16 = ((float(
    (lightCoord_5.z > 0.0)
  ) * tmpvar_12) * tmpvar_14);
  atten_4 = tmpvar_16;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_7;
  tmpvar_1 = (tmpvar_1 * atten_4);
  lowp vec4 c_17;
  lowp float diff_18;
  mediump float tmpvar_19;
  tmpvar_19 = max (0.0, dot (tmpvar_6, tmpvar_2));
  diff_18 = tmpvar_19;
  c_17.xyz = (((tmpvar_10 * _Color).xyz * tmpvar_1) * diff_18);
  c_17.w = ((textureCube (_Cube, tmpvar_8) * tmpvar_10.w).w * _ReflectColor.w);
  highp float tmpvar_20;
  tmpvar_20 = clamp (xlv_TEXCOORD4, 0.0, 1.0);
  c_3.xyz = (c_17.xyz * vec3(tmpvar_20));
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "SPOT" "FOG_LINEAR" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp float xlv_TEXCOORD4;
void main ()
{
  highp vec4 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  highp mat3 tmpvar_3;
  tmpvar_3[0] = unity_WorldToObject[0].xyz;
  tmpvar_3[1] = unity_WorldToObject[1].xyz;
  tmpvar_3[2] = unity_WorldToObject[2].xyz;
  gl_Position = tmpvar_1;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = normalize((_glesNormal * tmpvar_3));
  xlv_TEXCOORD2 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD4 = ((tmpvar_1.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform highp sampler2D _LightTextureB0;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp float xlv_TEXCOORD4;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec4 c_3;
  lowp float atten_4;
  highp vec4 lightCoord_5;
  lowp vec3 tmpvar_6;
  lowp vec3 lightDir_7;
  highp vec3 tmpvar_8;
  tmpvar_8.x = 1.0;
  highp vec3 tmpvar_9;
  tmpvar_9 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD2));
  lightDir_7 = tmpvar_9;
  tmpvar_6 = xlv_TEXCOORD1;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD0);
  highp vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = xlv_TEXCOORD2;
  lightCoord_5 = (unity_WorldToLight * tmpvar_11);
  lowp float tmpvar_12;
  highp vec4 tmpvar_13;
  tmpvar_13 = texture2D (_LightTexture0, ((lightCoord_5.xy / lightCoord_5.w) + 0.5));
  tmpvar_12 = tmpvar_13.w;
  lowp float tmpvar_14;
  highp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_LightTextureB0, vec2(dot (lightCoord_5.xyz, lightCoord_5.xyz)));
  tmpvar_14 = tmpvar_15.w;
  highp float tmpvar_16;
  tmpvar_16 = ((float(
    (lightCoord_5.z > 0.0)
  ) * tmpvar_12) * tmpvar_14);
  atten_4 = tmpvar_16;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_7;
  tmpvar_1 = (tmpvar_1 * atten_4);
  lowp vec4 c_17;
  lowp float diff_18;
  mediump float tmpvar_19;
  tmpvar_19 = max (0.0, dot (tmpvar_6, tmpvar_2));
  diff_18 = tmpvar_19;
  c_17.xyz = (((tmpvar_10 * _Color).xyz * tmpvar_1) * diff_18);
  c_17.w = ((textureCube (_Cube, tmpvar_8) * tmpvar_10.w).w * _ReflectColor.w);
  highp float tmpvar_20;
  tmpvar_20 = clamp (xlv_TEXCOORD4, 0.0, 1.0);
  c_3.xyz = (c_17.xyz * vec3(tmpvar_20));
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "SPOT" "FOG_LINEAR" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp float xlv_TEXCOORD4;
void main ()
{
  highp vec4 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  highp mat3 tmpvar_3;
  tmpvar_3[0] = unity_WorldToObject[0].xyz;
  tmpvar_3[1] = unity_WorldToObject[1].xyz;
  tmpvar_3[2] = unity_WorldToObject[2].xyz;
  gl_Position = tmpvar_1;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = normalize((_glesNormal * tmpvar_3));
  xlv_TEXCOORD2 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD4 = ((tmpvar_1.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform highp sampler2D _LightTextureB0;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp float xlv_TEXCOORD4;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec4 c_3;
  lowp float atten_4;
  highp vec4 lightCoord_5;
  lowp vec3 tmpvar_6;
  lowp vec3 lightDir_7;
  highp vec3 tmpvar_8;
  tmpvar_8.x = 1.0;
  highp vec3 tmpvar_9;
  tmpvar_9 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD2));
  lightDir_7 = tmpvar_9;
  tmpvar_6 = xlv_TEXCOORD1;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD0);
  highp vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = xlv_TEXCOORD2;
  lightCoord_5 = (unity_WorldToLight * tmpvar_11);
  lowp float tmpvar_12;
  highp vec4 tmpvar_13;
  tmpvar_13 = texture2D (_LightTexture0, ((lightCoord_5.xy / lightCoord_5.w) + 0.5));
  tmpvar_12 = tmpvar_13.w;
  lowp float tmpvar_14;
  highp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_LightTextureB0, vec2(dot (lightCoord_5.xyz, lightCoord_5.xyz)));
  tmpvar_14 = tmpvar_15.w;
  highp float tmpvar_16;
  tmpvar_16 = ((float(
    (lightCoord_5.z > 0.0)
  ) * tmpvar_12) * tmpvar_14);
  atten_4 = tmpvar_16;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_7;
  tmpvar_1 = (tmpvar_1 * atten_4);
  lowp vec4 c_17;
  lowp float diff_18;
  mediump float tmpvar_19;
  tmpvar_19 = max (0.0, dot (tmpvar_6, tmpvar_2));
  diff_18 = tmpvar_19;
  c_17.xyz = (((tmpvar_10 * _Color).xyz * tmpvar_1) * diff_18);
  c_17.w = ((textureCube (_Cube, tmpvar_8) * tmpvar_10.w).w * _ReflectColor.w);
  highp float tmpvar_20;
  tmpvar_20 = clamp (xlv_TEXCOORD4, 0.0, 1.0);
  c_3.xyz = (c_17.xyz * vec3(tmpvar_20));
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "POINT_COOKIE" "FOG_LINEAR" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp float xlv_TEXCOORD4;
void main ()
{
  highp vec4 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  highp mat3 tmpvar_3;
  tmpvar_3[0] = unity_WorldToObject[0].xyz;
  tmpvar_3[1] = unity_WorldToObject[1].xyz;
  tmpvar_3[2] = unity_WorldToObject[2].xyz;
  gl_Position = tmpvar_1;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = normalize((_glesNormal * tmpvar_3));
  xlv_TEXCOORD2 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD4 = ((tmpvar_1.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp samplerCube _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform highp sampler2D _LightTextureB0;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp float xlv_TEXCOORD4;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec4 c_3;
  lowp float atten_4;
  highp vec3 lightCoord_5;
  lowp vec3 tmpvar_6;
  lowp vec3 lightDir_7;
  highp vec3 tmpvar_8;
  tmpvar_8.x = 1.0;
  highp vec3 tmpvar_9;
  tmpvar_9 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD2));
  lightDir_7 = tmpvar_9;
  tmpvar_6 = xlv_TEXCOORD1;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD0);
  highp vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = xlv_TEXCOORD2;
  lightCoord_5 = (unity_WorldToLight * tmpvar_11).xyz;
  highp float tmpvar_12;
  tmpvar_12 = (texture2D (_LightTextureB0, vec2(dot (lightCoord_5, lightCoord_5))).w * textureCube (_LightTexture0, lightCoord_5).w);
  atten_4 = tmpvar_12;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_7;
  tmpvar_1 = (tmpvar_1 * atten_4);
  lowp vec4 c_13;
  lowp float diff_14;
  mediump float tmpvar_15;
  tmpvar_15 = max (0.0, dot (tmpvar_6, tmpvar_2));
  diff_14 = tmpvar_15;
  c_13.xyz = (((tmpvar_10 * _Color).xyz * tmpvar_1) * diff_14);
  c_13.w = ((textureCube (_Cube, tmpvar_8) * tmpvar_10.w).w * _ReflectColor.w);
  highp float tmpvar_16;
  tmpvar_16 = clamp (xlv_TEXCOORD4, 0.0, 1.0);
  c_3.xyz = (c_13.xyz * vec3(tmpvar_16));
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "POINT_COOKIE" "FOG_LINEAR" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp float xlv_TEXCOORD4;
void main ()
{
  highp vec4 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  highp mat3 tmpvar_3;
  tmpvar_3[0] = unity_WorldToObject[0].xyz;
  tmpvar_3[1] = unity_WorldToObject[1].xyz;
  tmpvar_3[2] = unity_WorldToObject[2].xyz;
  gl_Position = tmpvar_1;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = normalize((_glesNormal * tmpvar_3));
  xlv_TEXCOORD2 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD4 = ((tmpvar_1.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp samplerCube _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform highp sampler2D _LightTextureB0;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp float xlv_TEXCOORD4;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec4 c_3;
  lowp float atten_4;
  highp vec3 lightCoord_5;
  lowp vec3 tmpvar_6;
  lowp vec3 lightDir_7;
  highp vec3 tmpvar_8;
  tmpvar_8.x = 1.0;
  highp vec3 tmpvar_9;
  tmpvar_9 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD2));
  lightDir_7 = tmpvar_9;
  tmpvar_6 = xlv_TEXCOORD1;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD0);
  highp vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = xlv_TEXCOORD2;
  lightCoord_5 = (unity_WorldToLight * tmpvar_11).xyz;
  highp float tmpvar_12;
  tmpvar_12 = (texture2D (_LightTextureB0, vec2(dot (lightCoord_5, lightCoord_5))).w * textureCube (_LightTexture0, lightCoord_5).w);
  atten_4 = tmpvar_12;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_7;
  tmpvar_1 = (tmpvar_1 * atten_4);
  lowp vec4 c_13;
  lowp float diff_14;
  mediump float tmpvar_15;
  tmpvar_15 = max (0.0, dot (tmpvar_6, tmpvar_2));
  diff_14 = tmpvar_15;
  c_13.xyz = (((tmpvar_10 * _Color).xyz * tmpvar_1) * diff_14);
  c_13.w = ((textureCube (_Cube, tmpvar_8) * tmpvar_10.w).w * _ReflectColor.w);
  highp float tmpvar_16;
  tmpvar_16 = clamp (xlv_TEXCOORD4, 0.0, 1.0);
  c_3.xyz = (c_13.xyz * vec3(tmpvar_16));
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "POINT_COOKIE" "FOG_LINEAR" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp float xlv_TEXCOORD4;
void main ()
{
  highp vec4 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  highp mat3 tmpvar_3;
  tmpvar_3[0] = unity_WorldToObject[0].xyz;
  tmpvar_3[1] = unity_WorldToObject[1].xyz;
  tmpvar_3[2] = unity_WorldToObject[2].xyz;
  gl_Position = tmpvar_1;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = normalize((_glesNormal * tmpvar_3));
  xlv_TEXCOORD2 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD4 = ((tmpvar_1.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp samplerCube _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform highp sampler2D _LightTextureB0;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp float xlv_TEXCOORD4;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec4 c_3;
  lowp float atten_4;
  highp vec3 lightCoord_5;
  lowp vec3 tmpvar_6;
  lowp vec3 lightDir_7;
  highp vec3 tmpvar_8;
  tmpvar_8.x = 1.0;
  highp vec3 tmpvar_9;
  tmpvar_9 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD2));
  lightDir_7 = tmpvar_9;
  tmpvar_6 = xlv_TEXCOORD1;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD0);
  highp vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = xlv_TEXCOORD2;
  lightCoord_5 = (unity_WorldToLight * tmpvar_11).xyz;
  highp float tmpvar_12;
  tmpvar_12 = (texture2D (_LightTextureB0, vec2(dot (lightCoord_5, lightCoord_5))).w * textureCube (_LightTexture0, lightCoord_5).w);
  atten_4 = tmpvar_12;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_7;
  tmpvar_1 = (tmpvar_1 * atten_4);
  lowp vec4 c_13;
  lowp float diff_14;
  mediump float tmpvar_15;
  tmpvar_15 = max (0.0, dot (tmpvar_6, tmpvar_2));
  diff_14 = tmpvar_15;
  c_13.xyz = (((tmpvar_10 * _Color).xyz * tmpvar_1) * diff_14);
  c_13.w = ((textureCube (_Cube, tmpvar_8) * tmpvar_10.w).w * _ReflectColor.w);
  highp float tmpvar_16;
  tmpvar_16 = clamp (xlv_TEXCOORD4, 0.0, 1.0);
  c_3.xyz = (c_13.xyz * vec3(tmpvar_16));
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL_COOKIE" "FOG_LINEAR" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp float xlv_TEXCOORD4;
void main ()
{
  highp vec4 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  highp mat3 tmpvar_3;
  tmpvar_3[0] = unity_WorldToObject[0].xyz;
  tmpvar_3[1] = unity_WorldToObject[1].xyz;
  tmpvar_3[2] = unity_WorldToObject[2].xyz;
  gl_Position = tmpvar_1;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = normalize((_glesNormal * tmpvar_3));
  xlv_TEXCOORD2 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD4 = ((tmpvar_1.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp float xlv_TEXCOORD4;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec4 c_3;
  lowp float atten_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7.x = 1.0;
  mediump vec3 tmpvar_8;
  tmpvar_8 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_8;
  tmpvar_5 = xlv_TEXCOORD1;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD0);
  highp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = xlv_TEXCOORD2;
  highp float tmpvar_11;
  tmpvar_11 = texture2D (_LightTexture0, (unity_WorldToLight * tmpvar_10).xy).w;
  atten_4 = tmpvar_11;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_4);
  lowp vec4 c_12;
  lowp float diff_13;
  mediump float tmpvar_14;
  tmpvar_14 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_13 = tmpvar_14;
  c_12.xyz = (((tmpvar_9 * _Color).xyz * tmpvar_1) * diff_13);
  c_12.w = ((textureCube (_Cube, tmpvar_7) * tmpvar_9.w).w * _ReflectColor.w);
  highp float tmpvar_15;
  tmpvar_15 = clamp (xlv_TEXCOORD4, 0.0, 1.0);
  c_3.xyz = (c_12.xyz * vec3(tmpvar_15));
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL_COOKIE" "FOG_LINEAR" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp float xlv_TEXCOORD4;
void main ()
{
  highp vec4 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  highp mat3 tmpvar_3;
  tmpvar_3[0] = unity_WorldToObject[0].xyz;
  tmpvar_3[1] = unity_WorldToObject[1].xyz;
  tmpvar_3[2] = unity_WorldToObject[2].xyz;
  gl_Position = tmpvar_1;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = normalize((_glesNormal * tmpvar_3));
  xlv_TEXCOORD2 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD4 = ((tmpvar_1.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp float xlv_TEXCOORD4;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec4 c_3;
  lowp float atten_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7.x = 1.0;
  mediump vec3 tmpvar_8;
  tmpvar_8 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_8;
  tmpvar_5 = xlv_TEXCOORD1;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD0);
  highp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = xlv_TEXCOORD2;
  highp float tmpvar_11;
  tmpvar_11 = texture2D (_LightTexture0, (unity_WorldToLight * tmpvar_10).xy).w;
  atten_4 = tmpvar_11;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_4);
  lowp vec4 c_12;
  lowp float diff_13;
  mediump float tmpvar_14;
  tmpvar_14 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_13 = tmpvar_14;
  c_12.xyz = (((tmpvar_9 * _Color).xyz * tmpvar_1) * diff_13);
  c_12.w = ((textureCube (_Cube, tmpvar_7) * tmpvar_9.w).w * _ReflectColor.w);
  highp float tmpvar_15;
  tmpvar_15 = clamp (xlv_TEXCOORD4, 0.0, 1.0);
  c_3.xyz = (c_12.xyz * vec3(tmpvar_15));
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL_COOKIE" "FOG_LINEAR" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp float xlv_TEXCOORD4;
void main ()
{
  highp vec4 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  highp mat3 tmpvar_3;
  tmpvar_3[0] = unity_WorldToObject[0].xyz;
  tmpvar_3[1] = unity_WorldToObject[1].xyz;
  tmpvar_3[2] = unity_WorldToObject[2].xyz;
  gl_Position = tmpvar_1;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = normalize((_glesNormal * tmpvar_3));
  xlv_TEXCOORD2 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD4 = ((tmpvar_1.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp float xlv_TEXCOORD4;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec4 c_3;
  lowp float atten_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7.x = 1.0;
  mediump vec3 tmpvar_8;
  tmpvar_8 = _WorldSpaceLightPos0.xyz;
  lightDir_6 = tmpvar_8;
  tmpvar_5 = xlv_TEXCOORD1;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD0);
  highp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = xlv_TEXCOORD2;
  highp float tmpvar_11;
  tmpvar_11 = texture2D (_LightTexture0, (unity_WorldToLight * tmpvar_10).xy).w;
  atten_4 = tmpvar_11;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_4);
  lowp vec4 c_12;
  lowp float diff_13;
  mediump float tmpvar_14;
  tmpvar_14 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_13 = tmpvar_14;
  c_12.xyz = (((tmpvar_9 * _Color).xyz * tmpvar_1) * diff_13);
  c_12.w = ((textureCube (_Cube, tmpvar_7) * tmpvar_9.w).w * _ReflectColor.w);
  highp float tmpvar_15;
  tmpvar_15 = clamp (xlv_TEXCOORD4, 0.0, 1.0);
  c_3.xyz = (c_12.xyz * vec3(tmpvar_15));
  c_3.w = 1.0;
  gl_FragData[0] = c_3;
}


#endif
"
}
}
Program "fp" {
SubProgram "gles hw_tier00 " {
Keywords { "POINT" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "POINT" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "POINT" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "SPOT" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "SPOT" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "SPOT" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "POINT_COOKIE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "POINT_COOKIE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "POINT_COOKIE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL_COOKIE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL_COOKIE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL_COOKIE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "POINT" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "POINT" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "POINT" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "SPOT" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "SPOT" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "SPOT" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "POINT_COOKIE" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "POINT_COOKIE" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "POINT_COOKIE" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL_COOKIE" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL_COOKIE" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL_COOKIE" "FOG_LINEAR" }
""
}
}
}
 Pass {
  Name "PREPASS"
  LOD 200
  Tags { "LIGHTMODE" = "PREPASSBASE" "RenderType" = "Opaque" }
  GpuProgramID 178461
Program "vp" {
SubProgram "gles hw_tier00 " {
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_2;
  tmpvar_2[0] = unity_WorldToObject[0].xyz;
  tmpvar_2[1] = unity_WorldToObject[1].xyz;
  tmpvar_2[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_2));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
}


#endif
#ifdef FRAGMENT
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 res_1;
  lowp vec3 tmpvar_2;
  tmpvar_2 = xlv_TEXCOORD0;
  res_1.xyz = ((tmpvar_2 * 0.5) + 0.5);
  res_1.w = 0.0;
  gl_FragData[0] = res_1;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_2;
  tmpvar_2[0] = unity_WorldToObject[0].xyz;
  tmpvar_2[1] = unity_WorldToObject[1].xyz;
  tmpvar_2[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_2));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
}


#endif
#ifdef FRAGMENT
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 res_1;
  lowp vec3 tmpvar_2;
  tmpvar_2 = xlv_TEXCOORD0;
  res_1.xyz = ((tmpvar_2 * 0.5) + 0.5);
  res_1.w = 0.0;
  gl_FragData[0] = res_1;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_2;
  tmpvar_2[0] = unity_WorldToObject[0].xyz;
  tmpvar_2[1] = unity_WorldToObject[1].xyz;
  tmpvar_2[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_2));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
}


#endif
#ifdef FRAGMENT
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 res_1;
  lowp vec3 tmpvar_2;
  tmpvar_2 = xlv_TEXCOORD0;
  res_1.xyz = ((tmpvar_2 * 0.5) + 0.5);
  res_1.w = 0.0;
  gl_FragData[0] = res_1;
}


#endif
"
}
}
Program "fp" {
SubProgram "gles hw_tier00 " {
""
}
SubProgram "gles hw_tier01 " {
""
}
SubProgram "gles hw_tier02 " {
""
}
}
}
 Pass {
  Name "PREPASS"
  LOD 200
  Tags { "LIGHTMODE" = "PREPASSFINAL" "RenderType" = "Opaque" }
  ZWrite Off
  GpuProgramID 210237
Program "vp" {
SubProgram "gles hw_tier00 " {
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec3 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  tmpvar_5.w = 1.0;
  tmpvar_5.xyz = _glesVertex.xyz;
  tmpvar_4 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
  highp vec3 tmpvar_6;
  tmpvar_6 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_7;
  tmpvar_7[0] = unity_WorldToObject[0].xyz;
  tmpvar_7[1] = unity_WorldToObject[1].xyz;
  tmpvar_7[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_glesNormal * tmpvar_7));
  highp vec3 tmpvar_9;
  highp vec3 I_10;
  I_10 = (tmpvar_6 - _WorldSpaceCameraPos);
  tmpvar_9 = (I_10 - (2.0 * (
    dot (tmpvar_8, I_10)
   * tmpvar_8)));
  tmpvar_1 = tmpvar_9;
  highp vec4 o_11;
  highp vec4 tmpvar_12;
  tmpvar_12 = (tmpvar_4 * 0.5);
  highp vec2 tmpvar_13;
  tmpvar_13.x = tmpvar_12.x;
  tmpvar_13.y = (tmpvar_12.y * _ProjectionParams.x);
  o_11.xy = (tmpvar_13 + tmpvar_12.w);
  o_11.zw = tmpvar_4.zw;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_2.xy = vec2(0.0, 0.0);
  highp mat3 tmpvar_14;
  tmpvar_14[0] = unity_WorldToObject[0].xyz;
  tmpvar_14[1] = unity_WorldToObject[1].xyz;
  tmpvar_14[2] = unity_WorldToObject[2].xyz;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = normalize((_glesNormal * tmpvar_14));
  mediump vec4 normal_16;
  normal_16 = tmpvar_15;
  mediump vec3 res_17;
  mediump vec3 x_18;
  x_18.x = dot (unity_SHAr, normal_16);
  x_18.y = dot (unity_SHAg, normal_16);
  x_18.z = dot (unity_SHAb, normal_16);
  mediump vec3 x1_19;
  mediump vec4 tmpvar_20;
  tmpvar_20 = (normal_16.xyzz * normal_16.yzzx);
  x1_19.x = dot (unity_SHBr, tmpvar_20);
  x1_19.y = dot (unity_SHBg, tmpvar_20);
  x1_19.z = dot (unity_SHBb, tmpvar_20);
  res_17 = (x_18 + (x1_19 + (unity_SHC.xyz * 
    ((normal_16.x * normal_16.x) - (normal_16.y * normal_16.y))
  )));
  mediump vec3 tmpvar_21;
  tmpvar_21 = max (((1.055 * 
    pow (max (res_17, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_17 = tmpvar_21;
  tmpvar_3 = tmpvar_21;
  gl_Position = tmpvar_4;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = o_11;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
uniform sampler2D _LightBuffer;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD5;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  highp vec3 tmpvar_4;
  tmpvar_4 = xlv_TEXCOORD1;
  lowp vec3 tmpvar_5;
  lowp vec4 reflcol_6;
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_6 = (textureCube (_Cube, tmpvar_4) * tmpvar_7.w);
  tmpvar_5 = (reflcol_6.xyz * _ReflectColor.xyz);
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2DProj (_LightBuffer, xlv_TEXCOORD3);
  light_3 = tmpvar_8;
  light_3 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
  light_3.xyz = (light_3.xyz + xlv_TEXCOORD5);
  lowp vec4 c_9;
  c_9.xyz = ((tmpvar_7 * _Color).xyz * light_3.xyz);
  c_9.w = (reflcol_6.w * _ReflectColor.w);
  c_2 = c_9;
  c_2.xyz = (c_2.xyz + tmpvar_5);
  c_2.w = 1.0;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec3 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  tmpvar_5.w = 1.0;
  tmpvar_5.xyz = _glesVertex.xyz;
  tmpvar_4 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
  highp vec3 tmpvar_6;
  tmpvar_6 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_7;
  tmpvar_7[0] = unity_WorldToObject[0].xyz;
  tmpvar_7[1] = unity_WorldToObject[1].xyz;
  tmpvar_7[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_glesNormal * tmpvar_7));
  highp vec3 tmpvar_9;
  highp vec3 I_10;
  I_10 = (tmpvar_6 - _WorldSpaceCameraPos);
  tmpvar_9 = (I_10 - (2.0 * (
    dot (tmpvar_8, I_10)
   * tmpvar_8)));
  tmpvar_1 = tmpvar_9;
  highp vec4 o_11;
  highp vec4 tmpvar_12;
  tmpvar_12 = (tmpvar_4 * 0.5);
  highp vec2 tmpvar_13;
  tmpvar_13.x = tmpvar_12.x;
  tmpvar_13.y = (tmpvar_12.y * _ProjectionParams.x);
  o_11.xy = (tmpvar_13 + tmpvar_12.w);
  o_11.zw = tmpvar_4.zw;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_2.xy = vec2(0.0, 0.0);
  highp mat3 tmpvar_14;
  tmpvar_14[0] = unity_WorldToObject[0].xyz;
  tmpvar_14[1] = unity_WorldToObject[1].xyz;
  tmpvar_14[2] = unity_WorldToObject[2].xyz;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = normalize((_glesNormal * tmpvar_14));
  mediump vec4 normal_16;
  normal_16 = tmpvar_15;
  mediump vec3 res_17;
  mediump vec3 x_18;
  x_18.x = dot (unity_SHAr, normal_16);
  x_18.y = dot (unity_SHAg, normal_16);
  x_18.z = dot (unity_SHAb, normal_16);
  mediump vec3 x1_19;
  mediump vec4 tmpvar_20;
  tmpvar_20 = (normal_16.xyzz * normal_16.yzzx);
  x1_19.x = dot (unity_SHBr, tmpvar_20);
  x1_19.y = dot (unity_SHBg, tmpvar_20);
  x1_19.z = dot (unity_SHBb, tmpvar_20);
  res_17 = (x_18 + (x1_19 + (unity_SHC.xyz * 
    ((normal_16.x * normal_16.x) - (normal_16.y * normal_16.y))
  )));
  mediump vec3 tmpvar_21;
  tmpvar_21 = max (((1.055 * 
    pow (max (res_17, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_17 = tmpvar_21;
  tmpvar_3 = tmpvar_21;
  gl_Position = tmpvar_4;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = o_11;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
uniform sampler2D _LightBuffer;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD5;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  highp vec3 tmpvar_4;
  tmpvar_4 = xlv_TEXCOORD1;
  lowp vec3 tmpvar_5;
  lowp vec4 reflcol_6;
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_6 = (textureCube (_Cube, tmpvar_4) * tmpvar_7.w);
  tmpvar_5 = (reflcol_6.xyz * _ReflectColor.xyz);
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2DProj (_LightBuffer, xlv_TEXCOORD3);
  light_3 = tmpvar_8;
  light_3 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
  light_3.xyz = (light_3.xyz + xlv_TEXCOORD5);
  lowp vec4 c_9;
  c_9.xyz = ((tmpvar_7 * _Color).xyz * light_3.xyz);
  c_9.w = (reflcol_6.w * _ReflectColor.w);
  c_2 = c_9;
  c_2.xyz = (c_2.xyz + tmpvar_5);
  c_2.w = 1.0;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec3 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  tmpvar_5.w = 1.0;
  tmpvar_5.xyz = _glesVertex.xyz;
  tmpvar_4 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
  highp vec3 tmpvar_6;
  tmpvar_6 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_7;
  tmpvar_7[0] = unity_WorldToObject[0].xyz;
  tmpvar_7[1] = unity_WorldToObject[1].xyz;
  tmpvar_7[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_glesNormal * tmpvar_7));
  highp vec3 tmpvar_9;
  highp vec3 I_10;
  I_10 = (tmpvar_6 - _WorldSpaceCameraPos);
  tmpvar_9 = (I_10 - (2.0 * (
    dot (tmpvar_8, I_10)
   * tmpvar_8)));
  tmpvar_1 = tmpvar_9;
  highp vec4 o_11;
  highp vec4 tmpvar_12;
  tmpvar_12 = (tmpvar_4 * 0.5);
  highp vec2 tmpvar_13;
  tmpvar_13.x = tmpvar_12.x;
  tmpvar_13.y = (tmpvar_12.y * _ProjectionParams.x);
  o_11.xy = (tmpvar_13 + tmpvar_12.w);
  o_11.zw = tmpvar_4.zw;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_2.xy = vec2(0.0, 0.0);
  highp mat3 tmpvar_14;
  tmpvar_14[0] = unity_WorldToObject[0].xyz;
  tmpvar_14[1] = unity_WorldToObject[1].xyz;
  tmpvar_14[2] = unity_WorldToObject[2].xyz;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = normalize((_glesNormal * tmpvar_14));
  mediump vec4 normal_16;
  normal_16 = tmpvar_15;
  mediump vec3 res_17;
  mediump vec3 x_18;
  x_18.x = dot (unity_SHAr, normal_16);
  x_18.y = dot (unity_SHAg, normal_16);
  x_18.z = dot (unity_SHAb, normal_16);
  mediump vec3 x1_19;
  mediump vec4 tmpvar_20;
  tmpvar_20 = (normal_16.xyzz * normal_16.yzzx);
  x1_19.x = dot (unity_SHBr, tmpvar_20);
  x1_19.y = dot (unity_SHBg, tmpvar_20);
  x1_19.z = dot (unity_SHBb, tmpvar_20);
  res_17 = (x_18 + (x1_19 + (unity_SHC.xyz * 
    ((normal_16.x * normal_16.x) - (normal_16.y * normal_16.y))
  )));
  mediump vec3 tmpvar_21;
  tmpvar_21 = max (((1.055 * 
    pow (max (res_17, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_17 = tmpvar_21;
  tmpvar_3 = tmpvar_21;
  gl_Position = tmpvar_4;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = o_11;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
uniform sampler2D _LightBuffer;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD5;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  highp vec3 tmpvar_4;
  tmpvar_4 = xlv_TEXCOORD1;
  lowp vec3 tmpvar_5;
  lowp vec4 reflcol_6;
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_6 = (textureCube (_Cube, tmpvar_4) * tmpvar_7.w);
  tmpvar_5 = (reflcol_6.xyz * _ReflectColor.xyz);
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2DProj (_LightBuffer, xlv_TEXCOORD3);
  light_3 = tmpvar_8;
  light_3 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
  light_3.xyz = (light_3.xyz + xlv_TEXCOORD5);
  lowp vec4 c_9;
  c_9.xyz = ((tmpvar_7 * _Color).xyz * light_3.xyz);
  c_9.w = (reflcol_6.w * _ReflectColor.w);
  c_2 = c_9;
  c_2.xyz = (c_2.xyz + tmpvar_5);
  c_2.w = 1.0;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "LIGHTPROBE_SH" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec3 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  tmpvar_5.w = 1.0;
  tmpvar_5.xyz = _glesVertex.xyz;
  tmpvar_4 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
  highp vec3 tmpvar_6;
  tmpvar_6 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_7;
  tmpvar_7[0] = unity_WorldToObject[0].xyz;
  tmpvar_7[1] = unity_WorldToObject[1].xyz;
  tmpvar_7[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_glesNormal * tmpvar_7));
  highp vec3 tmpvar_9;
  highp vec3 I_10;
  I_10 = (tmpvar_6 - _WorldSpaceCameraPos);
  tmpvar_9 = (I_10 - (2.0 * (
    dot (tmpvar_8, I_10)
   * tmpvar_8)));
  tmpvar_1 = tmpvar_9;
  highp vec4 o_11;
  highp vec4 tmpvar_12;
  tmpvar_12 = (tmpvar_4 * 0.5);
  highp vec2 tmpvar_13;
  tmpvar_13.x = tmpvar_12.x;
  tmpvar_13.y = (tmpvar_12.y * _ProjectionParams.x);
  o_11.xy = (tmpvar_13 + tmpvar_12.w);
  o_11.zw = tmpvar_4.zw;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_2.xy = vec2(0.0, 0.0);
  highp mat3 tmpvar_14;
  tmpvar_14[0] = unity_WorldToObject[0].xyz;
  tmpvar_14[1] = unity_WorldToObject[1].xyz;
  tmpvar_14[2] = unity_WorldToObject[2].xyz;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = normalize((_glesNormal * tmpvar_14));
  mediump vec4 normal_16;
  normal_16 = tmpvar_15;
  mediump vec3 res_17;
  mediump vec3 x_18;
  x_18.x = dot (unity_SHAr, normal_16);
  x_18.y = dot (unity_SHAg, normal_16);
  x_18.z = dot (unity_SHAb, normal_16);
  mediump vec3 x1_19;
  mediump vec4 tmpvar_20;
  tmpvar_20 = (normal_16.xyzz * normal_16.yzzx);
  x1_19.x = dot (unity_SHBr, tmpvar_20);
  x1_19.y = dot (unity_SHBg, tmpvar_20);
  x1_19.z = dot (unity_SHBb, tmpvar_20);
  res_17 = (x_18 + (x1_19 + (unity_SHC.xyz * 
    ((normal_16.x * normal_16.x) - (normal_16.y * normal_16.y))
  )));
  mediump vec3 tmpvar_21;
  tmpvar_21 = max (((1.055 * 
    pow (max (res_17, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_17 = tmpvar_21;
  tmpvar_3 = tmpvar_21;
  gl_Position = tmpvar_4;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = o_11;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
uniform sampler2D _LightBuffer;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD5;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  highp vec3 tmpvar_4;
  tmpvar_4 = xlv_TEXCOORD1;
  lowp vec3 tmpvar_5;
  lowp vec4 reflcol_6;
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_6 = (textureCube (_Cube, tmpvar_4) * tmpvar_7.w);
  tmpvar_5 = (reflcol_6.xyz * _ReflectColor.xyz);
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2DProj (_LightBuffer, xlv_TEXCOORD3);
  light_3 = tmpvar_8;
  light_3 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
  light_3.xyz = (light_3.xyz + xlv_TEXCOORD5);
  lowp vec4 c_9;
  c_9.xyz = ((tmpvar_7 * _Color).xyz * light_3.xyz);
  c_9.w = (reflcol_6.w * _ReflectColor.w);
  c_2 = c_9;
  c_2.xyz = (c_2.xyz + tmpvar_5);
  c_2.w = 1.0;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTPROBE_SH" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec3 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  tmpvar_5.w = 1.0;
  tmpvar_5.xyz = _glesVertex.xyz;
  tmpvar_4 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
  highp vec3 tmpvar_6;
  tmpvar_6 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_7;
  tmpvar_7[0] = unity_WorldToObject[0].xyz;
  tmpvar_7[1] = unity_WorldToObject[1].xyz;
  tmpvar_7[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_glesNormal * tmpvar_7));
  highp vec3 tmpvar_9;
  highp vec3 I_10;
  I_10 = (tmpvar_6 - _WorldSpaceCameraPos);
  tmpvar_9 = (I_10 - (2.0 * (
    dot (tmpvar_8, I_10)
   * tmpvar_8)));
  tmpvar_1 = tmpvar_9;
  highp vec4 o_11;
  highp vec4 tmpvar_12;
  tmpvar_12 = (tmpvar_4 * 0.5);
  highp vec2 tmpvar_13;
  tmpvar_13.x = tmpvar_12.x;
  tmpvar_13.y = (tmpvar_12.y * _ProjectionParams.x);
  o_11.xy = (tmpvar_13 + tmpvar_12.w);
  o_11.zw = tmpvar_4.zw;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_2.xy = vec2(0.0, 0.0);
  highp mat3 tmpvar_14;
  tmpvar_14[0] = unity_WorldToObject[0].xyz;
  tmpvar_14[1] = unity_WorldToObject[1].xyz;
  tmpvar_14[2] = unity_WorldToObject[2].xyz;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = normalize((_glesNormal * tmpvar_14));
  mediump vec4 normal_16;
  normal_16 = tmpvar_15;
  mediump vec3 res_17;
  mediump vec3 x_18;
  x_18.x = dot (unity_SHAr, normal_16);
  x_18.y = dot (unity_SHAg, normal_16);
  x_18.z = dot (unity_SHAb, normal_16);
  mediump vec3 x1_19;
  mediump vec4 tmpvar_20;
  tmpvar_20 = (normal_16.xyzz * normal_16.yzzx);
  x1_19.x = dot (unity_SHBr, tmpvar_20);
  x1_19.y = dot (unity_SHBg, tmpvar_20);
  x1_19.z = dot (unity_SHBb, tmpvar_20);
  res_17 = (x_18 + (x1_19 + (unity_SHC.xyz * 
    ((normal_16.x * normal_16.x) - (normal_16.y * normal_16.y))
  )));
  mediump vec3 tmpvar_21;
  tmpvar_21 = max (((1.055 * 
    pow (max (res_17, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_17 = tmpvar_21;
  tmpvar_3 = tmpvar_21;
  gl_Position = tmpvar_4;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = o_11;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
uniform sampler2D _LightBuffer;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD5;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  highp vec3 tmpvar_4;
  tmpvar_4 = xlv_TEXCOORD1;
  lowp vec3 tmpvar_5;
  lowp vec4 reflcol_6;
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_6 = (textureCube (_Cube, tmpvar_4) * tmpvar_7.w);
  tmpvar_5 = (reflcol_6.xyz * _ReflectColor.xyz);
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2DProj (_LightBuffer, xlv_TEXCOORD3);
  light_3 = tmpvar_8;
  light_3 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
  light_3.xyz = (light_3.xyz + xlv_TEXCOORD5);
  lowp vec4 c_9;
  c_9.xyz = ((tmpvar_7 * _Color).xyz * light_3.xyz);
  c_9.w = (reflcol_6.w * _ReflectColor.w);
  c_2 = c_9;
  c_2.xyz = (c_2.xyz + tmpvar_5);
  c_2.w = 1.0;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTPROBE_SH" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec3 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  tmpvar_5.w = 1.0;
  tmpvar_5.xyz = _glesVertex.xyz;
  tmpvar_4 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
  highp vec3 tmpvar_6;
  tmpvar_6 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_7;
  tmpvar_7[0] = unity_WorldToObject[0].xyz;
  tmpvar_7[1] = unity_WorldToObject[1].xyz;
  tmpvar_7[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_glesNormal * tmpvar_7));
  highp vec3 tmpvar_9;
  highp vec3 I_10;
  I_10 = (tmpvar_6 - _WorldSpaceCameraPos);
  tmpvar_9 = (I_10 - (2.0 * (
    dot (tmpvar_8, I_10)
   * tmpvar_8)));
  tmpvar_1 = tmpvar_9;
  highp vec4 o_11;
  highp vec4 tmpvar_12;
  tmpvar_12 = (tmpvar_4 * 0.5);
  highp vec2 tmpvar_13;
  tmpvar_13.x = tmpvar_12.x;
  tmpvar_13.y = (tmpvar_12.y * _ProjectionParams.x);
  o_11.xy = (tmpvar_13 + tmpvar_12.w);
  o_11.zw = tmpvar_4.zw;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_2.xy = vec2(0.0, 0.0);
  highp mat3 tmpvar_14;
  tmpvar_14[0] = unity_WorldToObject[0].xyz;
  tmpvar_14[1] = unity_WorldToObject[1].xyz;
  tmpvar_14[2] = unity_WorldToObject[2].xyz;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = normalize((_glesNormal * tmpvar_14));
  mediump vec4 normal_16;
  normal_16 = tmpvar_15;
  mediump vec3 res_17;
  mediump vec3 x_18;
  x_18.x = dot (unity_SHAr, normal_16);
  x_18.y = dot (unity_SHAg, normal_16);
  x_18.z = dot (unity_SHAb, normal_16);
  mediump vec3 x1_19;
  mediump vec4 tmpvar_20;
  tmpvar_20 = (normal_16.xyzz * normal_16.yzzx);
  x1_19.x = dot (unity_SHBr, tmpvar_20);
  x1_19.y = dot (unity_SHBg, tmpvar_20);
  x1_19.z = dot (unity_SHBb, tmpvar_20);
  res_17 = (x_18 + (x1_19 + (unity_SHC.xyz * 
    ((normal_16.x * normal_16.x) - (normal_16.y * normal_16.y))
  )));
  mediump vec3 tmpvar_21;
  tmpvar_21 = max (((1.055 * 
    pow (max (res_17, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_17 = tmpvar_21;
  tmpvar_3 = tmpvar_21;
  gl_Position = tmpvar_4;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = o_11;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
uniform sampler2D _LightBuffer;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD5;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  highp vec3 tmpvar_4;
  tmpvar_4 = xlv_TEXCOORD1;
  lowp vec3 tmpvar_5;
  lowp vec4 reflcol_6;
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_6 = (textureCube (_Cube, tmpvar_4) * tmpvar_7.w);
  tmpvar_5 = (reflcol_6.xyz * _ReflectColor.xyz);
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2DProj (_LightBuffer, xlv_TEXCOORD3);
  light_3 = tmpvar_8;
  light_3 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
  light_3.xyz = (light_3.xyz + xlv_TEXCOORD5);
  lowp vec4 c_9;
  c_9.xyz = ((tmpvar_7 * _Color).xyz * light_3.xyz);
  c_9.w = (reflcol_6.w * _ReflectColor.w);
  c_2 = c_9;
  c_2.xyz = (c_2.xyz + tmpvar_5);
  c_2.w = 1.0;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec3 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  tmpvar_5.w = 1.0;
  tmpvar_5.xyz = _glesVertex.xyz;
  tmpvar_4 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
  highp vec3 tmpvar_6;
  tmpvar_6 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_7;
  tmpvar_7[0] = unity_WorldToObject[0].xyz;
  tmpvar_7[1] = unity_WorldToObject[1].xyz;
  tmpvar_7[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_glesNormal * tmpvar_7));
  highp vec3 tmpvar_9;
  highp vec3 I_10;
  I_10 = (tmpvar_6 - _WorldSpaceCameraPos);
  tmpvar_9 = (I_10 - (2.0 * (
    dot (tmpvar_8, I_10)
   * tmpvar_8)));
  tmpvar_1 = tmpvar_9;
  highp vec4 o_11;
  highp vec4 tmpvar_12;
  tmpvar_12 = (tmpvar_4 * 0.5);
  highp vec2 tmpvar_13;
  tmpvar_13.x = tmpvar_12.x;
  tmpvar_13.y = (tmpvar_12.y * _ProjectionParams.x);
  o_11.xy = (tmpvar_13 + tmpvar_12.w);
  o_11.zw = tmpvar_4.zw;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_2.xy = vec2(0.0, 0.0);
  highp mat3 tmpvar_14;
  tmpvar_14[0] = unity_WorldToObject[0].xyz;
  tmpvar_14[1] = unity_WorldToObject[1].xyz;
  tmpvar_14[2] = unity_WorldToObject[2].xyz;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = normalize((_glesNormal * tmpvar_14));
  mediump vec4 normal_16;
  normal_16 = tmpvar_15;
  mediump vec3 res_17;
  mediump vec3 x_18;
  x_18.x = dot (unity_SHAr, normal_16);
  x_18.y = dot (unity_SHAg, normal_16);
  x_18.z = dot (unity_SHAb, normal_16);
  mediump vec3 x1_19;
  mediump vec4 tmpvar_20;
  tmpvar_20 = (normal_16.xyzz * normal_16.yzzx);
  x1_19.x = dot (unity_SHBr, tmpvar_20);
  x1_19.y = dot (unity_SHBg, tmpvar_20);
  x1_19.z = dot (unity_SHBb, tmpvar_20);
  res_17 = (x_18 + (x1_19 + (unity_SHC.xyz * 
    ((normal_16.x * normal_16.x) - (normal_16.y * normal_16.y))
  )));
  mediump vec3 tmpvar_21;
  tmpvar_21 = max (((1.055 * 
    pow (max (res_17, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_17 = tmpvar_21;
  tmpvar_3 = tmpvar_21;
  gl_Position = tmpvar_4;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = o_11;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
uniform sampler2D _LightBuffer;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD5;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  highp vec3 tmpvar_4;
  tmpvar_4 = xlv_TEXCOORD1;
  lowp vec3 tmpvar_5;
  lowp vec4 reflcol_6;
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_6 = (textureCube (_Cube, tmpvar_4) * tmpvar_7.w);
  tmpvar_5 = (reflcol_6.xyz * _ReflectColor.xyz);
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2DProj (_LightBuffer, xlv_TEXCOORD3);
  light_3 = tmpvar_8;
  light_3 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
  light_3.xyz = (light_3.xyz + xlv_TEXCOORD5);
  lowp vec4 c_9;
  c_9.xyz = ((tmpvar_7 * _Color).xyz * light_3.xyz);
  c_9.w = (reflcol_6.w * _ReflectColor.w);
  c_2 = c_9;
  c_2.xyz = (c_2.xyz + tmpvar_5);
  c_2.w = 1.0;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec3 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  tmpvar_5.w = 1.0;
  tmpvar_5.xyz = _glesVertex.xyz;
  tmpvar_4 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
  highp vec3 tmpvar_6;
  tmpvar_6 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_7;
  tmpvar_7[0] = unity_WorldToObject[0].xyz;
  tmpvar_7[1] = unity_WorldToObject[1].xyz;
  tmpvar_7[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_glesNormal * tmpvar_7));
  highp vec3 tmpvar_9;
  highp vec3 I_10;
  I_10 = (tmpvar_6 - _WorldSpaceCameraPos);
  tmpvar_9 = (I_10 - (2.0 * (
    dot (tmpvar_8, I_10)
   * tmpvar_8)));
  tmpvar_1 = tmpvar_9;
  highp vec4 o_11;
  highp vec4 tmpvar_12;
  tmpvar_12 = (tmpvar_4 * 0.5);
  highp vec2 tmpvar_13;
  tmpvar_13.x = tmpvar_12.x;
  tmpvar_13.y = (tmpvar_12.y * _ProjectionParams.x);
  o_11.xy = (tmpvar_13 + tmpvar_12.w);
  o_11.zw = tmpvar_4.zw;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_2.xy = vec2(0.0, 0.0);
  highp mat3 tmpvar_14;
  tmpvar_14[0] = unity_WorldToObject[0].xyz;
  tmpvar_14[1] = unity_WorldToObject[1].xyz;
  tmpvar_14[2] = unity_WorldToObject[2].xyz;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = normalize((_glesNormal * tmpvar_14));
  mediump vec4 normal_16;
  normal_16 = tmpvar_15;
  mediump vec3 res_17;
  mediump vec3 x_18;
  x_18.x = dot (unity_SHAr, normal_16);
  x_18.y = dot (unity_SHAg, normal_16);
  x_18.z = dot (unity_SHAb, normal_16);
  mediump vec3 x1_19;
  mediump vec4 tmpvar_20;
  tmpvar_20 = (normal_16.xyzz * normal_16.yzzx);
  x1_19.x = dot (unity_SHBr, tmpvar_20);
  x1_19.y = dot (unity_SHBg, tmpvar_20);
  x1_19.z = dot (unity_SHBb, tmpvar_20);
  res_17 = (x_18 + (x1_19 + (unity_SHC.xyz * 
    ((normal_16.x * normal_16.x) - (normal_16.y * normal_16.y))
  )));
  mediump vec3 tmpvar_21;
  tmpvar_21 = max (((1.055 * 
    pow (max (res_17, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_17 = tmpvar_21;
  tmpvar_3 = tmpvar_21;
  gl_Position = tmpvar_4;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = o_11;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
uniform sampler2D _LightBuffer;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD5;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  highp vec3 tmpvar_4;
  tmpvar_4 = xlv_TEXCOORD1;
  lowp vec3 tmpvar_5;
  lowp vec4 reflcol_6;
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_6 = (textureCube (_Cube, tmpvar_4) * tmpvar_7.w);
  tmpvar_5 = (reflcol_6.xyz * _ReflectColor.xyz);
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2DProj (_LightBuffer, xlv_TEXCOORD3);
  light_3 = tmpvar_8;
  light_3 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
  light_3.xyz = (light_3.xyz + xlv_TEXCOORD5);
  lowp vec4 c_9;
  c_9.xyz = ((tmpvar_7 * _Color).xyz * light_3.xyz);
  c_9.w = (reflcol_6.w * _ReflectColor.w);
  c_2 = c_9;
  c_2.xyz = (c_2.xyz + tmpvar_5);
  c_2.w = 1.0;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec3 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  tmpvar_5.w = 1.0;
  tmpvar_5.xyz = _glesVertex.xyz;
  tmpvar_4 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
  highp vec3 tmpvar_6;
  tmpvar_6 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_7;
  tmpvar_7[0] = unity_WorldToObject[0].xyz;
  tmpvar_7[1] = unity_WorldToObject[1].xyz;
  tmpvar_7[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_glesNormal * tmpvar_7));
  highp vec3 tmpvar_9;
  highp vec3 I_10;
  I_10 = (tmpvar_6 - _WorldSpaceCameraPos);
  tmpvar_9 = (I_10 - (2.0 * (
    dot (tmpvar_8, I_10)
   * tmpvar_8)));
  tmpvar_1 = tmpvar_9;
  highp vec4 o_11;
  highp vec4 tmpvar_12;
  tmpvar_12 = (tmpvar_4 * 0.5);
  highp vec2 tmpvar_13;
  tmpvar_13.x = tmpvar_12.x;
  tmpvar_13.y = (tmpvar_12.y * _ProjectionParams.x);
  o_11.xy = (tmpvar_13 + tmpvar_12.w);
  o_11.zw = tmpvar_4.zw;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_2.xy = vec2(0.0, 0.0);
  highp mat3 tmpvar_14;
  tmpvar_14[0] = unity_WorldToObject[0].xyz;
  tmpvar_14[1] = unity_WorldToObject[1].xyz;
  tmpvar_14[2] = unity_WorldToObject[2].xyz;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = normalize((_glesNormal * tmpvar_14));
  mediump vec4 normal_16;
  normal_16 = tmpvar_15;
  mediump vec3 res_17;
  mediump vec3 x_18;
  x_18.x = dot (unity_SHAr, normal_16);
  x_18.y = dot (unity_SHAg, normal_16);
  x_18.z = dot (unity_SHAb, normal_16);
  mediump vec3 x1_19;
  mediump vec4 tmpvar_20;
  tmpvar_20 = (normal_16.xyzz * normal_16.yzzx);
  x1_19.x = dot (unity_SHBr, tmpvar_20);
  x1_19.y = dot (unity_SHBg, tmpvar_20);
  x1_19.z = dot (unity_SHBb, tmpvar_20);
  res_17 = (x_18 + (x1_19 + (unity_SHC.xyz * 
    ((normal_16.x * normal_16.x) - (normal_16.y * normal_16.y))
  )));
  mediump vec3 tmpvar_21;
  tmpvar_21 = max (((1.055 * 
    pow (max (res_17, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_17 = tmpvar_21;
  tmpvar_3 = tmpvar_21;
  gl_Position = tmpvar_4;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = o_11;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
uniform sampler2D _LightBuffer;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD5;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  highp vec3 tmpvar_4;
  tmpvar_4 = xlv_TEXCOORD1;
  lowp vec3 tmpvar_5;
  lowp vec4 reflcol_6;
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_6 = (textureCube (_Cube, tmpvar_4) * tmpvar_7.w);
  tmpvar_5 = (reflcol_6.xyz * _ReflectColor.xyz);
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2DProj (_LightBuffer, xlv_TEXCOORD3);
  light_3 = tmpvar_8;
  light_3 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
  light_3.xyz = (light_3.xyz + xlv_TEXCOORD5);
  lowp vec4 c_9;
  c_9.xyz = ((tmpvar_7 * _Color).xyz * light_3.xyz);
  c_9.w = (reflcol_6.w * _ReflectColor.w);
  c_2 = c_9;
  c_2.xyz = (c_2.xyz + tmpvar_5);
  c_2.w = 1.0;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "LIGHTMAP_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  mediump vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  highp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = tmpvar_1.xyz;
  tmpvar_5 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
  highp vec4 tmpvar_7;
  tmpvar_7 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_8;
  tmpvar_8[0] = unity_WorldToObject[0].xyz;
  tmpvar_8[1] = unity_WorldToObject[1].xyz;
  tmpvar_8[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_9;
  tmpvar_9 = normalize((_glesNormal * tmpvar_8));
  highp vec3 tmpvar_10;
  highp vec3 I_11;
  I_11 = (tmpvar_7.xyz - _WorldSpaceCameraPos);
  tmpvar_10 = (I_11 - (2.0 * (
    dot (tmpvar_9, I_11)
   * tmpvar_9)));
  tmpvar_2 = tmpvar_10;
  highp vec4 o_12;
  highp vec4 tmpvar_13;
  tmpvar_13 = (tmpvar_5 * 0.5);
  highp vec2 tmpvar_14;
  tmpvar_14.x = tmpvar_13.x;
  tmpvar_14.y = (tmpvar_13.y * _ProjectionParams.x);
  o_12.xy = (tmpvar_14 + tmpvar_13.w);
  o_12.zw = tmpvar_5.zw;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  tmpvar_4.xyz = ((tmpvar_7.xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = tmpvar_1.xyz;
  tmpvar_4.w = (-((unity_MatrixV * 
    (unity_ObjectToWorld * tmpvar_15)
  ).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
  gl_Position = tmpvar_5;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_7.xyz;
  xlv_TEXCOORD3 = o_12;
  xlv_TEXCOORD4 = tmpvar_3;
  xlv_TEXCOORD5 = tmpvar_4;
}


#endif
#ifdef FRAGMENT
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
uniform sampler2D _LightBuffer;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  lowp vec3 lm_3;
  lowp vec4 lmtex_4;
  mediump vec4 light_5;
  highp vec3 tmpvar_6;
  tmpvar_6 = xlv_TEXCOORD1;
  lowp vec3 tmpvar_7;
  lowp vec4 reflcol_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_8 = (textureCube (_Cube, tmpvar_6) * tmpvar_9.w);
  tmpvar_7 = (reflcol_8.xyz * _ReflectColor.xyz);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2DProj (_LightBuffer, xlv_TEXCOORD3);
  light_5 = tmpvar_10;
  light_5 = -(log2(max (light_5, vec4(0.001, 0.001, 0.001, 0.001))));
  mediump vec4 tmpvar_11;
  tmpvar_11 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lmtex_4 = tmpvar_11;
  mediump vec3 tmpvar_12;
  tmpvar_12 = (unity_Lightmap_HDR.x * lmtex_4.xyz);
  lm_3 = tmpvar_12;
  light_5.xyz = (light_5.xyz + lm_3);
  lowp vec4 c_13;
  c_13.xyz = ((tmpvar_9 * _Color).xyz * light_5.xyz);
  c_13.w = (reflcol_8.w * _ReflectColor.w);
  c_2 = c_13;
  c_2.xyz = (c_2.xyz + tmpvar_7);
  c_2.w = 1.0;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTMAP_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  mediump vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  highp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = tmpvar_1.xyz;
  tmpvar_5 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
  highp vec4 tmpvar_7;
  tmpvar_7 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_8;
  tmpvar_8[0] = unity_WorldToObject[0].xyz;
  tmpvar_8[1] = unity_WorldToObject[1].xyz;
  tmpvar_8[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_9;
  tmpvar_9 = normalize((_glesNormal * tmpvar_8));
  highp vec3 tmpvar_10;
  highp vec3 I_11;
  I_11 = (tmpvar_7.xyz - _WorldSpaceCameraPos);
  tmpvar_10 = (I_11 - (2.0 * (
    dot (tmpvar_9, I_11)
   * tmpvar_9)));
  tmpvar_2 = tmpvar_10;
  highp vec4 o_12;
  highp vec4 tmpvar_13;
  tmpvar_13 = (tmpvar_5 * 0.5);
  highp vec2 tmpvar_14;
  tmpvar_14.x = tmpvar_13.x;
  tmpvar_14.y = (tmpvar_13.y * _ProjectionParams.x);
  o_12.xy = (tmpvar_14 + tmpvar_13.w);
  o_12.zw = tmpvar_5.zw;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  tmpvar_4.xyz = ((tmpvar_7.xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = tmpvar_1.xyz;
  tmpvar_4.w = (-((unity_MatrixV * 
    (unity_ObjectToWorld * tmpvar_15)
  ).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
  gl_Position = tmpvar_5;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_7.xyz;
  xlv_TEXCOORD3 = o_12;
  xlv_TEXCOORD4 = tmpvar_3;
  xlv_TEXCOORD5 = tmpvar_4;
}


#endif
#ifdef FRAGMENT
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
uniform sampler2D _LightBuffer;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  lowp vec3 lm_3;
  lowp vec4 lmtex_4;
  mediump vec4 light_5;
  highp vec3 tmpvar_6;
  tmpvar_6 = xlv_TEXCOORD1;
  lowp vec3 tmpvar_7;
  lowp vec4 reflcol_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_8 = (textureCube (_Cube, tmpvar_6) * tmpvar_9.w);
  tmpvar_7 = (reflcol_8.xyz * _ReflectColor.xyz);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2DProj (_LightBuffer, xlv_TEXCOORD3);
  light_5 = tmpvar_10;
  light_5 = -(log2(max (light_5, vec4(0.001, 0.001, 0.001, 0.001))));
  mediump vec4 tmpvar_11;
  tmpvar_11 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lmtex_4 = tmpvar_11;
  mediump vec3 tmpvar_12;
  tmpvar_12 = (unity_Lightmap_HDR.x * lmtex_4.xyz);
  lm_3 = tmpvar_12;
  light_5.xyz = (light_5.xyz + lm_3);
  lowp vec4 c_13;
  c_13.xyz = ((tmpvar_9 * _Color).xyz * light_5.xyz);
  c_13.w = (reflcol_8.w * _ReflectColor.w);
  c_2 = c_13;
  c_2.xyz = (c_2.xyz + tmpvar_7);
  c_2.w = 1.0;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTMAP_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  mediump vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  highp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = tmpvar_1.xyz;
  tmpvar_5 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
  highp vec4 tmpvar_7;
  tmpvar_7 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_8;
  tmpvar_8[0] = unity_WorldToObject[0].xyz;
  tmpvar_8[1] = unity_WorldToObject[1].xyz;
  tmpvar_8[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_9;
  tmpvar_9 = normalize((_glesNormal * tmpvar_8));
  highp vec3 tmpvar_10;
  highp vec3 I_11;
  I_11 = (tmpvar_7.xyz - _WorldSpaceCameraPos);
  tmpvar_10 = (I_11 - (2.0 * (
    dot (tmpvar_9, I_11)
   * tmpvar_9)));
  tmpvar_2 = tmpvar_10;
  highp vec4 o_12;
  highp vec4 tmpvar_13;
  tmpvar_13 = (tmpvar_5 * 0.5);
  highp vec2 tmpvar_14;
  tmpvar_14.x = tmpvar_13.x;
  tmpvar_14.y = (tmpvar_13.y * _ProjectionParams.x);
  o_12.xy = (tmpvar_14 + tmpvar_13.w);
  o_12.zw = tmpvar_5.zw;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  tmpvar_4.xyz = ((tmpvar_7.xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = tmpvar_1.xyz;
  tmpvar_4.w = (-((unity_MatrixV * 
    (unity_ObjectToWorld * tmpvar_15)
  ).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
  gl_Position = tmpvar_5;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_7.xyz;
  xlv_TEXCOORD3 = o_12;
  xlv_TEXCOORD4 = tmpvar_3;
  xlv_TEXCOORD5 = tmpvar_4;
}


#endif
#ifdef FRAGMENT
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
uniform sampler2D _LightBuffer;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  lowp vec3 lm_3;
  lowp vec4 lmtex_4;
  mediump vec4 light_5;
  highp vec3 tmpvar_6;
  tmpvar_6 = xlv_TEXCOORD1;
  lowp vec3 tmpvar_7;
  lowp vec4 reflcol_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_8 = (textureCube (_Cube, tmpvar_6) * tmpvar_9.w);
  tmpvar_7 = (reflcol_8.xyz * _ReflectColor.xyz);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2DProj (_LightBuffer, xlv_TEXCOORD3);
  light_5 = tmpvar_10;
  light_5 = -(log2(max (light_5, vec4(0.001, 0.001, 0.001, 0.001))));
  mediump vec4 tmpvar_11;
  tmpvar_11 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lmtex_4 = tmpvar_11;
  mediump vec3 tmpvar_12;
  tmpvar_12 = (unity_Lightmap_HDR.x * lmtex_4.xyz);
  lm_3 = tmpvar_12;
  light_5.xyz = (light_5.xyz + lm_3);
  lowp vec4 c_13;
  c_13.xyz = ((tmpvar_9 * _Color).xyz * light_5.xyz);
  c_13.w = (reflcol_8.w * _ReflectColor.w);
  c_2 = c_13;
  c_2.xyz = (c_2.xyz + tmpvar_7);
  c_2.w = 1.0;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "LIGHTMAP_ON" "LIGHTPROBE_SH" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  mediump vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  highp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = tmpvar_1.xyz;
  tmpvar_5 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
  highp vec4 tmpvar_7;
  tmpvar_7 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_8;
  tmpvar_8[0] = unity_WorldToObject[0].xyz;
  tmpvar_8[1] = unity_WorldToObject[1].xyz;
  tmpvar_8[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_9;
  tmpvar_9 = normalize((_glesNormal * tmpvar_8));
  highp vec3 tmpvar_10;
  highp vec3 I_11;
  I_11 = (tmpvar_7.xyz - _WorldSpaceCameraPos);
  tmpvar_10 = (I_11 - (2.0 * (
    dot (tmpvar_9, I_11)
   * tmpvar_9)));
  tmpvar_2 = tmpvar_10;
  highp vec4 o_12;
  highp vec4 tmpvar_13;
  tmpvar_13 = (tmpvar_5 * 0.5);
  highp vec2 tmpvar_14;
  tmpvar_14.x = tmpvar_13.x;
  tmpvar_14.y = (tmpvar_13.y * _ProjectionParams.x);
  o_12.xy = (tmpvar_14 + tmpvar_13.w);
  o_12.zw = tmpvar_5.zw;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  tmpvar_4.xyz = ((tmpvar_7.xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = tmpvar_1.xyz;
  tmpvar_4.w = (-((unity_MatrixV * 
    (unity_ObjectToWorld * tmpvar_15)
  ).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
  gl_Position = tmpvar_5;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_7.xyz;
  xlv_TEXCOORD3 = o_12;
  xlv_TEXCOORD4 = tmpvar_3;
  xlv_TEXCOORD5 = tmpvar_4;
}


#endif
#ifdef FRAGMENT
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
uniform sampler2D _LightBuffer;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  lowp vec3 lm_3;
  lowp vec4 lmtex_4;
  mediump vec4 light_5;
  highp vec3 tmpvar_6;
  tmpvar_6 = xlv_TEXCOORD1;
  lowp vec3 tmpvar_7;
  lowp vec4 reflcol_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_8 = (textureCube (_Cube, tmpvar_6) * tmpvar_9.w);
  tmpvar_7 = (reflcol_8.xyz * _ReflectColor.xyz);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2DProj (_LightBuffer, xlv_TEXCOORD3);
  light_5 = tmpvar_10;
  light_5 = -(log2(max (light_5, vec4(0.001, 0.001, 0.001, 0.001))));
  mediump vec4 tmpvar_11;
  tmpvar_11 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lmtex_4 = tmpvar_11;
  mediump vec3 tmpvar_12;
  tmpvar_12 = (unity_Lightmap_HDR.x * lmtex_4.xyz);
  lm_3 = tmpvar_12;
  light_5.xyz = (light_5.xyz + lm_3);
  lowp vec4 c_13;
  c_13.xyz = ((tmpvar_9 * _Color).xyz * light_5.xyz);
  c_13.w = (reflcol_8.w * _ReflectColor.w);
  c_2 = c_13;
  c_2.xyz = (c_2.xyz + tmpvar_7);
  c_2.w = 1.0;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTMAP_ON" "LIGHTPROBE_SH" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  mediump vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  highp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = tmpvar_1.xyz;
  tmpvar_5 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
  highp vec4 tmpvar_7;
  tmpvar_7 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_8;
  tmpvar_8[0] = unity_WorldToObject[0].xyz;
  tmpvar_8[1] = unity_WorldToObject[1].xyz;
  tmpvar_8[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_9;
  tmpvar_9 = normalize((_glesNormal * tmpvar_8));
  highp vec3 tmpvar_10;
  highp vec3 I_11;
  I_11 = (tmpvar_7.xyz - _WorldSpaceCameraPos);
  tmpvar_10 = (I_11 - (2.0 * (
    dot (tmpvar_9, I_11)
   * tmpvar_9)));
  tmpvar_2 = tmpvar_10;
  highp vec4 o_12;
  highp vec4 tmpvar_13;
  tmpvar_13 = (tmpvar_5 * 0.5);
  highp vec2 tmpvar_14;
  tmpvar_14.x = tmpvar_13.x;
  tmpvar_14.y = (tmpvar_13.y * _ProjectionParams.x);
  o_12.xy = (tmpvar_14 + tmpvar_13.w);
  o_12.zw = tmpvar_5.zw;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  tmpvar_4.xyz = ((tmpvar_7.xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = tmpvar_1.xyz;
  tmpvar_4.w = (-((unity_MatrixV * 
    (unity_ObjectToWorld * tmpvar_15)
  ).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
  gl_Position = tmpvar_5;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_7.xyz;
  xlv_TEXCOORD3 = o_12;
  xlv_TEXCOORD4 = tmpvar_3;
  xlv_TEXCOORD5 = tmpvar_4;
}


#endif
#ifdef FRAGMENT
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
uniform sampler2D _LightBuffer;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  lowp vec3 lm_3;
  lowp vec4 lmtex_4;
  mediump vec4 light_5;
  highp vec3 tmpvar_6;
  tmpvar_6 = xlv_TEXCOORD1;
  lowp vec3 tmpvar_7;
  lowp vec4 reflcol_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_8 = (textureCube (_Cube, tmpvar_6) * tmpvar_9.w);
  tmpvar_7 = (reflcol_8.xyz * _ReflectColor.xyz);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2DProj (_LightBuffer, xlv_TEXCOORD3);
  light_5 = tmpvar_10;
  light_5 = -(log2(max (light_5, vec4(0.001, 0.001, 0.001, 0.001))));
  mediump vec4 tmpvar_11;
  tmpvar_11 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lmtex_4 = tmpvar_11;
  mediump vec3 tmpvar_12;
  tmpvar_12 = (unity_Lightmap_HDR.x * lmtex_4.xyz);
  lm_3 = tmpvar_12;
  light_5.xyz = (light_5.xyz + lm_3);
  lowp vec4 c_13;
  c_13.xyz = ((tmpvar_9 * _Color).xyz * light_5.xyz);
  c_13.w = (reflcol_8.w * _ReflectColor.w);
  c_2 = c_13;
  c_2.xyz = (c_2.xyz + tmpvar_7);
  c_2.w = 1.0;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTMAP_ON" "LIGHTPROBE_SH" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  mediump vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  highp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = tmpvar_1.xyz;
  tmpvar_5 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
  highp vec4 tmpvar_7;
  tmpvar_7 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_8;
  tmpvar_8[0] = unity_WorldToObject[0].xyz;
  tmpvar_8[1] = unity_WorldToObject[1].xyz;
  tmpvar_8[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_9;
  tmpvar_9 = normalize((_glesNormal * tmpvar_8));
  highp vec3 tmpvar_10;
  highp vec3 I_11;
  I_11 = (tmpvar_7.xyz - _WorldSpaceCameraPos);
  tmpvar_10 = (I_11 - (2.0 * (
    dot (tmpvar_9, I_11)
   * tmpvar_9)));
  tmpvar_2 = tmpvar_10;
  highp vec4 o_12;
  highp vec4 tmpvar_13;
  tmpvar_13 = (tmpvar_5 * 0.5);
  highp vec2 tmpvar_14;
  tmpvar_14.x = tmpvar_13.x;
  tmpvar_14.y = (tmpvar_13.y * _ProjectionParams.x);
  o_12.xy = (tmpvar_14 + tmpvar_13.w);
  o_12.zw = tmpvar_5.zw;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  tmpvar_4.xyz = ((tmpvar_7.xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = tmpvar_1.xyz;
  tmpvar_4.w = (-((unity_MatrixV * 
    (unity_ObjectToWorld * tmpvar_15)
  ).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
  gl_Position = tmpvar_5;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_7.xyz;
  xlv_TEXCOORD3 = o_12;
  xlv_TEXCOORD4 = tmpvar_3;
  xlv_TEXCOORD5 = tmpvar_4;
}


#endif
#ifdef FRAGMENT
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
uniform sampler2D _LightBuffer;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  lowp vec3 lm_3;
  lowp vec4 lmtex_4;
  mediump vec4 light_5;
  highp vec3 tmpvar_6;
  tmpvar_6 = xlv_TEXCOORD1;
  lowp vec3 tmpvar_7;
  lowp vec4 reflcol_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_8 = (textureCube (_Cube, tmpvar_6) * tmpvar_9.w);
  tmpvar_7 = (reflcol_8.xyz * _ReflectColor.xyz);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2DProj (_LightBuffer, xlv_TEXCOORD3);
  light_5 = tmpvar_10;
  light_5 = -(log2(max (light_5, vec4(0.001, 0.001, 0.001, 0.001))));
  mediump vec4 tmpvar_11;
  tmpvar_11 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lmtex_4 = tmpvar_11;
  mediump vec3 tmpvar_12;
  tmpvar_12 = (unity_Lightmap_HDR.x * lmtex_4.xyz);
  lm_3 = tmpvar_12;
  light_5.xyz = (light_5.xyz + lm_3);
  lowp vec4 c_13;
  c_13.xyz = ((tmpvar_9 * _Color).xyz * light_5.xyz);
  c_13.w = (reflcol_8.w * _ReflectColor.w);
  c_2 = c_13;
  c_2.xyz = (c_2.xyz + tmpvar_7);
  c_2.w = 1.0;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  mediump vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  highp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = tmpvar_1.xyz;
  tmpvar_5 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
  highp vec4 tmpvar_7;
  tmpvar_7 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_8;
  tmpvar_8[0] = unity_WorldToObject[0].xyz;
  tmpvar_8[1] = unity_WorldToObject[1].xyz;
  tmpvar_8[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_9;
  tmpvar_9 = normalize((_glesNormal * tmpvar_8));
  highp vec3 tmpvar_10;
  highp vec3 I_11;
  I_11 = (tmpvar_7.xyz - _WorldSpaceCameraPos);
  tmpvar_10 = (I_11 - (2.0 * (
    dot (tmpvar_9, I_11)
   * tmpvar_9)));
  tmpvar_2 = tmpvar_10;
  highp vec4 o_12;
  highp vec4 tmpvar_13;
  tmpvar_13 = (tmpvar_5 * 0.5);
  highp vec2 tmpvar_14;
  tmpvar_14.x = tmpvar_13.x;
  tmpvar_14.y = (tmpvar_13.y * _ProjectionParams.x);
  o_12.xy = (tmpvar_14 + tmpvar_13.w);
  o_12.zw = tmpvar_5.zw;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  tmpvar_4.xyz = ((tmpvar_7.xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = tmpvar_1.xyz;
  tmpvar_4.w = (-((unity_MatrixV * 
    (unity_ObjectToWorld * tmpvar_15)
  ).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
  gl_Position = tmpvar_5;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_7.xyz;
  xlv_TEXCOORD3 = o_12;
  xlv_TEXCOORD4 = tmpvar_3;
  xlv_TEXCOORD5 = tmpvar_4;
}


#endif
#ifdef FRAGMENT
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
uniform sampler2D _LightBuffer;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  lowp vec3 lm_3;
  lowp vec4 lmtex_4;
  mediump vec4 light_5;
  highp vec3 tmpvar_6;
  tmpvar_6 = xlv_TEXCOORD1;
  lowp vec3 tmpvar_7;
  lowp vec4 reflcol_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_8 = (textureCube (_Cube, tmpvar_6) * tmpvar_9.w);
  tmpvar_7 = (reflcol_8.xyz * _ReflectColor.xyz);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2DProj (_LightBuffer, xlv_TEXCOORD3);
  light_5 = tmpvar_10;
  light_5 = -(log2(max (light_5, vec4(0.001, 0.001, 0.001, 0.001))));
  mediump vec4 tmpvar_11;
  tmpvar_11 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lmtex_4 = tmpvar_11;
  mediump vec3 tmpvar_12;
  tmpvar_12 = (unity_Lightmap_HDR.x * lmtex_4.xyz);
  lm_3 = tmpvar_12;
  light_5.xyz = (light_5.xyz + lm_3);
  lowp vec4 c_13;
  c_13.xyz = ((tmpvar_9 * _Color).xyz * light_5.xyz);
  c_13.w = (reflcol_8.w * _ReflectColor.w);
  c_2 = c_13;
  c_2.xyz = (c_2.xyz + tmpvar_7);
  c_2.w = 1.0;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  mediump vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  highp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = tmpvar_1.xyz;
  tmpvar_5 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
  highp vec4 tmpvar_7;
  tmpvar_7 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_8;
  tmpvar_8[0] = unity_WorldToObject[0].xyz;
  tmpvar_8[1] = unity_WorldToObject[1].xyz;
  tmpvar_8[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_9;
  tmpvar_9 = normalize((_glesNormal * tmpvar_8));
  highp vec3 tmpvar_10;
  highp vec3 I_11;
  I_11 = (tmpvar_7.xyz - _WorldSpaceCameraPos);
  tmpvar_10 = (I_11 - (2.0 * (
    dot (tmpvar_9, I_11)
   * tmpvar_9)));
  tmpvar_2 = tmpvar_10;
  highp vec4 o_12;
  highp vec4 tmpvar_13;
  tmpvar_13 = (tmpvar_5 * 0.5);
  highp vec2 tmpvar_14;
  tmpvar_14.x = tmpvar_13.x;
  tmpvar_14.y = (tmpvar_13.y * _ProjectionParams.x);
  o_12.xy = (tmpvar_14 + tmpvar_13.w);
  o_12.zw = tmpvar_5.zw;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  tmpvar_4.xyz = ((tmpvar_7.xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = tmpvar_1.xyz;
  tmpvar_4.w = (-((unity_MatrixV * 
    (unity_ObjectToWorld * tmpvar_15)
  ).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
  gl_Position = tmpvar_5;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_7.xyz;
  xlv_TEXCOORD3 = o_12;
  xlv_TEXCOORD4 = tmpvar_3;
  xlv_TEXCOORD5 = tmpvar_4;
}


#endif
#ifdef FRAGMENT
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
uniform sampler2D _LightBuffer;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  lowp vec3 lm_3;
  lowp vec4 lmtex_4;
  mediump vec4 light_5;
  highp vec3 tmpvar_6;
  tmpvar_6 = xlv_TEXCOORD1;
  lowp vec3 tmpvar_7;
  lowp vec4 reflcol_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_8 = (textureCube (_Cube, tmpvar_6) * tmpvar_9.w);
  tmpvar_7 = (reflcol_8.xyz * _ReflectColor.xyz);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2DProj (_LightBuffer, xlv_TEXCOORD3);
  light_5 = tmpvar_10;
  light_5 = -(log2(max (light_5, vec4(0.001, 0.001, 0.001, 0.001))));
  mediump vec4 tmpvar_11;
  tmpvar_11 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lmtex_4 = tmpvar_11;
  mediump vec3 tmpvar_12;
  tmpvar_12 = (unity_Lightmap_HDR.x * lmtex_4.xyz);
  lm_3 = tmpvar_12;
  light_5.xyz = (light_5.xyz + lm_3);
  lowp vec4 c_13;
  c_13.xyz = ((tmpvar_9 * _Color).xyz * light_5.xyz);
  c_13.w = (reflcol_8.w * _ReflectColor.w);
  c_2 = c_13;
  c_2.xyz = (c_2.xyz + tmpvar_7);
  c_2.w = 1.0;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  mediump vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  highp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = tmpvar_1.xyz;
  tmpvar_5 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
  highp vec4 tmpvar_7;
  tmpvar_7 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_8;
  tmpvar_8[0] = unity_WorldToObject[0].xyz;
  tmpvar_8[1] = unity_WorldToObject[1].xyz;
  tmpvar_8[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_9;
  tmpvar_9 = normalize((_glesNormal * tmpvar_8));
  highp vec3 tmpvar_10;
  highp vec3 I_11;
  I_11 = (tmpvar_7.xyz - _WorldSpaceCameraPos);
  tmpvar_10 = (I_11 - (2.0 * (
    dot (tmpvar_9, I_11)
   * tmpvar_9)));
  tmpvar_2 = tmpvar_10;
  highp vec4 o_12;
  highp vec4 tmpvar_13;
  tmpvar_13 = (tmpvar_5 * 0.5);
  highp vec2 tmpvar_14;
  tmpvar_14.x = tmpvar_13.x;
  tmpvar_14.y = (tmpvar_13.y * _ProjectionParams.x);
  o_12.xy = (tmpvar_14 + tmpvar_13.w);
  o_12.zw = tmpvar_5.zw;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  tmpvar_4.xyz = ((tmpvar_7.xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = tmpvar_1.xyz;
  tmpvar_4.w = (-((unity_MatrixV * 
    (unity_ObjectToWorld * tmpvar_15)
  ).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
  gl_Position = tmpvar_5;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_7.xyz;
  xlv_TEXCOORD3 = o_12;
  xlv_TEXCOORD4 = tmpvar_3;
  xlv_TEXCOORD5 = tmpvar_4;
}


#endif
#ifdef FRAGMENT
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
uniform sampler2D _LightBuffer;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  lowp vec3 lm_3;
  lowp vec4 lmtex_4;
  mediump vec4 light_5;
  highp vec3 tmpvar_6;
  tmpvar_6 = xlv_TEXCOORD1;
  lowp vec3 tmpvar_7;
  lowp vec4 reflcol_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_8 = (textureCube (_Cube, tmpvar_6) * tmpvar_9.w);
  tmpvar_7 = (reflcol_8.xyz * _ReflectColor.xyz);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2DProj (_LightBuffer, xlv_TEXCOORD3);
  light_5 = tmpvar_10;
  light_5 = -(log2(max (light_5, vec4(0.001, 0.001, 0.001, 0.001))));
  mediump vec4 tmpvar_11;
  tmpvar_11 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lmtex_4 = tmpvar_11;
  mediump vec3 tmpvar_12;
  tmpvar_12 = (unity_Lightmap_HDR.x * lmtex_4.xyz);
  lm_3 = tmpvar_12;
  light_5.xyz = (light_5.xyz + lm_3);
  lowp vec4 c_13;
  c_13.xyz = ((tmpvar_9 * _Color).xyz * light_5.xyz);
  c_13.w = (reflcol_8.w * _ReflectColor.w);
  c_2 = c_13;
  c_2.xyz = (c_2.xyz + tmpvar_7);
  c_2.w = 1.0;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  mediump vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  highp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = tmpvar_1.xyz;
  tmpvar_5 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
  highp vec4 tmpvar_7;
  tmpvar_7 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_8;
  tmpvar_8[0] = unity_WorldToObject[0].xyz;
  tmpvar_8[1] = unity_WorldToObject[1].xyz;
  tmpvar_8[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_9;
  tmpvar_9 = normalize((_glesNormal * tmpvar_8));
  highp vec3 tmpvar_10;
  highp vec3 I_11;
  I_11 = (tmpvar_7.xyz - _WorldSpaceCameraPos);
  tmpvar_10 = (I_11 - (2.0 * (
    dot (tmpvar_9, I_11)
   * tmpvar_9)));
  tmpvar_2 = tmpvar_10;
  highp vec4 o_12;
  highp vec4 tmpvar_13;
  tmpvar_13 = (tmpvar_5 * 0.5);
  highp vec2 tmpvar_14;
  tmpvar_14.x = tmpvar_13.x;
  tmpvar_14.y = (tmpvar_13.y * _ProjectionParams.x);
  o_12.xy = (tmpvar_14 + tmpvar_13.w);
  o_12.zw = tmpvar_5.zw;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  tmpvar_4.xyz = ((tmpvar_7.xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = tmpvar_1.xyz;
  tmpvar_4.w = (-((unity_MatrixV * 
    (unity_ObjectToWorld * tmpvar_15)
  ).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
  gl_Position = tmpvar_5;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_7.xyz;
  xlv_TEXCOORD3 = o_12;
  xlv_TEXCOORD4 = tmpvar_3;
  xlv_TEXCOORD5 = tmpvar_4;
}


#endif
#ifdef FRAGMENT
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
uniform sampler2D _LightBuffer;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  lowp vec3 lm_3;
  lowp vec4 lmtex_4;
  mediump vec4 light_5;
  highp vec3 tmpvar_6;
  tmpvar_6 = xlv_TEXCOORD1;
  lowp vec3 tmpvar_7;
  lowp vec4 reflcol_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_8 = (textureCube (_Cube, tmpvar_6) * tmpvar_9.w);
  tmpvar_7 = (reflcol_8.xyz * _ReflectColor.xyz);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2DProj (_LightBuffer, xlv_TEXCOORD3);
  light_5 = tmpvar_10;
  light_5 = -(log2(max (light_5, vec4(0.001, 0.001, 0.001, 0.001))));
  mediump vec4 tmpvar_11;
  tmpvar_11 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lmtex_4 = tmpvar_11;
  mediump vec3 tmpvar_12;
  tmpvar_12 = (unity_Lightmap_HDR.x * lmtex_4.xyz);
  lm_3 = tmpvar_12;
  light_5.xyz = (light_5.xyz + lm_3);
  lowp vec4 c_13;
  c_13.xyz = ((tmpvar_9 * _Color).xyz * light_5.xyz);
  c_13.w = (reflcol_8.w * _ReflectColor.w);
  c_2 = c_13;
  c_2.xyz = (c_2.xyz + tmpvar_7);
  c_2.w = 1.0;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  mediump vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  highp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = tmpvar_1.xyz;
  tmpvar_5 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
  highp vec4 tmpvar_7;
  tmpvar_7 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_8;
  tmpvar_8[0] = unity_WorldToObject[0].xyz;
  tmpvar_8[1] = unity_WorldToObject[1].xyz;
  tmpvar_8[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_9;
  tmpvar_9 = normalize((_glesNormal * tmpvar_8));
  highp vec3 tmpvar_10;
  highp vec3 I_11;
  I_11 = (tmpvar_7.xyz - _WorldSpaceCameraPos);
  tmpvar_10 = (I_11 - (2.0 * (
    dot (tmpvar_9, I_11)
   * tmpvar_9)));
  tmpvar_2 = tmpvar_10;
  highp vec4 o_12;
  highp vec4 tmpvar_13;
  tmpvar_13 = (tmpvar_5 * 0.5);
  highp vec2 tmpvar_14;
  tmpvar_14.x = tmpvar_13.x;
  tmpvar_14.y = (tmpvar_13.y * _ProjectionParams.x);
  o_12.xy = (tmpvar_14 + tmpvar_13.w);
  o_12.zw = tmpvar_5.zw;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  tmpvar_4.xyz = ((tmpvar_7.xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = tmpvar_1.xyz;
  tmpvar_4.w = (-((unity_MatrixV * 
    (unity_ObjectToWorld * tmpvar_15)
  ).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
  gl_Position = tmpvar_5;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_7.xyz;
  xlv_TEXCOORD3 = o_12;
  xlv_TEXCOORD4 = tmpvar_3;
  xlv_TEXCOORD5 = tmpvar_4;
}


#endif
#ifdef FRAGMENT
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
uniform sampler2D _LightBuffer;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  lowp vec3 lm_3;
  lowp vec4 lmtex_4;
  mediump vec4 light_5;
  highp vec3 tmpvar_6;
  tmpvar_6 = xlv_TEXCOORD1;
  lowp vec3 tmpvar_7;
  lowp vec4 reflcol_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_8 = (textureCube (_Cube, tmpvar_6) * tmpvar_9.w);
  tmpvar_7 = (reflcol_8.xyz * _ReflectColor.xyz);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2DProj (_LightBuffer, xlv_TEXCOORD3);
  light_5 = tmpvar_10;
  light_5 = -(log2(max (light_5, vec4(0.001, 0.001, 0.001, 0.001))));
  mediump vec4 tmpvar_11;
  tmpvar_11 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lmtex_4 = tmpvar_11;
  mediump vec3 tmpvar_12;
  tmpvar_12 = (unity_Lightmap_HDR.x * lmtex_4.xyz);
  lm_3 = tmpvar_12;
  light_5.xyz = (light_5.xyz + lm_3);
  lowp vec4 c_13;
  c_13.xyz = ((tmpvar_9 * _Color).xyz * light_5.xyz);
  c_13.w = (reflcol_8.w * _ReflectColor.w);
  c_2 = c_13;
  c_2.xyz = (c_2.xyz + tmpvar_7);
  c_2.w = 1.0;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  mediump vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  highp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = tmpvar_1.xyz;
  tmpvar_5 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
  highp vec4 tmpvar_7;
  tmpvar_7 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_8;
  tmpvar_8[0] = unity_WorldToObject[0].xyz;
  tmpvar_8[1] = unity_WorldToObject[1].xyz;
  tmpvar_8[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_9;
  tmpvar_9 = normalize((_glesNormal * tmpvar_8));
  highp vec3 tmpvar_10;
  highp vec3 I_11;
  I_11 = (tmpvar_7.xyz - _WorldSpaceCameraPos);
  tmpvar_10 = (I_11 - (2.0 * (
    dot (tmpvar_9, I_11)
   * tmpvar_9)));
  tmpvar_2 = tmpvar_10;
  highp vec4 o_12;
  highp vec4 tmpvar_13;
  tmpvar_13 = (tmpvar_5 * 0.5);
  highp vec2 tmpvar_14;
  tmpvar_14.x = tmpvar_13.x;
  tmpvar_14.y = (tmpvar_13.y * _ProjectionParams.x);
  o_12.xy = (tmpvar_14 + tmpvar_13.w);
  o_12.zw = tmpvar_5.zw;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  tmpvar_4.xyz = ((tmpvar_7.xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = tmpvar_1.xyz;
  tmpvar_4.w = (-((unity_MatrixV * 
    (unity_ObjectToWorld * tmpvar_15)
  ).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
  gl_Position = tmpvar_5;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_7.xyz;
  xlv_TEXCOORD3 = o_12;
  xlv_TEXCOORD4 = tmpvar_3;
  xlv_TEXCOORD5 = tmpvar_4;
}


#endif
#ifdef FRAGMENT
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
uniform sampler2D _LightBuffer;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  lowp vec3 lm_3;
  lowp vec4 lmtex_4;
  mediump vec4 light_5;
  highp vec3 tmpvar_6;
  tmpvar_6 = xlv_TEXCOORD1;
  lowp vec3 tmpvar_7;
  lowp vec4 reflcol_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_8 = (textureCube (_Cube, tmpvar_6) * tmpvar_9.w);
  tmpvar_7 = (reflcol_8.xyz * _ReflectColor.xyz);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2DProj (_LightBuffer, xlv_TEXCOORD3);
  light_5 = tmpvar_10;
  light_5 = -(log2(max (light_5, vec4(0.001, 0.001, 0.001, 0.001))));
  mediump vec4 tmpvar_11;
  tmpvar_11 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lmtex_4 = tmpvar_11;
  mediump vec3 tmpvar_12;
  tmpvar_12 = (unity_Lightmap_HDR.x * lmtex_4.xyz);
  lm_3 = tmpvar_12;
  light_5.xyz = (light_5.xyz + lm_3);
  lowp vec4 c_13;
  c_13.xyz = ((tmpvar_9 * _Color).xyz * light_5.xyz);
  c_13.w = (reflcol_8.w * _ReflectColor.w);
  c_2 = c_13;
  c_2.xyz = (c_2.xyz + tmpvar_7);
  c_2.w = 1.0;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec3 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  tmpvar_5.w = 1.0;
  tmpvar_5.xyz = _glesVertex.xyz;
  tmpvar_4 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
  highp vec3 tmpvar_6;
  tmpvar_6 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_7;
  tmpvar_7[0] = unity_WorldToObject[0].xyz;
  tmpvar_7[1] = unity_WorldToObject[1].xyz;
  tmpvar_7[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_glesNormal * tmpvar_7));
  highp vec3 tmpvar_9;
  highp vec3 I_10;
  I_10 = (tmpvar_6 - _WorldSpaceCameraPos);
  tmpvar_9 = (I_10 - (2.0 * (
    dot (tmpvar_8, I_10)
   * tmpvar_8)));
  tmpvar_1 = tmpvar_9;
  highp vec4 o_11;
  highp vec4 tmpvar_12;
  tmpvar_12 = (tmpvar_4 * 0.5);
  highp vec2 tmpvar_13;
  tmpvar_13.x = tmpvar_12.x;
  tmpvar_13.y = (tmpvar_12.y * _ProjectionParams.x);
  o_11.xy = (tmpvar_13 + tmpvar_12.w);
  o_11.zw = tmpvar_4.zw;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_2.xy = vec2(0.0, 0.0);
  highp mat3 tmpvar_14;
  tmpvar_14[0] = unity_WorldToObject[0].xyz;
  tmpvar_14[1] = unity_WorldToObject[1].xyz;
  tmpvar_14[2] = unity_WorldToObject[2].xyz;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = normalize((_glesNormal * tmpvar_14));
  mediump vec4 normal_16;
  normal_16 = tmpvar_15;
  mediump vec3 res_17;
  mediump vec3 x_18;
  x_18.x = dot (unity_SHAr, normal_16);
  x_18.y = dot (unity_SHAg, normal_16);
  x_18.z = dot (unity_SHAb, normal_16);
  mediump vec3 x1_19;
  mediump vec4 tmpvar_20;
  tmpvar_20 = (normal_16.xyzz * normal_16.yzzx);
  x1_19.x = dot (unity_SHBr, tmpvar_20);
  x1_19.y = dot (unity_SHBg, tmpvar_20);
  x1_19.z = dot (unity_SHBb, tmpvar_20);
  res_17 = (x_18 + (x1_19 + (unity_SHC.xyz * 
    ((normal_16.x * normal_16.x) - (normal_16.y * normal_16.y))
  )));
  mediump vec3 tmpvar_21;
  tmpvar_21 = max (((1.055 * 
    pow (max (res_17, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_17 = tmpvar_21;
  tmpvar_3 = tmpvar_21;
  gl_Position = tmpvar_4;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = o_11;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
uniform sampler2D _LightBuffer;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD5;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  highp vec3 tmpvar_4;
  tmpvar_4 = xlv_TEXCOORD1;
  lowp vec3 tmpvar_5;
  lowp vec4 reflcol_6;
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_6 = (textureCube (_Cube, tmpvar_4) * tmpvar_7.w);
  tmpvar_5 = (reflcol_6.xyz * _ReflectColor.xyz);
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2DProj (_LightBuffer, xlv_TEXCOORD3);
  light_3 = tmpvar_8;
  mediump vec4 tmpvar_9;
  tmpvar_9 = max (light_3, vec4(0.001, 0.001, 0.001, 0.001));
  light_3.w = tmpvar_9.w;
  light_3.xyz = (tmpvar_9.xyz + xlv_TEXCOORD5);
  lowp vec4 c_10;
  c_10.xyz = ((tmpvar_7 * _Color).xyz * light_3.xyz);
  c_10.w = (reflcol_6.w * _ReflectColor.w);
  c_2 = c_10;
  c_2.xyz = (c_2.xyz + tmpvar_5);
  c_2.w = 1.0;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec3 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  tmpvar_5.w = 1.0;
  tmpvar_5.xyz = _glesVertex.xyz;
  tmpvar_4 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
  highp vec3 tmpvar_6;
  tmpvar_6 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_7;
  tmpvar_7[0] = unity_WorldToObject[0].xyz;
  tmpvar_7[1] = unity_WorldToObject[1].xyz;
  tmpvar_7[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_glesNormal * tmpvar_7));
  highp vec3 tmpvar_9;
  highp vec3 I_10;
  I_10 = (tmpvar_6 - _WorldSpaceCameraPos);
  tmpvar_9 = (I_10 - (2.0 * (
    dot (tmpvar_8, I_10)
   * tmpvar_8)));
  tmpvar_1 = tmpvar_9;
  highp vec4 o_11;
  highp vec4 tmpvar_12;
  tmpvar_12 = (tmpvar_4 * 0.5);
  highp vec2 tmpvar_13;
  tmpvar_13.x = tmpvar_12.x;
  tmpvar_13.y = (tmpvar_12.y * _ProjectionParams.x);
  o_11.xy = (tmpvar_13 + tmpvar_12.w);
  o_11.zw = tmpvar_4.zw;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_2.xy = vec2(0.0, 0.0);
  highp mat3 tmpvar_14;
  tmpvar_14[0] = unity_WorldToObject[0].xyz;
  tmpvar_14[1] = unity_WorldToObject[1].xyz;
  tmpvar_14[2] = unity_WorldToObject[2].xyz;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = normalize((_glesNormal * tmpvar_14));
  mediump vec4 normal_16;
  normal_16 = tmpvar_15;
  mediump vec3 res_17;
  mediump vec3 x_18;
  x_18.x = dot (unity_SHAr, normal_16);
  x_18.y = dot (unity_SHAg, normal_16);
  x_18.z = dot (unity_SHAb, normal_16);
  mediump vec3 x1_19;
  mediump vec4 tmpvar_20;
  tmpvar_20 = (normal_16.xyzz * normal_16.yzzx);
  x1_19.x = dot (unity_SHBr, tmpvar_20);
  x1_19.y = dot (unity_SHBg, tmpvar_20);
  x1_19.z = dot (unity_SHBb, tmpvar_20);
  res_17 = (x_18 + (x1_19 + (unity_SHC.xyz * 
    ((normal_16.x * normal_16.x) - (normal_16.y * normal_16.y))
  )));
  mediump vec3 tmpvar_21;
  tmpvar_21 = max (((1.055 * 
    pow (max (res_17, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_17 = tmpvar_21;
  tmpvar_3 = tmpvar_21;
  gl_Position = tmpvar_4;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = o_11;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
uniform sampler2D _LightBuffer;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD5;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  highp vec3 tmpvar_4;
  tmpvar_4 = xlv_TEXCOORD1;
  lowp vec3 tmpvar_5;
  lowp vec4 reflcol_6;
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_6 = (textureCube (_Cube, tmpvar_4) * tmpvar_7.w);
  tmpvar_5 = (reflcol_6.xyz * _ReflectColor.xyz);
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2DProj (_LightBuffer, xlv_TEXCOORD3);
  light_3 = tmpvar_8;
  mediump vec4 tmpvar_9;
  tmpvar_9 = max (light_3, vec4(0.001, 0.001, 0.001, 0.001));
  light_3.w = tmpvar_9.w;
  light_3.xyz = (tmpvar_9.xyz + xlv_TEXCOORD5);
  lowp vec4 c_10;
  c_10.xyz = ((tmpvar_7 * _Color).xyz * light_3.xyz);
  c_10.w = (reflcol_6.w * _ReflectColor.w);
  c_2 = c_10;
  c_2.xyz = (c_2.xyz + tmpvar_5);
  c_2.w = 1.0;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec3 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  tmpvar_5.w = 1.0;
  tmpvar_5.xyz = _glesVertex.xyz;
  tmpvar_4 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
  highp vec3 tmpvar_6;
  tmpvar_6 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_7;
  tmpvar_7[0] = unity_WorldToObject[0].xyz;
  tmpvar_7[1] = unity_WorldToObject[1].xyz;
  tmpvar_7[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_glesNormal * tmpvar_7));
  highp vec3 tmpvar_9;
  highp vec3 I_10;
  I_10 = (tmpvar_6 - _WorldSpaceCameraPos);
  tmpvar_9 = (I_10 - (2.0 * (
    dot (tmpvar_8, I_10)
   * tmpvar_8)));
  tmpvar_1 = tmpvar_9;
  highp vec4 o_11;
  highp vec4 tmpvar_12;
  tmpvar_12 = (tmpvar_4 * 0.5);
  highp vec2 tmpvar_13;
  tmpvar_13.x = tmpvar_12.x;
  tmpvar_13.y = (tmpvar_12.y * _ProjectionParams.x);
  o_11.xy = (tmpvar_13 + tmpvar_12.w);
  o_11.zw = tmpvar_4.zw;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_2.xy = vec2(0.0, 0.0);
  highp mat3 tmpvar_14;
  tmpvar_14[0] = unity_WorldToObject[0].xyz;
  tmpvar_14[1] = unity_WorldToObject[1].xyz;
  tmpvar_14[2] = unity_WorldToObject[2].xyz;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = normalize((_glesNormal * tmpvar_14));
  mediump vec4 normal_16;
  normal_16 = tmpvar_15;
  mediump vec3 res_17;
  mediump vec3 x_18;
  x_18.x = dot (unity_SHAr, normal_16);
  x_18.y = dot (unity_SHAg, normal_16);
  x_18.z = dot (unity_SHAb, normal_16);
  mediump vec3 x1_19;
  mediump vec4 tmpvar_20;
  tmpvar_20 = (normal_16.xyzz * normal_16.yzzx);
  x1_19.x = dot (unity_SHBr, tmpvar_20);
  x1_19.y = dot (unity_SHBg, tmpvar_20);
  x1_19.z = dot (unity_SHBb, tmpvar_20);
  res_17 = (x_18 + (x1_19 + (unity_SHC.xyz * 
    ((normal_16.x * normal_16.x) - (normal_16.y * normal_16.y))
  )));
  mediump vec3 tmpvar_21;
  tmpvar_21 = max (((1.055 * 
    pow (max (res_17, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_17 = tmpvar_21;
  tmpvar_3 = tmpvar_21;
  gl_Position = tmpvar_4;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = o_11;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
uniform sampler2D _LightBuffer;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD5;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  highp vec3 tmpvar_4;
  tmpvar_4 = xlv_TEXCOORD1;
  lowp vec3 tmpvar_5;
  lowp vec4 reflcol_6;
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_6 = (textureCube (_Cube, tmpvar_4) * tmpvar_7.w);
  tmpvar_5 = (reflcol_6.xyz * _ReflectColor.xyz);
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2DProj (_LightBuffer, xlv_TEXCOORD3);
  light_3 = tmpvar_8;
  mediump vec4 tmpvar_9;
  tmpvar_9 = max (light_3, vec4(0.001, 0.001, 0.001, 0.001));
  light_3.w = tmpvar_9.w;
  light_3.xyz = (tmpvar_9.xyz + xlv_TEXCOORD5);
  lowp vec4 c_10;
  c_10.xyz = ((tmpvar_7 * _Color).xyz * light_3.xyz);
  c_10.w = (reflcol_6.w * _ReflectColor.w);
  c_2 = c_10;
  c_2.xyz = (c_2.xyz + tmpvar_5);
  c_2.w = 1.0;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "SHADOWS_SHADOWMASK" "UNITY_HDR_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec3 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  tmpvar_5.w = 1.0;
  tmpvar_5.xyz = _glesVertex.xyz;
  tmpvar_4 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
  highp vec3 tmpvar_6;
  tmpvar_6 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_7;
  tmpvar_7[0] = unity_WorldToObject[0].xyz;
  tmpvar_7[1] = unity_WorldToObject[1].xyz;
  tmpvar_7[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_glesNormal * tmpvar_7));
  highp vec3 tmpvar_9;
  highp vec3 I_10;
  I_10 = (tmpvar_6 - _WorldSpaceCameraPos);
  tmpvar_9 = (I_10 - (2.0 * (
    dot (tmpvar_8, I_10)
   * tmpvar_8)));
  tmpvar_1 = tmpvar_9;
  highp vec4 o_11;
  highp vec4 tmpvar_12;
  tmpvar_12 = (tmpvar_4 * 0.5);
  highp vec2 tmpvar_13;
  tmpvar_13.x = tmpvar_12.x;
  tmpvar_13.y = (tmpvar_12.y * _ProjectionParams.x);
  o_11.xy = (tmpvar_13 + tmpvar_12.w);
  o_11.zw = tmpvar_4.zw;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_2.xy = vec2(0.0, 0.0);
  highp mat3 tmpvar_14;
  tmpvar_14[0] = unity_WorldToObject[0].xyz;
  tmpvar_14[1] = unity_WorldToObject[1].xyz;
  tmpvar_14[2] = unity_WorldToObject[2].xyz;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = normalize((_glesNormal * tmpvar_14));
  mediump vec4 normal_16;
  normal_16 = tmpvar_15;
  mediump vec3 res_17;
  mediump vec3 x_18;
  x_18.x = dot (unity_SHAr, normal_16);
  x_18.y = dot (unity_SHAg, normal_16);
  x_18.z = dot (unity_SHAb, normal_16);
  mediump vec3 x1_19;
  mediump vec4 tmpvar_20;
  tmpvar_20 = (normal_16.xyzz * normal_16.yzzx);
  x1_19.x = dot (unity_SHBr, tmpvar_20);
  x1_19.y = dot (unity_SHBg, tmpvar_20);
  x1_19.z = dot (unity_SHBb, tmpvar_20);
  res_17 = (x_18 + (x1_19 + (unity_SHC.xyz * 
    ((normal_16.x * normal_16.x) - (normal_16.y * normal_16.y))
  )));
  mediump vec3 tmpvar_21;
  tmpvar_21 = max (((1.055 * 
    pow (max (res_17, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_17 = tmpvar_21;
  tmpvar_3 = tmpvar_21;
  gl_Position = tmpvar_4;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = o_11;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
uniform sampler2D _LightBuffer;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD5;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  highp vec3 tmpvar_4;
  tmpvar_4 = xlv_TEXCOORD1;
  lowp vec3 tmpvar_5;
  lowp vec4 reflcol_6;
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_6 = (textureCube (_Cube, tmpvar_4) * tmpvar_7.w);
  tmpvar_5 = (reflcol_6.xyz * _ReflectColor.xyz);
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2DProj (_LightBuffer, xlv_TEXCOORD3);
  light_3 = tmpvar_8;
  mediump vec4 tmpvar_9;
  tmpvar_9 = max (light_3, vec4(0.001, 0.001, 0.001, 0.001));
  light_3.w = tmpvar_9.w;
  light_3.xyz = (tmpvar_9.xyz + xlv_TEXCOORD5);
  lowp vec4 c_10;
  c_10.xyz = ((tmpvar_7 * _Color).xyz * light_3.xyz);
  c_10.w = (reflcol_6.w * _ReflectColor.w);
  c_2 = c_10;
  c_2.xyz = (c_2.xyz + tmpvar_5);
  c_2.w = 1.0;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "SHADOWS_SHADOWMASK" "UNITY_HDR_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec3 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  tmpvar_5.w = 1.0;
  tmpvar_5.xyz = _glesVertex.xyz;
  tmpvar_4 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
  highp vec3 tmpvar_6;
  tmpvar_6 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_7;
  tmpvar_7[0] = unity_WorldToObject[0].xyz;
  tmpvar_7[1] = unity_WorldToObject[1].xyz;
  tmpvar_7[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_glesNormal * tmpvar_7));
  highp vec3 tmpvar_9;
  highp vec3 I_10;
  I_10 = (tmpvar_6 - _WorldSpaceCameraPos);
  tmpvar_9 = (I_10 - (2.0 * (
    dot (tmpvar_8, I_10)
   * tmpvar_8)));
  tmpvar_1 = tmpvar_9;
  highp vec4 o_11;
  highp vec4 tmpvar_12;
  tmpvar_12 = (tmpvar_4 * 0.5);
  highp vec2 tmpvar_13;
  tmpvar_13.x = tmpvar_12.x;
  tmpvar_13.y = (tmpvar_12.y * _ProjectionParams.x);
  o_11.xy = (tmpvar_13 + tmpvar_12.w);
  o_11.zw = tmpvar_4.zw;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_2.xy = vec2(0.0, 0.0);
  highp mat3 tmpvar_14;
  tmpvar_14[0] = unity_WorldToObject[0].xyz;
  tmpvar_14[1] = unity_WorldToObject[1].xyz;
  tmpvar_14[2] = unity_WorldToObject[2].xyz;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = normalize((_glesNormal * tmpvar_14));
  mediump vec4 normal_16;
  normal_16 = tmpvar_15;
  mediump vec3 res_17;
  mediump vec3 x_18;
  x_18.x = dot (unity_SHAr, normal_16);
  x_18.y = dot (unity_SHAg, normal_16);
  x_18.z = dot (unity_SHAb, normal_16);
  mediump vec3 x1_19;
  mediump vec4 tmpvar_20;
  tmpvar_20 = (normal_16.xyzz * normal_16.yzzx);
  x1_19.x = dot (unity_SHBr, tmpvar_20);
  x1_19.y = dot (unity_SHBg, tmpvar_20);
  x1_19.z = dot (unity_SHBb, tmpvar_20);
  res_17 = (x_18 + (x1_19 + (unity_SHC.xyz * 
    ((normal_16.x * normal_16.x) - (normal_16.y * normal_16.y))
  )));
  mediump vec3 tmpvar_21;
  tmpvar_21 = max (((1.055 * 
    pow (max (res_17, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_17 = tmpvar_21;
  tmpvar_3 = tmpvar_21;
  gl_Position = tmpvar_4;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = o_11;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
uniform sampler2D _LightBuffer;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD5;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  highp vec3 tmpvar_4;
  tmpvar_4 = xlv_TEXCOORD1;
  lowp vec3 tmpvar_5;
  lowp vec4 reflcol_6;
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_6 = (textureCube (_Cube, tmpvar_4) * tmpvar_7.w);
  tmpvar_5 = (reflcol_6.xyz * _ReflectColor.xyz);
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2DProj (_LightBuffer, xlv_TEXCOORD3);
  light_3 = tmpvar_8;
  mediump vec4 tmpvar_9;
  tmpvar_9 = max (light_3, vec4(0.001, 0.001, 0.001, 0.001));
  light_3.w = tmpvar_9.w;
  light_3.xyz = (tmpvar_9.xyz + xlv_TEXCOORD5);
  lowp vec4 c_10;
  c_10.xyz = ((tmpvar_7 * _Color).xyz * light_3.xyz);
  c_10.w = (reflcol_6.w * _ReflectColor.w);
  c_2 = c_10;
  c_2.xyz = (c_2.xyz + tmpvar_5);
  c_2.w = 1.0;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "SHADOWS_SHADOWMASK" "UNITY_HDR_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec3 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  tmpvar_5.w = 1.0;
  tmpvar_5.xyz = _glesVertex.xyz;
  tmpvar_4 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
  highp vec3 tmpvar_6;
  tmpvar_6 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_7;
  tmpvar_7[0] = unity_WorldToObject[0].xyz;
  tmpvar_7[1] = unity_WorldToObject[1].xyz;
  tmpvar_7[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_glesNormal * tmpvar_7));
  highp vec3 tmpvar_9;
  highp vec3 I_10;
  I_10 = (tmpvar_6 - _WorldSpaceCameraPos);
  tmpvar_9 = (I_10 - (2.0 * (
    dot (tmpvar_8, I_10)
   * tmpvar_8)));
  tmpvar_1 = tmpvar_9;
  highp vec4 o_11;
  highp vec4 tmpvar_12;
  tmpvar_12 = (tmpvar_4 * 0.5);
  highp vec2 tmpvar_13;
  tmpvar_13.x = tmpvar_12.x;
  tmpvar_13.y = (tmpvar_12.y * _ProjectionParams.x);
  o_11.xy = (tmpvar_13 + tmpvar_12.w);
  o_11.zw = tmpvar_4.zw;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_2.xy = vec2(0.0, 0.0);
  highp mat3 tmpvar_14;
  tmpvar_14[0] = unity_WorldToObject[0].xyz;
  tmpvar_14[1] = unity_WorldToObject[1].xyz;
  tmpvar_14[2] = unity_WorldToObject[2].xyz;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = normalize((_glesNormal * tmpvar_14));
  mediump vec4 normal_16;
  normal_16 = tmpvar_15;
  mediump vec3 res_17;
  mediump vec3 x_18;
  x_18.x = dot (unity_SHAr, normal_16);
  x_18.y = dot (unity_SHAg, normal_16);
  x_18.z = dot (unity_SHAb, normal_16);
  mediump vec3 x1_19;
  mediump vec4 tmpvar_20;
  tmpvar_20 = (normal_16.xyzz * normal_16.yzzx);
  x1_19.x = dot (unity_SHBr, tmpvar_20);
  x1_19.y = dot (unity_SHBg, tmpvar_20);
  x1_19.z = dot (unity_SHBb, tmpvar_20);
  res_17 = (x_18 + (x1_19 + (unity_SHC.xyz * 
    ((normal_16.x * normal_16.x) - (normal_16.y * normal_16.y))
  )));
  mediump vec3 tmpvar_21;
  tmpvar_21 = max (((1.055 * 
    pow (max (res_17, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_17 = tmpvar_21;
  tmpvar_3 = tmpvar_21;
  gl_Position = tmpvar_4;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = o_11;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
uniform sampler2D _LightBuffer;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD5;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  highp vec3 tmpvar_4;
  tmpvar_4 = xlv_TEXCOORD1;
  lowp vec3 tmpvar_5;
  lowp vec4 reflcol_6;
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_6 = (textureCube (_Cube, tmpvar_4) * tmpvar_7.w);
  tmpvar_5 = (reflcol_6.xyz * _ReflectColor.xyz);
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2DProj (_LightBuffer, xlv_TEXCOORD3);
  light_3 = tmpvar_8;
  mediump vec4 tmpvar_9;
  tmpvar_9 = max (light_3, vec4(0.001, 0.001, 0.001, 0.001));
  light_3.w = tmpvar_9.w;
  light_3.xyz = (tmpvar_9.xyz + xlv_TEXCOORD5);
  lowp vec4 c_10;
  c_10.xyz = ((tmpvar_7 * _Color).xyz * light_3.xyz);
  c_10.w = (reflcol_6.w * _ReflectColor.w);
  c_2 = c_10;
  c_2.xyz = (c_2.xyz + tmpvar_5);
  c_2.w = 1.0;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "UNITY_HDR_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec3 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  tmpvar_5.w = 1.0;
  tmpvar_5.xyz = _glesVertex.xyz;
  tmpvar_4 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
  highp vec3 tmpvar_6;
  tmpvar_6 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_7;
  tmpvar_7[0] = unity_WorldToObject[0].xyz;
  tmpvar_7[1] = unity_WorldToObject[1].xyz;
  tmpvar_7[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_glesNormal * tmpvar_7));
  highp vec3 tmpvar_9;
  highp vec3 I_10;
  I_10 = (tmpvar_6 - _WorldSpaceCameraPos);
  tmpvar_9 = (I_10 - (2.0 * (
    dot (tmpvar_8, I_10)
   * tmpvar_8)));
  tmpvar_1 = tmpvar_9;
  highp vec4 o_11;
  highp vec4 tmpvar_12;
  tmpvar_12 = (tmpvar_4 * 0.5);
  highp vec2 tmpvar_13;
  tmpvar_13.x = tmpvar_12.x;
  tmpvar_13.y = (tmpvar_12.y * _ProjectionParams.x);
  o_11.xy = (tmpvar_13 + tmpvar_12.w);
  o_11.zw = tmpvar_4.zw;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_2.xy = vec2(0.0, 0.0);
  highp mat3 tmpvar_14;
  tmpvar_14[0] = unity_WorldToObject[0].xyz;
  tmpvar_14[1] = unity_WorldToObject[1].xyz;
  tmpvar_14[2] = unity_WorldToObject[2].xyz;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = normalize((_glesNormal * tmpvar_14));
  mediump vec4 normal_16;
  normal_16 = tmpvar_15;
  mediump vec3 res_17;
  mediump vec3 x_18;
  x_18.x = dot (unity_SHAr, normal_16);
  x_18.y = dot (unity_SHAg, normal_16);
  x_18.z = dot (unity_SHAb, normal_16);
  mediump vec3 x1_19;
  mediump vec4 tmpvar_20;
  tmpvar_20 = (normal_16.xyzz * normal_16.yzzx);
  x1_19.x = dot (unity_SHBr, tmpvar_20);
  x1_19.y = dot (unity_SHBg, tmpvar_20);
  x1_19.z = dot (unity_SHBb, tmpvar_20);
  res_17 = (x_18 + (x1_19 + (unity_SHC.xyz * 
    ((normal_16.x * normal_16.x) - (normal_16.y * normal_16.y))
  )));
  mediump vec3 tmpvar_21;
  tmpvar_21 = max (((1.055 * 
    pow (max (res_17, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_17 = tmpvar_21;
  tmpvar_3 = tmpvar_21;
  gl_Position = tmpvar_4;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = o_11;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
uniform sampler2D _LightBuffer;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD5;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  highp vec3 tmpvar_4;
  tmpvar_4 = xlv_TEXCOORD1;
  lowp vec3 tmpvar_5;
  lowp vec4 reflcol_6;
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_6 = (textureCube (_Cube, tmpvar_4) * tmpvar_7.w);
  tmpvar_5 = (reflcol_6.xyz * _ReflectColor.xyz);
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2DProj (_LightBuffer, xlv_TEXCOORD3);
  light_3 = tmpvar_8;
  mediump vec4 tmpvar_9;
  tmpvar_9 = max (light_3, vec4(0.001, 0.001, 0.001, 0.001));
  light_3.w = tmpvar_9.w;
  light_3.xyz = (tmpvar_9.xyz + xlv_TEXCOORD5);
  lowp vec4 c_10;
  c_10.xyz = ((tmpvar_7 * _Color).xyz * light_3.xyz);
  c_10.w = (reflcol_6.w * _ReflectColor.w);
  c_2 = c_10;
  c_2.xyz = (c_2.xyz + tmpvar_5);
  c_2.w = 1.0;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "UNITY_HDR_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec3 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  tmpvar_5.w = 1.0;
  tmpvar_5.xyz = _glesVertex.xyz;
  tmpvar_4 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
  highp vec3 tmpvar_6;
  tmpvar_6 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_7;
  tmpvar_7[0] = unity_WorldToObject[0].xyz;
  tmpvar_7[1] = unity_WorldToObject[1].xyz;
  tmpvar_7[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_glesNormal * tmpvar_7));
  highp vec3 tmpvar_9;
  highp vec3 I_10;
  I_10 = (tmpvar_6 - _WorldSpaceCameraPos);
  tmpvar_9 = (I_10 - (2.0 * (
    dot (tmpvar_8, I_10)
   * tmpvar_8)));
  tmpvar_1 = tmpvar_9;
  highp vec4 o_11;
  highp vec4 tmpvar_12;
  tmpvar_12 = (tmpvar_4 * 0.5);
  highp vec2 tmpvar_13;
  tmpvar_13.x = tmpvar_12.x;
  tmpvar_13.y = (tmpvar_12.y * _ProjectionParams.x);
  o_11.xy = (tmpvar_13 + tmpvar_12.w);
  o_11.zw = tmpvar_4.zw;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_2.xy = vec2(0.0, 0.0);
  highp mat3 tmpvar_14;
  tmpvar_14[0] = unity_WorldToObject[0].xyz;
  tmpvar_14[1] = unity_WorldToObject[1].xyz;
  tmpvar_14[2] = unity_WorldToObject[2].xyz;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = normalize((_glesNormal * tmpvar_14));
  mediump vec4 normal_16;
  normal_16 = tmpvar_15;
  mediump vec3 res_17;
  mediump vec3 x_18;
  x_18.x = dot (unity_SHAr, normal_16);
  x_18.y = dot (unity_SHAg, normal_16);
  x_18.z = dot (unity_SHAb, normal_16);
  mediump vec3 x1_19;
  mediump vec4 tmpvar_20;
  tmpvar_20 = (normal_16.xyzz * normal_16.yzzx);
  x1_19.x = dot (unity_SHBr, tmpvar_20);
  x1_19.y = dot (unity_SHBg, tmpvar_20);
  x1_19.z = dot (unity_SHBb, tmpvar_20);
  res_17 = (x_18 + (x1_19 + (unity_SHC.xyz * 
    ((normal_16.x * normal_16.x) - (normal_16.y * normal_16.y))
  )));
  mediump vec3 tmpvar_21;
  tmpvar_21 = max (((1.055 * 
    pow (max (res_17, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_17 = tmpvar_21;
  tmpvar_3 = tmpvar_21;
  gl_Position = tmpvar_4;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = o_11;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
uniform sampler2D _LightBuffer;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD5;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  highp vec3 tmpvar_4;
  tmpvar_4 = xlv_TEXCOORD1;
  lowp vec3 tmpvar_5;
  lowp vec4 reflcol_6;
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_6 = (textureCube (_Cube, tmpvar_4) * tmpvar_7.w);
  tmpvar_5 = (reflcol_6.xyz * _ReflectColor.xyz);
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2DProj (_LightBuffer, xlv_TEXCOORD3);
  light_3 = tmpvar_8;
  mediump vec4 tmpvar_9;
  tmpvar_9 = max (light_3, vec4(0.001, 0.001, 0.001, 0.001));
  light_3.w = tmpvar_9.w;
  light_3.xyz = (tmpvar_9.xyz + xlv_TEXCOORD5);
  lowp vec4 c_10;
  c_10.xyz = ((tmpvar_7 * _Color).xyz * light_3.xyz);
  c_10.w = (reflcol_6.w * _ReflectColor.w);
  c_2 = c_10;
  c_2.xyz = (c_2.xyz + tmpvar_5);
  c_2.w = 1.0;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "UNITY_HDR_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec3 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  tmpvar_5.w = 1.0;
  tmpvar_5.xyz = _glesVertex.xyz;
  tmpvar_4 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
  highp vec3 tmpvar_6;
  tmpvar_6 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_7;
  tmpvar_7[0] = unity_WorldToObject[0].xyz;
  tmpvar_7[1] = unity_WorldToObject[1].xyz;
  tmpvar_7[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_glesNormal * tmpvar_7));
  highp vec3 tmpvar_9;
  highp vec3 I_10;
  I_10 = (tmpvar_6 - _WorldSpaceCameraPos);
  tmpvar_9 = (I_10 - (2.0 * (
    dot (tmpvar_8, I_10)
   * tmpvar_8)));
  tmpvar_1 = tmpvar_9;
  highp vec4 o_11;
  highp vec4 tmpvar_12;
  tmpvar_12 = (tmpvar_4 * 0.5);
  highp vec2 tmpvar_13;
  tmpvar_13.x = tmpvar_12.x;
  tmpvar_13.y = (tmpvar_12.y * _ProjectionParams.x);
  o_11.xy = (tmpvar_13 + tmpvar_12.w);
  o_11.zw = tmpvar_4.zw;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_2.xy = vec2(0.0, 0.0);
  highp mat3 tmpvar_14;
  tmpvar_14[0] = unity_WorldToObject[0].xyz;
  tmpvar_14[1] = unity_WorldToObject[1].xyz;
  tmpvar_14[2] = unity_WorldToObject[2].xyz;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = normalize((_glesNormal * tmpvar_14));
  mediump vec4 normal_16;
  normal_16 = tmpvar_15;
  mediump vec3 res_17;
  mediump vec3 x_18;
  x_18.x = dot (unity_SHAr, normal_16);
  x_18.y = dot (unity_SHAg, normal_16);
  x_18.z = dot (unity_SHAb, normal_16);
  mediump vec3 x1_19;
  mediump vec4 tmpvar_20;
  tmpvar_20 = (normal_16.xyzz * normal_16.yzzx);
  x1_19.x = dot (unity_SHBr, tmpvar_20);
  x1_19.y = dot (unity_SHBg, tmpvar_20);
  x1_19.z = dot (unity_SHBb, tmpvar_20);
  res_17 = (x_18 + (x1_19 + (unity_SHC.xyz * 
    ((normal_16.x * normal_16.x) - (normal_16.y * normal_16.y))
  )));
  mediump vec3 tmpvar_21;
  tmpvar_21 = max (((1.055 * 
    pow (max (res_17, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_17 = tmpvar_21;
  tmpvar_3 = tmpvar_21;
  gl_Position = tmpvar_4;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = o_11;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
uniform sampler2D _LightBuffer;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD5;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  highp vec3 tmpvar_4;
  tmpvar_4 = xlv_TEXCOORD1;
  lowp vec3 tmpvar_5;
  lowp vec4 reflcol_6;
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_6 = (textureCube (_Cube, tmpvar_4) * tmpvar_7.w);
  tmpvar_5 = (reflcol_6.xyz * _ReflectColor.xyz);
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2DProj (_LightBuffer, xlv_TEXCOORD3);
  light_3 = tmpvar_8;
  mediump vec4 tmpvar_9;
  tmpvar_9 = max (light_3, vec4(0.001, 0.001, 0.001, 0.001));
  light_3.w = tmpvar_9.w;
  light_3.xyz = (tmpvar_9.xyz + xlv_TEXCOORD5);
  lowp vec4 c_10;
  c_10.xyz = ((tmpvar_7 * _Color).xyz * light_3.xyz);
  c_10.w = (reflcol_6.w * _ReflectColor.w);
  c_2 = c_10;
  c_2.xyz = (c_2.xyz + tmpvar_5);
  c_2.w = 1.0;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "LIGHTMAP_ON" "UNITY_HDR_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  mediump vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  highp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = tmpvar_1.xyz;
  tmpvar_5 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
  highp vec4 tmpvar_7;
  tmpvar_7 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_8;
  tmpvar_8[0] = unity_WorldToObject[0].xyz;
  tmpvar_8[1] = unity_WorldToObject[1].xyz;
  tmpvar_8[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_9;
  tmpvar_9 = normalize((_glesNormal * tmpvar_8));
  highp vec3 tmpvar_10;
  highp vec3 I_11;
  I_11 = (tmpvar_7.xyz - _WorldSpaceCameraPos);
  tmpvar_10 = (I_11 - (2.0 * (
    dot (tmpvar_9, I_11)
   * tmpvar_9)));
  tmpvar_2 = tmpvar_10;
  highp vec4 o_12;
  highp vec4 tmpvar_13;
  tmpvar_13 = (tmpvar_5 * 0.5);
  highp vec2 tmpvar_14;
  tmpvar_14.x = tmpvar_13.x;
  tmpvar_14.y = (tmpvar_13.y * _ProjectionParams.x);
  o_12.xy = (tmpvar_14 + tmpvar_13.w);
  o_12.zw = tmpvar_5.zw;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  tmpvar_4.xyz = ((tmpvar_7.xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = tmpvar_1.xyz;
  tmpvar_4.w = (-((unity_MatrixV * 
    (unity_ObjectToWorld * tmpvar_15)
  ).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
  gl_Position = tmpvar_5;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_7.xyz;
  xlv_TEXCOORD3 = o_12;
  xlv_TEXCOORD4 = tmpvar_3;
  xlv_TEXCOORD5 = tmpvar_4;
}


#endif
#ifdef FRAGMENT
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
uniform sampler2D _LightBuffer;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  lowp vec3 lm_3;
  lowp vec4 lmtex_4;
  mediump vec4 light_5;
  highp vec3 tmpvar_6;
  tmpvar_6 = xlv_TEXCOORD1;
  lowp vec3 tmpvar_7;
  lowp vec4 reflcol_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_8 = (textureCube (_Cube, tmpvar_6) * tmpvar_9.w);
  tmpvar_7 = (reflcol_8.xyz * _ReflectColor.xyz);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2DProj (_LightBuffer, xlv_TEXCOORD3);
  light_5 = tmpvar_10;
  mediump vec4 tmpvar_11;
  tmpvar_11 = max (light_5, vec4(0.001, 0.001, 0.001, 0.001));
  light_5.w = tmpvar_11.w;
  mediump vec4 tmpvar_12;
  tmpvar_12 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lmtex_4 = tmpvar_12;
  mediump vec3 tmpvar_13;
  tmpvar_13 = (unity_Lightmap_HDR.x * lmtex_4.xyz);
  lm_3 = tmpvar_13;
  light_5.xyz = (tmpvar_11.xyz + lm_3);
  lowp vec4 c_14;
  c_14.xyz = ((tmpvar_9 * _Color).xyz * light_5.xyz);
  c_14.w = (reflcol_8.w * _ReflectColor.w);
  c_2 = c_14;
  c_2.xyz = (c_2.xyz + tmpvar_7);
  c_2.w = 1.0;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTMAP_ON" "UNITY_HDR_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  mediump vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  highp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = tmpvar_1.xyz;
  tmpvar_5 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
  highp vec4 tmpvar_7;
  tmpvar_7 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_8;
  tmpvar_8[0] = unity_WorldToObject[0].xyz;
  tmpvar_8[1] = unity_WorldToObject[1].xyz;
  tmpvar_8[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_9;
  tmpvar_9 = normalize((_glesNormal * tmpvar_8));
  highp vec3 tmpvar_10;
  highp vec3 I_11;
  I_11 = (tmpvar_7.xyz - _WorldSpaceCameraPos);
  tmpvar_10 = (I_11 - (2.0 * (
    dot (tmpvar_9, I_11)
   * tmpvar_9)));
  tmpvar_2 = tmpvar_10;
  highp vec4 o_12;
  highp vec4 tmpvar_13;
  tmpvar_13 = (tmpvar_5 * 0.5);
  highp vec2 tmpvar_14;
  tmpvar_14.x = tmpvar_13.x;
  tmpvar_14.y = (tmpvar_13.y * _ProjectionParams.x);
  o_12.xy = (tmpvar_14 + tmpvar_13.w);
  o_12.zw = tmpvar_5.zw;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  tmpvar_4.xyz = ((tmpvar_7.xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = tmpvar_1.xyz;
  tmpvar_4.w = (-((unity_MatrixV * 
    (unity_ObjectToWorld * tmpvar_15)
  ).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
  gl_Position = tmpvar_5;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_7.xyz;
  xlv_TEXCOORD3 = o_12;
  xlv_TEXCOORD4 = tmpvar_3;
  xlv_TEXCOORD5 = tmpvar_4;
}


#endif
#ifdef FRAGMENT
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
uniform sampler2D _LightBuffer;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  lowp vec3 lm_3;
  lowp vec4 lmtex_4;
  mediump vec4 light_5;
  highp vec3 tmpvar_6;
  tmpvar_6 = xlv_TEXCOORD1;
  lowp vec3 tmpvar_7;
  lowp vec4 reflcol_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_8 = (textureCube (_Cube, tmpvar_6) * tmpvar_9.w);
  tmpvar_7 = (reflcol_8.xyz * _ReflectColor.xyz);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2DProj (_LightBuffer, xlv_TEXCOORD3);
  light_5 = tmpvar_10;
  mediump vec4 tmpvar_11;
  tmpvar_11 = max (light_5, vec4(0.001, 0.001, 0.001, 0.001));
  light_5.w = tmpvar_11.w;
  mediump vec4 tmpvar_12;
  tmpvar_12 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lmtex_4 = tmpvar_12;
  mediump vec3 tmpvar_13;
  tmpvar_13 = (unity_Lightmap_HDR.x * lmtex_4.xyz);
  lm_3 = tmpvar_13;
  light_5.xyz = (tmpvar_11.xyz + lm_3);
  lowp vec4 c_14;
  c_14.xyz = ((tmpvar_9 * _Color).xyz * light_5.xyz);
  c_14.w = (reflcol_8.w * _ReflectColor.w);
  c_2 = c_14;
  c_2.xyz = (c_2.xyz + tmpvar_7);
  c_2.w = 1.0;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTMAP_ON" "UNITY_HDR_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  mediump vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  highp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = tmpvar_1.xyz;
  tmpvar_5 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
  highp vec4 tmpvar_7;
  tmpvar_7 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_8;
  tmpvar_8[0] = unity_WorldToObject[0].xyz;
  tmpvar_8[1] = unity_WorldToObject[1].xyz;
  tmpvar_8[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_9;
  tmpvar_9 = normalize((_glesNormal * tmpvar_8));
  highp vec3 tmpvar_10;
  highp vec3 I_11;
  I_11 = (tmpvar_7.xyz - _WorldSpaceCameraPos);
  tmpvar_10 = (I_11 - (2.0 * (
    dot (tmpvar_9, I_11)
   * tmpvar_9)));
  tmpvar_2 = tmpvar_10;
  highp vec4 o_12;
  highp vec4 tmpvar_13;
  tmpvar_13 = (tmpvar_5 * 0.5);
  highp vec2 tmpvar_14;
  tmpvar_14.x = tmpvar_13.x;
  tmpvar_14.y = (tmpvar_13.y * _ProjectionParams.x);
  o_12.xy = (tmpvar_14 + tmpvar_13.w);
  o_12.zw = tmpvar_5.zw;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  tmpvar_4.xyz = ((tmpvar_7.xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = tmpvar_1.xyz;
  tmpvar_4.w = (-((unity_MatrixV * 
    (unity_ObjectToWorld * tmpvar_15)
  ).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
  gl_Position = tmpvar_5;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_7.xyz;
  xlv_TEXCOORD3 = o_12;
  xlv_TEXCOORD4 = tmpvar_3;
  xlv_TEXCOORD5 = tmpvar_4;
}


#endif
#ifdef FRAGMENT
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
uniform sampler2D _LightBuffer;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  lowp vec3 lm_3;
  lowp vec4 lmtex_4;
  mediump vec4 light_5;
  highp vec3 tmpvar_6;
  tmpvar_6 = xlv_TEXCOORD1;
  lowp vec3 tmpvar_7;
  lowp vec4 reflcol_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_8 = (textureCube (_Cube, tmpvar_6) * tmpvar_9.w);
  tmpvar_7 = (reflcol_8.xyz * _ReflectColor.xyz);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2DProj (_LightBuffer, xlv_TEXCOORD3);
  light_5 = tmpvar_10;
  mediump vec4 tmpvar_11;
  tmpvar_11 = max (light_5, vec4(0.001, 0.001, 0.001, 0.001));
  light_5.w = tmpvar_11.w;
  mediump vec4 tmpvar_12;
  tmpvar_12 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lmtex_4 = tmpvar_12;
  mediump vec3 tmpvar_13;
  tmpvar_13 = (unity_Lightmap_HDR.x * lmtex_4.xyz);
  lm_3 = tmpvar_13;
  light_5.xyz = (tmpvar_11.xyz + lm_3);
  lowp vec4 c_14;
  c_14.xyz = ((tmpvar_9 * _Color).xyz * light_5.xyz);
  c_14.w = (reflcol_8.w * _ReflectColor.w);
  c_2 = c_14;
  c_2.xyz = (c_2.xyz + tmpvar_7);
  c_2.w = 1.0;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "LIGHTMAP_ON" "LIGHTPROBE_SH" "UNITY_HDR_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  mediump vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  highp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = tmpvar_1.xyz;
  tmpvar_5 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
  highp vec4 tmpvar_7;
  tmpvar_7 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_8;
  tmpvar_8[0] = unity_WorldToObject[0].xyz;
  tmpvar_8[1] = unity_WorldToObject[1].xyz;
  tmpvar_8[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_9;
  tmpvar_9 = normalize((_glesNormal * tmpvar_8));
  highp vec3 tmpvar_10;
  highp vec3 I_11;
  I_11 = (tmpvar_7.xyz - _WorldSpaceCameraPos);
  tmpvar_10 = (I_11 - (2.0 * (
    dot (tmpvar_9, I_11)
   * tmpvar_9)));
  tmpvar_2 = tmpvar_10;
  highp vec4 o_12;
  highp vec4 tmpvar_13;
  tmpvar_13 = (tmpvar_5 * 0.5);
  highp vec2 tmpvar_14;
  tmpvar_14.x = tmpvar_13.x;
  tmpvar_14.y = (tmpvar_13.y * _ProjectionParams.x);
  o_12.xy = (tmpvar_14 + tmpvar_13.w);
  o_12.zw = tmpvar_5.zw;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  tmpvar_4.xyz = ((tmpvar_7.xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = tmpvar_1.xyz;
  tmpvar_4.w = (-((unity_MatrixV * 
    (unity_ObjectToWorld * tmpvar_15)
  ).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
  gl_Position = tmpvar_5;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_7.xyz;
  xlv_TEXCOORD3 = o_12;
  xlv_TEXCOORD4 = tmpvar_3;
  xlv_TEXCOORD5 = tmpvar_4;
}


#endif
#ifdef FRAGMENT
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
uniform sampler2D _LightBuffer;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  lowp vec3 lm_3;
  lowp vec4 lmtex_4;
  mediump vec4 light_5;
  highp vec3 tmpvar_6;
  tmpvar_6 = xlv_TEXCOORD1;
  lowp vec3 tmpvar_7;
  lowp vec4 reflcol_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_8 = (textureCube (_Cube, tmpvar_6) * tmpvar_9.w);
  tmpvar_7 = (reflcol_8.xyz * _ReflectColor.xyz);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2DProj (_LightBuffer, xlv_TEXCOORD3);
  light_5 = tmpvar_10;
  mediump vec4 tmpvar_11;
  tmpvar_11 = max (light_5, vec4(0.001, 0.001, 0.001, 0.001));
  light_5.w = tmpvar_11.w;
  mediump vec4 tmpvar_12;
  tmpvar_12 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lmtex_4 = tmpvar_12;
  mediump vec3 tmpvar_13;
  tmpvar_13 = (unity_Lightmap_HDR.x * lmtex_4.xyz);
  lm_3 = tmpvar_13;
  light_5.xyz = (tmpvar_11.xyz + lm_3);
  lowp vec4 c_14;
  c_14.xyz = ((tmpvar_9 * _Color).xyz * light_5.xyz);
  c_14.w = (reflcol_8.w * _ReflectColor.w);
  c_2 = c_14;
  c_2.xyz = (c_2.xyz + tmpvar_7);
  c_2.w = 1.0;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTMAP_ON" "LIGHTPROBE_SH" "UNITY_HDR_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  mediump vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  highp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = tmpvar_1.xyz;
  tmpvar_5 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
  highp vec4 tmpvar_7;
  tmpvar_7 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_8;
  tmpvar_8[0] = unity_WorldToObject[0].xyz;
  tmpvar_8[1] = unity_WorldToObject[1].xyz;
  tmpvar_8[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_9;
  tmpvar_9 = normalize((_glesNormal * tmpvar_8));
  highp vec3 tmpvar_10;
  highp vec3 I_11;
  I_11 = (tmpvar_7.xyz - _WorldSpaceCameraPos);
  tmpvar_10 = (I_11 - (2.0 * (
    dot (tmpvar_9, I_11)
   * tmpvar_9)));
  tmpvar_2 = tmpvar_10;
  highp vec4 o_12;
  highp vec4 tmpvar_13;
  tmpvar_13 = (tmpvar_5 * 0.5);
  highp vec2 tmpvar_14;
  tmpvar_14.x = tmpvar_13.x;
  tmpvar_14.y = (tmpvar_13.y * _ProjectionParams.x);
  o_12.xy = (tmpvar_14 + tmpvar_13.w);
  o_12.zw = tmpvar_5.zw;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  tmpvar_4.xyz = ((tmpvar_7.xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = tmpvar_1.xyz;
  tmpvar_4.w = (-((unity_MatrixV * 
    (unity_ObjectToWorld * tmpvar_15)
  ).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
  gl_Position = tmpvar_5;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_7.xyz;
  xlv_TEXCOORD3 = o_12;
  xlv_TEXCOORD4 = tmpvar_3;
  xlv_TEXCOORD5 = tmpvar_4;
}


#endif
#ifdef FRAGMENT
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
uniform sampler2D _LightBuffer;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  lowp vec3 lm_3;
  lowp vec4 lmtex_4;
  mediump vec4 light_5;
  highp vec3 tmpvar_6;
  tmpvar_6 = xlv_TEXCOORD1;
  lowp vec3 tmpvar_7;
  lowp vec4 reflcol_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_8 = (textureCube (_Cube, tmpvar_6) * tmpvar_9.w);
  tmpvar_7 = (reflcol_8.xyz * _ReflectColor.xyz);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2DProj (_LightBuffer, xlv_TEXCOORD3);
  light_5 = tmpvar_10;
  mediump vec4 tmpvar_11;
  tmpvar_11 = max (light_5, vec4(0.001, 0.001, 0.001, 0.001));
  light_5.w = tmpvar_11.w;
  mediump vec4 tmpvar_12;
  tmpvar_12 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lmtex_4 = tmpvar_12;
  mediump vec3 tmpvar_13;
  tmpvar_13 = (unity_Lightmap_HDR.x * lmtex_4.xyz);
  lm_3 = tmpvar_13;
  light_5.xyz = (tmpvar_11.xyz + lm_3);
  lowp vec4 c_14;
  c_14.xyz = ((tmpvar_9 * _Color).xyz * light_5.xyz);
  c_14.w = (reflcol_8.w * _ReflectColor.w);
  c_2 = c_14;
  c_2.xyz = (c_2.xyz + tmpvar_7);
  c_2.w = 1.0;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTMAP_ON" "LIGHTPROBE_SH" "UNITY_HDR_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  mediump vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  highp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = tmpvar_1.xyz;
  tmpvar_5 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
  highp vec4 tmpvar_7;
  tmpvar_7 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_8;
  tmpvar_8[0] = unity_WorldToObject[0].xyz;
  tmpvar_8[1] = unity_WorldToObject[1].xyz;
  tmpvar_8[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_9;
  tmpvar_9 = normalize((_glesNormal * tmpvar_8));
  highp vec3 tmpvar_10;
  highp vec3 I_11;
  I_11 = (tmpvar_7.xyz - _WorldSpaceCameraPos);
  tmpvar_10 = (I_11 - (2.0 * (
    dot (tmpvar_9, I_11)
   * tmpvar_9)));
  tmpvar_2 = tmpvar_10;
  highp vec4 o_12;
  highp vec4 tmpvar_13;
  tmpvar_13 = (tmpvar_5 * 0.5);
  highp vec2 tmpvar_14;
  tmpvar_14.x = tmpvar_13.x;
  tmpvar_14.y = (tmpvar_13.y * _ProjectionParams.x);
  o_12.xy = (tmpvar_14 + tmpvar_13.w);
  o_12.zw = tmpvar_5.zw;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  tmpvar_4.xyz = ((tmpvar_7.xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = tmpvar_1.xyz;
  tmpvar_4.w = (-((unity_MatrixV * 
    (unity_ObjectToWorld * tmpvar_15)
  ).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
  gl_Position = tmpvar_5;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_7.xyz;
  xlv_TEXCOORD3 = o_12;
  xlv_TEXCOORD4 = tmpvar_3;
  xlv_TEXCOORD5 = tmpvar_4;
}


#endif
#ifdef FRAGMENT
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
uniform sampler2D _LightBuffer;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  lowp vec3 lm_3;
  lowp vec4 lmtex_4;
  mediump vec4 light_5;
  highp vec3 tmpvar_6;
  tmpvar_6 = xlv_TEXCOORD1;
  lowp vec3 tmpvar_7;
  lowp vec4 reflcol_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_8 = (textureCube (_Cube, tmpvar_6) * tmpvar_9.w);
  tmpvar_7 = (reflcol_8.xyz * _ReflectColor.xyz);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2DProj (_LightBuffer, xlv_TEXCOORD3);
  light_5 = tmpvar_10;
  mediump vec4 tmpvar_11;
  tmpvar_11 = max (light_5, vec4(0.001, 0.001, 0.001, 0.001));
  light_5.w = tmpvar_11.w;
  mediump vec4 tmpvar_12;
  tmpvar_12 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lmtex_4 = tmpvar_12;
  mediump vec3 tmpvar_13;
  tmpvar_13 = (unity_Lightmap_HDR.x * lmtex_4.xyz);
  lm_3 = tmpvar_13;
  light_5.xyz = (tmpvar_11.xyz + lm_3);
  lowp vec4 c_14;
  c_14.xyz = ((tmpvar_9 * _Color).xyz * light_5.xyz);
  c_14.w = (reflcol_8.w * _ReflectColor.w);
  c_2 = c_14;
  c_2.xyz = (c_2.xyz + tmpvar_7);
  c_2.w = 1.0;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "UNITY_HDR_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  mediump vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  highp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = tmpvar_1.xyz;
  tmpvar_5 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
  highp vec4 tmpvar_7;
  tmpvar_7 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_8;
  tmpvar_8[0] = unity_WorldToObject[0].xyz;
  tmpvar_8[1] = unity_WorldToObject[1].xyz;
  tmpvar_8[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_9;
  tmpvar_9 = normalize((_glesNormal * tmpvar_8));
  highp vec3 tmpvar_10;
  highp vec3 I_11;
  I_11 = (tmpvar_7.xyz - _WorldSpaceCameraPos);
  tmpvar_10 = (I_11 - (2.0 * (
    dot (tmpvar_9, I_11)
   * tmpvar_9)));
  tmpvar_2 = tmpvar_10;
  highp vec4 o_12;
  highp vec4 tmpvar_13;
  tmpvar_13 = (tmpvar_5 * 0.5);
  highp vec2 tmpvar_14;
  tmpvar_14.x = tmpvar_13.x;
  tmpvar_14.y = (tmpvar_13.y * _ProjectionParams.x);
  o_12.xy = (tmpvar_14 + tmpvar_13.w);
  o_12.zw = tmpvar_5.zw;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  tmpvar_4.xyz = ((tmpvar_7.xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = tmpvar_1.xyz;
  tmpvar_4.w = (-((unity_MatrixV * 
    (unity_ObjectToWorld * tmpvar_15)
  ).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
  gl_Position = tmpvar_5;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_7.xyz;
  xlv_TEXCOORD3 = o_12;
  xlv_TEXCOORD4 = tmpvar_3;
  xlv_TEXCOORD5 = tmpvar_4;
}


#endif
#ifdef FRAGMENT
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
uniform sampler2D _LightBuffer;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  lowp vec3 lm_3;
  lowp vec4 lmtex_4;
  mediump vec4 light_5;
  highp vec3 tmpvar_6;
  tmpvar_6 = xlv_TEXCOORD1;
  lowp vec3 tmpvar_7;
  lowp vec4 reflcol_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_8 = (textureCube (_Cube, tmpvar_6) * tmpvar_9.w);
  tmpvar_7 = (reflcol_8.xyz * _ReflectColor.xyz);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2DProj (_LightBuffer, xlv_TEXCOORD3);
  light_5 = tmpvar_10;
  mediump vec4 tmpvar_11;
  tmpvar_11 = max (light_5, vec4(0.001, 0.001, 0.001, 0.001));
  light_5.w = tmpvar_11.w;
  mediump vec4 tmpvar_12;
  tmpvar_12 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lmtex_4 = tmpvar_12;
  mediump vec3 tmpvar_13;
  tmpvar_13 = (unity_Lightmap_HDR.x * lmtex_4.xyz);
  lm_3 = tmpvar_13;
  light_5.xyz = (tmpvar_11.xyz + lm_3);
  lowp vec4 c_14;
  c_14.xyz = ((tmpvar_9 * _Color).xyz * light_5.xyz);
  c_14.w = (reflcol_8.w * _ReflectColor.w);
  c_2 = c_14;
  c_2.xyz = (c_2.xyz + tmpvar_7);
  c_2.w = 1.0;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "UNITY_HDR_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  mediump vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  highp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = tmpvar_1.xyz;
  tmpvar_5 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
  highp vec4 tmpvar_7;
  tmpvar_7 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_8;
  tmpvar_8[0] = unity_WorldToObject[0].xyz;
  tmpvar_8[1] = unity_WorldToObject[1].xyz;
  tmpvar_8[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_9;
  tmpvar_9 = normalize((_glesNormal * tmpvar_8));
  highp vec3 tmpvar_10;
  highp vec3 I_11;
  I_11 = (tmpvar_7.xyz - _WorldSpaceCameraPos);
  tmpvar_10 = (I_11 - (2.0 * (
    dot (tmpvar_9, I_11)
   * tmpvar_9)));
  tmpvar_2 = tmpvar_10;
  highp vec4 o_12;
  highp vec4 tmpvar_13;
  tmpvar_13 = (tmpvar_5 * 0.5);
  highp vec2 tmpvar_14;
  tmpvar_14.x = tmpvar_13.x;
  tmpvar_14.y = (tmpvar_13.y * _ProjectionParams.x);
  o_12.xy = (tmpvar_14 + tmpvar_13.w);
  o_12.zw = tmpvar_5.zw;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  tmpvar_4.xyz = ((tmpvar_7.xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = tmpvar_1.xyz;
  tmpvar_4.w = (-((unity_MatrixV * 
    (unity_ObjectToWorld * tmpvar_15)
  ).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
  gl_Position = tmpvar_5;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_7.xyz;
  xlv_TEXCOORD3 = o_12;
  xlv_TEXCOORD4 = tmpvar_3;
  xlv_TEXCOORD5 = tmpvar_4;
}


#endif
#ifdef FRAGMENT
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
uniform sampler2D _LightBuffer;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  lowp vec3 lm_3;
  lowp vec4 lmtex_4;
  mediump vec4 light_5;
  highp vec3 tmpvar_6;
  tmpvar_6 = xlv_TEXCOORD1;
  lowp vec3 tmpvar_7;
  lowp vec4 reflcol_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_8 = (textureCube (_Cube, tmpvar_6) * tmpvar_9.w);
  tmpvar_7 = (reflcol_8.xyz * _ReflectColor.xyz);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2DProj (_LightBuffer, xlv_TEXCOORD3);
  light_5 = tmpvar_10;
  mediump vec4 tmpvar_11;
  tmpvar_11 = max (light_5, vec4(0.001, 0.001, 0.001, 0.001));
  light_5.w = tmpvar_11.w;
  mediump vec4 tmpvar_12;
  tmpvar_12 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lmtex_4 = tmpvar_12;
  mediump vec3 tmpvar_13;
  tmpvar_13 = (unity_Lightmap_HDR.x * lmtex_4.xyz);
  lm_3 = tmpvar_13;
  light_5.xyz = (tmpvar_11.xyz + lm_3);
  lowp vec4 c_14;
  c_14.xyz = ((tmpvar_9 * _Color).xyz * light_5.xyz);
  c_14.w = (reflcol_8.w * _ReflectColor.w);
  c_2 = c_14;
  c_2.xyz = (c_2.xyz + tmpvar_7);
  c_2.w = 1.0;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "UNITY_HDR_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  mediump vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  highp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = tmpvar_1.xyz;
  tmpvar_5 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
  highp vec4 tmpvar_7;
  tmpvar_7 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_8;
  tmpvar_8[0] = unity_WorldToObject[0].xyz;
  tmpvar_8[1] = unity_WorldToObject[1].xyz;
  tmpvar_8[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_9;
  tmpvar_9 = normalize((_glesNormal * tmpvar_8));
  highp vec3 tmpvar_10;
  highp vec3 I_11;
  I_11 = (tmpvar_7.xyz - _WorldSpaceCameraPos);
  tmpvar_10 = (I_11 - (2.0 * (
    dot (tmpvar_9, I_11)
   * tmpvar_9)));
  tmpvar_2 = tmpvar_10;
  highp vec4 o_12;
  highp vec4 tmpvar_13;
  tmpvar_13 = (tmpvar_5 * 0.5);
  highp vec2 tmpvar_14;
  tmpvar_14.x = tmpvar_13.x;
  tmpvar_14.y = (tmpvar_13.y * _ProjectionParams.x);
  o_12.xy = (tmpvar_14 + tmpvar_13.w);
  o_12.zw = tmpvar_5.zw;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  tmpvar_4.xyz = ((tmpvar_7.xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = tmpvar_1.xyz;
  tmpvar_4.w = (-((unity_MatrixV * 
    (unity_ObjectToWorld * tmpvar_15)
  ).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
  gl_Position = tmpvar_5;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_7.xyz;
  xlv_TEXCOORD3 = o_12;
  xlv_TEXCOORD4 = tmpvar_3;
  xlv_TEXCOORD5 = tmpvar_4;
}


#endif
#ifdef FRAGMENT
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
uniform sampler2D _LightBuffer;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  lowp vec3 lm_3;
  lowp vec4 lmtex_4;
  mediump vec4 light_5;
  highp vec3 tmpvar_6;
  tmpvar_6 = xlv_TEXCOORD1;
  lowp vec3 tmpvar_7;
  lowp vec4 reflcol_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_8 = (textureCube (_Cube, tmpvar_6) * tmpvar_9.w);
  tmpvar_7 = (reflcol_8.xyz * _ReflectColor.xyz);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2DProj (_LightBuffer, xlv_TEXCOORD3);
  light_5 = tmpvar_10;
  mediump vec4 tmpvar_11;
  tmpvar_11 = max (light_5, vec4(0.001, 0.001, 0.001, 0.001));
  light_5.w = tmpvar_11.w;
  mediump vec4 tmpvar_12;
  tmpvar_12 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lmtex_4 = tmpvar_12;
  mediump vec3 tmpvar_13;
  tmpvar_13 = (unity_Lightmap_HDR.x * lmtex_4.xyz);
  lm_3 = tmpvar_13;
  light_5.xyz = (tmpvar_11.xyz + lm_3);
  lowp vec4 c_14;
  c_14.xyz = ((tmpvar_9 * _Color).xyz * light_5.xyz);
  c_14.w = (reflcol_8.w * _ReflectColor.w);
  c_2 = c_14;
  c_2.xyz = (c_2.xyz + tmpvar_7);
  c_2.w = 1.0;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "UNITY_HDR_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  mediump vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  highp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = tmpvar_1.xyz;
  tmpvar_5 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
  highp vec4 tmpvar_7;
  tmpvar_7 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_8;
  tmpvar_8[0] = unity_WorldToObject[0].xyz;
  tmpvar_8[1] = unity_WorldToObject[1].xyz;
  tmpvar_8[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_9;
  tmpvar_9 = normalize((_glesNormal * tmpvar_8));
  highp vec3 tmpvar_10;
  highp vec3 I_11;
  I_11 = (tmpvar_7.xyz - _WorldSpaceCameraPos);
  tmpvar_10 = (I_11 - (2.0 * (
    dot (tmpvar_9, I_11)
   * tmpvar_9)));
  tmpvar_2 = tmpvar_10;
  highp vec4 o_12;
  highp vec4 tmpvar_13;
  tmpvar_13 = (tmpvar_5 * 0.5);
  highp vec2 tmpvar_14;
  tmpvar_14.x = tmpvar_13.x;
  tmpvar_14.y = (tmpvar_13.y * _ProjectionParams.x);
  o_12.xy = (tmpvar_14 + tmpvar_13.w);
  o_12.zw = tmpvar_5.zw;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  tmpvar_4.xyz = ((tmpvar_7.xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = tmpvar_1.xyz;
  tmpvar_4.w = (-((unity_MatrixV * 
    (unity_ObjectToWorld * tmpvar_15)
  ).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
  gl_Position = tmpvar_5;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_7.xyz;
  xlv_TEXCOORD3 = o_12;
  xlv_TEXCOORD4 = tmpvar_3;
  xlv_TEXCOORD5 = tmpvar_4;
}


#endif
#ifdef FRAGMENT
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
uniform sampler2D _LightBuffer;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  lowp vec3 lm_3;
  lowp vec4 lmtex_4;
  mediump vec4 light_5;
  highp vec3 tmpvar_6;
  tmpvar_6 = xlv_TEXCOORD1;
  lowp vec3 tmpvar_7;
  lowp vec4 reflcol_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_8 = (textureCube (_Cube, tmpvar_6) * tmpvar_9.w);
  tmpvar_7 = (reflcol_8.xyz * _ReflectColor.xyz);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2DProj (_LightBuffer, xlv_TEXCOORD3);
  light_5 = tmpvar_10;
  mediump vec4 tmpvar_11;
  tmpvar_11 = max (light_5, vec4(0.001, 0.001, 0.001, 0.001));
  light_5.w = tmpvar_11.w;
  mediump vec4 tmpvar_12;
  tmpvar_12 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lmtex_4 = tmpvar_12;
  mediump vec3 tmpvar_13;
  tmpvar_13 = (unity_Lightmap_HDR.x * lmtex_4.xyz);
  lm_3 = tmpvar_13;
  light_5.xyz = (tmpvar_11.xyz + lm_3);
  lowp vec4 c_14;
  c_14.xyz = ((tmpvar_9 * _Color).xyz * light_5.xyz);
  c_14.w = (reflcol_8.w * _ReflectColor.w);
  c_2 = c_14;
  c_2.xyz = (c_2.xyz + tmpvar_7);
  c_2.w = 1.0;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "UNITY_HDR_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  mediump vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  highp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = tmpvar_1.xyz;
  tmpvar_5 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
  highp vec4 tmpvar_7;
  tmpvar_7 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_8;
  tmpvar_8[0] = unity_WorldToObject[0].xyz;
  tmpvar_8[1] = unity_WorldToObject[1].xyz;
  tmpvar_8[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_9;
  tmpvar_9 = normalize((_glesNormal * tmpvar_8));
  highp vec3 tmpvar_10;
  highp vec3 I_11;
  I_11 = (tmpvar_7.xyz - _WorldSpaceCameraPos);
  tmpvar_10 = (I_11 - (2.0 * (
    dot (tmpvar_9, I_11)
   * tmpvar_9)));
  tmpvar_2 = tmpvar_10;
  highp vec4 o_12;
  highp vec4 tmpvar_13;
  tmpvar_13 = (tmpvar_5 * 0.5);
  highp vec2 tmpvar_14;
  tmpvar_14.x = tmpvar_13.x;
  tmpvar_14.y = (tmpvar_13.y * _ProjectionParams.x);
  o_12.xy = (tmpvar_14 + tmpvar_13.w);
  o_12.zw = tmpvar_5.zw;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  tmpvar_4.xyz = ((tmpvar_7.xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = tmpvar_1.xyz;
  tmpvar_4.w = (-((unity_MatrixV * 
    (unity_ObjectToWorld * tmpvar_15)
  ).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
  gl_Position = tmpvar_5;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_7.xyz;
  xlv_TEXCOORD3 = o_12;
  xlv_TEXCOORD4 = tmpvar_3;
  xlv_TEXCOORD5 = tmpvar_4;
}


#endif
#ifdef FRAGMENT
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
uniform sampler2D _LightBuffer;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  lowp vec3 lm_3;
  lowp vec4 lmtex_4;
  mediump vec4 light_5;
  highp vec3 tmpvar_6;
  tmpvar_6 = xlv_TEXCOORD1;
  lowp vec3 tmpvar_7;
  lowp vec4 reflcol_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_8 = (textureCube (_Cube, tmpvar_6) * tmpvar_9.w);
  tmpvar_7 = (reflcol_8.xyz * _ReflectColor.xyz);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2DProj (_LightBuffer, xlv_TEXCOORD3);
  light_5 = tmpvar_10;
  mediump vec4 tmpvar_11;
  tmpvar_11 = max (light_5, vec4(0.001, 0.001, 0.001, 0.001));
  light_5.w = tmpvar_11.w;
  mediump vec4 tmpvar_12;
  tmpvar_12 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lmtex_4 = tmpvar_12;
  mediump vec3 tmpvar_13;
  tmpvar_13 = (unity_Lightmap_HDR.x * lmtex_4.xyz);
  lm_3 = tmpvar_13;
  light_5.xyz = (tmpvar_11.xyz + lm_3);
  lowp vec4 c_14;
  c_14.xyz = ((tmpvar_9 * _Color).xyz * light_5.xyz);
  c_14.w = (reflcol_8.w * _ReflectColor.w);
  c_2 = c_14;
  c_2.xyz = (c_2.xyz + tmpvar_7);
  c_2.w = 1.0;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "UNITY_HDR_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  mediump vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  highp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = tmpvar_1.xyz;
  tmpvar_5 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
  highp vec4 tmpvar_7;
  tmpvar_7 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_8;
  tmpvar_8[0] = unity_WorldToObject[0].xyz;
  tmpvar_8[1] = unity_WorldToObject[1].xyz;
  tmpvar_8[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_9;
  tmpvar_9 = normalize((_glesNormal * tmpvar_8));
  highp vec3 tmpvar_10;
  highp vec3 I_11;
  I_11 = (tmpvar_7.xyz - _WorldSpaceCameraPos);
  tmpvar_10 = (I_11 - (2.0 * (
    dot (tmpvar_9, I_11)
   * tmpvar_9)));
  tmpvar_2 = tmpvar_10;
  highp vec4 o_12;
  highp vec4 tmpvar_13;
  tmpvar_13 = (tmpvar_5 * 0.5);
  highp vec2 tmpvar_14;
  tmpvar_14.x = tmpvar_13.x;
  tmpvar_14.y = (tmpvar_13.y * _ProjectionParams.x);
  o_12.xy = (tmpvar_14 + tmpvar_13.w);
  o_12.zw = tmpvar_5.zw;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  tmpvar_4.xyz = ((tmpvar_7.xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = tmpvar_1.xyz;
  tmpvar_4.w = (-((unity_MatrixV * 
    (unity_ObjectToWorld * tmpvar_15)
  ).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
  gl_Position = tmpvar_5;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_7.xyz;
  xlv_TEXCOORD3 = o_12;
  xlv_TEXCOORD4 = tmpvar_3;
  xlv_TEXCOORD5 = tmpvar_4;
}


#endif
#ifdef FRAGMENT
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
uniform sampler2D _LightBuffer;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  lowp vec3 lm_3;
  lowp vec4 lmtex_4;
  mediump vec4 light_5;
  highp vec3 tmpvar_6;
  tmpvar_6 = xlv_TEXCOORD1;
  lowp vec3 tmpvar_7;
  lowp vec4 reflcol_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_8 = (textureCube (_Cube, tmpvar_6) * tmpvar_9.w);
  tmpvar_7 = (reflcol_8.xyz * _ReflectColor.xyz);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2DProj (_LightBuffer, xlv_TEXCOORD3);
  light_5 = tmpvar_10;
  mediump vec4 tmpvar_11;
  tmpvar_11 = max (light_5, vec4(0.001, 0.001, 0.001, 0.001));
  light_5.w = tmpvar_11.w;
  mediump vec4 tmpvar_12;
  tmpvar_12 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lmtex_4 = tmpvar_12;
  mediump vec3 tmpvar_13;
  tmpvar_13 = (unity_Lightmap_HDR.x * lmtex_4.xyz);
  lm_3 = tmpvar_13;
  light_5.xyz = (tmpvar_11.xyz + lm_3);
  lowp vec4 c_14;
  c_14.xyz = ((tmpvar_9 * _Color).xyz * light_5.xyz);
  c_14.w = (reflcol_8.w * _ReflectColor.w);
  c_2 = c_14;
  c_2.xyz = (c_2.xyz + tmpvar_7);
  c_2.w = 1.0;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "FOG_LINEAR" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec3 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  tmpvar_5.w = 1.0;
  tmpvar_5.xyz = _glesVertex.xyz;
  tmpvar_4 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
  highp vec3 tmpvar_6;
  tmpvar_6 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_7;
  tmpvar_7[0] = unity_WorldToObject[0].xyz;
  tmpvar_7[1] = unity_WorldToObject[1].xyz;
  tmpvar_7[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_glesNormal * tmpvar_7));
  highp vec3 tmpvar_9;
  highp vec3 I_10;
  I_10 = (tmpvar_6 - _WorldSpaceCameraPos);
  tmpvar_9 = (I_10 - (2.0 * (
    dot (tmpvar_8, I_10)
   * tmpvar_8)));
  tmpvar_1 = tmpvar_9;
  highp vec4 o_11;
  highp vec4 tmpvar_12;
  tmpvar_12 = (tmpvar_4 * 0.5);
  highp vec2 tmpvar_13;
  tmpvar_13.x = tmpvar_12.x;
  tmpvar_13.y = (tmpvar_12.y * _ProjectionParams.x);
  o_11.xy = (tmpvar_13 + tmpvar_12.w);
  o_11.zw = tmpvar_4.zw;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_2.xy = vec2(0.0, 0.0);
  highp mat3 tmpvar_14;
  tmpvar_14[0] = unity_WorldToObject[0].xyz;
  tmpvar_14[1] = unity_WorldToObject[1].xyz;
  tmpvar_14[2] = unity_WorldToObject[2].xyz;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = normalize((_glesNormal * tmpvar_14));
  mediump vec4 normal_16;
  normal_16 = tmpvar_15;
  mediump vec3 res_17;
  mediump vec3 x_18;
  x_18.x = dot (unity_SHAr, normal_16);
  x_18.y = dot (unity_SHAg, normal_16);
  x_18.z = dot (unity_SHAb, normal_16);
  mediump vec3 x1_19;
  mediump vec4 tmpvar_20;
  tmpvar_20 = (normal_16.xyzz * normal_16.yzzx);
  x1_19.x = dot (unity_SHBr, tmpvar_20);
  x1_19.y = dot (unity_SHBg, tmpvar_20);
  x1_19.z = dot (unity_SHBb, tmpvar_20);
  res_17 = (x_18 + (x1_19 + (unity_SHC.xyz * 
    ((normal_16.x * normal_16.x) - (normal_16.y * normal_16.y))
  )));
  mediump vec3 tmpvar_21;
  tmpvar_21 = max (((1.055 * 
    pow (max (res_17, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_17 = tmpvar_21;
  tmpvar_3 = tmpvar_21;
  gl_Position = tmpvar_4;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = o_11;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = tmpvar_3;
  xlv_TEXCOORD6 = ((tmpvar_4.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform lowp vec4 unity_FogColor;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
uniform sampler2D _LightBuffer;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  highp vec3 tmpvar_4;
  tmpvar_4 = xlv_TEXCOORD1;
  lowp vec3 tmpvar_5;
  lowp vec4 reflcol_6;
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_6 = (textureCube (_Cube, tmpvar_4) * tmpvar_7.w);
  tmpvar_5 = (reflcol_6.xyz * _ReflectColor.xyz);
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2DProj (_LightBuffer, xlv_TEXCOORD3);
  light_3 = tmpvar_8;
  light_3 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
  light_3.xyz = (light_3.xyz + xlv_TEXCOORD5);
  lowp vec4 c_9;
  c_9.xyz = ((tmpvar_7 * _Color).xyz * light_3.xyz);
  c_9.w = (reflcol_6.w * _ReflectColor.w);
  c_2 = c_9;
  c_2.xyz = (c_2.xyz + tmpvar_5);
  highp float tmpvar_10;
  tmpvar_10 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_10));
  c_2.w = 1.0;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "FOG_LINEAR" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec3 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  tmpvar_5.w = 1.0;
  tmpvar_5.xyz = _glesVertex.xyz;
  tmpvar_4 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
  highp vec3 tmpvar_6;
  tmpvar_6 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_7;
  tmpvar_7[0] = unity_WorldToObject[0].xyz;
  tmpvar_7[1] = unity_WorldToObject[1].xyz;
  tmpvar_7[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_glesNormal * tmpvar_7));
  highp vec3 tmpvar_9;
  highp vec3 I_10;
  I_10 = (tmpvar_6 - _WorldSpaceCameraPos);
  tmpvar_9 = (I_10 - (2.0 * (
    dot (tmpvar_8, I_10)
   * tmpvar_8)));
  tmpvar_1 = tmpvar_9;
  highp vec4 o_11;
  highp vec4 tmpvar_12;
  tmpvar_12 = (tmpvar_4 * 0.5);
  highp vec2 tmpvar_13;
  tmpvar_13.x = tmpvar_12.x;
  tmpvar_13.y = (tmpvar_12.y * _ProjectionParams.x);
  o_11.xy = (tmpvar_13 + tmpvar_12.w);
  o_11.zw = tmpvar_4.zw;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_2.xy = vec2(0.0, 0.0);
  highp mat3 tmpvar_14;
  tmpvar_14[0] = unity_WorldToObject[0].xyz;
  tmpvar_14[1] = unity_WorldToObject[1].xyz;
  tmpvar_14[2] = unity_WorldToObject[2].xyz;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = normalize((_glesNormal * tmpvar_14));
  mediump vec4 normal_16;
  normal_16 = tmpvar_15;
  mediump vec3 res_17;
  mediump vec3 x_18;
  x_18.x = dot (unity_SHAr, normal_16);
  x_18.y = dot (unity_SHAg, normal_16);
  x_18.z = dot (unity_SHAb, normal_16);
  mediump vec3 x1_19;
  mediump vec4 tmpvar_20;
  tmpvar_20 = (normal_16.xyzz * normal_16.yzzx);
  x1_19.x = dot (unity_SHBr, tmpvar_20);
  x1_19.y = dot (unity_SHBg, tmpvar_20);
  x1_19.z = dot (unity_SHBb, tmpvar_20);
  res_17 = (x_18 + (x1_19 + (unity_SHC.xyz * 
    ((normal_16.x * normal_16.x) - (normal_16.y * normal_16.y))
  )));
  mediump vec3 tmpvar_21;
  tmpvar_21 = max (((1.055 * 
    pow (max (res_17, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_17 = tmpvar_21;
  tmpvar_3 = tmpvar_21;
  gl_Position = tmpvar_4;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = o_11;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = tmpvar_3;
  xlv_TEXCOORD6 = ((tmpvar_4.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform lowp vec4 unity_FogColor;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
uniform sampler2D _LightBuffer;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  highp vec3 tmpvar_4;
  tmpvar_4 = xlv_TEXCOORD1;
  lowp vec3 tmpvar_5;
  lowp vec4 reflcol_6;
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_6 = (textureCube (_Cube, tmpvar_4) * tmpvar_7.w);
  tmpvar_5 = (reflcol_6.xyz * _ReflectColor.xyz);
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2DProj (_LightBuffer, xlv_TEXCOORD3);
  light_3 = tmpvar_8;
  light_3 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
  light_3.xyz = (light_3.xyz + xlv_TEXCOORD5);
  lowp vec4 c_9;
  c_9.xyz = ((tmpvar_7 * _Color).xyz * light_3.xyz);
  c_9.w = (reflcol_6.w * _ReflectColor.w);
  c_2 = c_9;
  c_2.xyz = (c_2.xyz + tmpvar_5);
  highp float tmpvar_10;
  tmpvar_10 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_10));
  c_2.w = 1.0;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "FOG_LINEAR" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec3 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  tmpvar_5.w = 1.0;
  tmpvar_5.xyz = _glesVertex.xyz;
  tmpvar_4 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
  highp vec3 tmpvar_6;
  tmpvar_6 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_7;
  tmpvar_7[0] = unity_WorldToObject[0].xyz;
  tmpvar_7[1] = unity_WorldToObject[1].xyz;
  tmpvar_7[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_glesNormal * tmpvar_7));
  highp vec3 tmpvar_9;
  highp vec3 I_10;
  I_10 = (tmpvar_6 - _WorldSpaceCameraPos);
  tmpvar_9 = (I_10 - (2.0 * (
    dot (tmpvar_8, I_10)
   * tmpvar_8)));
  tmpvar_1 = tmpvar_9;
  highp vec4 o_11;
  highp vec4 tmpvar_12;
  tmpvar_12 = (tmpvar_4 * 0.5);
  highp vec2 tmpvar_13;
  tmpvar_13.x = tmpvar_12.x;
  tmpvar_13.y = (tmpvar_12.y * _ProjectionParams.x);
  o_11.xy = (tmpvar_13 + tmpvar_12.w);
  o_11.zw = tmpvar_4.zw;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_2.xy = vec2(0.0, 0.0);
  highp mat3 tmpvar_14;
  tmpvar_14[0] = unity_WorldToObject[0].xyz;
  tmpvar_14[1] = unity_WorldToObject[1].xyz;
  tmpvar_14[2] = unity_WorldToObject[2].xyz;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = normalize((_glesNormal * tmpvar_14));
  mediump vec4 normal_16;
  normal_16 = tmpvar_15;
  mediump vec3 res_17;
  mediump vec3 x_18;
  x_18.x = dot (unity_SHAr, normal_16);
  x_18.y = dot (unity_SHAg, normal_16);
  x_18.z = dot (unity_SHAb, normal_16);
  mediump vec3 x1_19;
  mediump vec4 tmpvar_20;
  tmpvar_20 = (normal_16.xyzz * normal_16.yzzx);
  x1_19.x = dot (unity_SHBr, tmpvar_20);
  x1_19.y = dot (unity_SHBg, tmpvar_20);
  x1_19.z = dot (unity_SHBb, tmpvar_20);
  res_17 = (x_18 + (x1_19 + (unity_SHC.xyz * 
    ((normal_16.x * normal_16.x) - (normal_16.y * normal_16.y))
  )));
  mediump vec3 tmpvar_21;
  tmpvar_21 = max (((1.055 * 
    pow (max (res_17, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_17 = tmpvar_21;
  tmpvar_3 = tmpvar_21;
  gl_Position = tmpvar_4;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = o_11;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = tmpvar_3;
  xlv_TEXCOORD6 = ((tmpvar_4.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform lowp vec4 unity_FogColor;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
uniform sampler2D _LightBuffer;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  highp vec3 tmpvar_4;
  tmpvar_4 = xlv_TEXCOORD1;
  lowp vec3 tmpvar_5;
  lowp vec4 reflcol_6;
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_6 = (textureCube (_Cube, tmpvar_4) * tmpvar_7.w);
  tmpvar_5 = (reflcol_6.xyz * _ReflectColor.xyz);
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2DProj (_LightBuffer, xlv_TEXCOORD3);
  light_3 = tmpvar_8;
  light_3 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
  light_3.xyz = (light_3.xyz + xlv_TEXCOORD5);
  lowp vec4 c_9;
  c_9.xyz = ((tmpvar_7 * _Color).xyz * light_3.xyz);
  c_9.w = (reflcol_6.w * _ReflectColor.w);
  c_2 = c_9;
  c_2.xyz = (c_2.xyz + tmpvar_5);
  highp float tmpvar_10;
  tmpvar_10 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_10));
  c_2.w = 1.0;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "LIGHTPROBE_SH" "FOG_LINEAR" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec3 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  tmpvar_5.w = 1.0;
  tmpvar_5.xyz = _glesVertex.xyz;
  tmpvar_4 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
  highp vec3 tmpvar_6;
  tmpvar_6 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_7;
  tmpvar_7[0] = unity_WorldToObject[0].xyz;
  tmpvar_7[1] = unity_WorldToObject[1].xyz;
  tmpvar_7[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_glesNormal * tmpvar_7));
  highp vec3 tmpvar_9;
  highp vec3 I_10;
  I_10 = (tmpvar_6 - _WorldSpaceCameraPos);
  tmpvar_9 = (I_10 - (2.0 * (
    dot (tmpvar_8, I_10)
   * tmpvar_8)));
  tmpvar_1 = tmpvar_9;
  highp vec4 o_11;
  highp vec4 tmpvar_12;
  tmpvar_12 = (tmpvar_4 * 0.5);
  highp vec2 tmpvar_13;
  tmpvar_13.x = tmpvar_12.x;
  tmpvar_13.y = (tmpvar_12.y * _ProjectionParams.x);
  o_11.xy = (tmpvar_13 + tmpvar_12.w);
  o_11.zw = tmpvar_4.zw;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_2.xy = vec2(0.0, 0.0);
  highp mat3 tmpvar_14;
  tmpvar_14[0] = unity_WorldToObject[0].xyz;
  tmpvar_14[1] = unity_WorldToObject[1].xyz;
  tmpvar_14[2] = unity_WorldToObject[2].xyz;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = normalize((_glesNormal * tmpvar_14));
  mediump vec4 normal_16;
  normal_16 = tmpvar_15;
  mediump vec3 res_17;
  mediump vec3 x_18;
  x_18.x = dot (unity_SHAr, normal_16);
  x_18.y = dot (unity_SHAg, normal_16);
  x_18.z = dot (unity_SHAb, normal_16);
  mediump vec3 x1_19;
  mediump vec4 tmpvar_20;
  tmpvar_20 = (normal_16.xyzz * normal_16.yzzx);
  x1_19.x = dot (unity_SHBr, tmpvar_20);
  x1_19.y = dot (unity_SHBg, tmpvar_20);
  x1_19.z = dot (unity_SHBb, tmpvar_20);
  res_17 = (x_18 + (x1_19 + (unity_SHC.xyz * 
    ((normal_16.x * normal_16.x) - (normal_16.y * normal_16.y))
  )));
  mediump vec3 tmpvar_21;
  tmpvar_21 = max (((1.055 * 
    pow (max (res_17, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_17 = tmpvar_21;
  tmpvar_3 = tmpvar_21;
  gl_Position = tmpvar_4;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = o_11;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = tmpvar_3;
  xlv_TEXCOORD6 = ((tmpvar_4.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform lowp vec4 unity_FogColor;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
uniform sampler2D _LightBuffer;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  highp vec3 tmpvar_4;
  tmpvar_4 = xlv_TEXCOORD1;
  lowp vec3 tmpvar_5;
  lowp vec4 reflcol_6;
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_6 = (textureCube (_Cube, tmpvar_4) * tmpvar_7.w);
  tmpvar_5 = (reflcol_6.xyz * _ReflectColor.xyz);
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2DProj (_LightBuffer, xlv_TEXCOORD3);
  light_3 = tmpvar_8;
  light_3 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
  light_3.xyz = (light_3.xyz + xlv_TEXCOORD5);
  lowp vec4 c_9;
  c_9.xyz = ((tmpvar_7 * _Color).xyz * light_3.xyz);
  c_9.w = (reflcol_6.w * _ReflectColor.w);
  c_2 = c_9;
  c_2.xyz = (c_2.xyz + tmpvar_5);
  highp float tmpvar_10;
  tmpvar_10 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_10));
  c_2.w = 1.0;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTPROBE_SH" "FOG_LINEAR" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec3 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  tmpvar_5.w = 1.0;
  tmpvar_5.xyz = _glesVertex.xyz;
  tmpvar_4 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
  highp vec3 tmpvar_6;
  tmpvar_6 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_7;
  tmpvar_7[0] = unity_WorldToObject[0].xyz;
  tmpvar_7[1] = unity_WorldToObject[1].xyz;
  tmpvar_7[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_glesNormal * tmpvar_7));
  highp vec3 tmpvar_9;
  highp vec3 I_10;
  I_10 = (tmpvar_6 - _WorldSpaceCameraPos);
  tmpvar_9 = (I_10 - (2.0 * (
    dot (tmpvar_8, I_10)
   * tmpvar_8)));
  tmpvar_1 = tmpvar_9;
  highp vec4 o_11;
  highp vec4 tmpvar_12;
  tmpvar_12 = (tmpvar_4 * 0.5);
  highp vec2 tmpvar_13;
  tmpvar_13.x = tmpvar_12.x;
  tmpvar_13.y = (tmpvar_12.y * _ProjectionParams.x);
  o_11.xy = (tmpvar_13 + tmpvar_12.w);
  o_11.zw = tmpvar_4.zw;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_2.xy = vec2(0.0, 0.0);
  highp mat3 tmpvar_14;
  tmpvar_14[0] = unity_WorldToObject[0].xyz;
  tmpvar_14[1] = unity_WorldToObject[1].xyz;
  tmpvar_14[2] = unity_WorldToObject[2].xyz;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = normalize((_glesNormal * tmpvar_14));
  mediump vec4 normal_16;
  normal_16 = tmpvar_15;
  mediump vec3 res_17;
  mediump vec3 x_18;
  x_18.x = dot (unity_SHAr, normal_16);
  x_18.y = dot (unity_SHAg, normal_16);
  x_18.z = dot (unity_SHAb, normal_16);
  mediump vec3 x1_19;
  mediump vec4 tmpvar_20;
  tmpvar_20 = (normal_16.xyzz * normal_16.yzzx);
  x1_19.x = dot (unity_SHBr, tmpvar_20);
  x1_19.y = dot (unity_SHBg, tmpvar_20);
  x1_19.z = dot (unity_SHBb, tmpvar_20);
  res_17 = (x_18 + (x1_19 + (unity_SHC.xyz * 
    ((normal_16.x * normal_16.x) - (normal_16.y * normal_16.y))
  )));
  mediump vec3 tmpvar_21;
  tmpvar_21 = max (((1.055 * 
    pow (max (res_17, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_17 = tmpvar_21;
  tmpvar_3 = tmpvar_21;
  gl_Position = tmpvar_4;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = o_11;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = tmpvar_3;
  xlv_TEXCOORD6 = ((tmpvar_4.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform lowp vec4 unity_FogColor;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
uniform sampler2D _LightBuffer;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  highp vec3 tmpvar_4;
  tmpvar_4 = xlv_TEXCOORD1;
  lowp vec3 tmpvar_5;
  lowp vec4 reflcol_6;
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_6 = (textureCube (_Cube, tmpvar_4) * tmpvar_7.w);
  tmpvar_5 = (reflcol_6.xyz * _ReflectColor.xyz);
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2DProj (_LightBuffer, xlv_TEXCOORD3);
  light_3 = tmpvar_8;
  light_3 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
  light_3.xyz = (light_3.xyz + xlv_TEXCOORD5);
  lowp vec4 c_9;
  c_9.xyz = ((tmpvar_7 * _Color).xyz * light_3.xyz);
  c_9.w = (reflcol_6.w * _ReflectColor.w);
  c_2 = c_9;
  c_2.xyz = (c_2.xyz + tmpvar_5);
  highp float tmpvar_10;
  tmpvar_10 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_10));
  c_2.w = 1.0;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTPROBE_SH" "FOG_LINEAR" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec3 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  tmpvar_5.w = 1.0;
  tmpvar_5.xyz = _glesVertex.xyz;
  tmpvar_4 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
  highp vec3 tmpvar_6;
  tmpvar_6 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_7;
  tmpvar_7[0] = unity_WorldToObject[0].xyz;
  tmpvar_7[1] = unity_WorldToObject[1].xyz;
  tmpvar_7[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_glesNormal * tmpvar_7));
  highp vec3 tmpvar_9;
  highp vec3 I_10;
  I_10 = (tmpvar_6 - _WorldSpaceCameraPos);
  tmpvar_9 = (I_10 - (2.0 * (
    dot (tmpvar_8, I_10)
   * tmpvar_8)));
  tmpvar_1 = tmpvar_9;
  highp vec4 o_11;
  highp vec4 tmpvar_12;
  tmpvar_12 = (tmpvar_4 * 0.5);
  highp vec2 tmpvar_13;
  tmpvar_13.x = tmpvar_12.x;
  tmpvar_13.y = (tmpvar_12.y * _ProjectionParams.x);
  o_11.xy = (tmpvar_13 + tmpvar_12.w);
  o_11.zw = tmpvar_4.zw;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_2.xy = vec2(0.0, 0.0);
  highp mat3 tmpvar_14;
  tmpvar_14[0] = unity_WorldToObject[0].xyz;
  tmpvar_14[1] = unity_WorldToObject[1].xyz;
  tmpvar_14[2] = unity_WorldToObject[2].xyz;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = normalize((_glesNormal * tmpvar_14));
  mediump vec4 normal_16;
  normal_16 = tmpvar_15;
  mediump vec3 res_17;
  mediump vec3 x_18;
  x_18.x = dot (unity_SHAr, normal_16);
  x_18.y = dot (unity_SHAg, normal_16);
  x_18.z = dot (unity_SHAb, normal_16);
  mediump vec3 x1_19;
  mediump vec4 tmpvar_20;
  tmpvar_20 = (normal_16.xyzz * normal_16.yzzx);
  x1_19.x = dot (unity_SHBr, tmpvar_20);
  x1_19.y = dot (unity_SHBg, tmpvar_20);
  x1_19.z = dot (unity_SHBb, tmpvar_20);
  res_17 = (x_18 + (x1_19 + (unity_SHC.xyz * 
    ((normal_16.x * normal_16.x) - (normal_16.y * normal_16.y))
  )));
  mediump vec3 tmpvar_21;
  tmpvar_21 = max (((1.055 * 
    pow (max (res_17, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_17 = tmpvar_21;
  tmpvar_3 = tmpvar_21;
  gl_Position = tmpvar_4;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = o_11;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = tmpvar_3;
  xlv_TEXCOORD6 = ((tmpvar_4.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform lowp vec4 unity_FogColor;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
uniform sampler2D _LightBuffer;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  highp vec3 tmpvar_4;
  tmpvar_4 = xlv_TEXCOORD1;
  lowp vec3 tmpvar_5;
  lowp vec4 reflcol_6;
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_6 = (textureCube (_Cube, tmpvar_4) * tmpvar_7.w);
  tmpvar_5 = (reflcol_6.xyz * _ReflectColor.xyz);
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2DProj (_LightBuffer, xlv_TEXCOORD3);
  light_3 = tmpvar_8;
  light_3 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
  light_3.xyz = (light_3.xyz + xlv_TEXCOORD5);
  lowp vec4 c_9;
  c_9.xyz = ((tmpvar_7 * _Color).xyz * light_3.xyz);
  c_9.w = (reflcol_6.w * _ReflectColor.w);
  c_2 = c_9;
  c_2.xyz = (c_2.xyz + tmpvar_5);
  highp float tmpvar_10;
  tmpvar_10 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_10));
  c_2.w = 1.0;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec3 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  tmpvar_5.w = 1.0;
  tmpvar_5.xyz = _glesVertex.xyz;
  tmpvar_4 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
  highp vec3 tmpvar_6;
  tmpvar_6 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_7;
  tmpvar_7[0] = unity_WorldToObject[0].xyz;
  tmpvar_7[1] = unity_WorldToObject[1].xyz;
  tmpvar_7[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_glesNormal * tmpvar_7));
  highp vec3 tmpvar_9;
  highp vec3 I_10;
  I_10 = (tmpvar_6 - _WorldSpaceCameraPos);
  tmpvar_9 = (I_10 - (2.0 * (
    dot (tmpvar_8, I_10)
   * tmpvar_8)));
  tmpvar_1 = tmpvar_9;
  highp vec4 o_11;
  highp vec4 tmpvar_12;
  tmpvar_12 = (tmpvar_4 * 0.5);
  highp vec2 tmpvar_13;
  tmpvar_13.x = tmpvar_12.x;
  tmpvar_13.y = (tmpvar_12.y * _ProjectionParams.x);
  o_11.xy = (tmpvar_13 + tmpvar_12.w);
  o_11.zw = tmpvar_4.zw;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_2.xy = vec2(0.0, 0.0);
  highp mat3 tmpvar_14;
  tmpvar_14[0] = unity_WorldToObject[0].xyz;
  tmpvar_14[1] = unity_WorldToObject[1].xyz;
  tmpvar_14[2] = unity_WorldToObject[2].xyz;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = normalize((_glesNormal * tmpvar_14));
  mediump vec4 normal_16;
  normal_16 = tmpvar_15;
  mediump vec3 res_17;
  mediump vec3 x_18;
  x_18.x = dot (unity_SHAr, normal_16);
  x_18.y = dot (unity_SHAg, normal_16);
  x_18.z = dot (unity_SHAb, normal_16);
  mediump vec3 x1_19;
  mediump vec4 tmpvar_20;
  tmpvar_20 = (normal_16.xyzz * normal_16.yzzx);
  x1_19.x = dot (unity_SHBr, tmpvar_20);
  x1_19.y = dot (unity_SHBg, tmpvar_20);
  x1_19.z = dot (unity_SHBb, tmpvar_20);
  res_17 = (x_18 + (x1_19 + (unity_SHC.xyz * 
    ((normal_16.x * normal_16.x) - (normal_16.y * normal_16.y))
  )));
  mediump vec3 tmpvar_21;
  tmpvar_21 = max (((1.055 * 
    pow (max (res_17, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_17 = tmpvar_21;
  tmpvar_3 = tmpvar_21;
  gl_Position = tmpvar_4;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = o_11;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = tmpvar_3;
  xlv_TEXCOORD6 = ((tmpvar_4.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform lowp vec4 unity_FogColor;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
uniform sampler2D _LightBuffer;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  highp vec3 tmpvar_4;
  tmpvar_4 = xlv_TEXCOORD1;
  lowp vec3 tmpvar_5;
  lowp vec4 reflcol_6;
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_6 = (textureCube (_Cube, tmpvar_4) * tmpvar_7.w);
  tmpvar_5 = (reflcol_6.xyz * _ReflectColor.xyz);
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2DProj (_LightBuffer, xlv_TEXCOORD3);
  light_3 = tmpvar_8;
  light_3 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
  light_3.xyz = (light_3.xyz + xlv_TEXCOORD5);
  lowp vec4 c_9;
  c_9.xyz = ((tmpvar_7 * _Color).xyz * light_3.xyz);
  c_9.w = (reflcol_6.w * _ReflectColor.w);
  c_2 = c_9;
  c_2.xyz = (c_2.xyz + tmpvar_5);
  highp float tmpvar_10;
  tmpvar_10 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_10));
  c_2.w = 1.0;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec3 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  tmpvar_5.w = 1.0;
  tmpvar_5.xyz = _glesVertex.xyz;
  tmpvar_4 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
  highp vec3 tmpvar_6;
  tmpvar_6 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_7;
  tmpvar_7[0] = unity_WorldToObject[0].xyz;
  tmpvar_7[1] = unity_WorldToObject[1].xyz;
  tmpvar_7[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_glesNormal * tmpvar_7));
  highp vec3 tmpvar_9;
  highp vec3 I_10;
  I_10 = (tmpvar_6 - _WorldSpaceCameraPos);
  tmpvar_9 = (I_10 - (2.0 * (
    dot (tmpvar_8, I_10)
   * tmpvar_8)));
  tmpvar_1 = tmpvar_9;
  highp vec4 o_11;
  highp vec4 tmpvar_12;
  tmpvar_12 = (tmpvar_4 * 0.5);
  highp vec2 tmpvar_13;
  tmpvar_13.x = tmpvar_12.x;
  tmpvar_13.y = (tmpvar_12.y * _ProjectionParams.x);
  o_11.xy = (tmpvar_13 + tmpvar_12.w);
  o_11.zw = tmpvar_4.zw;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_2.xy = vec2(0.0, 0.0);
  highp mat3 tmpvar_14;
  tmpvar_14[0] = unity_WorldToObject[0].xyz;
  tmpvar_14[1] = unity_WorldToObject[1].xyz;
  tmpvar_14[2] = unity_WorldToObject[2].xyz;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = normalize((_glesNormal * tmpvar_14));
  mediump vec4 normal_16;
  normal_16 = tmpvar_15;
  mediump vec3 res_17;
  mediump vec3 x_18;
  x_18.x = dot (unity_SHAr, normal_16);
  x_18.y = dot (unity_SHAg, normal_16);
  x_18.z = dot (unity_SHAb, normal_16);
  mediump vec3 x1_19;
  mediump vec4 tmpvar_20;
  tmpvar_20 = (normal_16.xyzz * normal_16.yzzx);
  x1_19.x = dot (unity_SHBr, tmpvar_20);
  x1_19.y = dot (unity_SHBg, tmpvar_20);
  x1_19.z = dot (unity_SHBb, tmpvar_20);
  res_17 = (x_18 + (x1_19 + (unity_SHC.xyz * 
    ((normal_16.x * normal_16.x) - (normal_16.y * normal_16.y))
  )));
  mediump vec3 tmpvar_21;
  tmpvar_21 = max (((1.055 * 
    pow (max (res_17, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_17 = tmpvar_21;
  tmpvar_3 = tmpvar_21;
  gl_Position = tmpvar_4;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = o_11;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = tmpvar_3;
  xlv_TEXCOORD6 = ((tmpvar_4.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform lowp vec4 unity_FogColor;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
uniform sampler2D _LightBuffer;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  highp vec3 tmpvar_4;
  tmpvar_4 = xlv_TEXCOORD1;
  lowp vec3 tmpvar_5;
  lowp vec4 reflcol_6;
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_6 = (textureCube (_Cube, tmpvar_4) * tmpvar_7.w);
  tmpvar_5 = (reflcol_6.xyz * _ReflectColor.xyz);
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2DProj (_LightBuffer, xlv_TEXCOORD3);
  light_3 = tmpvar_8;
  light_3 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
  light_3.xyz = (light_3.xyz + xlv_TEXCOORD5);
  lowp vec4 c_9;
  c_9.xyz = ((tmpvar_7 * _Color).xyz * light_3.xyz);
  c_9.w = (reflcol_6.w * _ReflectColor.w);
  c_2 = c_9;
  c_2.xyz = (c_2.xyz + tmpvar_5);
  highp float tmpvar_10;
  tmpvar_10 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_10));
  c_2.w = 1.0;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec3 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  tmpvar_5.w = 1.0;
  tmpvar_5.xyz = _glesVertex.xyz;
  tmpvar_4 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
  highp vec3 tmpvar_6;
  tmpvar_6 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_7;
  tmpvar_7[0] = unity_WorldToObject[0].xyz;
  tmpvar_7[1] = unity_WorldToObject[1].xyz;
  tmpvar_7[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_glesNormal * tmpvar_7));
  highp vec3 tmpvar_9;
  highp vec3 I_10;
  I_10 = (tmpvar_6 - _WorldSpaceCameraPos);
  tmpvar_9 = (I_10 - (2.0 * (
    dot (tmpvar_8, I_10)
   * tmpvar_8)));
  tmpvar_1 = tmpvar_9;
  highp vec4 o_11;
  highp vec4 tmpvar_12;
  tmpvar_12 = (tmpvar_4 * 0.5);
  highp vec2 tmpvar_13;
  tmpvar_13.x = tmpvar_12.x;
  tmpvar_13.y = (tmpvar_12.y * _ProjectionParams.x);
  o_11.xy = (tmpvar_13 + tmpvar_12.w);
  o_11.zw = tmpvar_4.zw;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_2.xy = vec2(0.0, 0.0);
  highp mat3 tmpvar_14;
  tmpvar_14[0] = unity_WorldToObject[0].xyz;
  tmpvar_14[1] = unity_WorldToObject[1].xyz;
  tmpvar_14[2] = unity_WorldToObject[2].xyz;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = normalize((_glesNormal * tmpvar_14));
  mediump vec4 normal_16;
  normal_16 = tmpvar_15;
  mediump vec3 res_17;
  mediump vec3 x_18;
  x_18.x = dot (unity_SHAr, normal_16);
  x_18.y = dot (unity_SHAg, normal_16);
  x_18.z = dot (unity_SHAb, normal_16);
  mediump vec3 x1_19;
  mediump vec4 tmpvar_20;
  tmpvar_20 = (normal_16.xyzz * normal_16.yzzx);
  x1_19.x = dot (unity_SHBr, tmpvar_20);
  x1_19.y = dot (unity_SHBg, tmpvar_20);
  x1_19.z = dot (unity_SHBb, tmpvar_20);
  res_17 = (x_18 + (x1_19 + (unity_SHC.xyz * 
    ((normal_16.x * normal_16.x) - (normal_16.y * normal_16.y))
  )));
  mediump vec3 tmpvar_21;
  tmpvar_21 = max (((1.055 * 
    pow (max (res_17, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_17 = tmpvar_21;
  tmpvar_3 = tmpvar_21;
  gl_Position = tmpvar_4;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = o_11;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = tmpvar_3;
  xlv_TEXCOORD6 = ((tmpvar_4.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform lowp vec4 unity_FogColor;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
uniform sampler2D _LightBuffer;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  highp vec3 tmpvar_4;
  tmpvar_4 = xlv_TEXCOORD1;
  lowp vec3 tmpvar_5;
  lowp vec4 reflcol_6;
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_6 = (textureCube (_Cube, tmpvar_4) * tmpvar_7.w);
  tmpvar_5 = (reflcol_6.xyz * _ReflectColor.xyz);
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2DProj (_LightBuffer, xlv_TEXCOORD3);
  light_3 = tmpvar_8;
  light_3 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
  light_3.xyz = (light_3.xyz + xlv_TEXCOORD5);
  lowp vec4 c_9;
  c_9.xyz = ((tmpvar_7 * _Color).xyz * light_3.xyz);
  c_9.w = (reflcol_6.w * _ReflectColor.w);
  c_2 = c_9;
  c_2.xyz = (c_2.xyz + tmpvar_5);
  highp float tmpvar_10;
  tmpvar_10 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_10));
  c_2.w = 1.0;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "LIGHTMAP_ON" "FOG_LINEAR" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  mediump vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  highp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = tmpvar_1.xyz;
  tmpvar_5 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
  highp vec4 tmpvar_7;
  tmpvar_7 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_8;
  tmpvar_8[0] = unity_WorldToObject[0].xyz;
  tmpvar_8[1] = unity_WorldToObject[1].xyz;
  tmpvar_8[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_9;
  tmpvar_9 = normalize((_glesNormal * tmpvar_8));
  highp vec3 tmpvar_10;
  highp vec3 I_11;
  I_11 = (tmpvar_7.xyz - _WorldSpaceCameraPos);
  tmpvar_10 = (I_11 - (2.0 * (
    dot (tmpvar_9, I_11)
   * tmpvar_9)));
  tmpvar_2 = tmpvar_10;
  highp vec4 o_12;
  highp vec4 tmpvar_13;
  tmpvar_13 = (tmpvar_5 * 0.5);
  highp vec2 tmpvar_14;
  tmpvar_14.x = tmpvar_13.x;
  tmpvar_14.y = (tmpvar_13.y * _ProjectionParams.x);
  o_12.xy = (tmpvar_14 + tmpvar_13.w);
  o_12.zw = tmpvar_5.zw;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  tmpvar_4.xyz = ((tmpvar_7.xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = tmpvar_1.xyz;
  tmpvar_4.w = (-((unity_MatrixV * 
    (unity_ObjectToWorld * tmpvar_15)
  ).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
  gl_Position = tmpvar_5;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_7.xyz;
  xlv_TEXCOORD3 = o_12;
  xlv_TEXCOORD4 = tmpvar_3;
  xlv_TEXCOORD5 = tmpvar_4;
  xlv_TEXCOORD6 = ((tmpvar_5.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform lowp vec4 unity_FogColor;
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
uniform sampler2D _LightBuffer;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp float xlv_TEXCOORD6;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  lowp vec3 lm_3;
  lowp vec4 lmtex_4;
  mediump vec4 light_5;
  highp vec3 tmpvar_6;
  tmpvar_6 = xlv_TEXCOORD1;
  lowp vec3 tmpvar_7;
  lowp vec4 reflcol_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_8 = (textureCube (_Cube, tmpvar_6) * tmpvar_9.w);
  tmpvar_7 = (reflcol_8.xyz * _ReflectColor.xyz);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2DProj (_LightBuffer, xlv_TEXCOORD3);
  light_5 = tmpvar_10;
  light_5 = -(log2(max (light_5, vec4(0.001, 0.001, 0.001, 0.001))));
  mediump vec4 tmpvar_11;
  tmpvar_11 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lmtex_4 = tmpvar_11;
  mediump vec3 tmpvar_12;
  tmpvar_12 = (unity_Lightmap_HDR.x * lmtex_4.xyz);
  lm_3 = tmpvar_12;
  light_5.xyz = (light_5.xyz + lm_3);
  lowp vec4 c_13;
  c_13.xyz = ((tmpvar_9 * _Color).xyz * light_5.xyz);
  c_13.w = (reflcol_8.w * _ReflectColor.w);
  c_2 = c_13;
  c_2.xyz = (c_2.xyz + tmpvar_7);
  highp float tmpvar_14;
  tmpvar_14 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_14));
  c_2.w = 1.0;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTMAP_ON" "FOG_LINEAR" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  mediump vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  highp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = tmpvar_1.xyz;
  tmpvar_5 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
  highp vec4 tmpvar_7;
  tmpvar_7 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_8;
  tmpvar_8[0] = unity_WorldToObject[0].xyz;
  tmpvar_8[1] = unity_WorldToObject[1].xyz;
  tmpvar_8[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_9;
  tmpvar_9 = normalize((_glesNormal * tmpvar_8));
  highp vec3 tmpvar_10;
  highp vec3 I_11;
  I_11 = (tmpvar_7.xyz - _WorldSpaceCameraPos);
  tmpvar_10 = (I_11 - (2.0 * (
    dot (tmpvar_9, I_11)
   * tmpvar_9)));
  tmpvar_2 = tmpvar_10;
  highp vec4 o_12;
  highp vec4 tmpvar_13;
  tmpvar_13 = (tmpvar_5 * 0.5);
  highp vec2 tmpvar_14;
  tmpvar_14.x = tmpvar_13.x;
  tmpvar_14.y = (tmpvar_13.y * _ProjectionParams.x);
  o_12.xy = (tmpvar_14 + tmpvar_13.w);
  o_12.zw = tmpvar_5.zw;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  tmpvar_4.xyz = ((tmpvar_7.xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = tmpvar_1.xyz;
  tmpvar_4.w = (-((unity_MatrixV * 
    (unity_ObjectToWorld * tmpvar_15)
  ).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
  gl_Position = tmpvar_5;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_7.xyz;
  xlv_TEXCOORD3 = o_12;
  xlv_TEXCOORD4 = tmpvar_3;
  xlv_TEXCOORD5 = tmpvar_4;
  xlv_TEXCOORD6 = ((tmpvar_5.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform lowp vec4 unity_FogColor;
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
uniform sampler2D _LightBuffer;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp float xlv_TEXCOORD6;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  lowp vec3 lm_3;
  lowp vec4 lmtex_4;
  mediump vec4 light_5;
  highp vec3 tmpvar_6;
  tmpvar_6 = xlv_TEXCOORD1;
  lowp vec3 tmpvar_7;
  lowp vec4 reflcol_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_8 = (textureCube (_Cube, tmpvar_6) * tmpvar_9.w);
  tmpvar_7 = (reflcol_8.xyz * _ReflectColor.xyz);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2DProj (_LightBuffer, xlv_TEXCOORD3);
  light_5 = tmpvar_10;
  light_5 = -(log2(max (light_5, vec4(0.001, 0.001, 0.001, 0.001))));
  mediump vec4 tmpvar_11;
  tmpvar_11 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lmtex_4 = tmpvar_11;
  mediump vec3 tmpvar_12;
  tmpvar_12 = (unity_Lightmap_HDR.x * lmtex_4.xyz);
  lm_3 = tmpvar_12;
  light_5.xyz = (light_5.xyz + lm_3);
  lowp vec4 c_13;
  c_13.xyz = ((tmpvar_9 * _Color).xyz * light_5.xyz);
  c_13.w = (reflcol_8.w * _ReflectColor.w);
  c_2 = c_13;
  c_2.xyz = (c_2.xyz + tmpvar_7);
  highp float tmpvar_14;
  tmpvar_14 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_14));
  c_2.w = 1.0;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTMAP_ON" "FOG_LINEAR" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  mediump vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  highp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = tmpvar_1.xyz;
  tmpvar_5 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
  highp vec4 tmpvar_7;
  tmpvar_7 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_8;
  tmpvar_8[0] = unity_WorldToObject[0].xyz;
  tmpvar_8[1] = unity_WorldToObject[1].xyz;
  tmpvar_8[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_9;
  tmpvar_9 = normalize((_glesNormal * tmpvar_8));
  highp vec3 tmpvar_10;
  highp vec3 I_11;
  I_11 = (tmpvar_7.xyz - _WorldSpaceCameraPos);
  tmpvar_10 = (I_11 - (2.0 * (
    dot (tmpvar_9, I_11)
   * tmpvar_9)));
  tmpvar_2 = tmpvar_10;
  highp vec4 o_12;
  highp vec4 tmpvar_13;
  tmpvar_13 = (tmpvar_5 * 0.5);
  highp vec2 tmpvar_14;
  tmpvar_14.x = tmpvar_13.x;
  tmpvar_14.y = (tmpvar_13.y * _ProjectionParams.x);
  o_12.xy = (tmpvar_14 + tmpvar_13.w);
  o_12.zw = tmpvar_5.zw;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  tmpvar_4.xyz = ((tmpvar_7.xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = tmpvar_1.xyz;
  tmpvar_4.w = (-((unity_MatrixV * 
    (unity_ObjectToWorld * tmpvar_15)
  ).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
  gl_Position = tmpvar_5;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_7.xyz;
  xlv_TEXCOORD3 = o_12;
  xlv_TEXCOORD4 = tmpvar_3;
  xlv_TEXCOORD5 = tmpvar_4;
  xlv_TEXCOORD6 = ((tmpvar_5.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform lowp vec4 unity_FogColor;
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
uniform sampler2D _LightBuffer;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp float xlv_TEXCOORD6;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  lowp vec3 lm_3;
  lowp vec4 lmtex_4;
  mediump vec4 light_5;
  highp vec3 tmpvar_6;
  tmpvar_6 = xlv_TEXCOORD1;
  lowp vec3 tmpvar_7;
  lowp vec4 reflcol_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_8 = (textureCube (_Cube, tmpvar_6) * tmpvar_9.w);
  tmpvar_7 = (reflcol_8.xyz * _ReflectColor.xyz);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2DProj (_LightBuffer, xlv_TEXCOORD3);
  light_5 = tmpvar_10;
  light_5 = -(log2(max (light_5, vec4(0.001, 0.001, 0.001, 0.001))));
  mediump vec4 tmpvar_11;
  tmpvar_11 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lmtex_4 = tmpvar_11;
  mediump vec3 tmpvar_12;
  tmpvar_12 = (unity_Lightmap_HDR.x * lmtex_4.xyz);
  lm_3 = tmpvar_12;
  light_5.xyz = (light_5.xyz + lm_3);
  lowp vec4 c_13;
  c_13.xyz = ((tmpvar_9 * _Color).xyz * light_5.xyz);
  c_13.w = (reflcol_8.w * _ReflectColor.w);
  c_2 = c_13;
  c_2.xyz = (c_2.xyz + tmpvar_7);
  highp float tmpvar_14;
  tmpvar_14 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_14));
  c_2.w = 1.0;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "LIGHTMAP_ON" "LIGHTPROBE_SH" "FOG_LINEAR" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  mediump vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  highp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = tmpvar_1.xyz;
  tmpvar_5 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
  highp vec4 tmpvar_7;
  tmpvar_7 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_8;
  tmpvar_8[0] = unity_WorldToObject[0].xyz;
  tmpvar_8[1] = unity_WorldToObject[1].xyz;
  tmpvar_8[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_9;
  tmpvar_9 = normalize((_glesNormal * tmpvar_8));
  highp vec3 tmpvar_10;
  highp vec3 I_11;
  I_11 = (tmpvar_7.xyz - _WorldSpaceCameraPos);
  tmpvar_10 = (I_11 - (2.0 * (
    dot (tmpvar_9, I_11)
   * tmpvar_9)));
  tmpvar_2 = tmpvar_10;
  highp vec4 o_12;
  highp vec4 tmpvar_13;
  tmpvar_13 = (tmpvar_5 * 0.5);
  highp vec2 tmpvar_14;
  tmpvar_14.x = tmpvar_13.x;
  tmpvar_14.y = (tmpvar_13.y * _ProjectionParams.x);
  o_12.xy = (tmpvar_14 + tmpvar_13.w);
  o_12.zw = tmpvar_5.zw;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  tmpvar_4.xyz = ((tmpvar_7.xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = tmpvar_1.xyz;
  tmpvar_4.w = (-((unity_MatrixV * 
    (unity_ObjectToWorld * tmpvar_15)
  ).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
  gl_Position = tmpvar_5;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_7.xyz;
  xlv_TEXCOORD3 = o_12;
  xlv_TEXCOORD4 = tmpvar_3;
  xlv_TEXCOORD5 = tmpvar_4;
  xlv_TEXCOORD6 = ((tmpvar_5.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform lowp vec4 unity_FogColor;
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
uniform sampler2D _LightBuffer;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp float xlv_TEXCOORD6;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  lowp vec3 lm_3;
  lowp vec4 lmtex_4;
  mediump vec4 light_5;
  highp vec3 tmpvar_6;
  tmpvar_6 = xlv_TEXCOORD1;
  lowp vec3 tmpvar_7;
  lowp vec4 reflcol_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_8 = (textureCube (_Cube, tmpvar_6) * tmpvar_9.w);
  tmpvar_7 = (reflcol_8.xyz * _ReflectColor.xyz);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2DProj (_LightBuffer, xlv_TEXCOORD3);
  light_5 = tmpvar_10;
  light_5 = -(log2(max (light_5, vec4(0.001, 0.001, 0.001, 0.001))));
  mediump vec4 tmpvar_11;
  tmpvar_11 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lmtex_4 = tmpvar_11;
  mediump vec3 tmpvar_12;
  tmpvar_12 = (unity_Lightmap_HDR.x * lmtex_4.xyz);
  lm_3 = tmpvar_12;
  light_5.xyz = (light_5.xyz + lm_3);
  lowp vec4 c_13;
  c_13.xyz = ((tmpvar_9 * _Color).xyz * light_5.xyz);
  c_13.w = (reflcol_8.w * _ReflectColor.w);
  c_2 = c_13;
  c_2.xyz = (c_2.xyz + tmpvar_7);
  highp float tmpvar_14;
  tmpvar_14 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_14));
  c_2.w = 1.0;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTMAP_ON" "LIGHTPROBE_SH" "FOG_LINEAR" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  mediump vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  highp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = tmpvar_1.xyz;
  tmpvar_5 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
  highp vec4 tmpvar_7;
  tmpvar_7 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_8;
  tmpvar_8[0] = unity_WorldToObject[0].xyz;
  tmpvar_8[1] = unity_WorldToObject[1].xyz;
  tmpvar_8[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_9;
  tmpvar_9 = normalize((_glesNormal * tmpvar_8));
  highp vec3 tmpvar_10;
  highp vec3 I_11;
  I_11 = (tmpvar_7.xyz - _WorldSpaceCameraPos);
  tmpvar_10 = (I_11 - (2.0 * (
    dot (tmpvar_9, I_11)
   * tmpvar_9)));
  tmpvar_2 = tmpvar_10;
  highp vec4 o_12;
  highp vec4 tmpvar_13;
  tmpvar_13 = (tmpvar_5 * 0.5);
  highp vec2 tmpvar_14;
  tmpvar_14.x = tmpvar_13.x;
  tmpvar_14.y = (tmpvar_13.y * _ProjectionParams.x);
  o_12.xy = (tmpvar_14 + tmpvar_13.w);
  o_12.zw = tmpvar_5.zw;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  tmpvar_4.xyz = ((tmpvar_7.xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = tmpvar_1.xyz;
  tmpvar_4.w = (-((unity_MatrixV * 
    (unity_ObjectToWorld * tmpvar_15)
  ).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
  gl_Position = tmpvar_5;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_7.xyz;
  xlv_TEXCOORD3 = o_12;
  xlv_TEXCOORD4 = tmpvar_3;
  xlv_TEXCOORD5 = tmpvar_4;
  xlv_TEXCOORD6 = ((tmpvar_5.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform lowp vec4 unity_FogColor;
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
uniform sampler2D _LightBuffer;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp float xlv_TEXCOORD6;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  lowp vec3 lm_3;
  lowp vec4 lmtex_4;
  mediump vec4 light_5;
  highp vec3 tmpvar_6;
  tmpvar_6 = xlv_TEXCOORD1;
  lowp vec3 tmpvar_7;
  lowp vec4 reflcol_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_8 = (textureCube (_Cube, tmpvar_6) * tmpvar_9.w);
  tmpvar_7 = (reflcol_8.xyz * _ReflectColor.xyz);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2DProj (_LightBuffer, xlv_TEXCOORD3);
  light_5 = tmpvar_10;
  light_5 = -(log2(max (light_5, vec4(0.001, 0.001, 0.001, 0.001))));
  mediump vec4 tmpvar_11;
  tmpvar_11 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lmtex_4 = tmpvar_11;
  mediump vec3 tmpvar_12;
  tmpvar_12 = (unity_Lightmap_HDR.x * lmtex_4.xyz);
  lm_3 = tmpvar_12;
  light_5.xyz = (light_5.xyz + lm_3);
  lowp vec4 c_13;
  c_13.xyz = ((tmpvar_9 * _Color).xyz * light_5.xyz);
  c_13.w = (reflcol_8.w * _ReflectColor.w);
  c_2 = c_13;
  c_2.xyz = (c_2.xyz + tmpvar_7);
  highp float tmpvar_14;
  tmpvar_14 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_14));
  c_2.w = 1.0;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTMAP_ON" "LIGHTPROBE_SH" "FOG_LINEAR" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  mediump vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  highp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = tmpvar_1.xyz;
  tmpvar_5 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
  highp vec4 tmpvar_7;
  tmpvar_7 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_8;
  tmpvar_8[0] = unity_WorldToObject[0].xyz;
  tmpvar_8[1] = unity_WorldToObject[1].xyz;
  tmpvar_8[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_9;
  tmpvar_9 = normalize((_glesNormal * tmpvar_8));
  highp vec3 tmpvar_10;
  highp vec3 I_11;
  I_11 = (tmpvar_7.xyz - _WorldSpaceCameraPos);
  tmpvar_10 = (I_11 - (2.0 * (
    dot (tmpvar_9, I_11)
   * tmpvar_9)));
  tmpvar_2 = tmpvar_10;
  highp vec4 o_12;
  highp vec4 tmpvar_13;
  tmpvar_13 = (tmpvar_5 * 0.5);
  highp vec2 tmpvar_14;
  tmpvar_14.x = tmpvar_13.x;
  tmpvar_14.y = (tmpvar_13.y * _ProjectionParams.x);
  o_12.xy = (tmpvar_14 + tmpvar_13.w);
  o_12.zw = tmpvar_5.zw;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  tmpvar_4.xyz = ((tmpvar_7.xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = tmpvar_1.xyz;
  tmpvar_4.w = (-((unity_MatrixV * 
    (unity_ObjectToWorld * tmpvar_15)
  ).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
  gl_Position = tmpvar_5;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_7.xyz;
  xlv_TEXCOORD3 = o_12;
  xlv_TEXCOORD4 = tmpvar_3;
  xlv_TEXCOORD5 = tmpvar_4;
  xlv_TEXCOORD6 = ((tmpvar_5.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform lowp vec4 unity_FogColor;
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
uniform sampler2D _LightBuffer;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp float xlv_TEXCOORD6;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  lowp vec3 lm_3;
  lowp vec4 lmtex_4;
  mediump vec4 light_5;
  highp vec3 tmpvar_6;
  tmpvar_6 = xlv_TEXCOORD1;
  lowp vec3 tmpvar_7;
  lowp vec4 reflcol_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_8 = (textureCube (_Cube, tmpvar_6) * tmpvar_9.w);
  tmpvar_7 = (reflcol_8.xyz * _ReflectColor.xyz);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2DProj (_LightBuffer, xlv_TEXCOORD3);
  light_5 = tmpvar_10;
  light_5 = -(log2(max (light_5, vec4(0.001, 0.001, 0.001, 0.001))));
  mediump vec4 tmpvar_11;
  tmpvar_11 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lmtex_4 = tmpvar_11;
  mediump vec3 tmpvar_12;
  tmpvar_12 = (unity_Lightmap_HDR.x * lmtex_4.xyz);
  lm_3 = tmpvar_12;
  light_5.xyz = (light_5.xyz + lm_3);
  lowp vec4 c_13;
  c_13.xyz = ((tmpvar_9 * _Color).xyz * light_5.xyz);
  c_13.w = (reflcol_8.w * _ReflectColor.w);
  c_2 = c_13;
  c_2.xyz = (c_2.xyz + tmpvar_7);
  highp float tmpvar_14;
  tmpvar_14 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_14));
  c_2.w = 1.0;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "FOG_LINEAR" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  mediump vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  highp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = tmpvar_1.xyz;
  tmpvar_5 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
  highp vec4 tmpvar_7;
  tmpvar_7 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_8;
  tmpvar_8[0] = unity_WorldToObject[0].xyz;
  tmpvar_8[1] = unity_WorldToObject[1].xyz;
  tmpvar_8[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_9;
  tmpvar_9 = normalize((_glesNormal * tmpvar_8));
  highp vec3 tmpvar_10;
  highp vec3 I_11;
  I_11 = (tmpvar_7.xyz - _WorldSpaceCameraPos);
  tmpvar_10 = (I_11 - (2.0 * (
    dot (tmpvar_9, I_11)
   * tmpvar_9)));
  tmpvar_2 = tmpvar_10;
  highp vec4 o_12;
  highp vec4 tmpvar_13;
  tmpvar_13 = (tmpvar_5 * 0.5);
  highp vec2 tmpvar_14;
  tmpvar_14.x = tmpvar_13.x;
  tmpvar_14.y = (tmpvar_13.y * _ProjectionParams.x);
  o_12.xy = (tmpvar_14 + tmpvar_13.w);
  o_12.zw = tmpvar_5.zw;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  tmpvar_4.xyz = ((tmpvar_7.xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = tmpvar_1.xyz;
  tmpvar_4.w = (-((unity_MatrixV * 
    (unity_ObjectToWorld * tmpvar_15)
  ).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
  gl_Position = tmpvar_5;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_7.xyz;
  xlv_TEXCOORD3 = o_12;
  xlv_TEXCOORD4 = tmpvar_3;
  xlv_TEXCOORD5 = tmpvar_4;
  xlv_TEXCOORD6 = ((tmpvar_5.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform lowp vec4 unity_FogColor;
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
uniform sampler2D _LightBuffer;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp float xlv_TEXCOORD6;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  lowp vec3 lm_3;
  lowp vec4 lmtex_4;
  mediump vec4 light_5;
  highp vec3 tmpvar_6;
  tmpvar_6 = xlv_TEXCOORD1;
  lowp vec3 tmpvar_7;
  lowp vec4 reflcol_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_8 = (textureCube (_Cube, tmpvar_6) * tmpvar_9.w);
  tmpvar_7 = (reflcol_8.xyz * _ReflectColor.xyz);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2DProj (_LightBuffer, xlv_TEXCOORD3);
  light_5 = tmpvar_10;
  light_5 = -(log2(max (light_5, vec4(0.001, 0.001, 0.001, 0.001))));
  mediump vec4 tmpvar_11;
  tmpvar_11 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lmtex_4 = tmpvar_11;
  mediump vec3 tmpvar_12;
  tmpvar_12 = (unity_Lightmap_HDR.x * lmtex_4.xyz);
  lm_3 = tmpvar_12;
  light_5.xyz = (light_5.xyz + lm_3);
  lowp vec4 c_13;
  c_13.xyz = ((tmpvar_9 * _Color).xyz * light_5.xyz);
  c_13.w = (reflcol_8.w * _ReflectColor.w);
  c_2 = c_13;
  c_2.xyz = (c_2.xyz + tmpvar_7);
  highp float tmpvar_14;
  tmpvar_14 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_14));
  c_2.w = 1.0;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "FOG_LINEAR" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  mediump vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  highp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = tmpvar_1.xyz;
  tmpvar_5 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
  highp vec4 tmpvar_7;
  tmpvar_7 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_8;
  tmpvar_8[0] = unity_WorldToObject[0].xyz;
  tmpvar_8[1] = unity_WorldToObject[1].xyz;
  tmpvar_8[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_9;
  tmpvar_9 = normalize((_glesNormal * tmpvar_8));
  highp vec3 tmpvar_10;
  highp vec3 I_11;
  I_11 = (tmpvar_7.xyz - _WorldSpaceCameraPos);
  tmpvar_10 = (I_11 - (2.0 * (
    dot (tmpvar_9, I_11)
   * tmpvar_9)));
  tmpvar_2 = tmpvar_10;
  highp vec4 o_12;
  highp vec4 tmpvar_13;
  tmpvar_13 = (tmpvar_5 * 0.5);
  highp vec2 tmpvar_14;
  tmpvar_14.x = tmpvar_13.x;
  tmpvar_14.y = (tmpvar_13.y * _ProjectionParams.x);
  o_12.xy = (tmpvar_14 + tmpvar_13.w);
  o_12.zw = tmpvar_5.zw;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  tmpvar_4.xyz = ((tmpvar_7.xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = tmpvar_1.xyz;
  tmpvar_4.w = (-((unity_MatrixV * 
    (unity_ObjectToWorld * tmpvar_15)
  ).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
  gl_Position = tmpvar_5;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_7.xyz;
  xlv_TEXCOORD3 = o_12;
  xlv_TEXCOORD4 = tmpvar_3;
  xlv_TEXCOORD5 = tmpvar_4;
  xlv_TEXCOORD6 = ((tmpvar_5.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform lowp vec4 unity_FogColor;
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
uniform sampler2D _LightBuffer;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp float xlv_TEXCOORD6;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  lowp vec3 lm_3;
  lowp vec4 lmtex_4;
  mediump vec4 light_5;
  highp vec3 tmpvar_6;
  tmpvar_6 = xlv_TEXCOORD1;
  lowp vec3 tmpvar_7;
  lowp vec4 reflcol_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_8 = (textureCube (_Cube, tmpvar_6) * tmpvar_9.w);
  tmpvar_7 = (reflcol_8.xyz * _ReflectColor.xyz);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2DProj (_LightBuffer, xlv_TEXCOORD3);
  light_5 = tmpvar_10;
  light_5 = -(log2(max (light_5, vec4(0.001, 0.001, 0.001, 0.001))));
  mediump vec4 tmpvar_11;
  tmpvar_11 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lmtex_4 = tmpvar_11;
  mediump vec3 tmpvar_12;
  tmpvar_12 = (unity_Lightmap_HDR.x * lmtex_4.xyz);
  lm_3 = tmpvar_12;
  light_5.xyz = (light_5.xyz + lm_3);
  lowp vec4 c_13;
  c_13.xyz = ((tmpvar_9 * _Color).xyz * light_5.xyz);
  c_13.w = (reflcol_8.w * _ReflectColor.w);
  c_2 = c_13;
  c_2.xyz = (c_2.xyz + tmpvar_7);
  highp float tmpvar_14;
  tmpvar_14 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_14));
  c_2.w = 1.0;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "FOG_LINEAR" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  mediump vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  highp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = tmpvar_1.xyz;
  tmpvar_5 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
  highp vec4 tmpvar_7;
  tmpvar_7 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_8;
  tmpvar_8[0] = unity_WorldToObject[0].xyz;
  tmpvar_8[1] = unity_WorldToObject[1].xyz;
  tmpvar_8[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_9;
  tmpvar_9 = normalize((_glesNormal * tmpvar_8));
  highp vec3 tmpvar_10;
  highp vec3 I_11;
  I_11 = (tmpvar_7.xyz - _WorldSpaceCameraPos);
  tmpvar_10 = (I_11 - (2.0 * (
    dot (tmpvar_9, I_11)
   * tmpvar_9)));
  tmpvar_2 = tmpvar_10;
  highp vec4 o_12;
  highp vec4 tmpvar_13;
  tmpvar_13 = (tmpvar_5 * 0.5);
  highp vec2 tmpvar_14;
  tmpvar_14.x = tmpvar_13.x;
  tmpvar_14.y = (tmpvar_13.y * _ProjectionParams.x);
  o_12.xy = (tmpvar_14 + tmpvar_13.w);
  o_12.zw = tmpvar_5.zw;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  tmpvar_4.xyz = ((tmpvar_7.xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = tmpvar_1.xyz;
  tmpvar_4.w = (-((unity_MatrixV * 
    (unity_ObjectToWorld * tmpvar_15)
  ).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
  gl_Position = tmpvar_5;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_7.xyz;
  xlv_TEXCOORD3 = o_12;
  xlv_TEXCOORD4 = tmpvar_3;
  xlv_TEXCOORD5 = tmpvar_4;
  xlv_TEXCOORD6 = ((tmpvar_5.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform lowp vec4 unity_FogColor;
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
uniform sampler2D _LightBuffer;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp float xlv_TEXCOORD6;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  lowp vec3 lm_3;
  lowp vec4 lmtex_4;
  mediump vec4 light_5;
  highp vec3 tmpvar_6;
  tmpvar_6 = xlv_TEXCOORD1;
  lowp vec3 tmpvar_7;
  lowp vec4 reflcol_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_8 = (textureCube (_Cube, tmpvar_6) * tmpvar_9.w);
  tmpvar_7 = (reflcol_8.xyz * _ReflectColor.xyz);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2DProj (_LightBuffer, xlv_TEXCOORD3);
  light_5 = tmpvar_10;
  light_5 = -(log2(max (light_5, vec4(0.001, 0.001, 0.001, 0.001))));
  mediump vec4 tmpvar_11;
  tmpvar_11 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lmtex_4 = tmpvar_11;
  mediump vec3 tmpvar_12;
  tmpvar_12 = (unity_Lightmap_HDR.x * lmtex_4.xyz);
  lm_3 = tmpvar_12;
  light_5.xyz = (light_5.xyz + lm_3);
  lowp vec4 c_13;
  c_13.xyz = ((tmpvar_9 * _Color).xyz * light_5.xyz);
  c_13.w = (reflcol_8.w * _ReflectColor.w);
  c_2 = c_13;
  c_2.xyz = (c_2.xyz + tmpvar_7);
  highp float tmpvar_14;
  tmpvar_14 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_14));
  c_2.w = 1.0;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  mediump vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  highp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = tmpvar_1.xyz;
  tmpvar_5 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
  highp vec4 tmpvar_7;
  tmpvar_7 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_8;
  tmpvar_8[0] = unity_WorldToObject[0].xyz;
  tmpvar_8[1] = unity_WorldToObject[1].xyz;
  tmpvar_8[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_9;
  tmpvar_9 = normalize((_glesNormal * tmpvar_8));
  highp vec3 tmpvar_10;
  highp vec3 I_11;
  I_11 = (tmpvar_7.xyz - _WorldSpaceCameraPos);
  tmpvar_10 = (I_11 - (2.0 * (
    dot (tmpvar_9, I_11)
   * tmpvar_9)));
  tmpvar_2 = tmpvar_10;
  highp vec4 o_12;
  highp vec4 tmpvar_13;
  tmpvar_13 = (tmpvar_5 * 0.5);
  highp vec2 tmpvar_14;
  tmpvar_14.x = tmpvar_13.x;
  tmpvar_14.y = (tmpvar_13.y * _ProjectionParams.x);
  o_12.xy = (tmpvar_14 + tmpvar_13.w);
  o_12.zw = tmpvar_5.zw;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  tmpvar_4.xyz = ((tmpvar_7.xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = tmpvar_1.xyz;
  tmpvar_4.w = (-((unity_MatrixV * 
    (unity_ObjectToWorld * tmpvar_15)
  ).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
  gl_Position = tmpvar_5;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_7.xyz;
  xlv_TEXCOORD3 = o_12;
  xlv_TEXCOORD4 = tmpvar_3;
  xlv_TEXCOORD5 = tmpvar_4;
  xlv_TEXCOORD6 = ((tmpvar_5.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform lowp vec4 unity_FogColor;
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
uniform sampler2D _LightBuffer;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp float xlv_TEXCOORD6;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  lowp vec3 lm_3;
  lowp vec4 lmtex_4;
  mediump vec4 light_5;
  highp vec3 tmpvar_6;
  tmpvar_6 = xlv_TEXCOORD1;
  lowp vec3 tmpvar_7;
  lowp vec4 reflcol_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_8 = (textureCube (_Cube, tmpvar_6) * tmpvar_9.w);
  tmpvar_7 = (reflcol_8.xyz * _ReflectColor.xyz);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2DProj (_LightBuffer, xlv_TEXCOORD3);
  light_5 = tmpvar_10;
  light_5 = -(log2(max (light_5, vec4(0.001, 0.001, 0.001, 0.001))));
  mediump vec4 tmpvar_11;
  tmpvar_11 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lmtex_4 = tmpvar_11;
  mediump vec3 tmpvar_12;
  tmpvar_12 = (unity_Lightmap_HDR.x * lmtex_4.xyz);
  lm_3 = tmpvar_12;
  light_5.xyz = (light_5.xyz + lm_3);
  lowp vec4 c_13;
  c_13.xyz = ((tmpvar_9 * _Color).xyz * light_5.xyz);
  c_13.w = (reflcol_8.w * _ReflectColor.w);
  c_2 = c_13;
  c_2.xyz = (c_2.xyz + tmpvar_7);
  highp float tmpvar_14;
  tmpvar_14 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_14));
  c_2.w = 1.0;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  mediump vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  highp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = tmpvar_1.xyz;
  tmpvar_5 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
  highp vec4 tmpvar_7;
  tmpvar_7 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_8;
  tmpvar_8[0] = unity_WorldToObject[0].xyz;
  tmpvar_8[1] = unity_WorldToObject[1].xyz;
  tmpvar_8[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_9;
  tmpvar_9 = normalize((_glesNormal * tmpvar_8));
  highp vec3 tmpvar_10;
  highp vec3 I_11;
  I_11 = (tmpvar_7.xyz - _WorldSpaceCameraPos);
  tmpvar_10 = (I_11 - (2.0 * (
    dot (tmpvar_9, I_11)
   * tmpvar_9)));
  tmpvar_2 = tmpvar_10;
  highp vec4 o_12;
  highp vec4 tmpvar_13;
  tmpvar_13 = (tmpvar_5 * 0.5);
  highp vec2 tmpvar_14;
  tmpvar_14.x = tmpvar_13.x;
  tmpvar_14.y = (tmpvar_13.y * _ProjectionParams.x);
  o_12.xy = (tmpvar_14 + tmpvar_13.w);
  o_12.zw = tmpvar_5.zw;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  tmpvar_4.xyz = ((tmpvar_7.xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = tmpvar_1.xyz;
  tmpvar_4.w = (-((unity_MatrixV * 
    (unity_ObjectToWorld * tmpvar_15)
  ).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
  gl_Position = tmpvar_5;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_7.xyz;
  xlv_TEXCOORD3 = o_12;
  xlv_TEXCOORD4 = tmpvar_3;
  xlv_TEXCOORD5 = tmpvar_4;
  xlv_TEXCOORD6 = ((tmpvar_5.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform lowp vec4 unity_FogColor;
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
uniform sampler2D _LightBuffer;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp float xlv_TEXCOORD6;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  lowp vec3 lm_3;
  lowp vec4 lmtex_4;
  mediump vec4 light_5;
  highp vec3 tmpvar_6;
  tmpvar_6 = xlv_TEXCOORD1;
  lowp vec3 tmpvar_7;
  lowp vec4 reflcol_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_8 = (textureCube (_Cube, tmpvar_6) * tmpvar_9.w);
  tmpvar_7 = (reflcol_8.xyz * _ReflectColor.xyz);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2DProj (_LightBuffer, xlv_TEXCOORD3);
  light_5 = tmpvar_10;
  light_5 = -(log2(max (light_5, vec4(0.001, 0.001, 0.001, 0.001))));
  mediump vec4 tmpvar_11;
  tmpvar_11 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lmtex_4 = tmpvar_11;
  mediump vec3 tmpvar_12;
  tmpvar_12 = (unity_Lightmap_HDR.x * lmtex_4.xyz);
  lm_3 = tmpvar_12;
  light_5.xyz = (light_5.xyz + lm_3);
  lowp vec4 c_13;
  c_13.xyz = ((tmpvar_9 * _Color).xyz * light_5.xyz);
  c_13.w = (reflcol_8.w * _ReflectColor.w);
  c_2 = c_13;
  c_2.xyz = (c_2.xyz + tmpvar_7);
  highp float tmpvar_14;
  tmpvar_14 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_14));
  c_2.w = 1.0;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  mediump vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  highp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = tmpvar_1.xyz;
  tmpvar_5 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
  highp vec4 tmpvar_7;
  tmpvar_7 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_8;
  tmpvar_8[0] = unity_WorldToObject[0].xyz;
  tmpvar_8[1] = unity_WorldToObject[1].xyz;
  tmpvar_8[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_9;
  tmpvar_9 = normalize((_glesNormal * tmpvar_8));
  highp vec3 tmpvar_10;
  highp vec3 I_11;
  I_11 = (tmpvar_7.xyz - _WorldSpaceCameraPos);
  tmpvar_10 = (I_11 - (2.0 * (
    dot (tmpvar_9, I_11)
   * tmpvar_9)));
  tmpvar_2 = tmpvar_10;
  highp vec4 o_12;
  highp vec4 tmpvar_13;
  tmpvar_13 = (tmpvar_5 * 0.5);
  highp vec2 tmpvar_14;
  tmpvar_14.x = tmpvar_13.x;
  tmpvar_14.y = (tmpvar_13.y * _ProjectionParams.x);
  o_12.xy = (tmpvar_14 + tmpvar_13.w);
  o_12.zw = tmpvar_5.zw;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  tmpvar_4.xyz = ((tmpvar_7.xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = tmpvar_1.xyz;
  tmpvar_4.w = (-((unity_MatrixV * 
    (unity_ObjectToWorld * tmpvar_15)
  ).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
  gl_Position = tmpvar_5;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_7.xyz;
  xlv_TEXCOORD3 = o_12;
  xlv_TEXCOORD4 = tmpvar_3;
  xlv_TEXCOORD5 = tmpvar_4;
  xlv_TEXCOORD6 = ((tmpvar_5.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform lowp vec4 unity_FogColor;
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
uniform sampler2D _LightBuffer;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp float xlv_TEXCOORD6;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  lowp vec3 lm_3;
  lowp vec4 lmtex_4;
  mediump vec4 light_5;
  highp vec3 tmpvar_6;
  tmpvar_6 = xlv_TEXCOORD1;
  lowp vec3 tmpvar_7;
  lowp vec4 reflcol_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_8 = (textureCube (_Cube, tmpvar_6) * tmpvar_9.w);
  tmpvar_7 = (reflcol_8.xyz * _ReflectColor.xyz);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2DProj (_LightBuffer, xlv_TEXCOORD3);
  light_5 = tmpvar_10;
  light_5 = -(log2(max (light_5, vec4(0.001, 0.001, 0.001, 0.001))));
  mediump vec4 tmpvar_11;
  tmpvar_11 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lmtex_4 = tmpvar_11;
  mediump vec3 tmpvar_12;
  tmpvar_12 = (unity_Lightmap_HDR.x * lmtex_4.xyz);
  lm_3 = tmpvar_12;
  light_5.xyz = (light_5.xyz + lm_3);
  lowp vec4 c_13;
  c_13.xyz = ((tmpvar_9 * _Color).xyz * light_5.xyz);
  c_13.w = (reflcol_8.w * _ReflectColor.w);
  c_2 = c_13;
  c_2.xyz = (c_2.xyz + tmpvar_7);
  highp float tmpvar_14;
  tmpvar_14 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_14));
  c_2.w = 1.0;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "LIGHTPROBE_SH" "FOG_LINEAR" "UNITY_HDR_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec3 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  tmpvar_5.w = 1.0;
  tmpvar_5.xyz = _glesVertex.xyz;
  tmpvar_4 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
  highp vec3 tmpvar_6;
  tmpvar_6 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_7;
  tmpvar_7[0] = unity_WorldToObject[0].xyz;
  tmpvar_7[1] = unity_WorldToObject[1].xyz;
  tmpvar_7[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_glesNormal * tmpvar_7));
  highp vec3 tmpvar_9;
  highp vec3 I_10;
  I_10 = (tmpvar_6 - _WorldSpaceCameraPos);
  tmpvar_9 = (I_10 - (2.0 * (
    dot (tmpvar_8, I_10)
   * tmpvar_8)));
  tmpvar_1 = tmpvar_9;
  highp vec4 o_11;
  highp vec4 tmpvar_12;
  tmpvar_12 = (tmpvar_4 * 0.5);
  highp vec2 tmpvar_13;
  tmpvar_13.x = tmpvar_12.x;
  tmpvar_13.y = (tmpvar_12.y * _ProjectionParams.x);
  o_11.xy = (tmpvar_13 + tmpvar_12.w);
  o_11.zw = tmpvar_4.zw;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_2.xy = vec2(0.0, 0.0);
  highp mat3 tmpvar_14;
  tmpvar_14[0] = unity_WorldToObject[0].xyz;
  tmpvar_14[1] = unity_WorldToObject[1].xyz;
  tmpvar_14[2] = unity_WorldToObject[2].xyz;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = normalize((_glesNormal * tmpvar_14));
  mediump vec4 normal_16;
  normal_16 = tmpvar_15;
  mediump vec3 res_17;
  mediump vec3 x_18;
  x_18.x = dot (unity_SHAr, normal_16);
  x_18.y = dot (unity_SHAg, normal_16);
  x_18.z = dot (unity_SHAb, normal_16);
  mediump vec3 x1_19;
  mediump vec4 tmpvar_20;
  tmpvar_20 = (normal_16.xyzz * normal_16.yzzx);
  x1_19.x = dot (unity_SHBr, tmpvar_20);
  x1_19.y = dot (unity_SHBg, tmpvar_20);
  x1_19.z = dot (unity_SHBb, tmpvar_20);
  res_17 = (x_18 + (x1_19 + (unity_SHC.xyz * 
    ((normal_16.x * normal_16.x) - (normal_16.y * normal_16.y))
  )));
  mediump vec3 tmpvar_21;
  tmpvar_21 = max (((1.055 * 
    pow (max (res_17, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_17 = tmpvar_21;
  tmpvar_3 = tmpvar_21;
  gl_Position = tmpvar_4;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = o_11;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = tmpvar_3;
  xlv_TEXCOORD6 = ((tmpvar_4.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform lowp vec4 unity_FogColor;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
uniform sampler2D _LightBuffer;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  highp vec3 tmpvar_4;
  tmpvar_4 = xlv_TEXCOORD1;
  lowp vec3 tmpvar_5;
  lowp vec4 reflcol_6;
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_6 = (textureCube (_Cube, tmpvar_4) * tmpvar_7.w);
  tmpvar_5 = (reflcol_6.xyz * _ReflectColor.xyz);
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2DProj (_LightBuffer, xlv_TEXCOORD3);
  light_3 = tmpvar_8;
  mediump vec4 tmpvar_9;
  tmpvar_9 = max (light_3, vec4(0.001, 0.001, 0.001, 0.001));
  light_3.w = tmpvar_9.w;
  light_3.xyz = (tmpvar_9.xyz + xlv_TEXCOORD5);
  lowp vec4 c_10;
  c_10.xyz = ((tmpvar_7 * _Color).xyz * light_3.xyz);
  c_10.w = (reflcol_6.w * _ReflectColor.w);
  c_2 = c_10;
  c_2.xyz = (c_2.xyz + tmpvar_5);
  highp float tmpvar_11;
  tmpvar_11 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_11));
  c_2.w = 1.0;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTPROBE_SH" "FOG_LINEAR" "UNITY_HDR_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec3 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  tmpvar_5.w = 1.0;
  tmpvar_5.xyz = _glesVertex.xyz;
  tmpvar_4 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
  highp vec3 tmpvar_6;
  tmpvar_6 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_7;
  tmpvar_7[0] = unity_WorldToObject[0].xyz;
  tmpvar_7[1] = unity_WorldToObject[1].xyz;
  tmpvar_7[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_glesNormal * tmpvar_7));
  highp vec3 tmpvar_9;
  highp vec3 I_10;
  I_10 = (tmpvar_6 - _WorldSpaceCameraPos);
  tmpvar_9 = (I_10 - (2.0 * (
    dot (tmpvar_8, I_10)
   * tmpvar_8)));
  tmpvar_1 = tmpvar_9;
  highp vec4 o_11;
  highp vec4 tmpvar_12;
  tmpvar_12 = (tmpvar_4 * 0.5);
  highp vec2 tmpvar_13;
  tmpvar_13.x = tmpvar_12.x;
  tmpvar_13.y = (tmpvar_12.y * _ProjectionParams.x);
  o_11.xy = (tmpvar_13 + tmpvar_12.w);
  o_11.zw = tmpvar_4.zw;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_2.xy = vec2(0.0, 0.0);
  highp mat3 tmpvar_14;
  tmpvar_14[0] = unity_WorldToObject[0].xyz;
  tmpvar_14[1] = unity_WorldToObject[1].xyz;
  tmpvar_14[2] = unity_WorldToObject[2].xyz;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = normalize((_glesNormal * tmpvar_14));
  mediump vec4 normal_16;
  normal_16 = tmpvar_15;
  mediump vec3 res_17;
  mediump vec3 x_18;
  x_18.x = dot (unity_SHAr, normal_16);
  x_18.y = dot (unity_SHAg, normal_16);
  x_18.z = dot (unity_SHAb, normal_16);
  mediump vec3 x1_19;
  mediump vec4 tmpvar_20;
  tmpvar_20 = (normal_16.xyzz * normal_16.yzzx);
  x1_19.x = dot (unity_SHBr, tmpvar_20);
  x1_19.y = dot (unity_SHBg, tmpvar_20);
  x1_19.z = dot (unity_SHBb, tmpvar_20);
  res_17 = (x_18 + (x1_19 + (unity_SHC.xyz * 
    ((normal_16.x * normal_16.x) - (normal_16.y * normal_16.y))
  )));
  mediump vec3 tmpvar_21;
  tmpvar_21 = max (((1.055 * 
    pow (max (res_17, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_17 = tmpvar_21;
  tmpvar_3 = tmpvar_21;
  gl_Position = tmpvar_4;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = o_11;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = tmpvar_3;
  xlv_TEXCOORD6 = ((tmpvar_4.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform lowp vec4 unity_FogColor;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
uniform sampler2D _LightBuffer;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  highp vec3 tmpvar_4;
  tmpvar_4 = xlv_TEXCOORD1;
  lowp vec3 tmpvar_5;
  lowp vec4 reflcol_6;
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_6 = (textureCube (_Cube, tmpvar_4) * tmpvar_7.w);
  tmpvar_5 = (reflcol_6.xyz * _ReflectColor.xyz);
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2DProj (_LightBuffer, xlv_TEXCOORD3);
  light_3 = tmpvar_8;
  mediump vec4 tmpvar_9;
  tmpvar_9 = max (light_3, vec4(0.001, 0.001, 0.001, 0.001));
  light_3.w = tmpvar_9.w;
  light_3.xyz = (tmpvar_9.xyz + xlv_TEXCOORD5);
  lowp vec4 c_10;
  c_10.xyz = ((tmpvar_7 * _Color).xyz * light_3.xyz);
  c_10.w = (reflcol_6.w * _ReflectColor.w);
  c_2 = c_10;
  c_2.xyz = (c_2.xyz + tmpvar_5);
  highp float tmpvar_11;
  tmpvar_11 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_11));
  c_2.w = 1.0;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTPROBE_SH" "FOG_LINEAR" "UNITY_HDR_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec3 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  tmpvar_5.w = 1.0;
  tmpvar_5.xyz = _glesVertex.xyz;
  tmpvar_4 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
  highp vec3 tmpvar_6;
  tmpvar_6 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_7;
  tmpvar_7[0] = unity_WorldToObject[0].xyz;
  tmpvar_7[1] = unity_WorldToObject[1].xyz;
  tmpvar_7[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_glesNormal * tmpvar_7));
  highp vec3 tmpvar_9;
  highp vec3 I_10;
  I_10 = (tmpvar_6 - _WorldSpaceCameraPos);
  tmpvar_9 = (I_10 - (2.0 * (
    dot (tmpvar_8, I_10)
   * tmpvar_8)));
  tmpvar_1 = tmpvar_9;
  highp vec4 o_11;
  highp vec4 tmpvar_12;
  tmpvar_12 = (tmpvar_4 * 0.5);
  highp vec2 tmpvar_13;
  tmpvar_13.x = tmpvar_12.x;
  tmpvar_13.y = (tmpvar_12.y * _ProjectionParams.x);
  o_11.xy = (tmpvar_13 + tmpvar_12.w);
  o_11.zw = tmpvar_4.zw;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_2.xy = vec2(0.0, 0.0);
  highp mat3 tmpvar_14;
  tmpvar_14[0] = unity_WorldToObject[0].xyz;
  tmpvar_14[1] = unity_WorldToObject[1].xyz;
  tmpvar_14[2] = unity_WorldToObject[2].xyz;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = normalize((_glesNormal * tmpvar_14));
  mediump vec4 normal_16;
  normal_16 = tmpvar_15;
  mediump vec3 res_17;
  mediump vec3 x_18;
  x_18.x = dot (unity_SHAr, normal_16);
  x_18.y = dot (unity_SHAg, normal_16);
  x_18.z = dot (unity_SHAb, normal_16);
  mediump vec3 x1_19;
  mediump vec4 tmpvar_20;
  tmpvar_20 = (normal_16.xyzz * normal_16.yzzx);
  x1_19.x = dot (unity_SHBr, tmpvar_20);
  x1_19.y = dot (unity_SHBg, tmpvar_20);
  x1_19.z = dot (unity_SHBb, tmpvar_20);
  res_17 = (x_18 + (x1_19 + (unity_SHC.xyz * 
    ((normal_16.x * normal_16.x) - (normal_16.y * normal_16.y))
  )));
  mediump vec3 tmpvar_21;
  tmpvar_21 = max (((1.055 * 
    pow (max (res_17, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_17 = tmpvar_21;
  tmpvar_3 = tmpvar_21;
  gl_Position = tmpvar_4;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = o_11;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = tmpvar_3;
  xlv_TEXCOORD6 = ((tmpvar_4.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform lowp vec4 unity_FogColor;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
uniform sampler2D _LightBuffer;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  highp vec3 tmpvar_4;
  tmpvar_4 = xlv_TEXCOORD1;
  lowp vec3 tmpvar_5;
  lowp vec4 reflcol_6;
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_6 = (textureCube (_Cube, tmpvar_4) * tmpvar_7.w);
  tmpvar_5 = (reflcol_6.xyz * _ReflectColor.xyz);
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2DProj (_LightBuffer, xlv_TEXCOORD3);
  light_3 = tmpvar_8;
  mediump vec4 tmpvar_9;
  tmpvar_9 = max (light_3, vec4(0.001, 0.001, 0.001, 0.001));
  light_3.w = tmpvar_9.w;
  light_3.xyz = (tmpvar_9.xyz + xlv_TEXCOORD5);
  lowp vec4 c_10;
  c_10.xyz = ((tmpvar_7 * _Color).xyz * light_3.xyz);
  c_10.w = (reflcol_6.w * _ReflectColor.w);
  c_2 = c_10;
  c_2.xyz = (c_2.xyz + tmpvar_5);
  highp float tmpvar_11;
  tmpvar_11 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_11));
  c_2.w = 1.0;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "SHADOWS_SHADOWMASK" "FOG_LINEAR" "UNITY_HDR_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec3 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  tmpvar_5.w = 1.0;
  tmpvar_5.xyz = _glesVertex.xyz;
  tmpvar_4 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
  highp vec3 tmpvar_6;
  tmpvar_6 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_7;
  tmpvar_7[0] = unity_WorldToObject[0].xyz;
  tmpvar_7[1] = unity_WorldToObject[1].xyz;
  tmpvar_7[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_glesNormal * tmpvar_7));
  highp vec3 tmpvar_9;
  highp vec3 I_10;
  I_10 = (tmpvar_6 - _WorldSpaceCameraPos);
  tmpvar_9 = (I_10 - (2.0 * (
    dot (tmpvar_8, I_10)
   * tmpvar_8)));
  tmpvar_1 = tmpvar_9;
  highp vec4 o_11;
  highp vec4 tmpvar_12;
  tmpvar_12 = (tmpvar_4 * 0.5);
  highp vec2 tmpvar_13;
  tmpvar_13.x = tmpvar_12.x;
  tmpvar_13.y = (tmpvar_12.y * _ProjectionParams.x);
  o_11.xy = (tmpvar_13 + tmpvar_12.w);
  o_11.zw = tmpvar_4.zw;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_2.xy = vec2(0.0, 0.0);
  highp mat3 tmpvar_14;
  tmpvar_14[0] = unity_WorldToObject[0].xyz;
  tmpvar_14[1] = unity_WorldToObject[1].xyz;
  tmpvar_14[2] = unity_WorldToObject[2].xyz;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = normalize((_glesNormal * tmpvar_14));
  mediump vec4 normal_16;
  normal_16 = tmpvar_15;
  mediump vec3 res_17;
  mediump vec3 x_18;
  x_18.x = dot (unity_SHAr, normal_16);
  x_18.y = dot (unity_SHAg, normal_16);
  x_18.z = dot (unity_SHAb, normal_16);
  mediump vec3 x1_19;
  mediump vec4 tmpvar_20;
  tmpvar_20 = (normal_16.xyzz * normal_16.yzzx);
  x1_19.x = dot (unity_SHBr, tmpvar_20);
  x1_19.y = dot (unity_SHBg, tmpvar_20);
  x1_19.z = dot (unity_SHBb, tmpvar_20);
  res_17 = (x_18 + (x1_19 + (unity_SHC.xyz * 
    ((normal_16.x * normal_16.x) - (normal_16.y * normal_16.y))
  )));
  mediump vec3 tmpvar_21;
  tmpvar_21 = max (((1.055 * 
    pow (max (res_17, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_17 = tmpvar_21;
  tmpvar_3 = tmpvar_21;
  gl_Position = tmpvar_4;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = o_11;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = tmpvar_3;
  xlv_TEXCOORD6 = ((tmpvar_4.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform lowp vec4 unity_FogColor;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
uniform sampler2D _LightBuffer;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  highp vec3 tmpvar_4;
  tmpvar_4 = xlv_TEXCOORD1;
  lowp vec3 tmpvar_5;
  lowp vec4 reflcol_6;
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_6 = (textureCube (_Cube, tmpvar_4) * tmpvar_7.w);
  tmpvar_5 = (reflcol_6.xyz * _ReflectColor.xyz);
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2DProj (_LightBuffer, xlv_TEXCOORD3);
  light_3 = tmpvar_8;
  mediump vec4 tmpvar_9;
  tmpvar_9 = max (light_3, vec4(0.001, 0.001, 0.001, 0.001));
  light_3.w = tmpvar_9.w;
  light_3.xyz = (tmpvar_9.xyz + xlv_TEXCOORD5);
  lowp vec4 c_10;
  c_10.xyz = ((tmpvar_7 * _Color).xyz * light_3.xyz);
  c_10.w = (reflcol_6.w * _ReflectColor.w);
  c_2 = c_10;
  c_2.xyz = (c_2.xyz + tmpvar_5);
  highp float tmpvar_11;
  tmpvar_11 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_11));
  c_2.w = 1.0;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "SHADOWS_SHADOWMASK" "FOG_LINEAR" "UNITY_HDR_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec3 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  tmpvar_5.w = 1.0;
  tmpvar_5.xyz = _glesVertex.xyz;
  tmpvar_4 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
  highp vec3 tmpvar_6;
  tmpvar_6 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_7;
  tmpvar_7[0] = unity_WorldToObject[0].xyz;
  tmpvar_7[1] = unity_WorldToObject[1].xyz;
  tmpvar_7[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_glesNormal * tmpvar_7));
  highp vec3 tmpvar_9;
  highp vec3 I_10;
  I_10 = (tmpvar_6 - _WorldSpaceCameraPos);
  tmpvar_9 = (I_10 - (2.0 * (
    dot (tmpvar_8, I_10)
   * tmpvar_8)));
  tmpvar_1 = tmpvar_9;
  highp vec4 o_11;
  highp vec4 tmpvar_12;
  tmpvar_12 = (tmpvar_4 * 0.5);
  highp vec2 tmpvar_13;
  tmpvar_13.x = tmpvar_12.x;
  tmpvar_13.y = (tmpvar_12.y * _ProjectionParams.x);
  o_11.xy = (tmpvar_13 + tmpvar_12.w);
  o_11.zw = tmpvar_4.zw;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_2.xy = vec2(0.0, 0.0);
  highp mat3 tmpvar_14;
  tmpvar_14[0] = unity_WorldToObject[0].xyz;
  tmpvar_14[1] = unity_WorldToObject[1].xyz;
  tmpvar_14[2] = unity_WorldToObject[2].xyz;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = normalize((_glesNormal * tmpvar_14));
  mediump vec4 normal_16;
  normal_16 = tmpvar_15;
  mediump vec3 res_17;
  mediump vec3 x_18;
  x_18.x = dot (unity_SHAr, normal_16);
  x_18.y = dot (unity_SHAg, normal_16);
  x_18.z = dot (unity_SHAb, normal_16);
  mediump vec3 x1_19;
  mediump vec4 tmpvar_20;
  tmpvar_20 = (normal_16.xyzz * normal_16.yzzx);
  x1_19.x = dot (unity_SHBr, tmpvar_20);
  x1_19.y = dot (unity_SHBg, tmpvar_20);
  x1_19.z = dot (unity_SHBb, tmpvar_20);
  res_17 = (x_18 + (x1_19 + (unity_SHC.xyz * 
    ((normal_16.x * normal_16.x) - (normal_16.y * normal_16.y))
  )));
  mediump vec3 tmpvar_21;
  tmpvar_21 = max (((1.055 * 
    pow (max (res_17, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_17 = tmpvar_21;
  tmpvar_3 = tmpvar_21;
  gl_Position = tmpvar_4;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = o_11;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = tmpvar_3;
  xlv_TEXCOORD6 = ((tmpvar_4.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform lowp vec4 unity_FogColor;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
uniform sampler2D _LightBuffer;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  highp vec3 tmpvar_4;
  tmpvar_4 = xlv_TEXCOORD1;
  lowp vec3 tmpvar_5;
  lowp vec4 reflcol_6;
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_6 = (textureCube (_Cube, tmpvar_4) * tmpvar_7.w);
  tmpvar_5 = (reflcol_6.xyz * _ReflectColor.xyz);
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2DProj (_LightBuffer, xlv_TEXCOORD3);
  light_3 = tmpvar_8;
  mediump vec4 tmpvar_9;
  tmpvar_9 = max (light_3, vec4(0.001, 0.001, 0.001, 0.001));
  light_3.w = tmpvar_9.w;
  light_3.xyz = (tmpvar_9.xyz + xlv_TEXCOORD5);
  lowp vec4 c_10;
  c_10.xyz = ((tmpvar_7 * _Color).xyz * light_3.xyz);
  c_10.w = (reflcol_6.w * _ReflectColor.w);
  c_2 = c_10;
  c_2.xyz = (c_2.xyz + tmpvar_5);
  highp float tmpvar_11;
  tmpvar_11 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_11));
  c_2.w = 1.0;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "SHADOWS_SHADOWMASK" "FOG_LINEAR" "UNITY_HDR_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec3 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  tmpvar_5.w = 1.0;
  tmpvar_5.xyz = _glesVertex.xyz;
  tmpvar_4 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
  highp vec3 tmpvar_6;
  tmpvar_6 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_7;
  tmpvar_7[0] = unity_WorldToObject[0].xyz;
  tmpvar_7[1] = unity_WorldToObject[1].xyz;
  tmpvar_7[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_glesNormal * tmpvar_7));
  highp vec3 tmpvar_9;
  highp vec3 I_10;
  I_10 = (tmpvar_6 - _WorldSpaceCameraPos);
  tmpvar_9 = (I_10 - (2.0 * (
    dot (tmpvar_8, I_10)
   * tmpvar_8)));
  tmpvar_1 = tmpvar_9;
  highp vec4 o_11;
  highp vec4 tmpvar_12;
  tmpvar_12 = (tmpvar_4 * 0.5);
  highp vec2 tmpvar_13;
  tmpvar_13.x = tmpvar_12.x;
  tmpvar_13.y = (tmpvar_12.y * _ProjectionParams.x);
  o_11.xy = (tmpvar_13 + tmpvar_12.w);
  o_11.zw = tmpvar_4.zw;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_2.xy = vec2(0.0, 0.0);
  highp mat3 tmpvar_14;
  tmpvar_14[0] = unity_WorldToObject[0].xyz;
  tmpvar_14[1] = unity_WorldToObject[1].xyz;
  tmpvar_14[2] = unity_WorldToObject[2].xyz;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = normalize((_glesNormal * tmpvar_14));
  mediump vec4 normal_16;
  normal_16 = tmpvar_15;
  mediump vec3 res_17;
  mediump vec3 x_18;
  x_18.x = dot (unity_SHAr, normal_16);
  x_18.y = dot (unity_SHAg, normal_16);
  x_18.z = dot (unity_SHAb, normal_16);
  mediump vec3 x1_19;
  mediump vec4 tmpvar_20;
  tmpvar_20 = (normal_16.xyzz * normal_16.yzzx);
  x1_19.x = dot (unity_SHBr, tmpvar_20);
  x1_19.y = dot (unity_SHBg, tmpvar_20);
  x1_19.z = dot (unity_SHBb, tmpvar_20);
  res_17 = (x_18 + (x1_19 + (unity_SHC.xyz * 
    ((normal_16.x * normal_16.x) - (normal_16.y * normal_16.y))
  )));
  mediump vec3 tmpvar_21;
  tmpvar_21 = max (((1.055 * 
    pow (max (res_17, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_17 = tmpvar_21;
  tmpvar_3 = tmpvar_21;
  gl_Position = tmpvar_4;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = o_11;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = tmpvar_3;
  xlv_TEXCOORD6 = ((tmpvar_4.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform lowp vec4 unity_FogColor;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
uniform sampler2D _LightBuffer;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  highp vec3 tmpvar_4;
  tmpvar_4 = xlv_TEXCOORD1;
  lowp vec3 tmpvar_5;
  lowp vec4 reflcol_6;
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_6 = (textureCube (_Cube, tmpvar_4) * tmpvar_7.w);
  tmpvar_5 = (reflcol_6.xyz * _ReflectColor.xyz);
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2DProj (_LightBuffer, xlv_TEXCOORD3);
  light_3 = tmpvar_8;
  mediump vec4 tmpvar_9;
  tmpvar_9 = max (light_3, vec4(0.001, 0.001, 0.001, 0.001));
  light_3.w = tmpvar_9.w;
  light_3.xyz = (tmpvar_9.xyz + xlv_TEXCOORD5);
  lowp vec4 c_10;
  c_10.xyz = ((tmpvar_7 * _Color).xyz * light_3.xyz);
  c_10.w = (reflcol_6.w * _ReflectColor.w);
  c_2 = c_10;
  c_2.xyz = (c_2.xyz + tmpvar_5);
  highp float tmpvar_11;
  tmpvar_11 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_11));
  c_2.w = 1.0;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" "UNITY_HDR_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec3 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  tmpvar_5.w = 1.0;
  tmpvar_5.xyz = _glesVertex.xyz;
  tmpvar_4 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
  highp vec3 tmpvar_6;
  tmpvar_6 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_7;
  tmpvar_7[0] = unity_WorldToObject[0].xyz;
  tmpvar_7[1] = unity_WorldToObject[1].xyz;
  tmpvar_7[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_glesNormal * tmpvar_7));
  highp vec3 tmpvar_9;
  highp vec3 I_10;
  I_10 = (tmpvar_6 - _WorldSpaceCameraPos);
  tmpvar_9 = (I_10 - (2.0 * (
    dot (tmpvar_8, I_10)
   * tmpvar_8)));
  tmpvar_1 = tmpvar_9;
  highp vec4 o_11;
  highp vec4 tmpvar_12;
  tmpvar_12 = (tmpvar_4 * 0.5);
  highp vec2 tmpvar_13;
  tmpvar_13.x = tmpvar_12.x;
  tmpvar_13.y = (tmpvar_12.y * _ProjectionParams.x);
  o_11.xy = (tmpvar_13 + tmpvar_12.w);
  o_11.zw = tmpvar_4.zw;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_2.xy = vec2(0.0, 0.0);
  highp mat3 tmpvar_14;
  tmpvar_14[0] = unity_WorldToObject[0].xyz;
  tmpvar_14[1] = unity_WorldToObject[1].xyz;
  tmpvar_14[2] = unity_WorldToObject[2].xyz;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = normalize((_glesNormal * tmpvar_14));
  mediump vec4 normal_16;
  normal_16 = tmpvar_15;
  mediump vec3 res_17;
  mediump vec3 x_18;
  x_18.x = dot (unity_SHAr, normal_16);
  x_18.y = dot (unity_SHAg, normal_16);
  x_18.z = dot (unity_SHAb, normal_16);
  mediump vec3 x1_19;
  mediump vec4 tmpvar_20;
  tmpvar_20 = (normal_16.xyzz * normal_16.yzzx);
  x1_19.x = dot (unity_SHBr, tmpvar_20);
  x1_19.y = dot (unity_SHBg, tmpvar_20);
  x1_19.z = dot (unity_SHBb, tmpvar_20);
  res_17 = (x_18 + (x1_19 + (unity_SHC.xyz * 
    ((normal_16.x * normal_16.x) - (normal_16.y * normal_16.y))
  )));
  mediump vec3 tmpvar_21;
  tmpvar_21 = max (((1.055 * 
    pow (max (res_17, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_17 = tmpvar_21;
  tmpvar_3 = tmpvar_21;
  gl_Position = tmpvar_4;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = o_11;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = tmpvar_3;
  xlv_TEXCOORD6 = ((tmpvar_4.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform lowp vec4 unity_FogColor;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
uniform sampler2D _LightBuffer;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  highp vec3 tmpvar_4;
  tmpvar_4 = xlv_TEXCOORD1;
  lowp vec3 tmpvar_5;
  lowp vec4 reflcol_6;
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_6 = (textureCube (_Cube, tmpvar_4) * tmpvar_7.w);
  tmpvar_5 = (reflcol_6.xyz * _ReflectColor.xyz);
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2DProj (_LightBuffer, xlv_TEXCOORD3);
  light_3 = tmpvar_8;
  mediump vec4 tmpvar_9;
  tmpvar_9 = max (light_3, vec4(0.001, 0.001, 0.001, 0.001));
  light_3.w = tmpvar_9.w;
  light_3.xyz = (tmpvar_9.xyz + xlv_TEXCOORD5);
  lowp vec4 c_10;
  c_10.xyz = ((tmpvar_7 * _Color).xyz * light_3.xyz);
  c_10.w = (reflcol_6.w * _ReflectColor.w);
  c_2 = c_10;
  c_2.xyz = (c_2.xyz + tmpvar_5);
  highp float tmpvar_11;
  tmpvar_11 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_11));
  c_2.w = 1.0;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" "UNITY_HDR_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec3 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  tmpvar_5.w = 1.0;
  tmpvar_5.xyz = _glesVertex.xyz;
  tmpvar_4 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
  highp vec3 tmpvar_6;
  tmpvar_6 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_7;
  tmpvar_7[0] = unity_WorldToObject[0].xyz;
  tmpvar_7[1] = unity_WorldToObject[1].xyz;
  tmpvar_7[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_glesNormal * tmpvar_7));
  highp vec3 tmpvar_9;
  highp vec3 I_10;
  I_10 = (tmpvar_6 - _WorldSpaceCameraPos);
  tmpvar_9 = (I_10 - (2.0 * (
    dot (tmpvar_8, I_10)
   * tmpvar_8)));
  tmpvar_1 = tmpvar_9;
  highp vec4 o_11;
  highp vec4 tmpvar_12;
  tmpvar_12 = (tmpvar_4 * 0.5);
  highp vec2 tmpvar_13;
  tmpvar_13.x = tmpvar_12.x;
  tmpvar_13.y = (tmpvar_12.y * _ProjectionParams.x);
  o_11.xy = (tmpvar_13 + tmpvar_12.w);
  o_11.zw = tmpvar_4.zw;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_2.xy = vec2(0.0, 0.0);
  highp mat3 tmpvar_14;
  tmpvar_14[0] = unity_WorldToObject[0].xyz;
  tmpvar_14[1] = unity_WorldToObject[1].xyz;
  tmpvar_14[2] = unity_WorldToObject[2].xyz;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = normalize((_glesNormal * tmpvar_14));
  mediump vec4 normal_16;
  normal_16 = tmpvar_15;
  mediump vec3 res_17;
  mediump vec3 x_18;
  x_18.x = dot (unity_SHAr, normal_16);
  x_18.y = dot (unity_SHAg, normal_16);
  x_18.z = dot (unity_SHAb, normal_16);
  mediump vec3 x1_19;
  mediump vec4 tmpvar_20;
  tmpvar_20 = (normal_16.xyzz * normal_16.yzzx);
  x1_19.x = dot (unity_SHBr, tmpvar_20);
  x1_19.y = dot (unity_SHBg, tmpvar_20);
  x1_19.z = dot (unity_SHBb, tmpvar_20);
  res_17 = (x_18 + (x1_19 + (unity_SHC.xyz * 
    ((normal_16.x * normal_16.x) - (normal_16.y * normal_16.y))
  )));
  mediump vec3 tmpvar_21;
  tmpvar_21 = max (((1.055 * 
    pow (max (res_17, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_17 = tmpvar_21;
  tmpvar_3 = tmpvar_21;
  gl_Position = tmpvar_4;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = o_11;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = tmpvar_3;
  xlv_TEXCOORD6 = ((tmpvar_4.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform lowp vec4 unity_FogColor;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
uniform sampler2D _LightBuffer;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  highp vec3 tmpvar_4;
  tmpvar_4 = xlv_TEXCOORD1;
  lowp vec3 tmpvar_5;
  lowp vec4 reflcol_6;
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_6 = (textureCube (_Cube, tmpvar_4) * tmpvar_7.w);
  tmpvar_5 = (reflcol_6.xyz * _ReflectColor.xyz);
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2DProj (_LightBuffer, xlv_TEXCOORD3);
  light_3 = tmpvar_8;
  mediump vec4 tmpvar_9;
  tmpvar_9 = max (light_3, vec4(0.001, 0.001, 0.001, 0.001));
  light_3.w = tmpvar_9.w;
  light_3.xyz = (tmpvar_9.xyz + xlv_TEXCOORD5);
  lowp vec4 c_10;
  c_10.xyz = ((tmpvar_7 * _Color).xyz * light_3.xyz);
  c_10.w = (reflcol_6.w * _ReflectColor.w);
  c_2 = c_10;
  c_2.xyz = (c_2.xyz + tmpvar_5);
  highp float tmpvar_11;
  tmpvar_11 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_11));
  c_2.w = 1.0;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" "UNITY_HDR_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec3 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  tmpvar_5.w = 1.0;
  tmpvar_5.xyz = _glesVertex.xyz;
  tmpvar_4 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
  highp vec3 tmpvar_6;
  tmpvar_6 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_7;
  tmpvar_7[0] = unity_WorldToObject[0].xyz;
  tmpvar_7[1] = unity_WorldToObject[1].xyz;
  tmpvar_7[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_glesNormal * tmpvar_7));
  highp vec3 tmpvar_9;
  highp vec3 I_10;
  I_10 = (tmpvar_6 - _WorldSpaceCameraPos);
  tmpvar_9 = (I_10 - (2.0 * (
    dot (tmpvar_8, I_10)
   * tmpvar_8)));
  tmpvar_1 = tmpvar_9;
  highp vec4 o_11;
  highp vec4 tmpvar_12;
  tmpvar_12 = (tmpvar_4 * 0.5);
  highp vec2 tmpvar_13;
  tmpvar_13.x = tmpvar_12.x;
  tmpvar_13.y = (tmpvar_12.y * _ProjectionParams.x);
  o_11.xy = (tmpvar_13 + tmpvar_12.w);
  o_11.zw = tmpvar_4.zw;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_2.xy = vec2(0.0, 0.0);
  highp mat3 tmpvar_14;
  tmpvar_14[0] = unity_WorldToObject[0].xyz;
  tmpvar_14[1] = unity_WorldToObject[1].xyz;
  tmpvar_14[2] = unity_WorldToObject[2].xyz;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = normalize((_glesNormal * tmpvar_14));
  mediump vec4 normal_16;
  normal_16 = tmpvar_15;
  mediump vec3 res_17;
  mediump vec3 x_18;
  x_18.x = dot (unity_SHAr, normal_16);
  x_18.y = dot (unity_SHAg, normal_16);
  x_18.z = dot (unity_SHAb, normal_16);
  mediump vec3 x1_19;
  mediump vec4 tmpvar_20;
  tmpvar_20 = (normal_16.xyzz * normal_16.yzzx);
  x1_19.x = dot (unity_SHBr, tmpvar_20);
  x1_19.y = dot (unity_SHBg, tmpvar_20);
  x1_19.z = dot (unity_SHBb, tmpvar_20);
  res_17 = (x_18 + (x1_19 + (unity_SHC.xyz * 
    ((normal_16.x * normal_16.x) - (normal_16.y * normal_16.y))
  )));
  mediump vec3 tmpvar_21;
  tmpvar_21 = max (((1.055 * 
    pow (max (res_17, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_17 = tmpvar_21;
  tmpvar_3 = tmpvar_21;
  gl_Position = tmpvar_4;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = o_11;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = tmpvar_3;
  xlv_TEXCOORD6 = ((tmpvar_4.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform lowp vec4 unity_FogColor;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
uniform sampler2D _LightBuffer;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  highp vec3 tmpvar_4;
  tmpvar_4 = xlv_TEXCOORD1;
  lowp vec3 tmpvar_5;
  lowp vec4 reflcol_6;
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_6 = (textureCube (_Cube, tmpvar_4) * tmpvar_7.w);
  tmpvar_5 = (reflcol_6.xyz * _ReflectColor.xyz);
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2DProj (_LightBuffer, xlv_TEXCOORD3);
  light_3 = tmpvar_8;
  mediump vec4 tmpvar_9;
  tmpvar_9 = max (light_3, vec4(0.001, 0.001, 0.001, 0.001));
  light_3.w = tmpvar_9.w;
  light_3.xyz = (tmpvar_9.xyz + xlv_TEXCOORD5);
  lowp vec4 c_10;
  c_10.xyz = ((tmpvar_7 * _Color).xyz * light_3.xyz);
  c_10.w = (reflcol_6.w * _ReflectColor.w);
  c_2 = c_10;
  c_2.xyz = (c_2.xyz + tmpvar_5);
  highp float tmpvar_11;
  tmpvar_11 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_11));
  c_2.w = 1.0;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "LIGHTMAP_ON" "FOG_LINEAR" "UNITY_HDR_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  mediump vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  highp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = tmpvar_1.xyz;
  tmpvar_5 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
  highp vec4 tmpvar_7;
  tmpvar_7 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_8;
  tmpvar_8[0] = unity_WorldToObject[0].xyz;
  tmpvar_8[1] = unity_WorldToObject[1].xyz;
  tmpvar_8[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_9;
  tmpvar_9 = normalize((_glesNormal * tmpvar_8));
  highp vec3 tmpvar_10;
  highp vec3 I_11;
  I_11 = (tmpvar_7.xyz - _WorldSpaceCameraPos);
  tmpvar_10 = (I_11 - (2.0 * (
    dot (tmpvar_9, I_11)
   * tmpvar_9)));
  tmpvar_2 = tmpvar_10;
  highp vec4 o_12;
  highp vec4 tmpvar_13;
  tmpvar_13 = (tmpvar_5 * 0.5);
  highp vec2 tmpvar_14;
  tmpvar_14.x = tmpvar_13.x;
  tmpvar_14.y = (tmpvar_13.y * _ProjectionParams.x);
  o_12.xy = (tmpvar_14 + tmpvar_13.w);
  o_12.zw = tmpvar_5.zw;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  tmpvar_4.xyz = ((tmpvar_7.xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = tmpvar_1.xyz;
  tmpvar_4.w = (-((unity_MatrixV * 
    (unity_ObjectToWorld * tmpvar_15)
  ).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
  gl_Position = tmpvar_5;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_7.xyz;
  xlv_TEXCOORD3 = o_12;
  xlv_TEXCOORD4 = tmpvar_3;
  xlv_TEXCOORD5 = tmpvar_4;
  xlv_TEXCOORD6 = ((tmpvar_5.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform lowp vec4 unity_FogColor;
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
uniform sampler2D _LightBuffer;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp float xlv_TEXCOORD6;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  lowp vec3 lm_3;
  lowp vec4 lmtex_4;
  mediump vec4 light_5;
  highp vec3 tmpvar_6;
  tmpvar_6 = xlv_TEXCOORD1;
  lowp vec3 tmpvar_7;
  lowp vec4 reflcol_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_8 = (textureCube (_Cube, tmpvar_6) * tmpvar_9.w);
  tmpvar_7 = (reflcol_8.xyz * _ReflectColor.xyz);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2DProj (_LightBuffer, xlv_TEXCOORD3);
  light_5 = tmpvar_10;
  mediump vec4 tmpvar_11;
  tmpvar_11 = max (light_5, vec4(0.001, 0.001, 0.001, 0.001));
  light_5.w = tmpvar_11.w;
  mediump vec4 tmpvar_12;
  tmpvar_12 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lmtex_4 = tmpvar_12;
  mediump vec3 tmpvar_13;
  tmpvar_13 = (unity_Lightmap_HDR.x * lmtex_4.xyz);
  lm_3 = tmpvar_13;
  light_5.xyz = (tmpvar_11.xyz + lm_3);
  lowp vec4 c_14;
  c_14.xyz = ((tmpvar_9 * _Color).xyz * light_5.xyz);
  c_14.w = (reflcol_8.w * _ReflectColor.w);
  c_2 = c_14;
  c_2.xyz = (c_2.xyz + tmpvar_7);
  highp float tmpvar_15;
  tmpvar_15 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_15));
  c_2.w = 1.0;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTMAP_ON" "FOG_LINEAR" "UNITY_HDR_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  mediump vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  highp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = tmpvar_1.xyz;
  tmpvar_5 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
  highp vec4 tmpvar_7;
  tmpvar_7 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_8;
  tmpvar_8[0] = unity_WorldToObject[0].xyz;
  tmpvar_8[1] = unity_WorldToObject[1].xyz;
  tmpvar_8[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_9;
  tmpvar_9 = normalize((_glesNormal * tmpvar_8));
  highp vec3 tmpvar_10;
  highp vec3 I_11;
  I_11 = (tmpvar_7.xyz - _WorldSpaceCameraPos);
  tmpvar_10 = (I_11 - (2.0 * (
    dot (tmpvar_9, I_11)
   * tmpvar_9)));
  tmpvar_2 = tmpvar_10;
  highp vec4 o_12;
  highp vec4 tmpvar_13;
  tmpvar_13 = (tmpvar_5 * 0.5);
  highp vec2 tmpvar_14;
  tmpvar_14.x = tmpvar_13.x;
  tmpvar_14.y = (tmpvar_13.y * _ProjectionParams.x);
  o_12.xy = (tmpvar_14 + tmpvar_13.w);
  o_12.zw = tmpvar_5.zw;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  tmpvar_4.xyz = ((tmpvar_7.xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = tmpvar_1.xyz;
  tmpvar_4.w = (-((unity_MatrixV * 
    (unity_ObjectToWorld * tmpvar_15)
  ).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
  gl_Position = tmpvar_5;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_7.xyz;
  xlv_TEXCOORD3 = o_12;
  xlv_TEXCOORD4 = tmpvar_3;
  xlv_TEXCOORD5 = tmpvar_4;
  xlv_TEXCOORD6 = ((tmpvar_5.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform lowp vec4 unity_FogColor;
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
uniform sampler2D _LightBuffer;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp float xlv_TEXCOORD6;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  lowp vec3 lm_3;
  lowp vec4 lmtex_4;
  mediump vec4 light_5;
  highp vec3 tmpvar_6;
  tmpvar_6 = xlv_TEXCOORD1;
  lowp vec3 tmpvar_7;
  lowp vec4 reflcol_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_8 = (textureCube (_Cube, tmpvar_6) * tmpvar_9.w);
  tmpvar_7 = (reflcol_8.xyz * _ReflectColor.xyz);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2DProj (_LightBuffer, xlv_TEXCOORD3);
  light_5 = tmpvar_10;
  mediump vec4 tmpvar_11;
  tmpvar_11 = max (light_5, vec4(0.001, 0.001, 0.001, 0.001));
  light_5.w = tmpvar_11.w;
  mediump vec4 tmpvar_12;
  tmpvar_12 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lmtex_4 = tmpvar_12;
  mediump vec3 tmpvar_13;
  tmpvar_13 = (unity_Lightmap_HDR.x * lmtex_4.xyz);
  lm_3 = tmpvar_13;
  light_5.xyz = (tmpvar_11.xyz + lm_3);
  lowp vec4 c_14;
  c_14.xyz = ((tmpvar_9 * _Color).xyz * light_5.xyz);
  c_14.w = (reflcol_8.w * _ReflectColor.w);
  c_2 = c_14;
  c_2.xyz = (c_2.xyz + tmpvar_7);
  highp float tmpvar_15;
  tmpvar_15 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_15));
  c_2.w = 1.0;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTMAP_ON" "FOG_LINEAR" "UNITY_HDR_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  mediump vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  highp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = tmpvar_1.xyz;
  tmpvar_5 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
  highp vec4 tmpvar_7;
  tmpvar_7 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_8;
  tmpvar_8[0] = unity_WorldToObject[0].xyz;
  tmpvar_8[1] = unity_WorldToObject[1].xyz;
  tmpvar_8[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_9;
  tmpvar_9 = normalize((_glesNormal * tmpvar_8));
  highp vec3 tmpvar_10;
  highp vec3 I_11;
  I_11 = (tmpvar_7.xyz - _WorldSpaceCameraPos);
  tmpvar_10 = (I_11 - (2.0 * (
    dot (tmpvar_9, I_11)
   * tmpvar_9)));
  tmpvar_2 = tmpvar_10;
  highp vec4 o_12;
  highp vec4 tmpvar_13;
  tmpvar_13 = (tmpvar_5 * 0.5);
  highp vec2 tmpvar_14;
  tmpvar_14.x = tmpvar_13.x;
  tmpvar_14.y = (tmpvar_13.y * _ProjectionParams.x);
  o_12.xy = (tmpvar_14 + tmpvar_13.w);
  o_12.zw = tmpvar_5.zw;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  tmpvar_4.xyz = ((tmpvar_7.xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = tmpvar_1.xyz;
  tmpvar_4.w = (-((unity_MatrixV * 
    (unity_ObjectToWorld * tmpvar_15)
  ).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
  gl_Position = tmpvar_5;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_7.xyz;
  xlv_TEXCOORD3 = o_12;
  xlv_TEXCOORD4 = tmpvar_3;
  xlv_TEXCOORD5 = tmpvar_4;
  xlv_TEXCOORD6 = ((tmpvar_5.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform lowp vec4 unity_FogColor;
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
uniform sampler2D _LightBuffer;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp float xlv_TEXCOORD6;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  lowp vec3 lm_3;
  lowp vec4 lmtex_4;
  mediump vec4 light_5;
  highp vec3 tmpvar_6;
  tmpvar_6 = xlv_TEXCOORD1;
  lowp vec3 tmpvar_7;
  lowp vec4 reflcol_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_8 = (textureCube (_Cube, tmpvar_6) * tmpvar_9.w);
  tmpvar_7 = (reflcol_8.xyz * _ReflectColor.xyz);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2DProj (_LightBuffer, xlv_TEXCOORD3);
  light_5 = tmpvar_10;
  mediump vec4 tmpvar_11;
  tmpvar_11 = max (light_5, vec4(0.001, 0.001, 0.001, 0.001));
  light_5.w = tmpvar_11.w;
  mediump vec4 tmpvar_12;
  tmpvar_12 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lmtex_4 = tmpvar_12;
  mediump vec3 tmpvar_13;
  tmpvar_13 = (unity_Lightmap_HDR.x * lmtex_4.xyz);
  lm_3 = tmpvar_13;
  light_5.xyz = (tmpvar_11.xyz + lm_3);
  lowp vec4 c_14;
  c_14.xyz = ((tmpvar_9 * _Color).xyz * light_5.xyz);
  c_14.w = (reflcol_8.w * _ReflectColor.w);
  c_2 = c_14;
  c_2.xyz = (c_2.xyz + tmpvar_7);
  highp float tmpvar_15;
  tmpvar_15 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_15));
  c_2.w = 1.0;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "LIGHTMAP_ON" "LIGHTPROBE_SH" "FOG_LINEAR" "UNITY_HDR_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  mediump vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  highp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = tmpvar_1.xyz;
  tmpvar_5 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
  highp vec4 tmpvar_7;
  tmpvar_7 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_8;
  tmpvar_8[0] = unity_WorldToObject[0].xyz;
  tmpvar_8[1] = unity_WorldToObject[1].xyz;
  tmpvar_8[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_9;
  tmpvar_9 = normalize((_glesNormal * tmpvar_8));
  highp vec3 tmpvar_10;
  highp vec3 I_11;
  I_11 = (tmpvar_7.xyz - _WorldSpaceCameraPos);
  tmpvar_10 = (I_11 - (2.0 * (
    dot (tmpvar_9, I_11)
   * tmpvar_9)));
  tmpvar_2 = tmpvar_10;
  highp vec4 o_12;
  highp vec4 tmpvar_13;
  tmpvar_13 = (tmpvar_5 * 0.5);
  highp vec2 tmpvar_14;
  tmpvar_14.x = tmpvar_13.x;
  tmpvar_14.y = (tmpvar_13.y * _ProjectionParams.x);
  o_12.xy = (tmpvar_14 + tmpvar_13.w);
  o_12.zw = tmpvar_5.zw;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  tmpvar_4.xyz = ((tmpvar_7.xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = tmpvar_1.xyz;
  tmpvar_4.w = (-((unity_MatrixV * 
    (unity_ObjectToWorld * tmpvar_15)
  ).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
  gl_Position = tmpvar_5;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_7.xyz;
  xlv_TEXCOORD3 = o_12;
  xlv_TEXCOORD4 = tmpvar_3;
  xlv_TEXCOORD5 = tmpvar_4;
  xlv_TEXCOORD6 = ((tmpvar_5.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform lowp vec4 unity_FogColor;
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
uniform sampler2D _LightBuffer;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp float xlv_TEXCOORD6;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  lowp vec3 lm_3;
  lowp vec4 lmtex_4;
  mediump vec4 light_5;
  highp vec3 tmpvar_6;
  tmpvar_6 = xlv_TEXCOORD1;
  lowp vec3 tmpvar_7;
  lowp vec4 reflcol_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_8 = (textureCube (_Cube, tmpvar_6) * tmpvar_9.w);
  tmpvar_7 = (reflcol_8.xyz * _ReflectColor.xyz);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2DProj (_LightBuffer, xlv_TEXCOORD3);
  light_5 = tmpvar_10;
  mediump vec4 tmpvar_11;
  tmpvar_11 = max (light_5, vec4(0.001, 0.001, 0.001, 0.001));
  light_5.w = tmpvar_11.w;
  mediump vec4 tmpvar_12;
  tmpvar_12 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lmtex_4 = tmpvar_12;
  mediump vec3 tmpvar_13;
  tmpvar_13 = (unity_Lightmap_HDR.x * lmtex_4.xyz);
  lm_3 = tmpvar_13;
  light_5.xyz = (tmpvar_11.xyz + lm_3);
  lowp vec4 c_14;
  c_14.xyz = ((tmpvar_9 * _Color).xyz * light_5.xyz);
  c_14.w = (reflcol_8.w * _ReflectColor.w);
  c_2 = c_14;
  c_2.xyz = (c_2.xyz + tmpvar_7);
  highp float tmpvar_15;
  tmpvar_15 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_15));
  c_2.w = 1.0;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTMAP_ON" "LIGHTPROBE_SH" "FOG_LINEAR" "UNITY_HDR_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  mediump vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  highp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = tmpvar_1.xyz;
  tmpvar_5 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
  highp vec4 tmpvar_7;
  tmpvar_7 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_8;
  tmpvar_8[0] = unity_WorldToObject[0].xyz;
  tmpvar_8[1] = unity_WorldToObject[1].xyz;
  tmpvar_8[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_9;
  tmpvar_9 = normalize((_glesNormal * tmpvar_8));
  highp vec3 tmpvar_10;
  highp vec3 I_11;
  I_11 = (tmpvar_7.xyz - _WorldSpaceCameraPos);
  tmpvar_10 = (I_11 - (2.0 * (
    dot (tmpvar_9, I_11)
   * tmpvar_9)));
  tmpvar_2 = tmpvar_10;
  highp vec4 o_12;
  highp vec4 tmpvar_13;
  tmpvar_13 = (tmpvar_5 * 0.5);
  highp vec2 tmpvar_14;
  tmpvar_14.x = tmpvar_13.x;
  tmpvar_14.y = (tmpvar_13.y * _ProjectionParams.x);
  o_12.xy = (tmpvar_14 + tmpvar_13.w);
  o_12.zw = tmpvar_5.zw;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  tmpvar_4.xyz = ((tmpvar_7.xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = tmpvar_1.xyz;
  tmpvar_4.w = (-((unity_MatrixV * 
    (unity_ObjectToWorld * tmpvar_15)
  ).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
  gl_Position = tmpvar_5;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_7.xyz;
  xlv_TEXCOORD3 = o_12;
  xlv_TEXCOORD4 = tmpvar_3;
  xlv_TEXCOORD5 = tmpvar_4;
  xlv_TEXCOORD6 = ((tmpvar_5.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform lowp vec4 unity_FogColor;
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
uniform sampler2D _LightBuffer;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp float xlv_TEXCOORD6;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  lowp vec3 lm_3;
  lowp vec4 lmtex_4;
  mediump vec4 light_5;
  highp vec3 tmpvar_6;
  tmpvar_6 = xlv_TEXCOORD1;
  lowp vec3 tmpvar_7;
  lowp vec4 reflcol_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_8 = (textureCube (_Cube, tmpvar_6) * tmpvar_9.w);
  tmpvar_7 = (reflcol_8.xyz * _ReflectColor.xyz);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2DProj (_LightBuffer, xlv_TEXCOORD3);
  light_5 = tmpvar_10;
  mediump vec4 tmpvar_11;
  tmpvar_11 = max (light_5, vec4(0.001, 0.001, 0.001, 0.001));
  light_5.w = tmpvar_11.w;
  mediump vec4 tmpvar_12;
  tmpvar_12 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lmtex_4 = tmpvar_12;
  mediump vec3 tmpvar_13;
  tmpvar_13 = (unity_Lightmap_HDR.x * lmtex_4.xyz);
  lm_3 = tmpvar_13;
  light_5.xyz = (tmpvar_11.xyz + lm_3);
  lowp vec4 c_14;
  c_14.xyz = ((tmpvar_9 * _Color).xyz * light_5.xyz);
  c_14.w = (reflcol_8.w * _ReflectColor.w);
  c_2 = c_14;
  c_2.xyz = (c_2.xyz + tmpvar_7);
  highp float tmpvar_15;
  tmpvar_15 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_15));
  c_2.w = 1.0;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTMAP_ON" "LIGHTPROBE_SH" "FOG_LINEAR" "UNITY_HDR_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  mediump vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  highp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = tmpvar_1.xyz;
  tmpvar_5 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
  highp vec4 tmpvar_7;
  tmpvar_7 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_8;
  tmpvar_8[0] = unity_WorldToObject[0].xyz;
  tmpvar_8[1] = unity_WorldToObject[1].xyz;
  tmpvar_8[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_9;
  tmpvar_9 = normalize((_glesNormal * tmpvar_8));
  highp vec3 tmpvar_10;
  highp vec3 I_11;
  I_11 = (tmpvar_7.xyz - _WorldSpaceCameraPos);
  tmpvar_10 = (I_11 - (2.0 * (
    dot (tmpvar_9, I_11)
   * tmpvar_9)));
  tmpvar_2 = tmpvar_10;
  highp vec4 o_12;
  highp vec4 tmpvar_13;
  tmpvar_13 = (tmpvar_5 * 0.5);
  highp vec2 tmpvar_14;
  tmpvar_14.x = tmpvar_13.x;
  tmpvar_14.y = (tmpvar_13.y * _ProjectionParams.x);
  o_12.xy = (tmpvar_14 + tmpvar_13.w);
  o_12.zw = tmpvar_5.zw;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  tmpvar_4.xyz = ((tmpvar_7.xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = tmpvar_1.xyz;
  tmpvar_4.w = (-((unity_MatrixV * 
    (unity_ObjectToWorld * tmpvar_15)
  ).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
  gl_Position = tmpvar_5;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_7.xyz;
  xlv_TEXCOORD3 = o_12;
  xlv_TEXCOORD4 = tmpvar_3;
  xlv_TEXCOORD5 = tmpvar_4;
  xlv_TEXCOORD6 = ((tmpvar_5.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform lowp vec4 unity_FogColor;
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
uniform sampler2D _LightBuffer;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp float xlv_TEXCOORD6;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  lowp vec3 lm_3;
  lowp vec4 lmtex_4;
  mediump vec4 light_5;
  highp vec3 tmpvar_6;
  tmpvar_6 = xlv_TEXCOORD1;
  lowp vec3 tmpvar_7;
  lowp vec4 reflcol_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_8 = (textureCube (_Cube, tmpvar_6) * tmpvar_9.w);
  tmpvar_7 = (reflcol_8.xyz * _ReflectColor.xyz);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2DProj (_LightBuffer, xlv_TEXCOORD3);
  light_5 = tmpvar_10;
  mediump vec4 tmpvar_11;
  tmpvar_11 = max (light_5, vec4(0.001, 0.001, 0.001, 0.001));
  light_5.w = tmpvar_11.w;
  mediump vec4 tmpvar_12;
  tmpvar_12 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lmtex_4 = tmpvar_12;
  mediump vec3 tmpvar_13;
  tmpvar_13 = (unity_Lightmap_HDR.x * lmtex_4.xyz);
  lm_3 = tmpvar_13;
  light_5.xyz = (tmpvar_11.xyz + lm_3);
  lowp vec4 c_14;
  c_14.xyz = ((tmpvar_9 * _Color).xyz * light_5.xyz);
  c_14.w = (reflcol_8.w * _ReflectColor.w);
  c_2 = c_14;
  c_2.xyz = (c_2.xyz + tmpvar_7);
  highp float tmpvar_15;
  tmpvar_15 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_15));
  c_2.w = 1.0;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "FOG_LINEAR" "UNITY_HDR_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  mediump vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  highp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = tmpvar_1.xyz;
  tmpvar_5 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
  highp vec4 tmpvar_7;
  tmpvar_7 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_8;
  tmpvar_8[0] = unity_WorldToObject[0].xyz;
  tmpvar_8[1] = unity_WorldToObject[1].xyz;
  tmpvar_8[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_9;
  tmpvar_9 = normalize((_glesNormal * tmpvar_8));
  highp vec3 tmpvar_10;
  highp vec3 I_11;
  I_11 = (tmpvar_7.xyz - _WorldSpaceCameraPos);
  tmpvar_10 = (I_11 - (2.0 * (
    dot (tmpvar_9, I_11)
   * tmpvar_9)));
  tmpvar_2 = tmpvar_10;
  highp vec4 o_12;
  highp vec4 tmpvar_13;
  tmpvar_13 = (tmpvar_5 * 0.5);
  highp vec2 tmpvar_14;
  tmpvar_14.x = tmpvar_13.x;
  tmpvar_14.y = (tmpvar_13.y * _ProjectionParams.x);
  o_12.xy = (tmpvar_14 + tmpvar_13.w);
  o_12.zw = tmpvar_5.zw;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  tmpvar_4.xyz = ((tmpvar_7.xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = tmpvar_1.xyz;
  tmpvar_4.w = (-((unity_MatrixV * 
    (unity_ObjectToWorld * tmpvar_15)
  ).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
  gl_Position = tmpvar_5;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_7.xyz;
  xlv_TEXCOORD3 = o_12;
  xlv_TEXCOORD4 = tmpvar_3;
  xlv_TEXCOORD5 = tmpvar_4;
  xlv_TEXCOORD6 = ((tmpvar_5.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform lowp vec4 unity_FogColor;
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
uniform sampler2D _LightBuffer;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp float xlv_TEXCOORD6;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  lowp vec3 lm_3;
  lowp vec4 lmtex_4;
  mediump vec4 light_5;
  highp vec3 tmpvar_6;
  tmpvar_6 = xlv_TEXCOORD1;
  lowp vec3 tmpvar_7;
  lowp vec4 reflcol_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_8 = (textureCube (_Cube, tmpvar_6) * tmpvar_9.w);
  tmpvar_7 = (reflcol_8.xyz * _ReflectColor.xyz);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2DProj (_LightBuffer, xlv_TEXCOORD3);
  light_5 = tmpvar_10;
  mediump vec4 tmpvar_11;
  tmpvar_11 = max (light_5, vec4(0.001, 0.001, 0.001, 0.001));
  light_5.w = tmpvar_11.w;
  mediump vec4 tmpvar_12;
  tmpvar_12 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lmtex_4 = tmpvar_12;
  mediump vec3 tmpvar_13;
  tmpvar_13 = (unity_Lightmap_HDR.x * lmtex_4.xyz);
  lm_3 = tmpvar_13;
  light_5.xyz = (tmpvar_11.xyz + lm_3);
  lowp vec4 c_14;
  c_14.xyz = ((tmpvar_9 * _Color).xyz * light_5.xyz);
  c_14.w = (reflcol_8.w * _ReflectColor.w);
  c_2 = c_14;
  c_2.xyz = (c_2.xyz + tmpvar_7);
  highp float tmpvar_15;
  tmpvar_15 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_15));
  c_2.w = 1.0;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "FOG_LINEAR" "UNITY_HDR_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  mediump vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  highp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = tmpvar_1.xyz;
  tmpvar_5 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
  highp vec4 tmpvar_7;
  tmpvar_7 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_8;
  tmpvar_8[0] = unity_WorldToObject[0].xyz;
  tmpvar_8[1] = unity_WorldToObject[1].xyz;
  tmpvar_8[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_9;
  tmpvar_9 = normalize((_glesNormal * tmpvar_8));
  highp vec3 tmpvar_10;
  highp vec3 I_11;
  I_11 = (tmpvar_7.xyz - _WorldSpaceCameraPos);
  tmpvar_10 = (I_11 - (2.0 * (
    dot (tmpvar_9, I_11)
   * tmpvar_9)));
  tmpvar_2 = tmpvar_10;
  highp vec4 o_12;
  highp vec4 tmpvar_13;
  tmpvar_13 = (tmpvar_5 * 0.5);
  highp vec2 tmpvar_14;
  tmpvar_14.x = tmpvar_13.x;
  tmpvar_14.y = (tmpvar_13.y * _ProjectionParams.x);
  o_12.xy = (tmpvar_14 + tmpvar_13.w);
  o_12.zw = tmpvar_5.zw;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  tmpvar_4.xyz = ((tmpvar_7.xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = tmpvar_1.xyz;
  tmpvar_4.w = (-((unity_MatrixV * 
    (unity_ObjectToWorld * tmpvar_15)
  ).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
  gl_Position = tmpvar_5;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_7.xyz;
  xlv_TEXCOORD3 = o_12;
  xlv_TEXCOORD4 = tmpvar_3;
  xlv_TEXCOORD5 = tmpvar_4;
  xlv_TEXCOORD6 = ((tmpvar_5.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform lowp vec4 unity_FogColor;
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
uniform sampler2D _LightBuffer;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp float xlv_TEXCOORD6;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  lowp vec3 lm_3;
  lowp vec4 lmtex_4;
  mediump vec4 light_5;
  highp vec3 tmpvar_6;
  tmpvar_6 = xlv_TEXCOORD1;
  lowp vec3 tmpvar_7;
  lowp vec4 reflcol_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_8 = (textureCube (_Cube, tmpvar_6) * tmpvar_9.w);
  tmpvar_7 = (reflcol_8.xyz * _ReflectColor.xyz);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2DProj (_LightBuffer, xlv_TEXCOORD3);
  light_5 = tmpvar_10;
  mediump vec4 tmpvar_11;
  tmpvar_11 = max (light_5, vec4(0.001, 0.001, 0.001, 0.001));
  light_5.w = tmpvar_11.w;
  mediump vec4 tmpvar_12;
  tmpvar_12 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lmtex_4 = tmpvar_12;
  mediump vec3 tmpvar_13;
  tmpvar_13 = (unity_Lightmap_HDR.x * lmtex_4.xyz);
  lm_3 = tmpvar_13;
  light_5.xyz = (tmpvar_11.xyz + lm_3);
  lowp vec4 c_14;
  c_14.xyz = ((tmpvar_9 * _Color).xyz * light_5.xyz);
  c_14.w = (reflcol_8.w * _ReflectColor.w);
  c_2 = c_14;
  c_2.xyz = (c_2.xyz + tmpvar_7);
  highp float tmpvar_15;
  tmpvar_15 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_15));
  c_2.w = 1.0;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "FOG_LINEAR" "UNITY_HDR_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  mediump vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  highp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = tmpvar_1.xyz;
  tmpvar_5 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
  highp vec4 tmpvar_7;
  tmpvar_7 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_8;
  tmpvar_8[0] = unity_WorldToObject[0].xyz;
  tmpvar_8[1] = unity_WorldToObject[1].xyz;
  tmpvar_8[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_9;
  tmpvar_9 = normalize((_glesNormal * tmpvar_8));
  highp vec3 tmpvar_10;
  highp vec3 I_11;
  I_11 = (tmpvar_7.xyz - _WorldSpaceCameraPos);
  tmpvar_10 = (I_11 - (2.0 * (
    dot (tmpvar_9, I_11)
   * tmpvar_9)));
  tmpvar_2 = tmpvar_10;
  highp vec4 o_12;
  highp vec4 tmpvar_13;
  tmpvar_13 = (tmpvar_5 * 0.5);
  highp vec2 tmpvar_14;
  tmpvar_14.x = tmpvar_13.x;
  tmpvar_14.y = (tmpvar_13.y * _ProjectionParams.x);
  o_12.xy = (tmpvar_14 + tmpvar_13.w);
  o_12.zw = tmpvar_5.zw;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  tmpvar_4.xyz = ((tmpvar_7.xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = tmpvar_1.xyz;
  tmpvar_4.w = (-((unity_MatrixV * 
    (unity_ObjectToWorld * tmpvar_15)
  ).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
  gl_Position = tmpvar_5;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_7.xyz;
  xlv_TEXCOORD3 = o_12;
  xlv_TEXCOORD4 = tmpvar_3;
  xlv_TEXCOORD5 = tmpvar_4;
  xlv_TEXCOORD6 = ((tmpvar_5.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform lowp vec4 unity_FogColor;
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
uniform sampler2D _LightBuffer;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp float xlv_TEXCOORD6;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  lowp vec3 lm_3;
  lowp vec4 lmtex_4;
  mediump vec4 light_5;
  highp vec3 tmpvar_6;
  tmpvar_6 = xlv_TEXCOORD1;
  lowp vec3 tmpvar_7;
  lowp vec4 reflcol_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_8 = (textureCube (_Cube, tmpvar_6) * tmpvar_9.w);
  tmpvar_7 = (reflcol_8.xyz * _ReflectColor.xyz);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2DProj (_LightBuffer, xlv_TEXCOORD3);
  light_5 = tmpvar_10;
  mediump vec4 tmpvar_11;
  tmpvar_11 = max (light_5, vec4(0.001, 0.001, 0.001, 0.001));
  light_5.w = tmpvar_11.w;
  mediump vec4 tmpvar_12;
  tmpvar_12 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lmtex_4 = tmpvar_12;
  mediump vec3 tmpvar_13;
  tmpvar_13 = (unity_Lightmap_HDR.x * lmtex_4.xyz);
  lm_3 = tmpvar_13;
  light_5.xyz = (tmpvar_11.xyz + lm_3);
  lowp vec4 c_14;
  c_14.xyz = ((tmpvar_9 * _Color).xyz * light_5.xyz);
  c_14.w = (reflcol_8.w * _ReflectColor.w);
  c_2 = c_14;
  c_2.xyz = (c_2.xyz + tmpvar_7);
  highp float tmpvar_15;
  tmpvar_15 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_15));
  c_2.w = 1.0;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" "UNITY_HDR_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  mediump vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  highp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = tmpvar_1.xyz;
  tmpvar_5 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
  highp vec4 tmpvar_7;
  tmpvar_7 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_8;
  tmpvar_8[0] = unity_WorldToObject[0].xyz;
  tmpvar_8[1] = unity_WorldToObject[1].xyz;
  tmpvar_8[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_9;
  tmpvar_9 = normalize((_glesNormal * tmpvar_8));
  highp vec3 tmpvar_10;
  highp vec3 I_11;
  I_11 = (tmpvar_7.xyz - _WorldSpaceCameraPos);
  tmpvar_10 = (I_11 - (2.0 * (
    dot (tmpvar_9, I_11)
   * tmpvar_9)));
  tmpvar_2 = tmpvar_10;
  highp vec4 o_12;
  highp vec4 tmpvar_13;
  tmpvar_13 = (tmpvar_5 * 0.5);
  highp vec2 tmpvar_14;
  tmpvar_14.x = tmpvar_13.x;
  tmpvar_14.y = (tmpvar_13.y * _ProjectionParams.x);
  o_12.xy = (tmpvar_14 + tmpvar_13.w);
  o_12.zw = tmpvar_5.zw;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  tmpvar_4.xyz = ((tmpvar_7.xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = tmpvar_1.xyz;
  tmpvar_4.w = (-((unity_MatrixV * 
    (unity_ObjectToWorld * tmpvar_15)
  ).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
  gl_Position = tmpvar_5;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_7.xyz;
  xlv_TEXCOORD3 = o_12;
  xlv_TEXCOORD4 = tmpvar_3;
  xlv_TEXCOORD5 = tmpvar_4;
  xlv_TEXCOORD6 = ((tmpvar_5.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform lowp vec4 unity_FogColor;
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
uniform sampler2D _LightBuffer;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp float xlv_TEXCOORD6;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  lowp vec3 lm_3;
  lowp vec4 lmtex_4;
  mediump vec4 light_5;
  highp vec3 tmpvar_6;
  tmpvar_6 = xlv_TEXCOORD1;
  lowp vec3 tmpvar_7;
  lowp vec4 reflcol_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_8 = (textureCube (_Cube, tmpvar_6) * tmpvar_9.w);
  tmpvar_7 = (reflcol_8.xyz * _ReflectColor.xyz);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2DProj (_LightBuffer, xlv_TEXCOORD3);
  light_5 = tmpvar_10;
  mediump vec4 tmpvar_11;
  tmpvar_11 = max (light_5, vec4(0.001, 0.001, 0.001, 0.001));
  light_5.w = tmpvar_11.w;
  mediump vec4 tmpvar_12;
  tmpvar_12 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lmtex_4 = tmpvar_12;
  mediump vec3 tmpvar_13;
  tmpvar_13 = (unity_Lightmap_HDR.x * lmtex_4.xyz);
  lm_3 = tmpvar_13;
  light_5.xyz = (tmpvar_11.xyz + lm_3);
  lowp vec4 c_14;
  c_14.xyz = ((tmpvar_9 * _Color).xyz * light_5.xyz);
  c_14.w = (reflcol_8.w * _ReflectColor.w);
  c_2 = c_14;
  c_2.xyz = (c_2.xyz + tmpvar_7);
  highp float tmpvar_15;
  tmpvar_15 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_15));
  c_2.w = 1.0;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" "UNITY_HDR_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  mediump vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  highp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = tmpvar_1.xyz;
  tmpvar_5 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
  highp vec4 tmpvar_7;
  tmpvar_7 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_8;
  tmpvar_8[0] = unity_WorldToObject[0].xyz;
  tmpvar_8[1] = unity_WorldToObject[1].xyz;
  tmpvar_8[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_9;
  tmpvar_9 = normalize((_glesNormal * tmpvar_8));
  highp vec3 tmpvar_10;
  highp vec3 I_11;
  I_11 = (tmpvar_7.xyz - _WorldSpaceCameraPos);
  tmpvar_10 = (I_11 - (2.0 * (
    dot (tmpvar_9, I_11)
   * tmpvar_9)));
  tmpvar_2 = tmpvar_10;
  highp vec4 o_12;
  highp vec4 tmpvar_13;
  tmpvar_13 = (tmpvar_5 * 0.5);
  highp vec2 tmpvar_14;
  tmpvar_14.x = tmpvar_13.x;
  tmpvar_14.y = (tmpvar_13.y * _ProjectionParams.x);
  o_12.xy = (tmpvar_14 + tmpvar_13.w);
  o_12.zw = tmpvar_5.zw;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  tmpvar_4.xyz = ((tmpvar_7.xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = tmpvar_1.xyz;
  tmpvar_4.w = (-((unity_MatrixV * 
    (unity_ObjectToWorld * tmpvar_15)
  ).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
  gl_Position = tmpvar_5;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_7.xyz;
  xlv_TEXCOORD3 = o_12;
  xlv_TEXCOORD4 = tmpvar_3;
  xlv_TEXCOORD5 = tmpvar_4;
  xlv_TEXCOORD6 = ((tmpvar_5.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform lowp vec4 unity_FogColor;
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
uniform sampler2D _LightBuffer;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp float xlv_TEXCOORD6;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  lowp vec3 lm_3;
  lowp vec4 lmtex_4;
  mediump vec4 light_5;
  highp vec3 tmpvar_6;
  tmpvar_6 = xlv_TEXCOORD1;
  lowp vec3 tmpvar_7;
  lowp vec4 reflcol_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_8 = (textureCube (_Cube, tmpvar_6) * tmpvar_9.w);
  tmpvar_7 = (reflcol_8.xyz * _ReflectColor.xyz);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2DProj (_LightBuffer, xlv_TEXCOORD3);
  light_5 = tmpvar_10;
  mediump vec4 tmpvar_11;
  tmpvar_11 = max (light_5, vec4(0.001, 0.001, 0.001, 0.001));
  light_5.w = tmpvar_11.w;
  mediump vec4 tmpvar_12;
  tmpvar_12 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lmtex_4 = tmpvar_12;
  mediump vec3 tmpvar_13;
  tmpvar_13 = (unity_Lightmap_HDR.x * lmtex_4.xyz);
  lm_3 = tmpvar_13;
  light_5.xyz = (tmpvar_11.xyz + lm_3);
  lowp vec4 c_14;
  c_14.xyz = ((tmpvar_9 * _Color).xyz * light_5.xyz);
  c_14.w = (reflcol_8.w * _ReflectColor.w);
  c_2 = c_14;
  c_2.xyz = (c_2.xyz + tmpvar_7);
  highp float tmpvar_15;
  tmpvar_15 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_15));
  c_2.w = 1.0;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" "UNITY_HDR_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_FogParams;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  mediump vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  highp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = tmpvar_1.xyz;
  tmpvar_5 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
  highp vec4 tmpvar_7;
  tmpvar_7 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_8;
  tmpvar_8[0] = unity_WorldToObject[0].xyz;
  tmpvar_8[1] = unity_WorldToObject[1].xyz;
  tmpvar_8[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_9;
  tmpvar_9 = normalize((_glesNormal * tmpvar_8));
  highp vec3 tmpvar_10;
  highp vec3 I_11;
  I_11 = (tmpvar_7.xyz - _WorldSpaceCameraPos);
  tmpvar_10 = (I_11 - (2.0 * (
    dot (tmpvar_9, I_11)
   * tmpvar_9)));
  tmpvar_2 = tmpvar_10;
  highp vec4 o_12;
  highp vec4 tmpvar_13;
  tmpvar_13 = (tmpvar_5 * 0.5);
  highp vec2 tmpvar_14;
  tmpvar_14.x = tmpvar_13.x;
  tmpvar_14.y = (tmpvar_13.y * _ProjectionParams.x);
  o_12.xy = (tmpvar_14 + tmpvar_13.w);
  o_12.zw = tmpvar_5.zw;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  tmpvar_4.xyz = ((tmpvar_7.xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = tmpvar_1.xyz;
  tmpvar_4.w = (-((unity_MatrixV * 
    (unity_ObjectToWorld * tmpvar_15)
  ).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
  gl_Position = tmpvar_5;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_7.xyz;
  xlv_TEXCOORD3 = o_12;
  xlv_TEXCOORD4 = tmpvar_3;
  xlv_TEXCOORD5 = tmpvar_4;
  xlv_TEXCOORD6 = ((tmpvar_5.z * unity_FogParams.z) + unity_FogParams.w);
}


#endif
#ifdef FRAGMENT
uniform lowp vec4 unity_FogColor;
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
uniform sampler2D _LightBuffer;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp float xlv_TEXCOORD6;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  lowp vec3 lm_3;
  lowp vec4 lmtex_4;
  mediump vec4 light_5;
  highp vec3 tmpvar_6;
  tmpvar_6 = xlv_TEXCOORD1;
  lowp vec3 tmpvar_7;
  lowp vec4 reflcol_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD0);
  reflcol_8 = (textureCube (_Cube, tmpvar_6) * tmpvar_9.w);
  tmpvar_7 = (reflcol_8.xyz * _ReflectColor.xyz);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2DProj (_LightBuffer, xlv_TEXCOORD3);
  light_5 = tmpvar_10;
  mediump vec4 tmpvar_11;
  tmpvar_11 = max (light_5, vec4(0.001, 0.001, 0.001, 0.001));
  light_5.w = tmpvar_11.w;
  mediump vec4 tmpvar_12;
  tmpvar_12 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lmtex_4 = tmpvar_12;
  mediump vec3 tmpvar_13;
  tmpvar_13 = (unity_Lightmap_HDR.x * lmtex_4.xyz);
  lm_3 = tmpvar_13;
  light_5.xyz = (tmpvar_11.xyz + lm_3);
  lowp vec4 c_14;
  c_14.xyz = ((tmpvar_9 * _Color).xyz * light_5.xyz);
  c_14.w = (reflcol_8.w * _ReflectColor.w);
  c_2 = c_14;
  c_2.xyz = (c_2.xyz + tmpvar_7);
  highp float tmpvar_15;
  tmpvar_15 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_15));
  c_2.w = 1.0;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
}
Program "fp" {
SubProgram "gles hw_tier00 " {
""
}
SubProgram "gles hw_tier01 " {
""
}
SubProgram "gles hw_tier02 " {
""
}
SubProgram "gles hw_tier00 " {
Keywords { "LIGHTPROBE_SH" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTPROBE_SH" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTPROBE_SH" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "LIGHTMAP_ON" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTMAP_ON" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTMAP_ON" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "LIGHTMAP_ON" "LIGHTPROBE_SH" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTMAP_ON" "LIGHTPROBE_SH" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTMAP_ON" "LIGHTPROBE_SH" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "SHADOWS_SHADOWMASK" "UNITY_HDR_ON" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "SHADOWS_SHADOWMASK" "UNITY_HDR_ON" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "SHADOWS_SHADOWMASK" "UNITY_HDR_ON" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "UNITY_HDR_ON" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "UNITY_HDR_ON" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "UNITY_HDR_ON" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "LIGHTMAP_ON" "UNITY_HDR_ON" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTMAP_ON" "UNITY_HDR_ON" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTMAP_ON" "UNITY_HDR_ON" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "LIGHTMAP_ON" "LIGHTPROBE_SH" "UNITY_HDR_ON" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTMAP_ON" "LIGHTPROBE_SH" "UNITY_HDR_ON" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTMAP_ON" "LIGHTPROBE_SH" "UNITY_HDR_ON" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "UNITY_HDR_ON" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "UNITY_HDR_ON" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "UNITY_HDR_ON" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "UNITY_HDR_ON" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "UNITY_HDR_ON" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "UNITY_HDR_ON" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "LIGHTPROBE_SH" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTPROBE_SH" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTPROBE_SH" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "LIGHTMAP_ON" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTMAP_ON" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTMAP_ON" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "LIGHTMAP_ON" "LIGHTPROBE_SH" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTMAP_ON" "LIGHTPROBE_SH" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTMAP_ON" "LIGHTPROBE_SH" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "LIGHTPROBE_SH" "FOG_LINEAR" "UNITY_HDR_ON" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTPROBE_SH" "FOG_LINEAR" "UNITY_HDR_ON" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTPROBE_SH" "FOG_LINEAR" "UNITY_HDR_ON" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "SHADOWS_SHADOWMASK" "FOG_LINEAR" "UNITY_HDR_ON" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "SHADOWS_SHADOWMASK" "FOG_LINEAR" "UNITY_HDR_ON" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "SHADOWS_SHADOWMASK" "FOG_LINEAR" "UNITY_HDR_ON" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" "UNITY_HDR_ON" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" "UNITY_HDR_ON" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" "UNITY_HDR_ON" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "LIGHTMAP_ON" "FOG_LINEAR" "UNITY_HDR_ON" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTMAP_ON" "FOG_LINEAR" "UNITY_HDR_ON" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTMAP_ON" "FOG_LINEAR" "UNITY_HDR_ON" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "LIGHTMAP_ON" "LIGHTPROBE_SH" "FOG_LINEAR" "UNITY_HDR_ON" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTMAP_ON" "LIGHTPROBE_SH" "FOG_LINEAR" "UNITY_HDR_ON" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTMAP_ON" "LIGHTPROBE_SH" "FOG_LINEAR" "UNITY_HDR_ON" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "FOG_LINEAR" "UNITY_HDR_ON" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "FOG_LINEAR" "UNITY_HDR_ON" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "FOG_LINEAR" "UNITY_HDR_ON" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" "UNITY_HDR_ON" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" "UNITY_HDR_ON" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" "UNITY_HDR_ON" }
""
}
}
}
 Pass {
  Name "DEFERRED"
  LOD 200
  Tags { "LIGHTMODE" = "DEFERRED" "RenderType" = "Opaque" }
  GpuProgramID 287266
Program "vp" {
SubProgram "gles hw_tier00 " {
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_4;
  tmpvar_4 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_5;
  tmpvar_5[0] = unity_WorldToObject[0].xyz;
  tmpvar_5[1] = unity_WorldToObject[1].xyz;
  tmpvar_5[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_glesNormal * tmpvar_5));
  highp vec3 tmpvar_7;
  highp vec3 I_8;
  I_8 = (tmpvar_4 - _WorldSpaceCameraPos);
  tmpvar_7 = (I_8 - (2.0 * (
    dot (tmpvar_6, I_8)
   * tmpvar_6)));
  tmpvar_1 = tmpvar_7;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_2.xy = vec2(0.0, 0.0);
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = tmpvar_2;
}


#endif
#ifdef FRAGMENT
#extension GL_EXT_draw_buffers : enable
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
void main ()
{
  mediump vec4 outEmission_1;
  lowp vec3 tmpvar_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = xlv_TEXCOORD1;
  tmpvar_2 = xlv_TEXCOORD2;
  lowp vec3 tmpvar_4;
  lowp vec4 tmpvar_5;
  tmpvar_5 = texture2D (_MainTex, xlv_TEXCOORD0);
  tmpvar_4 = (tmpvar_5 * _Color).xyz;
  mediump vec4 emission_6;
  mediump vec3 tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_7 = tmpvar_4;
  tmpvar_8 = tmpvar_2;
  mediump vec4 outGBuffer2_9;
  mediump vec4 tmpvar_10;
  tmpvar_10.xyz = tmpvar_7;
  tmpvar_10.w = 1.0;
  mediump vec4 tmpvar_11;
  tmpvar_11.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_11.w = 0.0;
  highp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = ((tmpvar_8 * 0.5) + 0.5);
  outGBuffer2_9 = tmpvar_12;
  lowp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = ((textureCube (_Cube, tmpvar_3) * tmpvar_5.w).xyz * _ReflectColor.xyz);
  emission_6 = tmpvar_13;
  emission_6.xyz = emission_6.xyz;
  outEmission_1.w = emission_6.w;
  outEmission_1.xyz = exp2(-(emission_6.xyz));
  gl_FragData[0] = tmpvar_10;
  gl_FragData[1] = tmpvar_11;
  gl_FragData[2] = outGBuffer2_9;
  gl_FragData[3] = outEmission_1;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_4;
  tmpvar_4 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_5;
  tmpvar_5[0] = unity_WorldToObject[0].xyz;
  tmpvar_5[1] = unity_WorldToObject[1].xyz;
  tmpvar_5[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_glesNormal * tmpvar_5));
  highp vec3 tmpvar_7;
  highp vec3 I_8;
  I_8 = (tmpvar_4 - _WorldSpaceCameraPos);
  tmpvar_7 = (I_8 - (2.0 * (
    dot (tmpvar_6, I_8)
   * tmpvar_6)));
  tmpvar_1 = tmpvar_7;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_2.xy = vec2(0.0, 0.0);
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = tmpvar_2;
}


#endif
#ifdef FRAGMENT
#extension GL_EXT_draw_buffers : enable
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
void main ()
{
  mediump vec4 outEmission_1;
  lowp vec3 tmpvar_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = xlv_TEXCOORD1;
  tmpvar_2 = xlv_TEXCOORD2;
  lowp vec3 tmpvar_4;
  lowp vec4 tmpvar_5;
  tmpvar_5 = texture2D (_MainTex, xlv_TEXCOORD0);
  tmpvar_4 = (tmpvar_5 * _Color).xyz;
  mediump vec4 emission_6;
  mediump vec3 tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_7 = tmpvar_4;
  tmpvar_8 = tmpvar_2;
  mediump vec4 outGBuffer2_9;
  mediump vec4 tmpvar_10;
  tmpvar_10.xyz = tmpvar_7;
  tmpvar_10.w = 1.0;
  mediump vec4 tmpvar_11;
  tmpvar_11.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_11.w = 0.0;
  highp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = ((tmpvar_8 * 0.5) + 0.5);
  outGBuffer2_9 = tmpvar_12;
  lowp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = ((textureCube (_Cube, tmpvar_3) * tmpvar_5.w).xyz * _ReflectColor.xyz);
  emission_6 = tmpvar_13;
  emission_6.xyz = emission_6.xyz;
  outEmission_1.w = emission_6.w;
  outEmission_1.xyz = exp2(-(emission_6.xyz));
  gl_FragData[0] = tmpvar_10;
  gl_FragData[1] = tmpvar_11;
  gl_FragData[2] = outGBuffer2_9;
  gl_FragData[3] = outEmission_1;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_4;
  tmpvar_4 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_5;
  tmpvar_5[0] = unity_WorldToObject[0].xyz;
  tmpvar_5[1] = unity_WorldToObject[1].xyz;
  tmpvar_5[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_glesNormal * tmpvar_5));
  highp vec3 tmpvar_7;
  highp vec3 I_8;
  I_8 = (tmpvar_4 - _WorldSpaceCameraPos);
  tmpvar_7 = (I_8 - (2.0 * (
    dot (tmpvar_6, I_8)
   * tmpvar_6)));
  tmpvar_1 = tmpvar_7;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_2.xy = vec2(0.0, 0.0);
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = tmpvar_2;
}


#endif
#ifdef FRAGMENT
#extension GL_EXT_draw_buffers : enable
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
void main ()
{
  mediump vec4 outEmission_1;
  lowp vec3 tmpvar_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = xlv_TEXCOORD1;
  tmpvar_2 = xlv_TEXCOORD2;
  lowp vec3 tmpvar_4;
  lowp vec4 tmpvar_5;
  tmpvar_5 = texture2D (_MainTex, xlv_TEXCOORD0);
  tmpvar_4 = (tmpvar_5 * _Color).xyz;
  mediump vec4 emission_6;
  mediump vec3 tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_7 = tmpvar_4;
  tmpvar_8 = tmpvar_2;
  mediump vec4 outGBuffer2_9;
  mediump vec4 tmpvar_10;
  tmpvar_10.xyz = tmpvar_7;
  tmpvar_10.w = 1.0;
  mediump vec4 tmpvar_11;
  tmpvar_11.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_11.w = 0.0;
  highp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = ((tmpvar_8 * 0.5) + 0.5);
  outGBuffer2_9 = tmpvar_12;
  lowp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = ((textureCube (_Cube, tmpvar_3) * tmpvar_5.w).xyz * _ReflectColor.xyz);
  emission_6 = tmpvar_13;
  emission_6.xyz = emission_6.xyz;
  outEmission_1.w = emission_6.w;
  outEmission_1.xyz = exp2(-(emission_6.xyz));
  gl_FragData[0] = tmpvar_10;
  gl_FragData[1] = tmpvar_11;
  gl_FragData[2] = outGBuffer2_9;
  gl_FragData[3] = outEmission_1;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "LIGHTPROBE_SH" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying mediump vec3 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_4;
  tmpvar_4 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_5;
  tmpvar_5[0] = unity_WorldToObject[0].xyz;
  tmpvar_5[1] = unity_WorldToObject[1].xyz;
  tmpvar_5[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_glesNormal * tmpvar_5));
  highp vec3 tmpvar_7;
  highp vec3 I_8;
  I_8 = (tmpvar_4 - _WorldSpaceCameraPos);
  tmpvar_7 = (I_8 - (2.0 * (
    dot (tmpvar_6, I_8)
   * tmpvar_6)));
  tmpvar_1 = tmpvar_7;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_2.xy = vec2(0.0, 0.0);
  mediump vec3 normal_9;
  normal_9 = tmpvar_6;
  mediump vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = normal_9;
  mediump vec3 res_11;
  mediump vec3 x_12;
  x_12.x = dot (unity_SHAr, tmpvar_10);
  x_12.y = dot (unity_SHAg, tmpvar_10);
  x_12.z = dot (unity_SHAb, tmpvar_10);
  mediump vec3 x1_13;
  mediump vec4 tmpvar_14;
  tmpvar_14 = (normal_9.xyzz * normal_9.yzzx);
  x1_13.x = dot (unity_SHBr, tmpvar_14);
  x1_13.y = dot (unity_SHBg, tmpvar_14);
  x1_13.z = dot (unity_SHBb, tmpvar_14);
  res_11 = (x_12 + (x1_13 + (unity_SHC.xyz * 
    ((normal_9.x * normal_9.x) - (normal_9.y * normal_9.y))
  )));
  mediump vec3 tmpvar_15;
  tmpvar_15 = max (((1.055 * 
    pow (max (res_11, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_11 = tmpvar_15;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = max (vec3(0.0, 0.0, 0.0), tmpvar_15);
}


#endif
#ifdef FRAGMENT
#extension GL_EXT_draw_buffers : enable
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD5;
void main ()
{
  mediump vec4 outEmission_1;
  lowp vec3 tmpvar_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = xlv_TEXCOORD1;
  tmpvar_2 = xlv_TEXCOORD2;
  lowp vec3 tmpvar_4;
  lowp vec4 tmpvar_5;
  tmpvar_5 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_6;
  tmpvar_6 = (tmpvar_5 * _Color);
  tmpvar_4 = tmpvar_6.xyz;
  mediump vec4 emission_7;
  mediump vec3 tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_8 = tmpvar_4;
  tmpvar_9 = tmpvar_2;
  mediump vec4 outGBuffer2_10;
  mediump vec4 tmpvar_11;
  tmpvar_11.xyz = tmpvar_8;
  tmpvar_11.w = 1.0;
  mediump vec4 tmpvar_12;
  tmpvar_12.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_12.w = 0.0;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = ((tmpvar_9 * 0.5) + 0.5);
  outGBuffer2_10 = tmpvar_13;
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = ((textureCube (_Cube, tmpvar_3) * tmpvar_5.w).xyz * _ReflectColor.xyz);
  emission_7 = tmpvar_14;
  emission_7.xyz = (emission_7.xyz + (tmpvar_6.xyz * xlv_TEXCOORD5));
  outEmission_1.w = emission_7.w;
  outEmission_1.xyz = exp2(-(emission_7.xyz));
  gl_FragData[0] = tmpvar_11;
  gl_FragData[1] = tmpvar_12;
  gl_FragData[2] = outGBuffer2_10;
  gl_FragData[3] = outEmission_1;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTPROBE_SH" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying mediump vec3 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_4;
  tmpvar_4 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_5;
  tmpvar_5[0] = unity_WorldToObject[0].xyz;
  tmpvar_5[1] = unity_WorldToObject[1].xyz;
  tmpvar_5[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_glesNormal * tmpvar_5));
  highp vec3 tmpvar_7;
  highp vec3 I_8;
  I_8 = (tmpvar_4 - _WorldSpaceCameraPos);
  tmpvar_7 = (I_8 - (2.0 * (
    dot (tmpvar_6, I_8)
   * tmpvar_6)));
  tmpvar_1 = tmpvar_7;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_2.xy = vec2(0.0, 0.0);
  mediump vec3 normal_9;
  normal_9 = tmpvar_6;
  mediump vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = normal_9;
  mediump vec3 res_11;
  mediump vec3 x_12;
  x_12.x = dot (unity_SHAr, tmpvar_10);
  x_12.y = dot (unity_SHAg, tmpvar_10);
  x_12.z = dot (unity_SHAb, tmpvar_10);
  mediump vec3 x1_13;
  mediump vec4 tmpvar_14;
  tmpvar_14 = (normal_9.xyzz * normal_9.yzzx);
  x1_13.x = dot (unity_SHBr, tmpvar_14);
  x1_13.y = dot (unity_SHBg, tmpvar_14);
  x1_13.z = dot (unity_SHBb, tmpvar_14);
  res_11 = (x_12 + (x1_13 + (unity_SHC.xyz * 
    ((normal_9.x * normal_9.x) - (normal_9.y * normal_9.y))
  )));
  mediump vec3 tmpvar_15;
  tmpvar_15 = max (((1.055 * 
    pow (max (res_11, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_11 = tmpvar_15;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = max (vec3(0.0, 0.0, 0.0), tmpvar_15);
}


#endif
#ifdef FRAGMENT
#extension GL_EXT_draw_buffers : enable
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD5;
void main ()
{
  mediump vec4 outEmission_1;
  lowp vec3 tmpvar_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = xlv_TEXCOORD1;
  tmpvar_2 = xlv_TEXCOORD2;
  lowp vec3 tmpvar_4;
  lowp vec4 tmpvar_5;
  tmpvar_5 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_6;
  tmpvar_6 = (tmpvar_5 * _Color);
  tmpvar_4 = tmpvar_6.xyz;
  mediump vec4 emission_7;
  mediump vec3 tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_8 = tmpvar_4;
  tmpvar_9 = tmpvar_2;
  mediump vec4 outGBuffer2_10;
  mediump vec4 tmpvar_11;
  tmpvar_11.xyz = tmpvar_8;
  tmpvar_11.w = 1.0;
  mediump vec4 tmpvar_12;
  tmpvar_12.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_12.w = 0.0;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = ((tmpvar_9 * 0.5) + 0.5);
  outGBuffer2_10 = tmpvar_13;
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = ((textureCube (_Cube, tmpvar_3) * tmpvar_5.w).xyz * _ReflectColor.xyz);
  emission_7 = tmpvar_14;
  emission_7.xyz = (emission_7.xyz + (tmpvar_6.xyz * xlv_TEXCOORD5));
  outEmission_1.w = emission_7.w;
  outEmission_1.xyz = exp2(-(emission_7.xyz));
  gl_FragData[0] = tmpvar_11;
  gl_FragData[1] = tmpvar_12;
  gl_FragData[2] = outGBuffer2_10;
  gl_FragData[3] = outEmission_1;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTPROBE_SH" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying mediump vec3 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_4;
  tmpvar_4 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_5;
  tmpvar_5[0] = unity_WorldToObject[0].xyz;
  tmpvar_5[1] = unity_WorldToObject[1].xyz;
  tmpvar_5[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_glesNormal * tmpvar_5));
  highp vec3 tmpvar_7;
  highp vec3 I_8;
  I_8 = (tmpvar_4 - _WorldSpaceCameraPos);
  tmpvar_7 = (I_8 - (2.0 * (
    dot (tmpvar_6, I_8)
   * tmpvar_6)));
  tmpvar_1 = tmpvar_7;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_2.xy = vec2(0.0, 0.0);
  mediump vec3 normal_9;
  normal_9 = tmpvar_6;
  mediump vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = normal_9;
  mediump vec3 res_11;
  mediump vec3 x_12;
  x_12.x = dot (unity_SHAr, tmpvar_10);
  x_12.y = dot (unity_SHAg, tmpvar_10);
  x_12.z = dot (unity_SHAb, tmpvar_10);
  mediump vec3 x1_13;
  mediump vec4 tmpvar_14;
  tmpvar_14 = (normal_9.xyzz * normal_9.yzzx);
  x1_13.x = dot (unity_SHBr, tmpvar_14);
  x1_13.y = dot (unity_SHBg, tmpvar_14);
  x1_13.z = dot (unity_SHBb, tmpvar_14);
  res_11 = (x_12 + (x1_13 + (unity_SHC.xyz * 
    ((normal_9.x * normal_9.x) - (normal_9.y * normal_9.y))
  )));
  mediump vec3 tmpvar_15;
  tmpvar_15 = max (((1.055 * 
    pow (max (res_11, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_11 = tmpvar_15;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = max (vec3(0.0, 0.0, 0.0), tmpvar_15);
}


#endif
#ifdef FRAGMENT
#extension GL_EXT_draw_buffers : enable
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD5;
void main ()
{
  mediump vec4 outEmission_1;
  lowp vec3 tmpvar_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = xlv_TEXCOORD1;
  tmpvar_2 = xlv_TEXCOORD2;
  lowp vec3 tmpvar_4;
  lowp vec4 tmpvar_5;
  tmpvar_5 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_6;
  tmpvar_6 = (tmpvar_5 * _Color);
  tmpvar_4 = tmpvar_6.xyz;
  mediump vec4 emission_7;
  mediump vec3 tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_8 = tmpvar_4;
  tmpvar_9 = tmpvar_2;
  mediump vec4 outGBuffer2_10;
  mediump vec4 tmpvar_11;
  tmpvar_11.xyz = tmpvar_8;
  tmpvar_11.w = 1.0;
  mediump vec4 tmpvar_12;
  tmpvar_12.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_12.w = 0.0;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = ((tmpvar_9 * 0.5) + 0.5);
  outGBuffer2_10 = tmpvar_13;
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = ((textureCube (_Cube, tmpvar_3) * tmpvar_5.w).xyz * _ReflectColor.xyz);
  emission_7 = tmpvar_14;
  emission_7.xyz = (emission_7.xyz + (tmpvar_6.xyz * xlv_TEXCOORD5));
  outEmission_1.w = emission_7.w;
  outEmission_1.xyz = exp2(-(emission_7.xyz));
  gl_FragData[0] = tmpvar_11;
  gl_FragData[1] = tmpvar_12;
  gl_FragData[2] = outGBuffer2_10;
  gl_FragData[3] = outEmission_1;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying mediump vec3 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_4;
  tmpvar_4 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_5;
  tmpvar_5[0] = unity_WorldToObject[0].xyz;
  tmpvar_5[1] = unity_WorldToObject[1].xyz;
  tmpvar_5[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_glesNormal * tmpvar_5));
  highp vec3 tmpvar_7;
  highp vec3 I_8;
  I_8 = (tmpvar_4 - _WorldSpaceCameraPos);
  tmpvar_7 = (I_8 - (2.0 * (
    dot (tmpvar_6, I_8)
   * tmpvar_6)));
  tmpvar_1 = tmpvar_7;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_2.xy = vec2(0.0, 0.0);
  mediump vec3 normal_9;
  normal_9 = tmpvar_6;
  mediump vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = normal_9;
  mediump vec3 res_11;
  mediump vec3 x_12;
  x_12.x = dot (unity_SHAr, tmpvar_10);
  x_12.y = dot (unity_SHAg, tmpvar_10);
  x_12.z = dot (unity_SHAb, tmpvar_10);
  mediump vec3 x1_13;
  mediump vec4 tmpvar_14;
  tmpvar_14 = (normal_9.xyzz * normal_9.yzzx);
  x1_13.x = dot (unity_SHBr, tmpvar_14);
  x1_13.y = dot (unity_SHBg, tmpvar_14);
  x1_13.z = dot (unity_SHBb, tmpvar_14);
  res_11 = (x_12 + (x1_13 + (unity_SHC.xyz * 
    ((normal_9.x * normal_9.x) - (normal_9.y * normal_9.y))
  )));
  mediump vec3 tmpvar_15;
  tmpvar_15 = max (((1.055 * 
    pow (max (res_11, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_11 = tmpvar_15;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = max (vec3(0.0, 0.0, 0.0), tmpvar_15);
}


#endif
#ifdef FRAGMENT
#extension GL_EXT_draw_buffers : enable
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD5;
void main ()
{
  mediump vec4 outEmission_1;
  lowp vec3 tmpvar_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = xlv_TEXCOORD1;
  tmpvar_2 = xlv_TEXCOORD2;
  lowp vec3 tmpvar_4;
  lowp vec4 tmpvar_5;
  tmpvar_5 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_6;
  tmpvar_6 = (tmpvar_5 * _Color);
  tmpvar_4 = tmpvar_6.xyz;
  mediump vec4 emission_7;
  mediump vec3 tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_8 = tmpvar_4;
  tmpvar_9 = tmpvar_2;
  mediump vec4 outGBuffer2_10;
  mediump vec4 tmpvar_11;
  tmpvar_11.xyz = tmpvar_8;
  tmpvar_11.w = 1.0;
  mediump vec4 tmpvar_12;
  tmpvar_12.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_12.w = 0.0;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = ((tmpvar_9 * 0.5) + 0.5);
  outGBuffer2_10 = tmpvar_13;
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = ((textureCube (_Cube, tmpvar_3) * tmpvar_5.w).xyz * _ReflectColor.xyz);
  emission_7 = tmpvar_14;
  emission_7.xyz = (emission_7.xyz + (tmpvar_6.xyz * xlv_TEXCOORD5));
  outEmission_1.w = emission_7.w;
  outEmission_1.xyz = exp2(-(emission_7.xyz));
  gl_FragData[0] = tmpvar_11;
  gl_FragData[1] = tmpvar_12;
  gl_FragData[2] = outGBuffer2_10;
  gl_FragData[3] = outEmission_1;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying mediump vec3 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_4;
  tmpvar_4 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_5;
  tmpvar_5[0] = unity_WorldToObject[0].xyz;
  tmpvar_5[1] = unity_WorldToObject[1].xyz;
  tmpvar_5[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_glesNormal * tmpvar_5));
  highp vec3 tmpvar_7;
  highp vec3 I_8;
  I_8 = (tmpvar_4 - _WorldSpaceCameraPos);
  tmpvar_7 = (I_8 - (2.0 * (
    dot (tmpvar_6, I_8)
   * tmpvar_6)));
  tmpvar_1 = tmpvar_7;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_2.xy = vec2(0.0, 0.0);
  mediump vec3 normal_9;
  normal_9 = tmpvar_6;
  mediump vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = normal_9;
  mediump vec3 res_11;
  mediump vec3 x_12;
  x_12.x = dot (unity_SHAr, tmpvar_10);
  x_12.y = dot (unity_SHAg, tmpvar_10);
  x_12.z = dot (unity_SHAb, tmpvar_10);
  mediump vec3 x1_13;
  mediump vec4 tmpvar_14;
  tmpvar_14 = (normal_9.xyzz * normal_9.yzzx);
  x1_13.x = dot (unity_SHBr, tmpvar_14);
  x1_13.y = dot (unity_SHBg, tmpvar_14);
  x1_13.z = dot (unity_SHBb, tmpvar_14);
  res_11 = (x_12 + (x1_13 + (unity_SHC.xyz * 
    ((normal_9.x * normal_9.x) - (normal_9.y * normal_9.y))
  )));
  mediump vec3 tmpvar_15;
  tmpvar_15 = max (((1.055 * 
    pow (max (res_11, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_11 = tmpvar_15;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = max (vec3(0.0, 0.0, 0.0), tmpvar_15);
}


#endif
#ifdef FRAGMENT
#extension GL_EXT_draw_buffers : enable
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD5;
void main ()
{
  mediump vec4 outEmission_1;
  lowp vec3 tmpvar_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = xlv_TEXCOORD1;
  tmpvar_2 = xlv_TEXCOORD2;
  lowp vec3 tmpvar_4;
  lowp vec4 tmpvar_5;
  tmpvar_5 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_6;
  tmpvar_6 = (tmpvar_5 * _Color);
  tmpvar_4 = tmpvar_6.xyz;
  mediump vec4 emission_7;
  mediump vec3 tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_8 = tmpvar_4;
  tmpvar_9 = tmpvar_2;
  mediump vec4 outGBuffer2_10;
  mediump vec4 tmpvar_11;
  tmpvar_11.xyz = tmpvar_8;
  tmpvar_11.w = 1.0;
  mediump vec4 tmpvar_12;
  tmpvar_12.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_12.w = 0.0;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = ((tmpvar_9 * 0.5) + 0.5);
  outGBuffer2_10 = tmpvar_13;
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = ((textureCube (_Cube, tmpvar_3) * tmpvar_5.w).xyz * _ReflectColor.xyz);
  emission_7 = tmpvar_14;
  emission_7.xyz = (emission_7.xyz + (tmpvar_6.xyz * xlv_TEXCOORD5));
  outEmission_1.w = emission_7.w;
  outEmission_1.xyz = exp2(-(emission_7.xyz));
  gl_FragData[0] = tmpvar_11;
  gl_FragData[1] = tmpvar_12;
  gl_FragData[2] = outGBuffer2_10;
  gl_FragData[3] = outEmission_1;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying mediump vec3 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_4;
  tmpvar_4 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_5;
  tmpvar_5[0] = unity_WorldToObject[0].xyz;
  tmpvar_5[1] = unity_WorldToObject[1].xyz;
  tmpvar_5[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_glesNormal * tmpvar_5));
  highp vec3 tmpvar_7;
  highp vec3 I_8;
  I_8 = (tmpvar_4 - _WorldSpaceCameraPos);
  tmpvar_7 = (I_8 - (2.0 * (
    dot (tmpvar_6, I_8)
   * tmpvar_6)));
  tmpvar_1 = tmpvar_7;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_2.xy = vec2(0.0, 0.0);
  mediump vec3 normal_9;
  normal_9 = tmpvar_6;
  mediump vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = normal_9;
  mediump vec3 res_11;
  mediump vec3 x_12;
  x_12.x = dot (unity_SHAr, tmpvar_10);
  x_12.y = dot (unity_SHAg, tmpvar_10);
  x_12.z = dot (unity_SHAb, tmpvar_10);
  mediump vec3 x1_13;
  mediump vec4 tmpvar_14;
  tmpvar_14 = (normal_9.xyzz * normal_9.yzzx);
  x1_13.x = dot (unity_SHBr, tmpvar_14);
  x1_13.y = dot (unity_SHBg, tmpvar_14);
  x1_13.z = dot (unity_SHBb, tmpvar_14);
  res_11 = (x_12 + (x1_13 + (unity_SHC.xyz * 
    ((normal_9.x * normal_9.x) - (normal_9.y * normal_9.y))
  )));
  mediump vec3 tmpvar_15;
  tmpvar_15 = max (((1.055 * 
    pow (max (res_11, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_11 = tmpvar_15;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = max (vec3(0.0, 0.0, 0.0), tmpvar_15);
}


#endif
#ifdef FRAGMENT
#extension GL_EXT_draw_buffers : enable
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD5;
void main ()
{
  mediump vec4 outEmission_1;
  lowp vec3 tmpvar_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = xlv_TEXCOORD1;
  tmpvar_2 = xlv_TEXCOORD2;
  lowp vec3 tmpvar_4;
  lowp vec4 tmpvar_5;
  tmpvar_5 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_6;
  tmpvar_6 = (tmpvar_5 * _Color);
  tmpvar_4 = tmpvar_6.xyz;
  mediump vec4 emission_7;
  mediump vec3 tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_8 = tmpvar_4;
  tmpvar_9 = tmpvar_2;
  mediump vec4 outGBuffer2_10;
  mediump vec4 tmpvar_11;
  tmpvar_11.xyz = tmpvar_8;
  tmpvar_11.w = 1.0;
  mediump vec4 tmpvar_12;
  tmpvar_12.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_12.w = 0.0;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = ((tmpvar_9 * 0.5) + 0.5);
  outGBuffer2_10 = tmpvar_13;
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = ((textureCube (_Cube, tmpvar_3) * tmpvar_5.w).xyz * _ReflectColor.xyz);
  emission_7 = tmpvar_14;
  emission_7.xyz = (emission_7.xyz + (tmpvar_6.xyz * xlv_TEXCOORD5));
  outEmission_1.w = emission_7.w;
  outEmission_1.xyz = exp2(-(emission_7.xyz));
  gl_FragData[0] = tmpvar_11;
  gl_FragData[1] = tmpvar_12;
  gl_FragData[2] = outGBuffer2_10;
  gl_FragData[3] = outEmission_1;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "LIGHTMAP_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  mediump vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  tmpvar_5.w = 1.0;
  tmpvar_5.xyz = tmpvar_1.xyz;
  highp vec4 tmpvar_6;
  tmpvar_6 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_7;
  tmpvar_7[0] = unity_WorldToObject[0].xyz;
  tmpvar_7[1] = unity_WorldToObject[1].xyz;
  tmpvar_7[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_glesNormal * tmpvar_7));
  highp vec3 tmpvar_9;
  highp vec3 I_10;
  I_10 = (tmpvar_6.xyz - _WorldSpaceCameraPos);
  tmpvar_9 = (I_10 - (2.0 * (
    dot (tmpvar_8, I_10)
   * tmpvar_8)));
  tmpvar_2 = tmpvar_9;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  tmpvar_4.xyz = ((tmpvar_6.xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
  highp vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = tmpvar_1.xyz;
  tmpvar_4.w = (-((unity_MatrixV * 
    (unity_ObjectToWorld * tmpvar_11)
  ).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_8;
  xlv_TEXCOORD3 = tmpvar_6.xyz;
  xlv_TEXCOORD4 = tmpvar_3;
  xlv_TEXCOORD5 = tmpvar_4;
}


#endif
#ifdef FRAGMENT
#extension GL_EXT_draw_buffers : enable
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  mediump vec4 outEmission_1;
  lowp vec3 tmpvar_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = xlv_TEXCOORD1;
  tmpvar_2 = xlv_TEXCOORD2;
  lowp vec3 tmpvar_4;
  lowp vec4 tmpvar_5;
  tmpvar_5 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_6;
  tmpvar_6 = (tmpvar_5 * _Color);
  tmpvar_4 = tmpvar_6.xyz;
  mediump vec4 tmpvar_7;
  tmpvar_7 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_8;
  color_8 = tmpvar_7;
  mediump vec4 emission_9;
  mediump vec3 tmpvar_10;
  highp vec3 tmpvar_11;
  tmpvar_10 = tmpvar_4;
  tmpvar_11 = tmpvar_2;
  mediump vec4 outGBuffer2_12;
  mediump vec4 tmpvar_13;
  tmpvar_13.xyz = tmpvar_10;
  tmpvar_13.w = 1.0;
  mediump vec4 tmpvar_14;
  tmpvar_14.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_14.w = 0.0;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = ((tmpvar_11 * 0.5) + 0.5);
  outGBuffer2_12 = tmpvar_15;
  lowp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = ((textureCube (_Cube, tmpvar_3) * tmpvar_5.w).xyz * _ReflectColor.xyz);
  emission_9 = tmpvar_16;
  emission_9.xyz = (emission_9.xyz + (tmpvar_6.xyz * (unity_Lightmap_HDR.x * color_8.xyz)));
  outEmission_1.w = emission_9.w;
  outEmission_1.xyz = exp2(-(emission_9.xyz));
  gl_FragData[0] = tmpvar_13;
  gl_FragData[1] = tmpvar_14;
  gl_FragData[2] = outGBuffer2_12;
  gl_FragData[3] = outEmission_1;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTMAP_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  mediump vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  tmpvar_5.w = 1.0;
  tmpvar_5.xyz = tmpvar_1.xyz;
  highp vec4 tmpvar_6;
  tmpvar_6 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_7;
  tmpvar_7[0] = unity_WorldToObject[0].xyz;
  tmpvar_7[1] = unity_WorldToObject[1].xyz;
  tmpvar_7[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_glesNormal * tmpvar_7));
  highp vec3 tmpvar_9;
  highp vec3 I_10;
  I_10 = (tmpvar_6.xyz - _WorldSpaceCameraPos);
  tmpvar_9 = (I_10 - (2.0 * (
    dot (tmpvar_8, I_10)
   * tmpvar_8)));
  tmpvar_2 = tmpvar_9;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  tmpvar_4.xyz = ((tmpvar_6.xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
  highp vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = tmpvar_1.xyz;
  tmpvar_4.w = (-((unity_MatrixV * 
    (unity_ObjectToWorld * tmpvar_11)
  ).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_8;
  xlv_TEXCOORD3 = tmpvar_6.xyz;
  xlv_TEXCOORD4 = tmpvar_3;
  xlv_TEXCOORD5 = tmpvar_4;
}


#endif
#ifdef FRAGMENT
#extension GL_EXT_draw_buffers : enable
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  mediump vec4 outEmission_1;
  lowp vec3 tmpvar_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = xlv_TEXCOORD1;
  tmpvar_2 = xlv_TEXCOORD2;
  lowp vec3 tmpvar_4;
  lowp vec4 tmpvar_5;
  tmpvar_5 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_6;
  tmpvar_6 = (tmpvar_5 * _Color);
  tmpvar_4 = tmpvar_6.xyz;
  mediump vec4 tmpvar_7;
  tmpvar_7 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_8;
  color_8 = tmpvar_7;
  mediump vec4 emission_9;
  mediump vec3 tmpvar_10;
  highp vec3 tmpvar_11;
  tmpvar_10 = tmpvar_4;
  tmpvar_11 = tmpvar_2;
  mediump vec4 outGBuffer2_12;
  mediump vec4 tmpvar_13;
  tmpvar_13.xyz = tmpvar_10;
  tmpvar_13.w = 1.0;
  mediump vec4 tmpvar_14;
  tmpvar_14.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_14.w = 0.0;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = ((tmpvar_11 * 0.5) + 0.5);
  outGBuffer2_12 = tmpvar_15;
  lowp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = ((textureCube (_Cube, tmpvar_3) * tmpvar_5.w).xyz * _ReflectColor.xyz);
  emission_9 = tmpvar_16;
  emission_9.xyz = (emission_9.xyz + (tmpvar_6.xyz * (unity_Lightmap_HDR.x * color_8.xyz)));
  outEmission_1.w = emission_9.w;
  outEmission_1.xyz = exp2(-(emission_9.xyz));
  gl_FragData[0] = tmpvar_13;
  gl_FragData[1] = tmpvar_14;
  gl_FragData[2] = outGBuffer2_12;
  gl_FragData[3] = outEmission_1;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTMAP_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  mediump vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  tmpvar_5.w = 1.0;
  tmpvar_5.xyz = tmpvar_1.xyz;
  highp vec4 tmpvar_6;
  tmpvar_6 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_7;
  tmpvar_7[0] = unity_WorldToObject[0].xyz;
  tmpvar_7[1] = unity_WorldToObject[1].xyz;
  tmpvar_7[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_glesNormal * tmpvar_7));
  highp vec3 tmpvar_9;
  highp vec3 I_10;
  I_10 = (tmpvar_6.xyz - _WorldSpaceCameraPos);
  tmpvar_9 = (I_10 - (2.0 * (
    dot (tmpvar_8, I_10)
   * tmpvar_8)));
  tmpvar_2 = tmpvar_9;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  tmpvar_4.xyz = ((tmpvar_6.xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
  highp vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = tmpvar_1.xyz;
  tmpvar_4.w = (-((unity_MatrixV * 
    (unity_ObjectToWorld * tmpvar_11)
  ).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_8;
  xlv_TEXCOORD3 = tmpvar_6.xyz;
  xlv_TEXCOORD4 = tmpvar_3;
  xlv_TEXCOORD5 = tmpvar_4;
}


#endif
#ifdef FRAGMENT
#extension GL_EXT_draw_buffers : enable
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  mediump vec4 outEmission_1;
  lowp vec3 tmpvar_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = xlv_TEXCOORD1;
  tmpvar_2 = xlv_TEXCOORD2;
  lowp vec3 tmpvar_4;
  lowp vec4 tmpvar_5;
  tmpvar_5 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_6;
  tmpvar_6 = (tmpvar_5 * _Color);
  tmpvar_4 = tmpvar_6.xyz;
  mediump vec4 tmpvar_7;
  tmpvar_7 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_8;
  color_8 = tmpvar_7;
  mediump vec4 emission_9;
  mediump vec3 tmpvar_10;
  highp vec3 tmpvar_11;
  tmpvar_10 = tmpvar_4;
  tmpvar_11 = tmpvar_2;
  mediump vec4 outGBuffer2_12;
  mediump vec4 tmpvar_13;
  tmpvar_13.xyz = tmpvar_10;
  tmpvar_13.w = 1.0;
  mediump vec4 tmpvar_14;
  tmpvar_14.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_14.w = 0.0;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = ((tmpvar_11 * 0.5) + 0.5);
  outGBuffer2_12 = tmpvar_15;
  lowp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = ((textureCube (_Cube, tmpvar_3) * tmpvar_5.w).xyz * _ReflectColor.xyz);
  emission_9 = tmpvar_16;
  emission_9.xyz = (emission_9.xyz + (tmpvar_6.xyz * (unity_Lightmap_HDR.x * color_8.xyz)));
  outEmission_1.w = emission_9.w;
  outEmission_1.xyz = exp2(-(emission_9.xyz));
  gl_FragData[0] = tmpvar_13;
  gl_FragData[1] = tmpvar_14;
  gl_FragData[2] = outGBuffer2_12;
  gl_FragData[3] = outEmission_1;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "LIGHTMAP_ON" "LIGHTPROBE_SH" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  mediump vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  tmpvar_5.w = 1.0;
  tmpvar_5.xyz = tmpvar_1.xyz;
  highp vec4 tmpvar_6;
  tmpvar_6 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_7;
  tmpvar_7[0] = unity_WorldToObject[0].xyz;
  tmpvar_7[1] = unity_WorldToObject[1].xyz;
  tmpvar_7[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_glesNormal * tmpvar_7));
  highp vec3 tmpvar_9;
  highp vec3 I_10;
  I_10 = (tmpvar_6.xyz - _WorldSpaceCameraPos);
  tmpvar_9 = (I_10 - (2.0 * (
    dot (tmpvar_8, I_10)
   * tmpvar_8)));
  tmpvar_2 = tmpvar_9;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  tmpvar_4.xyz = ((tmpvar_6.xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
  highp vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = tmpvar_1.xyz;
  tmpvar_4.w = (-((unity_MatrixV * 
    (unity_ObjectToWorld * tmpvar_11)
  ).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_8;
  xlv_TEXCOORD3 = tmpvar_6.xyz;
  xlv_TEXCOORD4 = tmpvar_3;
  xlv_TEXCOORD5 = tmpvar_4;
}


#endif
#ifdef FRAGMENT
#extension GL_EXT_draw_buffers : enable
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  mediump vec4 outEmission_1;
  lowp vec3 tmpvar_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = xlv_TEXCOORD1;
  tmpvar_2 = xlv_TEXCOORD2;
  lowp vec3 tmpvar_4;
  lowp vec4 tmpvar_5;
  tmpvar_5 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_6;
  tmpvar_6 = (tmpvar_5 * _Color);
  tmpvar_4 = tmpvar_6.xyz;
  mediump vec3 normalWorld_7;
  normalWorld_7 = tmpvar_2;
  mediump vec3 ambient_8;
  mediump vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = normalWorld_7;
  mediump vec3 x_10;
  x_10.x = dot (unity_SHAr, tmpvar_9);
  x_10.y = dot (unity_SHAg, tmpvar_9);
  x_10.z = dot (unity_SHAb, tmpvar_9);
  mediump vec3 x1_11;
  mediump vec4 tmpvar_12;
  tmpvar_12 = (normalWorld_7.xyzz * normalWorld_7.yzzx);
  x1_11.x = dot (unity_SHBr, tmpvar_12);
  x1_11.y = dot (unity_SHBg, tmpvar_12);
  x1_11.z = dot (unity_SHBb, tmpvar_12);
  ambient_8 = max (vec3(0.0, 0.0, 0.0), (x_10 + (x1_11 + 
    (unity_SHC.xyz * ((normalWorld_7.x * normalWorld_7.x) - (normalWorld_7.y * normalWorld_7.y)))
  )));
  mediump vec3 tmpvar_13;
  tmpvar_13 = max (((1.055 * 
    pow (max (ambient_8, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  ambient_8 = tmpvar_13;
  mediump vec4 tmpvar_14;
  tmpvar_14 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_15;
  color_15 = tmpvar_14;
  mediump vec4 emission_16;
  mediump vec3 tmpvar_17;
  highp vec3 tmpvar_18;
  tmpvar_17 = tmpvar_4;
  tmpvar_18 = tmpvar_2;
  mediump vec4 outGBuffer2_19;
  mediump vec4 tmpvar_20;
  tmpvar_20.xyz = tmpvar_17;
  tmpvar_20.w = 1.0;
  mediump vec4 tmpvar_21;
  tmpvar_21.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_21.w = 0.0;
  highp vec4 tmpvar_22;
  tmpvar_22.w = 1.0;
  tmpvar_22.xyz = ((tmpvar_18 * 0.5) + 0.5);
  outGBuffer2_19 = tmpvar_22;
  lowp vec4 tmpvar_23;
  tmpvar_23.w = 1.0;
  tmpvar_23.xyz = ((textureCube (_Cube, tmpvar_3) * tmpvar_5.w).xyz * _ReflectColor.xyz);
  emission_16 = tmpvar_23;
  emission_16.xyz = (emission_16.xyz + (tmpvar_6.xyz * (tmpvar_13 + 
    (unity_Lightmap_HDR.x * color_15.xyz)
  )));
  outEmission_1.w = emission_16.w;
  outEmission_1.xyz = exp2(-(emission_16.xyz));
  gl_FragData[0] = tmpvar_20;
  gl_FragData[1] = tmpvar_21;
  gl_FragData[2] = outGBuffer2_19;
  gl_FragData[3] = outEmission_1;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTMAP_ON" "LIGHTPROBE_SH" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  mediump vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  tmpvar_5.w = 1.0;
  tmpvar_5.xyz = tmpvar_1.xyz;
  highp vec4 tmpvar_6;
  tmpvar_6 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_7;
  tmpvar_7[0] = unity_WorldToObject[0].xyz;
  tmpvar_7[1] = unity_WorldToObject[1].xyz;
  tmpvar_7[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_glesNormal * tmpvar_7));
  highp vec3 tmpvar_9;
  highp vec3 I_10;
  I_10 = (tmpvar_6.xyz - _WorldSpaceCameraPos);
  tmpvar_9 = (I_10 - (2.0 * (
    dot (tmpvar_8, I_10)
   * tmpvar_8)));
  tmpvar_2 = tmpvar_9;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  tmpvar_4.xyz = ((tmpvar_6.xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
  highp vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = tmpvar_1.xyz;
  tmpvar_4.w = (-((unity_MatrixV * 
    (unity_ObjectToWorld * tmpvar_11)
  ).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_8;
  xlv_TEXCOORD3 = tmpvar_6.xyz;
  xlv_TEXCOORD4 = tmpvar_3;
  xlv_TEXCOORD5 = tmpvar_4;
}


#endif
#ifdef FRAGMENT
#extension GL_EXT_draw_buffers : enable
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  mediump vec4 outEmission_1;
  lowp vec3 tmpvar_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = xlv_TEXCOORD1;
  tmpvar_2 = xlv_TEXCOORD2;
  lowp vec3 tmpvar_4;
  lowp vec4 tmpvar_5;
  tmpvar_5 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_6;
  tmpvar_6 = (tmpvar_5 * _Color);
  tmpvar_4 = tmpvar_6.xyz;
  mediump vec3 normalWorld_7;
  normalWorld_7 = tmpvar_2;
  mediump vec3 ambient_8;
  mediump vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = normalWorld_7;
  mediump vec3 x_10;
  x_10.x = dot (unity_SHAr, tmpvar_9);
  x_10.y = dot (unity_SHAg, tmpvar_9);
  x_10.z = dot (unity_SHAb, tmpvar_9);
  mediump vec3 x1_11;
  mediump vec4 tmpvar_12;
  tmpvar_12 = (normalWorld_7.xyzz * normalWorld_7.yzzx);
  x1_11.x = dot (unity_SHBr, tmpvar_12);
  x1_11.y = dot (unity_SHBg, tmpvar_12);
  x1_11.z = dot (unity_SHBb, tmpvar_12);
  ambient_8 = max (vec3(0.0, 0.0, 0.0), (x_10 + (x1_11 + 
    (unity_SHC.xyz * ((normalWorld_7.x * normalWorld_7.x) - (normalWorld_7.y * normalWorld_7.y)))
  )));
  mediump vec3 tmpvar_13;
  tmpvar_13 = max (((1.055 * 
    pow (max (ambient_8, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  ambient_8 = tmpvar_13;
  mediump vec4 tmpvar_14;
  tmpvar_14 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_15;
  color_15 = tmpvar_14;
  mediump vec4 emission_16;
  mediump vec3 tmpvar_17;
  highp vec3 tmpvar_18;
  tmpvar_17 = tmpvar_4;
  tmpvar_18 = tmpvar_2;
  mediump vec4 outGBuffer2_19;
  mediump vec4 tmpvar_20;
  tmpvar_20.xyz = tmpvar_17;
  tmpvar_20.w = 1.0;
  mediump vec4 tmpvar_21;
  tmpvar_21.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_21.w = 0.0;
  highp vec4 tmpvar_22;
  tmpvar_22.w = 1.0;
  tmpvar_22.xyz = ((tmpvar_18 * 0.5) + 0.5);
  outGBuffer2_19 = tmpvar_22;
  lowp vec4 tmpvar_23;
  tmpvar_23.w = 1.0;
  tmpvar_23.xyz = ((textureCube (_Cube, tmpvar_3) * tmpvar_5.w).xyz * _ReflectColor.xyz);
  emission_16 = tmpvar_23;
  emission_16.xyz = (emission_16.xyz + (tmpvar_6.xyz * (tmpvar_13 + 
    (unity_Lightmap_HDR.x * color_15.xyz)
  )));
  outEmission_1.w = emission_16.w;
  outEmission_1.xyz = exp2(-(emission_16.xyz));
  gl_FragData[0] = tmpvar_20;
  gl_FragData[1] = tmpvar_21;
  gl_FragData[2] = outGBuffer2_19;
  gl_FragData[3] = outEmission_1;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTMAP_ON" "LIGHTPROBE_SH" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  mediump vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  tmpvar_5.w = 1.0;
  tmpvar_5.xyz = tmpvar_1.xyz;
  highp vec4 tmpvar_6;
  tmpvar_6 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_7;
  tmpvar_7[0] = unity_WorldToObject[0].xyz;
  tmpvar_7[1] = unity_WorldToObject[1].xyz;
  tmpvar_7[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_glesNormal * tmpvar_7));
  highp vec3 tmpvar_9;
  highp vec3 I_10;
  I_10 = (tmpvar_6.xyz - _WorldSpaceCameraPos);
  tmpvar_9 = (I_10 - (2.0 * (
    dot (tmpvar_8, I_10)
   * tmpvar_8)));
  tmpvar_2 = tmpvar_9;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  tmpvar_4.xyz = ((tmpvar_6.xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
  highp vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = tmpvar_1.xyz;
  tmpvar_4.w = (-((unity_MatrixV * 
    (unity_ObjectToWorld * tmpvar_11)
  ).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_8;
  xlv_TEXCOORD3 = tmpvar_6.xyz;
  xlv_TEXCOORD4 = tmpvar_3;
  xlv_TEXCOORD5 = tmpvar_4;
}


#endif
#ifdef FRAGMENT
#extension GL_EXT_draw_buffers : enable
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  mediump vec4 outEmission_1;
  lowp vec3 tmpvar_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = xlv_TEXCOORD1;
  tmpvar_2 = xlv_TEXCOORD2;
  lowp vec3 tmpvar_4;
  lowp vec4 tmpvar_5;
  tmpvar_5 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_6;
  tmpvar_6 = (tmpvar_5 * _Color);
  tmpvar_4 = tmpvar_6.xyz;
  mediump vec3 normalWorld_7;
  normalWorld_7 = tmpvar_2;
  mediump vec3 ambient_8;
  mediump vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = normalWorld_7;
  mediump vec3 x_10;
  x_10.x = dot (unity_SHAr, tmpvar_9);
  x_10.y = dot (unity_SHAg, tmpvar_9);
  x_10.z = dot (unity_SHAb, tmpvar_9);
  mediump vec3 x1_11;
  mediump vec4 tmpvar_12;
  tmpvar_12 = (normalWorld_7.xyzz * normalWorld_7.yzzx);
  x1_11.x = dot (unity_SHBr, tmpvar_12);
  x1_11.y = dot (unity_SHBg, tmpvar_12);
  x1_11.z = dot (unity_SHBb, tmpvar_12);
  ambient_8 = max (vec3(0.0, 0.0, 0.0), (x_10 + (x1_11 + 
    (unity_SHC.xyz * ((normalWorld_7.x * normalWorld_7.x) - (normalWorld_7.y * normalWorld_7.y)))
  )));
  mediump vec3 tmpvar_13;
  tmpvar_13 = max (((1.055 * 
    pow (max (ambient_8, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  ambient_8 = tmpvar_13;
  mediump vec4 tmpvar_14;
  tmpvar_14 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_15;
  color_15 = tmpvar_14;
  mediump vec4 emission_16;
  mediump vec3 tmpvar_17;
  highp vec3 tmpvar_18;
  tmpvar_17 = tmpvar_4;
  tmpvar_18 = tmpvar_2;
  mediump vec4 outGBuffer2_19;
  mediump vec4 tmpvar_20;
  tmpvar_20.xyz = tmpvar_17;
  tmpvar_20.w = 1.0;
  mediump vec4 tmpvar_21;
  tmpvar_21.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_21.w = 0.0;
  highp vec4 tmpvar_22;
  tmpvar_22.w = 1.0;
  tmpvar_22.xyz = ((tmpvar_18 * 0.5) + 0.5);
  outGBuffer2_19 = tmpvar_22;
  lowp vec4 tmpvar_23;
  tmpvar_23.w = 1.0;
  tmpvar_23.xyz = ((textureCube (_Cube, tmpvar_3) * tmpvar_5.w).xyz * _ReflectColor.xyz);
  emission_16 = tmpvar_23;
  emission_16.xyz = (emission_16.xyz + (tmpvar_6.xyz * (tmpvar_13 + 
    (unity_Lightmap_HDR.x * color_15.xyz)
  )));
  outEmission_1.w = emission_16.w;
  outEmission_1.xyz = exp2(-(emission_16.xyz));
  gl_FragData[0] = tmpvar_20;
  gl_FragData[1] = tmpvar_21;
  gl_FragData[2] = outGBuffer2_19;
  gl_FragData[3] = outEmission_1;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  mediump vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  tmpvar_5.w = 1.0;
  tmpvar_5.xyz = tmpvar_1.xyz;
  highp vec4 tmpvar_6;
  tmpvar_6 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_7;
  tmpvar_7[0] = unity_WorldToObject[0].xyz;
  tmpvar_7[1] = unity_WorldToObject[1].xyz;
  tmpvar_7[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_glesNormal * tmpvar_7));
  highp vec3 tmpvar_9;
  highp vec3 I_10;
  I_10 = (tmpvar_6.xyz - _WorldSpaceCameraPos);
  tmpvar_9 = (I_10 - (2.0 * (
    dot (tmpvar_8, I_10)
   * tmpvar_8)));
  tmpvar_2 = tmpvar_9;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  tmpvar_4.xyz = ((tmpvar_6.xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
  highp vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = tmpvar_1.xyz;
  tmpvar_4.w = (-((unity_MatrixV * 
    (unity_ObjectToWorld * tmpvar_11)
  ).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_8;
  xlv_TEXCOORD3 = tmpvar_6.xyz;
  xlv_TEXCOORD4 = tmpvar_3;
  xlv_TEXCOORD5 = tmpvar_4;
}


#endif
#ifdef FRAGMENT
#extension GL_EXT_draw_buffers : enable
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  mediump vec4 outEmission_1;
  lowp vec3 tmpvar_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = xlv_TEXCOORD1;
  tmpvar_2 = xlv_TEXCOORD2;
  lowp vec3 tmpvar_4;
  lowp vec4 tmpvar_5;
  tmpvar_5 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_6;
  tmpvar_6 = (tmpvar_5 * _Color);
  tmpvar_4 = tmpvar_6.xyz;
  mediump vec4 tmpvar_7;
  tmpvar_7 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_8;
  color_8 = tmpvar_7;
  mediump vec4 emission_9;
  mediump vec3 tmpvar_10;
  highp vec3 tmpvar_11;
  tmpvar_10 = tmpvar_4;
  tmpvar_11 = tmpvar_2;
  mediump vec4 outGBuffer2_12;
  mediump vec4 tmpvar_13;
  tmpvar_13.xyz = tmpvar_10;
  tmpvar_13.w = 1.0;
  mediump vec4 tmpvar_14;
  tmpvar_14.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_14.w = 0.0;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = ((tmpvar_11 * 0.5) + 0.5);
  outGBuffer2_12 = tmpvar_15;
  lowp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = ((textureCube (_Cube, tmpvar_3) * tmpvar_5.w).xyz * _ReflectColor.xyz);
  emission_9 = tmpvar_16;
  emission_9.xyz = (emission_9.xyz + (tmpvar_6.xyz * (unity_Lightmap_HDR.x * color_8.xyz)));
  outEmission_1.w = emission_9.w;
  outEmission_1.xyz = exp2(-(emission_9.xyz));
  gl_FragData[0] = tmpvar_13;
  gl_FragData[1] = tmpvar_14;
  gl_FragData[2] = outGBuffer2_12;
  gl_FragData[3] = outEmission_1;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  mediump vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  tmpvar_5.w = 1.0;
  tmpvar_5.xyz = tmpvar_1.xyz;
  highp vec4 tmpvar_6;
  tmpvar_6 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_7;
  tmpvar_7[0] = unity_WorldToObject[0].xyz;
  tmpvar_7[1] = unity_WorldToObject[1].xyz;
  tmpvar_7[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_glesNormal * tmpvar_7));
  highp vec3 tmpvar_9;
  highp vec3 I_10;
  I_10 = (tmpvar_6.xyz - _WorldSpaceCameraPos);
  tmpvar_9 = (I_10 - (2.0 * (
    dot (tmpvar_8, I_10)
   * tmpvar_8)));
  tmpvar_2 = tmpvar_9;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  tmpvar_4.xyz = ((tmpvar_6.xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
  highp vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = tmpvar_1.xyz;
  tmpvar_4.w = (-((unity_MatrixV * 
    (unity_ObjectToWorld * tmpvar_11)
  ).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_8;
  xlv_TEXCOORD3 = tmpvar_6.xyz;
  xlv_TEXCOORD4 = tmpvar_3;
  xlv_TEXCOORD5 = tmpvar_4;
}


#endif
#ifdef FRAGMENT
#extension GL_EXT_draw_buffers : enable
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  mediump vec4 outEmission_1;
  lowp vec3 tmpvar_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = xlv_TEXCOORD1;
  tmpvar_2 = xlv_TEXCOORD2;
  lowp vec3 tmpvar_4;
  lowp vec4 tmpvar_5;
  tmpvar_5 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_6;
  tmpvar_6 = (tmpvar_5 * _Color);
  tmpvar_4 = tmpvar_6.xyz;
  mediump vec4 tmpvar_7;
  tmpvar_7 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_8;
  color_8 = tmpvar_7;
  mediump vec4 emission_9;
  mediump vec3 tmpvar_10;
  highp vec3 tmpvar_11;
  tmpvar_10 = tmpvar_4;
  tmpvar_11 = tmpvar_2;
  mediump vec4 outGBuffer2_12;
  mediump vec4 tmpvar_13;
  tmpvar_13.xyz = tmpvar_10;
  tmpvar_13.w = 1.0;
  mediump vec4 tmpvar_14;
  tmpvar_14.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_14.w = 0.0;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = ((tmpvar_11 * 0.5) + 0.5);
  outGBuffer2_12 = tmpvar_15;
  lowp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = ((textureCube (_Cube, tmpvar_3) * tmpvar_5.w).xyz * _ReflectColor.xyz);
  emission_9 = tmpvar_16;
  emission_9.xyz = (emission_9.xyz + (tmpvar_6.xyz * (unity_Lightmap_HDR.x * color_8.xyz)));
  outEmission_1.w = emission_9.w;
  outEmission_1.xyz = exp2(-(emission_9.xyz));
  gl_FragData[0] = tmpvar_13;
  gl_FragData[1] = tmpvar_14;
  gl_FragData[2] = outGBuffer2_12;
  gl_FragData[3] = outEmission_1;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  mediump vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  tmpvar_5.w = 1.0;
  tmpvar_5.xyz = tmpvar_1.xyz;
  highp vec4 tmpvar_6;
  tmpvar_6 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_7;
  tmpvar_7[0] = unity_WorldToObject[0].xyz;
  tmpvar_7[1] = unity_WorldToObject[1].xyz;
  tmpvar_7[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_glesNormal * tmpvar_7));
  highp vec3 tmpvar_9;
  highp vec3 I_10;
  I_10 = (tmpvar_6.xyz - _WorldSpaceCameraPos);
  tmpvar_9 = (I_10 - (2.0 * (
    dot (tmpvar_8, I_10)
   * tmpvar_8)));
  tmpvar_2 = tmpvar_9;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  tmpvar_4.xyz = ((tmpvar_6.xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
  highp vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = tmpvar_1.xyz;
  tmpvar_4.w = (-((unity_MatrixV * 
    (unity_ObjectToWorld * tmpvar_11)
  ).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_8;
  xlv_TEXCOORD3 = tmpvar_6.xyz;
  xlv_TEXCOORD4 = tmpvar_3;
  xlv_TEXCOORD5 = tmpvar_4;
}


#endif
#ifdef FRAGMENT
#extension GL_EXT_draw_buffers : enable
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  mediump vec4 outEmission_1;
  lowp vec3 tmpvar_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = xlv_TEXCOORD1;
  tmpvar_2 = xlv_TEXCOORD2;
  lowp vec3 tmpvar_4;
  lowp vec4 tmpvar_5;
  tmpvar_5 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_6;
  tmpvar_6 = (tmpvar_5 * _Color);
  tmpvar_4 = tmpvar_6.xyz;
  mediump vec4 tmpvar_7;
  tmpvar_7 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_8;
  color_8 = tmpvar_7;
  mediump vec4 emission_9;
  mediump vec3 tmpvar_10;
  highp vec3 tmpvar_11;
  tmpvar_10 = tmpvar_4;
  tmpvar_11 = tmpvar_2;
  mediump vec4 outGBuffer2_12;
  mediump vec4 tmpvar_13;
  tmpvar_13.xyz = tmpvar_10;
  tmpvar_13.w = 1.0;
  mediump vec4 tmpvar_14;
  tmpvar_14.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_14.w = 0.0;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = ((tmpvar_11 * 0.5) + 0.5);
  outGBuffer2_12 = tmpvar_15;
  lowp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = ((textureCube (_Cube, tmpvar_3) * tmpvar_5.w).xyz * _ReflectColor.xyz);
  emission_9 = tmpvar_16;
  emission_9.xyz = (emission_9.xyz + (tmpvar_6.xyz * (unity_Lightmap_HDR.x * color_8.xyz)));
  outEmission_1.w = emission_9.w;
  outEmission_1.xyz = exp2(-(emission_9.xyz));
  gl_FragData[0] = tmpvar_13;
  gl_FragData[1] = tmpvar_14;
  gl_FragData[2] = outGBuffer2_12;
  gl_FragData[3] = outEmission_1;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  mediump vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  tmpvar_5.w = 1.0;
  tmpvar_5.xyz = tmpvar_1.xyz;
  highp vec4 tmpvar_6;
  tmpvar_6 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_7;
  tmpvar_7[0] = unity_WorldToObject[0].xyz;
  tmpvar_7[1] = unity_WorldToObject[1].xyz;
  tmpvar_7[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_glesNormal * tmpvar_7));
  highp vec3 tmpvar_9;
  highp vec3 I_10;
  I_10 = (tmpvar_6.xyz - _WorldSpaceCameraPos);
  tmpvar_9 = (I_10 - (2.0 * (
    dot (tmpvar_8, I_10)
   * tmpvar_8)));
  tmpvar_2 = tmpvar_9;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  tmpvar_4.xyz = ((tmpvar_6.xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
  highp vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = tmpvar_1.xyz;
  tmpvar_4.w = (-((unity_MatrixV * 
    (unity_ObjectToWorld * tmpvar_11)
  ).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_8;
  xlv_TEXCOORD3 = tmpvar_6.xyz;
  xlv_TEXCOORD4 = tmpvar_3;
  xlv_TEXCOORD5 = tmpvar_4;
}


#endif
#ifdef FRAGMENT
#extension GL_EXT_draw_buffers : enable
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  mediump vec4 outEmission_1;
  lowp vec3 tmpvar_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = xlv_TEXCOORD1;
  tmpvar_2 = xlv_TEXCOORD2;
  lowp vec3 tmpvar_4;
  lowp vec4 tmpvar_5;
  tmpvar_5 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_6;
  tmpvar_6 = (tmpvar_5 * _Color);
  tmpvar_4 = tmpvar_6.xyz;
  mediump vec3 normalWorld_7;
  normalWorld_7 = tmpvar_2;
  mediump vec3 ambient_8;
  mediump vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = normalWorld_7;
  mediump vec3 x_10;
  x_10.x = dot (unity_SHAr, tmpvar_9);
  x_10.y = dot (unity_SHAg, tmpvar_9);
  x_10.z = dot (unity_SHAb, tmpvar_9);
  mediump vec3 x1_11;
  mediump vec4 tmpvar_12;
  tmpvar_12 = (normalWorld_7.xyzz * normalWorld_7.yzzx);
  x1_11.x = dot (unity_SHBr, tmpvar_12);
  x1_11.y = dot (unity_SHBg, tmpvar_12);
  x1_11.z = dot (unity_SHBb, tmpvar_12);
  ambient_8 = max (vec3(0.0, 0.0, 0.0), (x_10 + (x1_11 + 
    (unity_SHC.xyz * ((normalWorld_7.x * normalWorld_7.x) - (normalWorld_7.y * normalWorld_7.y)))
  )));
  mediump vec3 tmpvar_13;
  tmpvar_13 = max (((1.055 * 
    pow (max (ambient_8, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  ambient_8 = tmpvar_13;
  mediump vec4 tmpvar_14;
  tmpvar_14 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_15;
  color_15 = tmpvar_14;
  mediump vec4 emission_16;
  mediump vec3 tmpvar_17;
  highp vec3 tmpvar_18;
  tmpvar_17 = tmpvar_4;
  tmpvar_18 = tmpvar_2;
  mediump vec4 outGBuffer2_19;
  mediump vec4 tmpvar_20;
  tmpvar_20.xyz = tmpvar_17;
  tmpvar_20.w = 1.0;
  mediump vec4 tmpvar_21;
  tmpvar_21.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_21.w = 0.0;
  highp vec4 tmpvar_22;
  tmpvar_22.w = 1.0;
  tmpvar_22.xyz = ((tmpvar_18 * 0.5) + 0.5);
  outGBuffer2_19 = tmpvar_22;
  lowp vec4 tmpvar_23;
  tmpvar_23.w = 1.0;
  tmpvar_23.xyz = ((textureCube (_Cube, tmpvar_3) * tmpvar_5.w).xyz * _ReflectColor.xyz);
  emission_16 = tmpvar_23;
  emission_16.xyz = (emission_16.xyz + (tmpvar_6.xyz * (tmpvar_13 + 
    (unity_Lightmap_HDR.x * color_15.xyz)
  )));
  outEmission_1.w = emission_16.w;
  outEmission_1.xyz = exp2(-(emission_16.xyz));
  gl_FragData[0] = tmpvar_20;
  gl_FragData[1] = tmpvar_21;
  gl_FragData[2] = outGBuffer2_19;
  gl_FragData[3] = outEmission_1;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  mediump vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  tmpvar_5.w = 1.0;
  tmpvar_5.xyz = tmpvar_1.xyz;
  highp vec4 tmpvar_6;
  tmpvar_6 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_7;
  tmpvar_7[0] = unity_WorldToObject[0].xyz;
  tmpvar_7[1] = unity_WorldToObject[1].xyz;
  tmpvar_7[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_glesNormal * tmpvar_7));
  highp vec3 tmpvar_9;
  highp vec3 I_10;
  I_10 = (tmpvar_6.xyz - _WorldSpaceCameraPos);
  tmpvar_9 = (I_10 - (2.0 * (
    dot (tmpvar_8, I_10)
   * tmpvar_8)));
  tmpvar_2 = tmpvar_9;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  tmpvar_4.xyz = ((tmpvar_6.xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
  highp vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = tmpvar_1.xyz;
  tmpvar_4.w = (-((unity_MatrixV * 
    (unity_ObjectToWorld * tmpvar_11)
  ).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_8;
  xlv_TEXCOORD3 = tmpvar_6.xyz;
  xlv_TEXCOORD4 = tmpvar_3;
  xlv_TEXCOORD5 = tmpvar_4;
}


#endif
#ifdef FRAGMENT
#extension GL_EXT_draw_buffers : enable
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  mediump vec4 outEmission_1;
  lowp vec3 tmpvar_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = xlv_TEXCOORD1;
  tmpvar_2 = xlv_TEXCOORD2;
  lowp vec3 tmpvar_4;
  lowp vec4 tmpvar_5;
  tmpvar_5 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_6;
  tmpvar_6 = (tmpvar_5 * _Color);
  tmpvar_4 = tmpvar_6.xyz;
  mediump vec3 normalWorld_7;
  normalWorld_7 = tmpvar_2;
  mediump vec3 ambient_8;
  mediump vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = normalWorld_7;
  mediump vec3 x_10;
  x_10.x = dot (unity_SHAr, tmpvar_9);
  x_10.y = dot (unity_SHAg, tmpvar_9);
  x_10.z = dot (unity_SHAb, tmpvar_9);
  mediump vec3 x1_11;
  mediump vec4 tmpvar_12;
  tmpvar_12 = (normalWorld_7.xyzz * normalWorld_7.yzzx);
  x1_11.x = dot (unity_SHBr, tmpvar_12);
  x1_11.y = dot (unity_SHBg, tmpvar_12);
  x1_11.z = dot (unity_SHBb, tmpvar_12);
  ambient_8 = max (vec3(0.0, 0.0, 0.0), (x_10 + (x1_11 + 
    (unity_SHC.xyz * ((normalWorld_7.x * normalWorld_7.x) - (normalWorld_7.y * normalWorld_7.y)))
  )));
  mediump vec3 tmpvar_13;
  tmpvar_13 = max (((1.055 * 
    pow (max (ambient_8, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  ambient_8 = tmpvar_13;
  mediump vec4 tmpvar_14;
  tmpvar_14 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_15;
  color_15 = tmpvar_14;
  mediump vec4 emission_16;
  mediump vec3 tmpvar_17;
  highp vec3 tmpvar_18;
  tmpvar_17 = tmpvar_4;
  tmpvar_18 = tmpvar_2;
  mediump vec4 outGBuffer2_19;
  mediump vec4 tmpvar_20;
  tmpvar_20.xyz = tmpvar_17;
  tmpvar_20.w = 1.0;
  mediump vec4 tmpvar_21;
  tmpvar_21.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_21.w = 0.0;
  highp vec4 tmpvar_22;
  tmpvar_22.w = 1.0;
  tmpvar_22.xyz = ((tmpvar_18 * 0.5) + 0.5);
  outGBuffer2_19 = tmpvar_22;
  lowp vec4 tmpvar_23;
  tmpvar_23.w = 1.0;
  tmpvar_23.xyz = ((textureCube (_Cube, tmpvar_3) * tmpvar_5.w).xyz * _ReflectColor.xyz);
  emission_16 = tmpvar_23;
  emission_16.xyz = (emission_16.xyz + (tmpvar_6.xyz * (tmpvar_13 + 
    (unity_Lightmap_HDR.x * color_15.xyz)
  )));
  outEmission_1.w = emission_16.w;
  outEmission_1.xyz = exp2(-(emission_16.xyz));
  gl_FragData[0] = tmpvar_20;
  gl_FragData[1] = tmpvar_21;
  gl_FragData[2] = outGBuffer2_19;
  gl_FragData[3] = outEmission_1;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  mediump vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  tmpvar_5.w = 1.0;
  tmpvar_5.xyz = tmpvar_1.xyz;
  highp vec4 tmpvar_6;
  tmpvar_6 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_7;
  tmpvar_7[0] = unity_WorldToObject[0].xyz;
  tmpvar_7[1] = unity_WorldToObject[1].xyz;
  tmpvar_7[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_glesNormal * tmpvar_7));
  highp vec3 tmpvar_9;
  highp vec3 I_10;
  I_10 = (tmpvar_6.xyz - _WorldSpaceCameraPos);
  tmpvar_9 = (I_10 - (2.0 * (
    dot (tmpvar_8, I_10)
   * tmpvar_8)));
  tmpvar_2 = tmpvar_9;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  tmpvar_4.xyz = ((tmpvar_6.xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
  highp vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = tmpvar_1.xyz;
  tmpvar_4.w = (-((unity_MatrixV * 
    (unity_ObjectToWorld * tmpvar_11)
  ).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_8;
  xlv_TEXCOORD3 = tmpvar_6.xyz;
  xlv_TEXCOORD4 = tmpvar_3;
  xlv_TEXCOORD5 = tmpvar_4;
}


#endif
#ifdef FRAGMENT
#extension GL_EXT_draw_buffers : enable
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  mediump vec4 outEmission_1;
  lowp vec3 tmpvar_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = xlv_TEXCOORD1;
  tmpvar_2 = xlv_TEXCOORD2;
  lowp vec3 tmpvar_4;
  lowp vec4 tmpvar_5;
  tmpvar_5 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_6;
  tmpvar_6 = (tmpvar_5 * _Color);
  tmpvar_4 = tmpvar_6.xyz;
  mediump vec3 normalWorld_7;
  normalWorld_7 = tmpvar_2;
  mediump vec3 ambient_8;
  mediump vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = normalWorld_7;
  mediump vec3 x_10;
  x_10.x = dot (unity_SHAr, tmpvar_9);
  x_10.y = dot (unity_SHAg, tmpvar_9);
  x_10.z = dot (unity_SHAb, tmpvar_9);
  mediump vec3 x1_11;
  mediump vec4 tmpvar_12;
  tmpvar_12 = (normalWorld_7.xyzz * normalWorld_7.yzzx);
  x1_11.x = dot (unity_SHBr, tmpvar_12);
  x1_11.y = dot (unity_SHBg, tmpvar_12);
  x1_11.z = dot (unity_SHBb, tmpvar_12);
  ambient_8 = max (vec3(0.0, 0.0, 0.0), (x_10 + (x1_11 + 
    (unity_SHC.xyz * ((normalWorld_7.x * normalWorld_7.x) - (normalWorld_7.y * normalWorld_7.y)))
  )));
  mediump vec3 tmpvar_13;
  tmpvar_13 = max (((1.055 * 
    pow (max (ambient_8, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  ambient_8 = tmpvar_13;
  mediump vec4 tmpvar_14;
  tmpvar_14 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_15;
  color_15 = tmpvar_14;
  mediump vec4 emission_16;
  mediump vec3 tmpvar_17;
  highp vec3 tmpvar_18;
  tmpvar_17 = tmpvar_4;
  tmpvar_18 = tmpvar_2;
  mediump vec4 outGBuffer2_19;
  mediump vec4 tmpvar_20;
  tmpvar_20.xyz = tmpvar_17;
  tmpvar_20.w = 1.0;
  mediump vec4 tmpvar_21;
  tmpvar_21.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_21.w = 0.0;
  highp vec4 tmpvar_22;
  tmpvar_22.w = 1.0;
  tmpvar_22.xyz = ((tmpvar_18 * 0.5) + 0.5);
  outGBuffer2_19 = tmpvar_22;
  lowp vec4 tmpvar_23;
  tmpvar_23.w = 1.0;
  tmpvar_23.xyz = ((textureCube (_Cube, tmpvar_3) * tmpvar_5.w).xyz * _ReflectColor.xyz);
  emission_16 = tmpvar_23;
  emission_16.xyz = (emission_16.xyz + (tmpvar_6.xyz * (tmpvar_13 + 
    (unity_Lightmap_HDR.x * color_15.xyz)
  )));
  outEmission_1.w = emission_16.w;
  outEmission_1.xyz = exp2(-(emission_16.xyz));
  gl_FragData[0] = tmpvar_20;
  gl_FragData[1] = tmpvar_21;
  gl_FragData[2] = outGBuffer2_19;
  gl_FragData[3] = outEmission_1;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying mediump vec3 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_4;
  tmpvar_4 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_5;
  tmpvar_5[0] = unity_WorldToObject[0].xyz;
  tmpvar_5[1] = unity_WorldToObject[1].xyz;
  tmpvar_5[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_glesNormal * tmpvar_5));
  highp vec3 tmpvar_7;
  highp vec3 I_8;
  I_8 = (tmpvar_4 - _WorldSpaceCameraPos);
  tmpvar_7 = (I_8 - (2.0 * (
    dot (tmpvar_6, I_8)
   * tmpvar_6)));
  tmpvar_1 = tmpvar_7;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_2.xy = vec2(0.0, 0.0);
  mediump vec3 normal_9;
  normal_9 = tmpvar_6;
  mediump vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = normal_9;
  mediump vec3 res_11;
  mediump vec3 x_12;
  x_12.x = dot (unity_SHAr, tmpvar_10);
  x_12.y = dot (unity_SHAg, tmpvar_10);
  x_12.z = dot (unity_SHAb, tmpvar_10);
  mediump vec3 x1_13;
  mediump vec4 tmpvar_14;
  tmpvar_14 = (normal_9.xyzz * normal_9.yzzx);
  x1_13.x = dot (unity_SHBr, tmpvar_14);
  x1_13.y = dot (unity_SHBg, tmpvar_14);
  x1_13.z = dot (unity_SHBb, tmpvar_14);
  res_11 = (x_12 + (x1_13 + (unity_SHC.xyz * 
    ((normal_9.x * normal_9.x) - (normal_9.y * normal_9.y))
  )));
  mediump vec3 tmpvar_15;
  tmpvar_15 = max (((1.055 * 
    pow (max (res_11, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_11 = tmpvar_15;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = max (vec3(0.0, 0.0, 0.0), tmpvar_15);
}


#endif
#ifdef FRAGMENT
#extension GL_EXT_draw_buffers : enable
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD5;
void main ()
{
  lowp vec3 tmpvar_1;
  highp vec3 tmpvar_2;
  tmpvar_2 = xlv_TEXCOORD1;
  tmpvar_1 = xlv_TEXCOORD2;
  lowp vec3 tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_5;
  tmpvar_5 = (tmpvar_4 * _Color);
  tmpvar_3 = tmpvar_5.xyz;
  mediump vec4 emission_6;
  mediump vec3 tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_7 = tmpvar_3;
  tmpvar_8 = tmpvar_1;
  mediump vec4 outGBuffer2_9;
  mediump vec4 tmpvar_10;
  tmpvar_10.xyz = tmpvar_7;
  tmpvar_10.w = 1.0;
  mediump vec4 tmpvar_11;
  tmpvar_11.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_11.w = 0.0;
  highp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = ((tmpvar_8 * 0.5) + 0.5);
  outGBuffer2_9 = tmpvar_12;
  lowp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = ((textureCube (_Cube, tmpvar_2) * tmpvar_4.w).xyz * _ReflectColor.xyz);
  emission_6 = tmpvar_13;
  emission_6.xyz = (emission_6.xyz + (tmpvar_5.xyz * xlv_TEXCOORD5));
  gl_FragData[0] = tmpvar_10;
  gl_FragData[1] = tmpvar_11;
  gl_FragData[2] = outGBuffer2_9;
  gl_FragData[3] = emission_6;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying mediump vec3 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_4;
  tmpvar_4 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_5;
  tmpvar_5[0] = unity_WorldToObject[0].xyz;
  tmpvar_5[1] = unity_WorldToObject[1].xyz;
  tmpvar_5[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_glesNormal * tmpvar_5));
  highp vec3 tmpvar_7;
  highp vec3 I_8;
  I_8 = (tmpvar_4 - _WorldSpaceCameraPos);
  tmpvar_7 = (I_8 - (2.0 * (
    dot (tmpvar_6, I_8)
   * tmpvar_6)));
  tmpvar_1 = tmpvar_7;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_2.xy = vec2(0.0, 0.0);
  mediump vec3 normal_9;
  normal_9 = tmpvar_6;
  mediump vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = normal_9;
  mediump vec3 res_11;
  mediump vec3 x_12;
  x_12.x = dot (unity_SHAr, tmpvar_10);
  x_12.y = dot (unity_SHAg, tmpvar_10);
  x_12.z = dot (unity_SHAb, tmpvar_10);
  mediump vec3 x1_13;
  mediump vec4 tmpvar_14;
  tmpvar_14 = (normal_9.xyzz * normal_9.yzzx);
  x1_13.x = dot (unity_SHBr, tmpvar_14);
  x1_13.y = dot (unity_SHBg, tmpvar_14);
  x1_13.z = dot (unity_SHBb, tmpvar_14);
  res_11 = (x_12 + (x1_13 + (unity_SHC.xyz * 
    ((normal_9.x * normal_9.x) - (normal_9.y * normal_9.y))
  )));
  mediump vec3 tmpvar_15;
  tmpvar_15 = max (((1.055 * 
    pow (max (res_11, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_11 = tmpvar_15;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = max (vec3(0.0, 0.0, 0.0), tmpvar_15);
}


#endif
#ifdef FRAGMENT
#extension GL_EXT_draw_buffers : enable
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD5;
void main ()
{
  lowp vec3 tmpvar_1;
  highp vec3 tmpvar_2;
  tmpvar_2 = xlv_TEXCOORD1;
  tmpvar_1 = xlv_TEXCOORD2;
  lowp vec3 tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_5;
  tmpvar_5 = (tmpvar_4 * _Color);
  tmpvar_3 = tmpvar_5.xyz;
  mediump vec4 emission_6;
  mediump vec3 tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_7 = tmpvar_3;
  tmpvar_8 = tmpvar_1;
  mediump vec4 outGBuffer2_9;
  mediump vec4 tmpvar_10;
  tmpvar_10.xyz = tmpvar_7;
  tmpvar_10.w = 1.0;
  mediump vec4 tmpvar_11;
  tmpvar_11.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_11.w = 0.0;
  highp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = ((tmpvar_8 * 0.5) + 0.5);
  outGBuffer2_9 = tmpvar_12;
  lowp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = ((textureCube (_Cube, tmpvar_2) * tmpvar_4.w).xyz * _ReflectColor.xyz);
  emission_6 = tmpvar_13;
  emission_6.xyz = (emission_6.xyz + (tmpvar_5.xyz * xlv_TEXCOORD5));
  gl_FragData[0] = tmpvar_10;
  gl_FragData[1] = tmpvar_11;
  gl_FragData[2] = outGBuffer2_9;
  gl_FragData[3] = emission_6;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying mediump vec3 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_4;
  tmpvar_4 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_5;
  tmpvar_5[0] = unity_WorldToObject[0].xyz;
  tmpvar_5[1] = unity_WorldToObject[1].xyz;
  tmpvar_5[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_glesNormal * tmpvar_5));
  highp vec3 tmpvar_7;
  highp vec3 I_8;
  I_8 = (tmpvar_4 - _WorldSpaceCameraPos);
  tmpvar_7 = (I_8 - (2.0 * (
    dot (tmpvar_6, I_8)
   * tmpvar_6)));
  tmpvar_1 = tmpvar_7;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_2.xy = vec2(0.0, 0.0);
  mediump vec3 normal_9;
  normal_9 = tmpvar_6;
  mediump vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = normal_9;
  mediump vec3 res_11;
  mediump vec3 x_12;
  x_12.x = dot (unity_SHAr, tmpvar_10);
  x_12.y = dot (unity_SHAg, tmpvar_10);
  x_12.z = dot (unity_SHAb, tmpvar_10);
  mediump vec3 x1_13;
  mediump vec4 tmpvar_14;
  tmpvar_14 = (normal_9.xyzz * normal_9.yzzx);
  x1_13.x = dot (unity_SHBr, tmpvar_14);
  x1_13.y = dot (unity_SHBg, tmpvar_14);
  x1_13.z = dot (unity_SHBb, tmpvar_14);
  res_11 = (x_12 + (x1_13 + (unity_SHC.xyz * 
    ((normal_9.x * normal_9.x) - (normal_9.y * normal_9.y))
  )));
  mediump vec3 tmpvar_15;
  tmpvar_15 = max (((1.055 * 
    pow (max (res_11, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_11 = tmpvar_15;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = max (vec3(0.0, 0.0, 0.0), tmpvar_15);
}


#endif
#ifdef FRAGMENT
#extension GL_EXT_draw_buffers : enable
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD5;
void main ()
{
  lowp vec3 tmpvar_1;
  highp vec3 tmpvar_2;
  tmpvar_2 = xlv_TEXCOORD1;
  tmpvar_1 = xlv_TEXCOORD2;
  lowp vec3 tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_5;
  tmpvar_5 = (tmpvar_4 * _Color);
  tmpvar_3 = tmpvar_5.xyz;
  mediump vec4 emission_6;
  mediump vec3 tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_7 = tmpvar_3;
  tmpvar_8 = tmpvar_1;
  mediump vec4 outGBuffer2_9;
  mediump vec4 tmpvar_10;
  tmpvar_10.xyz = tmpvar_7;
  tmpvar_10.w = 1.0;
  mediump vec4 tmpvar_11;
  tmpvar_11.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_11.w = 0.0;
  highp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = ((tmpvar_8 * 0.5) + 0.5);
  outGBuffer2_9 = tmpvar_12;
  lowp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = ((textureCube (_Cube, tmpvar_2) * tmpvar_4.w).xyz * _ReflectColor.xyz);
  emission_6 = tmpvar_13;
  emission_6.xyz = (emission_6.xyz + (tmpvar_5.xyz * xlv_TEXCOORD5));
  gl_FragData[0] = tmpvar_10;
  gl_FragData[1] = tmpvar_11;
  gl_FragData[2] = outGBuffer2_9;
  gl_FragData[3] = emission_6;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "SHADOWS_SHADOWMASK" "UNITY_HDR_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_4;
  tmpvar_4 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_5;
  tmpvar_5[0] = unity_WorldToObject[0].xyz;
  tmpvar_5[1] = unity_WorldToObject[1].xyz;
  tmpvar_5[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_glesNormal * tmpvar_5));
  highp vec3 tmpvar_7;
  highp vec3 I_8;
  I_8 = (tmpvar_4 - _WorldSpaceCameraPos);
  tmpvar_7 = (I_8 - (2.0 * (
    dot (tmpvar_6, I_8)
   * tmpvar_6)));
  tmpvar_1 = tmpvar_7;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_2.xy = vec2(0.0, 0.0);
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = tmpvar_2;
}


#endif
#ifdef FRAGMENT
#extension GL_EXT_draw_buffers : enable
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
void main ()
{
  lowp vec3 tmpvar_1;
  highp vec3 tmpvar_2;
  tmpvar_2 = xlv_TEXCOORD1;
  tmpvar_1 = xlv_TEXCOORD2;
  lowp vec3 tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0);
  tmpvar_3 = (tmpvar_4 * _Color).xyz;
  mediump vec4 emission_5;
  mediump vec3 tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_6 = tmpvar_3;
  tmpvar_7 = tmpvar_1;
  mediump vec4 outGBuffer2_8;
  mediump vec4 tmpvar_9;
  tmpvar_9.xyz = tmpvar_6;
  tmpvar_9.w = 1.0;
  mediump vec4 tmpvar_10;
  tmpvar_10.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_10.w = 0.0;
  highp vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = ((tmpvar_7 * 0.5) + 0.5);
  outGBuffer2_8 = tmpvar_11;
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = ((textureCube (_Cube, tmpvar_2) * tmpvar_4.w).xyz * _ReflectColor.xyz);
  emission_5 = tmpvar_12;
  emission_5.xyz = emission_5.xyz;
  gl_FragData[0] = tmpvar_9;
  gl_FragData[1] = tmpvar_10;
  gl_FragData[2] = outGBuffer2_8;
  gl_FragData[3] = emission_5;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "SHADOWS_SHADOWMASK" "UNITY_HDR_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_4;
  tmpvar_4 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_5;
  tmpvar_5[0] = unity_WorldToObject[0].xyz;
  tmpvar_5[1] = unity_WorldToObject[1].xyz;
  tmpvar_5[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_glesNormal * tmpvar_5));
  highp vec3 tmpvar_7;
  highp vec3 I_8;
  I_8 = (tmpvar_4 - _WorldSpaceCameraPos);
  tmpvar_7 = (I_8 - (2.0 * (
    dot (tmpvar_6, I_8)
   * tmpvar_6)));
  tmpvar_1 = tmpvar_7;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_2.xy = vec2(0.0, 0.0);
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = tmpvar_2;
}


#endif
#ifdef FRAGMENT
#extension GL_EXT_draw_buffers : enable
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
void main ()
{
  lowp vec3 tmpvar_1;
  highp vec3 tmpvar_2;
  tmpvar_2 = xlv_TEXCOORD1;
  tmpvar_1 = xlv_TEXCOORD2;
  lowp vec3 tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0);
  tmpvar_3 = (tmpvar_4 * _Color).xyz;
  mediump vec4 emission_5;
  mediump vec3 tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_6 = tmpvar_3;
  tmpvar_7 = tmpvar_1;
  mediump vec4 outGBuffer2_8;
  mediump vec4 tmpvar_9;
  tmpvar_9.xyz = tmpvar_6;
  tmpvar_9.w = 1.0;
  mediump vec4 tmpvar_10;
  tmpvar_10.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_10.w = 0.0;
  highp vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = ((tmpvar_7 * 0.5) + 0.5);
  outGBuffer2_8 = tmpvar_11;
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = ((textureCube (_Cube, tmpvar_2) * tmpvar_4.w).xyz * _ReflectColor.xyz);
  emission_5 = tmpvar_12;
  emission_5.xyz = emission_5.xyz;
  gl_FragData[0] = tmpvar_9;
  gl_FragData[1] = tmpvar_10;
  gl_FragData[2] = outGBuffer2_8;
  gl_FragData[3] = emission_5;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "SHADOWS_SHADOWMASK" "UNITY_HDR_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_4;
  tmpvar_4 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_5;
  tmpvar_5[0] = unity_WorldToObject[0].xyz;
  tmpvar_5[1] = unity_WorldToObject[1].xyz;
  tmpvar_5[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_glesNormal * tmpvar_5));
  highp vec3 tmpvar_7;
  highp vec3 I_8;
  I_8 = (tmpvar_4 - _WorldSpaceCameraPos);
  tmpvar_7 = (I_8 - (2.0 * (
    dot (tmpvar_6, I_8)
   * tmpvar_6)));
  tmpvar_1 = tmpvar_7;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_2.xy = vec2(0.0, 0.0);
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = tmpvar_2;
}


#endif
#ifdef FRAGMENT
#extension GL_EXT_draw_buffers : enable
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
void main ()
{
  lowp vec3 tmpvar_1;
  highp vec3 tmpvar_2;
  tmpvar_2 = xlv_TEXCOORD1;
  tmpvar_1 = xlv_TEXCOORD2;
  lowp vec3 tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0);
  tmpvar_3 = (tmpvar_4 * _Color).xyz;
  mediump vec4 emission_5;
  mediump vec3 tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_6 = tmpvar_3;
  tmpvar_7 = tmpvar_1;
  mediump vec4 outGBuffer2_8;
  mediump vec4 tmpvar_9;
  tmpvar_9.xyz = tmpvar_6;
  tmpvar_9.w = 1.0;
  mediump vec4 tmpvar_10;
  tmpvar_10.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_10.w = 0.0;
  highp vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = ((tmpvar_7 * 0.5) + 0.5);
  outGBuffer2_8 = tmpvar_11;
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = ((textureCube (_Cube, tmpvar_2) * tmpvar_4.w).xyz * _ReflectColor.xyz);
  emission_5 = tmpvar_12;
  emission_5.xyz = emission_5.xyz;
  gl_FragData[0] = tmpvar_9;
  gl_FragData[1] = tmpvar_10;
  gl_FragData[2] = outGBuffer2_8;
  gl_FragData[3] = emission_5;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "UNITY_HDR_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying mediump vec3 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_4;
  tmpvar_4 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_5;
  tmpvar_5[0] = unity_WorldToObject[0].xyz;
  tmpvar_5[1] = unity_WorldToObject[1].xyz;
  tmpvar_5[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_glesNormal * tmpvar_5));
  highp vec3 tmpvar_7;
  highp vec3 I_8;
  I_8 = (tmpvar_4 - _WorldSpaceCameraPos);
  tmpvar_7 = (I_8 - (2.0 * (
    dot (tmpvar_6, I_8)
   * tmpvar_6)));
  tmpvar_1 = tmpvar_7;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_2.xy = vec2(0.0, 0.0);
  mediump vec3 normal_9;
  normal_9 = tmpvar_6;
  mediump vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = normal_9;
  mediump vec3 res_11;
  mediump vec3 x_12;
  x_12.x = dot (unity_SHAr, tmpvar_10);
  x_12.y = dot (unity_SHAg, tmpvar_10);
  x_12.z = dot (unity_SHAb, tmpvar_10);
  mediump vec3 x1_13;
  mediump vec4 tmpvar_14;
  tmpvar_14 = (normal_9.xyzz * normal_9.yzzx);
  x1_13.x = dot (unity_SHBr, tmpvar_14);
  x1_13.y = dot (unity_SHBg, tmpvar_14);
  x1_13.z = dot (unity_SHBb, tmpvar_14);
  res_11 = (x_12 + (x1_13 + (unity_SHC.xyz * 
    ((normal_9.x * normal_9.x) - (normal_9.y * normal_9.y))
  )));
  mediump vec3 tmpvar_15;
  tmpvar_15 = max (((1.055 * 
    pow (max (res_11, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_11 = tmpvar_15;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = max (vec3(0.0, 0.0, 0.0), tmpvar_15);
}


#endif
#ifdef FRAGMENT
#extension GL_EXT_draw_buffers : enable
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD5;
void main ()
{
  lowp vec3 tmpvar_1;
  highp vec3 tmpvar_2;
  tmpvar_2 = xlv_TEXCOORD1;
  tmpvar_1 = xlv_TEXCOORD2;
  lowp vec3 tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_5;
  tmpvar_5 = (tmpvar_4 * _Color);
  tmpvar_3 = tmpvar_5.xyz;
  mediump vec4 emission_6;
  mediump vec3 tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_7 = tmpvar_3;
  tmpvar_8 = tmpvar_1;
  mediump vec4 outGBuffer2_9;
  mediump vec4 tmpvar_10;
  tmpvar_10.xyz = tmpvar_7;
  tmpvar_10.w = 1.0;
  mediump vec4 tmpvar_11;
  tmpvar_11.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_11.w = 0.0;
  highp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = ((tmpvar_8 * 0.5) + 0.5);
  outGBuffer2_9 = tmpvar_12;
  lowp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = ((textureCube (_Cube, tmpvar_2) * tmpvar_4.w).xyz * _ReflectColor.xyz);
  emission_6 = tmpvar_13;
  emission_6.xyz = (emission_6.xyz + (tmpvar_5.xyz * xlv_TEXCOORD5));
  gl_FragData[0] = tmpvar_10;
  gl_FragData[1] = tmpvar_11;
  gl_FragData[2] = outGBuffer2_9;
  gl_FragData[3] = emission_6;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "UNITY_HDR_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying mediump vec3 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_4;
  tmpvar_4 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_5;
  tmpvar_5[0] = unity_WorldToObject[0].xyz;
  tmpvar_5[1] = unity_WorldToObject[1].xyz;
  tmpvar_5[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_glesNormal * tmpvar_5));
  highp vec3 tmpvar_7;
  highp vec3 I_8;
  I_8 = (tmpvar_4 - _WorldSpaceCameraPos);
  tmpvar_7 = (I_8 - (2.0 * (
    dot (tmpvar_6, I_8)
   * tmpvar_6)));
  tmpvar_1 = tmpvar_7;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_2.xy = vec2(0.0, 0.0);
  mediump vec3 normal_9;
  normal_9 = tmpvar_6;
  mediump vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = normal_9;
  mediump vec3 res_11;
  mediump vec3 x_12;
  x_12.x = dot (unity_SHAr, tmpvar_10);
  x_12.y = dot (unity_SHAg, tmpvar_10);
  x_12.z = dot (unity_SHAb, tmpvar_10);
  mediump vec3 x1_13;
  mediump vec4 tmpvar_14;
  tmpvar_14 = (normal_9.xyzz * normal_9.yzzx);
  x1_13.x = dot (unity_SHBr, tmpvar_14);
  x1_13.y = dot (unity_SHBg, tmpvar_14);
  x1_13.z = dot (unity_SHBb, tmpvar_14);
  res_11 = (x_12 + (x1_13 + (unity_SHC.xyz * 
    ((normal_9.x * normal_9.x) - (normal_9.y * normal_9.y))
  )));
  mediump vec3 tmpvar_15;
  tmpvar_15 = max (((1.055 * 
    pow (max (res_11, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_11 = tmpvar_15;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = max (vec3(0.0, 0.0, 0.0), tmpvar_15);
}


#endif
#ifdef FRAGMENT
#extension GL_EXT_draw_buffers : enable
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD5;
void main ()
{
  lowp vec3 tmpvar_1;
  highp vec3 tmpvar_2;
  tmpvar_2 = xlv_TEXCOORD1;
  tmpvar_1 = xlv_TEXCOORD2;
  lowp vec3 tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_5;
  tmpvar_5 = (tmpvar_4 * _Color);
  tmpvar_3 = tmpvar_5.xyz;
  mediump vec4 emission_6;
  mediump vec3 tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_7 = tmpvar_3;
  tmpvar_8 = tmpvar_1;
  mediump vec4 outGBuffer2_9;
  mediump vec4 tmpvar_10;
  tmpvar_10.xyz = tmpvar_7;
  tmpvar_10.w = 1.0;
  mediump vec4 tmpvar_11;
  tmpvar_11.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_11.w = 0.0;
  highp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = ((tmpvar_8 * 0.5) + 0.5);
  outGBuffer2_9 = tmpvar_12;
  lowp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = ((textureCube (_Cube, tmpvar_2) * tmpvar_4.w).xyz * _ReflectColor.xyz);
  emission_6 = tmpvar_13;
  emission_6.xyz = (emission_6.xyz + (tmpvar_5.xyz * xlv_TEXCOORD5));
  gl_FragData[0] = tmpvar_10;
  gl_FragData[1] = tmpvar_11;
  gl_FragData[2] = outGBuffer2_9;
  gl_FragData[3] = emission_6;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "UNITY_HDR_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying mediump vec3 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_4;
  tmpvar_4 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_5;
  tmpvar_5[0] = unity_WorldToObject[0].xyz;
  tmpvar_5[1] = unity_WorldToObject[1].xyz;
  tmpvar_5[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_glesNormal * tmpvar_5));
  highp vec3 tmpvar_7;
  highp vec3 I_8;
  I_8 = (tmpvar_4 - _WorldSpaceCameraPos);
  tmpvar_7 = (I_8 - (2.0 * (
    dot (tmpvar_6, I_8)
   * tmpvar_6)));
  tmpvar_1 = tmpvar_7;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_2.xy = vec2(0.0, 0.0);
  mediump vec3 normal_9;
  normal_9 = tmpvar_6;
  mediump vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = normal_9;
  mediump vec3 res_11;
  mediump vec3 x_12;
  x_12.x = dot (unity_SHAr, tmpvar_10);
  x_12.y = dot (unity_SHAg, tmpvar_10);
  x_12.z = dot (unity_SHAb, tmpvar_10);
  mediump vec3 x1_13;
  mediump vec4 tmpvar_14;
  tmpvar_14 = (normal_9.xyzz * normal_9.yzzx);
  x1_13.x = dot (unity_SHBr, tmpvar_14);
  x1_13.y = dot (unity_SHBg, tmpvar_14);
  x1_13.z = dot (unity_SHBb, tmpvar_14);
  res_11 = (x_12 + (x1_13 + (unity_SHC.xyz * 
    ((normal_9.x * normal_9.x) - (normal_9.y * normal_9.y))
  )));
  mediump vec3 tmpvar_15;
  tmpvar_15 = max (((1.055 * 
    pow (max (res_11, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_11 = tmpvar_15;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = tmpvar_2;
  xlv_TEXCOORD5 = max (vec3(0.0, 0.0, 0.0), tmpvar_15);
}


#endif
#ifdef FRAGMENT
#extension GL_EXT_draw_buffers : enable
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD5;
void main ()
{
  lowp vec3 tmpvar_1;
  highp vec3 tmpvar_2;
  tmpvar_2 = xlv_TEXCOORD1;
  tmpvar_1 = xlv_TEXCOORD2;
  lowp vec3 tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_5;
  tmpvar_5 = (tmpvar_4 * _Color);
  tmpvar_3 = tmpvar_5.xyz;
  mediump vec4 emission_6;
  mediump vec3 tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_7 = tmpvar_3;
  tmpvar_8 = tmpvar_1;
  mediump vec4 outGBuffer2_9;
  mediump vec4 tmpvar_10;
  tmpvar_10.xyz = tmpvar_7;
  tmpvar_10.w = 1.0;
  mediump vec4 tmpvar_11;
  tmpvar_11.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_11.w = 0.0;
  highp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = ((tmpvar_8 * 0.5) + 0.5);
  outGBuffer2_9 = tmpvar_12;
  lowp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = ((textureCube (_Cube, tmpvar_2) * tmpvar_4.w).xyz * _ReflectColor.xyz);
  emission_6 = tmpvar_13;
  emission_6.xyz = (emission_6.xyz + (tmpvar_5.xyz * xlv_TEXCOORD5));
  gl_FragData[0] = tmpvar_10;
  gl_FragData[1] = tmpvar_11;
  gl_FragData[2] = outGBuffer2_9;
  gl_FragData[3] = emission_6;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "LIGHTMAP_ON" "UNITY_HDR_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  mediump vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  tmpvar_5.w = 1.0;
  tmpvar_5.xyz = tmpvar_1.xyz;
  highp vec4 tmpvar_6;
  tmpvar_6 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_7;
  tmpvar_7[0] = unity_WorldToObject[0].xyz;
  tmpvar_7[1] = unity_WorldToObject[1].xyz;
  tmpvar_7[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_glesNormal * tmpvar_7));
  highp vec3 tmpvar_9;
  highp vec3 I_10;
  I_10 = (tmpvar_6.xyz - _WorldSpaceCameraPos);
  tmpvar_9 = (I_10 - (2.0 * (
    dot (tmpvar_8, I_10)
   * tmpvar_8)));
  tmpvar_2 = tmpvar_9;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  tmpvar_4.xyz = ((tmpvar_6.xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
  highp vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = tmpvar_1.xyz;
  tmpvar_4.w = (-((unity_MatrixV * 
    (unity_ObjectToWorld * tmpvar_11)
  ).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_8;
  xlv_TEXCOORD3 = tmpvar_6.xyz;
  xlv_TEXCOORD4 = tmpvar_3;
  xlv_TEXCOORD5 = tmpvar_4;
}


#endif
#ifdef FRAGMENT
#extension GL_EXT_draw_buffers : enable
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec3 tmpvar_1;
  highp vec3 tmpvar_2;
  tmpvar_2 = xlv_TEXCOORD1;
  tmpvar_1 = xlv_TEXCOORD2;
  lowp vec3 tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_5;
  tmpvar_5 = (tmpvar_4 * _Color);
  tmpvar_3 = tmpvar_5.xyz;
  mediump vec4 tmpvar_6;
  tmpvar_6 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_7;
  color_7 = tmpvar_6;
  mediump vec4 emission_8;
  mediump vec3 tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_9 = tmpvar_3;
  tmpvar_10 = tmpvar_1;
  mediump vec4 outGBuffer2_11;
  mediump vec4 tmpvar_12;
  tmpvar_12.xyz = tmpvar_9;
  tmpvar_12.w = 1.0;
  mediump vec4 tmpvar_13;
  tmpvar_13.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_13.w = 0.0;
  highp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = ((tmpvar_10 * 0.5) + 0.5);
  outGBuffer2_11 = tmpvar_14;
  lowp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = ((textureCube (_Cube, tmpvar_2) * tmpvar_4.w).xyz * _ReflectColor.xyz);
  emission_8 = tmpvar_15;
  emission_8.xyz = (emission_8.xyz + (tmpvar_5.xyz * (unity_Lightmap_HDR.x * color_7.xyz)));
  gl_FragData[0] = tmpvar_12;
  gl_FragData[1] = tmpvar_13;
  gl_FragData[2] = outGBuffer2_11;
  gl_FragData[3] = emission_8;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTMAP_ON" "UNITY_HDR_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  mediump vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  tmpvar_5.w = 1.0;
  tmpvar_5.xyz = tmpvar_1.xyz;
  highp vec4 tmpvar_6;
  tmpvar_6 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_7;
  tmpvar_7[0] = unity_WorldToObject[0].xyz;
  tmpvar_7[1] = unity_WorldToObject[1].xyz;
  tmpvar_7[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_glesNormal * tmpvar_7));
  highp vec3 tmpvar_9;
  highp vec3 I_10;
  I_10 = (tmpvar_6.xyz - _WorldSpaceCameraPos);
  tmpvar_9 = (I_10 - (2.0 * (
    dot (tmpvar_8, I_10)
   * tmpvar_8)));
  tmpvar_2 = tmpvar_9;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  tmpvar_4.xyz = ((tmpvar_6.xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
  highp vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = tmpvar_1.xyz;
  tmpvar_4.w = (-((unity_MatrixV * 
    (unity_ObjectToWorld * tmpvar_11)
  ).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_8;
  xlv_TEXCOORD3 = tmpvar_6.xyz;
  xlv_TEXCOORD4 = tmpvar_3;
  xlv_TEXCOORD5 = tmpvar_4;
}


#endif
#ifdef FRAGMENT
#extension GL_EXT_draw_buffers : enable
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec3 tmpvar_1;
  highp vec3 tmpvar_2;
  tmpvar_2 = xlv_TEXCOORD1;
  tmpvar_1 = xlv_TEXCOORD2;
  lowp vec3 tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_5;
  tmpvar_5 = (tmpvar_4 * _Color);
  tmpvar_3 = tmpvar_5.xyz;
  mediump vec4 tmpvar_6;
  tmpvar_6 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_7;
  color_7 = tmpvar_6;
  mediump vec4 emission_8;
  mediump vec3 tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_9 = tmpvar_3;
  tmpvar_10 = tmpvar_1;
  mediump vec4 outGBuffer2_11;
  mediump vec4 tmpvar_12;
  tmpvar_12.xyz = tmpvar_9;
  tmpvar_12.w = 1.0;
  mediump vec4 tmpvar_13;
  tmpvar_13.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_13.w = 0.0;
  highp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = ((tmpvar_10 * 0.5) + 0.5);
  outGBuffer2_11 = tmpvar_14;
  lowp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = ((textureCube (_Cube, tmpvar_2) * tmpvar_4.w).xyz * _ReflectColor.xyz);
  emission_8 = tmpvar_15;
  emission_8.xyz = (emission_8.xyz + (tmpvar_5.xyz * (unity_Lightmap_HDR.x * color_7.xyz)));
  gl_FragData[0] = tmpvar_12;
  gl_FragData[1] = tmpvar_13;
  gl_FragData[2] = outGBuffer2_11;
  gl_FragData[3] = emission_8;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTMAP_ON" "UNITY_HDR_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  mediump vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  tmpvar_5.w = 1.0;
  tmpvar_5.xyz = tmpvar_1.xyz;
  highp vec4 tmpvar_6;
  tmpvar_6 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_7;
  tmpvar_7[0] = unity_WorldToObject[0].xyz;
  tmpvar_7[1] = unity_WorldToObject[1].xyz;
  tmpvar_7[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_glesNormal * tmpvar_7));
  highp vec3 tmpvar_9;
  highp vec3 I_10;
  I_10 = (tmpvar_6.xyz - _WorldSpaceCameraPos);
  tmpvar_9 = (I_10 - (2.0 * (
    dot (tmpvar_8, I_10)
   * tmpvar_8)));
  tmpvar_2 = tmpvar_9;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  tmpvar_4.xyz = ((tmpvar_6.xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
  highp vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = tmpvar_1.xyz;
  tmpvar_4.w = (-((unity_MatrixV * 
    (unity_ObjectToWorld * tmpvar_11)
  ).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_8;
  xlv_TEXCOORD3 = tmpvar_6.xyz;
  xlv_TEXCOORD4 = tmpvar_3;
  xlv_TEXCOORD5 = tmpvar_4;
}


#endif
#ifdef FRAGMENT
#extension GL_EXT_draw_buffers : enable
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec3 tmpvar_1;
  highp vec3 tmpvar_2;
  tmpvar_2 = xlv_TEXCOORD1;
  tmpvar_1 = xlv_TEXCOORD2;
  lowp vec3 tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_5;
  tmpvar_5 = (tmpvar_4 * _Color);
  tmpvar_3 = tmpvar_5.xyz;
  mediump vec4 tmpvar_6;
  tmpvar_6 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_7;
  color_7 = tmpvar_6;
  mediump vec4 emission_8;
  mediump vec3 tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_9 = tmpvar_3;
  tmpvar_10 = tmpvar_1;
  mediump vec4 outGBuffer2_11;
  mediump vec4 tmpvar_12;
  tmpvar_12.xyz = tmpvar_9;
  tmpvar_12.w = 1.0;
  mediump vec4 tmpvar_13;
  tmpvar_13.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_13.w = 0.0;
  highp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = ((tmpvar_10 * 0.5) + 0.5);
  outGBuffer2_11 = tmpvar_14;
  lowp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = ((textureCube (_Cube, tmpvar_2) * tmpvar_4.w).xyz * _ReflectColor.xyz);
  emission_8 = tmpvar_15;
  emission_8.xyz = (emission_8.xyz + (tmpvar_5.xyz * (unity_Lightmap_HDR.x * color_7.xyz)));
  gl_FragData[0] = tmpvar_12;
  gl_FragData[1] = tmpvar_13;
  gl_FragData[2] = outGBuffer2_11;
  gl_FragData[3] = emission_8;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "LIGHTMAP_ON" "LIGHTPROBE_SH" "UNITY_HDR_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  mediump vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  tmpvar_5.w = 1.0;
  tmpvar_5.xyz = tmpvar_1.xyz;
  highp vec4 tmpvar_6;
  tmpvar_6 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_7;
  tmpvar_7[0] = unity_WorldToObject[0].xyz;
  tmpvar_7[1] = unity_WorldToObject[1].xyz;
  tmpvar_7[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_glesNormal * tmpvar_7));
  highp vec3 tmpvar_9;
  highp vec3 I_10;
  I_10 = (tmpvar_6.xyz - _WorldSpaceCameraPos);
  tmpvar_9 = (I_10 - (2.0 * (
    dot (tmpvar_8, I_10)
   * tmpvar_8)));
  tmpvar_2 = tmpvar_9;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  tmpvar_4.xyz = ((tmpvar_6.xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
  highp vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = tmpvar_1.xyz;
  tmpvar_4.w = (-((unity_MatrixV * 
    (unity_ObjectToWorld * tmpvar_11)
  ).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_8;
  xlv_TEXCOORD3 = tmpvar_6.xyz;
  xlv_TEXCOORD4 = tmpvar_3;
  xlv_TEXCOORD5 = tmpvar_4;
}


#endif
#ifdef FRAGMENT
#extension GL_EXT_draw_buffers : enable
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec3 tmpvar_1;
  highp vec3 tmpvar_2;
  tmpvar_2 = xlv_TEXCOORD1;
  tmpvar_1 = xlv_TEXCOORD2;
  lowp vec3 tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_5;
  tmpvar_5 = (tmpvar_4 * _Color);
  tmpvar_3 = tmpvar_5.xyz;
  mediump vec3 normalWorld_6;
  normalWorld_6 = tmpvar_1;
  mediump vec3 ambient_7;
  mediump vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = normalWorld_6;
  mediump vec3 x_9;
  x_9.x = dot (unity_SHAr, tmpvar_8);
  x_9.y = dot (unity_SHAg, tmpvar_8);
  x_9.z = dot (unity_SHAb, tmpvar_8);
  mediump vec3 x1_10;
  mediump vec4 tmpvar_11;
  tmpvar_11 = (normalWorld_6.xyzz * normalWorld_6.yzzx);
  x1_10.x = dot (unity_SHBr, tmpvar_11);
  x1_10.y = dot (unity_SHBg, tmpvar_11);
  x1_10.z = dot (unity_SHBb, tmpvar_11);
  ambient_7 = max (vec3(0.0, 0.0, 0.0), (x_9 + (x1_10 + 
    (unity_SHC.xyz * ((normalWorld_6.x * normalWorld_6.x) - (normalWorld_6.y * normalWorld_6.y)))
  )));
  mediump vec3 tmpvar_12;
  tmpvar_12 = max (((1.055 * 
    pow (max (ambient_7, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  ambient_7 = tmpvar_12;
  mediump vec4 tmpvar_13;
  tmpvar_13 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_14;
  color_14 = tmpvar_13;
  mediump vec4 emission_15;
  mediump vec3 tmpvar_16;
  highp vec3 tmpvar_17;
  tmpvar_16 = tmpvar_3;
  tmpvar_17 = tmpvar_1;
  mediump vec4 outGBuffer2_18;
  mediump vec4 tmpvar_19;
  tmpvar_19.xyz = tmpvar_16;
  tmpvar_19.w = 1.0;
  mediump vec4 tmpvar_20;
  tmpvar_20.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_20.w = 0.0;
  highp vec4 tmpvar_21;
  tmpvar_21.w = 1.0;
  tmpvar_21.xyz = ((tmpvar_17 * 0.5) + 0.5);
  outGBuffer2_18 = tmpvar_21;
  lowp vec4 tmpvar_22;
  tmpvar_22.w = 1.0;
  tmpvar_22.xyz = ((textureCube (_Cube, tmpvar_2) * tmpvar_4.w).xyz * _ReflectColor.xyz);
  emission_15 = tmpvar_22;
  emission_15.xyz = (emission_15.xyz + (tmpvar_5.xyz * (tmpvar_12 + 
    (unity_Lightmap_HDR.x * color_14.xyz)
  )));
  gl_FragData[0] = tmpvar_19;
  gl_FragData[1] = tmpvar_20;
  gl_FragData[2] = outGBuffer2_18;
  gl_FragData[3] = emission_15;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTMAP_ON" "LIGHTPROBE_SH" "UNITY_HDR_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  mediump vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  tmpvar_5.w = 1.0;
  tmpvar_5.xyz = tmpvar_1.xyz;
  highp vec4 tmpvar_6;
  tmpvar_6 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_7;
  tmpvar_7[0] = unity_WorldToObject[0].xyz;
  tmpvar_7[1] = unity_WorldToObject[1].xyz;
  tmpvar_7[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_glesNormal * tmpvar_7));
  highp vec3 tmpvar_9;
  highp vec3 I_10;
  I_10 = (tmpvar_6.xyz - _WorldSpaceCameraPos);
  tmpvar_9 = (I_10 - (2.0 * (
    dot (tmpvar_8, I_10)
   * tmpvar_8)));
  tmpvar_2 = tmpvar_9;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  tmpvar_4.xyz = ((tmpvar_6.xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
  highp vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = tmpvar_1.xyz;
  tmpvar_4.w = (-((unity_MatrixV * 
    (unity_ObjectToWorld * tmpvar_11)
  ).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_8;
  xlv_TEXCOORD3 = tmpvar_6.xyz;
  xlv_TEXCOORD4 = tmpvar_3;
  xlv_TEXCOORD5 = tmpvar_4;
}


#endif
#ifdef FRAGMENT
#extension GL_EXT_draw_buffers : enable
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec3 tmpvar_1;
  highp vec3 tmpvar_2;
  tmpvar_2 = xlv_TEXCOORD1;
  tmpvar_1 = xlv_TEXCOORD2;
  lowp vec3 tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_5;
  tmpvar_5 = (tmpvar_4 * _Color);
  tmpvar_3 = tmpvar_5.xyz;
  mediump vec3 normalWorld_6;
  normalWorld_6 = tmpvar_1;
  mediump vec3 ambient_7;
  mediump vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = normalWorld_6;
  mediump vec3 x_9;
  x_9.x = dot (unity_SHAr, tmpvar_8);
  x_9.y = dot (unity_SHAg, tmpvar_8);
  x_9.z = dot (unity_SHAb, tmpvar_8);
  mediump vec3 x1_10;
  mediump vec4 tmpvar_11;
  tmpvar_11 = (normalWorld_6.xyzz * normalWorld_6.yzzx);
  x1_10.x = dot (unity_SHBr, tmpvar_11);
  x1_10.y = dot (unity_SHBg, tmpvar_11);
  x1_10.z = dot (unity_SHBb, tmpvar_11);
  ambient_7 = max (vec3(0.0, 0.0, 0.0), (x_9 + (x1_10 + 
    (unity_SHC.xyz * ((normalWorld_6.x * normalWorld_6.x) - (normalWorld_6.y * normalWorld_6.y)))
  )));
  mediump vec3 tmpvar_12;
  tmpvar_12 = max (((1.055 * 
    pow (max (ambient_7, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  ambient_7 = tmpvar_12;
  mediump vec4 tmpvar_13;
  tmpvar_13 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_14;
  color_14 = tmpvar_13;
  mediump vec4 emission_15;
  mediump vec3 tmpvar_16;
  highp vec3 tmpvar_17;
  tmpvar_16 = tmpvar_3;
  tmpvar_17 = tmpvar_1;
  mediump vec4 outGBuffer2_18;
  mediump vec4 tmpvar_19;
  tmpvar_19.xyz = tmpvar_16;
  tmpvar_19.w = 1.0;
  mediump vec4 tmpvar_20;
  tmpvar_20.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_20.w = 0.0;
  highp vec4 tmpvar_21;
  tmpvar_21.w = 1.0;
  tmpvar_21.xyz = ((tmpvar_17 * 0.5) + 0.5);
  outGBuffer2_18 = tmpvar_21;
  lowp vec4 tmpvar_22;
  tmpvar_22.w = 1.0;
  tmpvar_22.xyz = ((textureCube (_Cube, tmpvar_2) * tmpvar_4.w).xyz * _ReflectColor.xyz);
  emission_15 = tmpvar_22;
  emission_15.xyz = (emission_15.xyz + (tmpvar_5.xyz * (tmpvar_12 + 
    (unity_Lightmap_HDR.x * color_14.xyz)
  )));
  gl_FragData[0] = tmpvar_19;
  gl_FragData[1] = tmpvar_20;
  gl_FragData[2] = outGBuffer2_18;
  gl_FragData[3] = emission_15;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTMAP_ON" "LIGHTPROBE_SH" "UNITY_HDR_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  mediump vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  tmpvar_5.w = 1.0;
  tmpvar_5.xyz = tmpvar_1.xyz;
  highp vec4 tmpvar_6;
  tmpvar_6 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_7;
  tmpvar_7[0] = unity_WorldToObject[0].xyz;
  tmpvar_7[1] = unity_WorldToObject[1].xyz;
  tmpvar_7[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_glesNormal * tmpvar_7));
  highp vec3 tmpvar_9;
  highp vec3 I_10;
  I_10 = (tmpvar_6.xyz - _WorldSpaceCameraPos);
  tmpvar_9 = (I_10 - (2.0 * (
    dot (tmpvar_8, I_10)
   * tmpvar_8)));
  tmpvar_2 = tmpvar_9;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  tmpvar_4.xyz = ((tmpvar_6.xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
  highp vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = tmpvar_1.xyz;
  tmpvar_4.w = (-((unity_MatrixV * 
    (unity_ObjectToWorld * tmpvar_11)
  ).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_8;
  xlv_TEXCOORD3 = tmpvar_6.xyz;
  xlv_TEXCOORD4 = tmpvar_3;
  xlv_TEXCOORD5 = tmpvar_4;
}


#endif
#ifdef FRAGMENT
#extension GL_EXT_draw_buffers : enable
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec3 tmpvar_1;
  highp vec3 tmpvar_2;
  tmpvar_2 = xlv_TEXCOORD1;
  tmpvar_1 = xlv_TEXCOORD2;
  lowp vec3 tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_5;
  tmpvar_5 = (tmpvar_4 * _Color);
  tmpvar_3 = tmpvar_5.xyz;
  mediump vec3 normalWorld_6;
  normalWorld_6 = tmpvar_1;
  mediump vec3 ambient_7;
  mediump vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = normalWorld_6;
  mediump vec3 x_9;
  x_9.x = dot (unity_SHAr, tmpvar_8);
  x_9.y = dot (unity_SHAg, tmpvar_8);
  x_9.z = dot (unity_SHAb, tmpvar_8);
  mediump vec3 x1_10;
  mediump vec4 tmpvar_11;
  tmpvar_11 = (normalWorld_6.xyzz * normalWorld_6.yzzx);
  x1_10.x = dot (unity_SHBr, tmpvar_11);
  x1_10.y = dot (unity_SHBg, tmpvar_11);
  x1_10.z = dot (unity_SHBb, tmpvar_11);
  ambient_7 = max (vec3(0.0, 0.0, 0.0), (x_9 + (x1_10 + 
    (unity_SHC.xyz * ((normalWorld_6.x * normalWorld_6.x) - (normalWorld_6.y * normalWorld_6.y)))
  )));
  mediump vec3 tmpvar_12;
  tmpvar_12 = max (((1.055 * 
    pow (max (ambient_7, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  ambient_7 = tmpvar_12;
  mediump vec4 tmpvar_13;
  tmpvar_13 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_14;
  color_14 = tmpvar_13;
  mediump vec4 emission_15;
  mediump vec3 tmpvar_16;
  highp vec3 tmpvar_17;
  tmpvar_16 = tmpvar_3;
  tmpvar_17 = tmpvar_1;
  mediump vec4 outGBuffer2_18;
  mediump vec4 tmpvar_19;
  tmpvar_19.xyz = tmpvar_16;
  tmpvar_19.w = 1.0;
  mediump vec4 tmpvar_20;
  tmpvar_20.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_20.w = 0.0;
  highp vec4 tmpvar_21;
  tmpvar_21.w = 1.0;
  tmpvar_21.xyz = ((tmpvar_17 * 0.5) + 0.5);
  outGBuffer2_18 = tmpvar_21;
  lowp vec4 tmpvar_22;
  tmpvar_22.w = 1.0;
  tmpvar_22.xyz = ((textureCube (_Cube, tmpvar_2) * tmpvar_4.w).xyz * _ReflectColor.xyz);
  emission_15 = tmpvar_22;
  emission_15.xyz = (emission_15.xyz + (tmpvar_5.xyz * (tmpvar_12 + 
    (unity_Lightmap_HDR.x * color_14.xyz)
  )));
  gl_FragData[0] = tmpvar_19;
  gl_FragData[1] = tmpvar_20;
  gl_FragData[2] = outGBuffer2_18;
  gl_FragData[3] = emission_15;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "UNITY_HDR_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  mediump vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  tmpvar_5.w = 1.0;
  tmpvar_5.xyz = tmpvar_1.xyz;
  highp vec4 tmpvar_6;
  tmpvar_6 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_7;
  tmpvar_7[0] = unity_WorldToObject[0].xyz;
  tmpvar_7[1] = unity_WorldToObject[1].xyz;
  tmpvar_7[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_glesNormal * tmpvar_7));
  highp vec3 tmpvar_9;
  highp vec3 I_10;
  I_10 = (tmpvar_6.xyz - _WorldSpaceCameraPos);
  tmpvar_9 = (I_10 - (2.0 * (
    dot (tmpvar_8, I_10)
   * tmpvar_8)));
  tmpvar_2 = tmpvar_9;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  tmpvar_4.xyz = ((tmpvar_6.xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
  highp vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = tmpvar_1.xyz;
  tmpvar_4.w = (-((unity_MatrixV * 
    (unity_ObjectToWorld * tmpvar_11)
  ).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_8;
  xlv_TEXCOORD3 = tmpvar_6.xyz;
  xlv_TEXCOORD4 = tmpvar_3;
  xlv_TEXCOORD5 = tmpvar_4;
}


#endif
#ifdef FRAGMENT
#extension GL_EXT_draw_buffers : enable
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec3 tmpvar_1;
  highp vec3 tmpvar_2;
  tmpvar_2 = xlv_TEXCOORD1;
  tmpvar_1 = xlv_TEXCOORD2;
  lowp vec3 tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_5;
  tmpvar_5 = (tmpvar_4 * _Color);
  tmpvar_3 = tmpvar_5.xyz;
  mediump vec4 tmpvar_6;
  tmpvar_6 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_7;
  color_7 = tmpvar_6;
  mediump vec4 emission_8;
  mediump vec3 tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_9 = tmpvar_3;
  tmpvar_10 = tmpvar_1;
  mediump vec4 outGBuffer2_11;
  mediump vec4 tmpvar_12;
  tmpvar_12.xyz = tmpvar_9;
  tmpvar_12.w = 1.0;
  mediump vec4 tmpvar_13;
  tmpvar_13.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_13.w = 0.0;
  highp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = ((tmpvar_10 * 0.5) + 0.5);
  outGBuffer2_11 = tmpvar_14;
  lowp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = ((textureCube (_Cube, tmpvar_2) * tmpvar_4.w).xyz * _ReflectColor.xyz);
  emission_8 = tmpvar_15;
  emission_8.xyz = (emission_8.xyz + (tmpvar_5.xyz * (unity_Lightmap_HDR.x * color_7.xyz)));
  gl_FragData[0] = tmpvar_12;
  gl_FragData[1] = tmpvar_13;
  gl_FragData[2] = outGBuffer2_11;
  gl_FragData[3] = emission_8;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "UNITY_HDR_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  mediump vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  tmpvar_5.w = 1.0;
  tmpvar_5.xyz = tmpvar_1.xyz;
  highp vec4 tmpvar_6;
  tmpvar_6 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_7;
  tmpvar_7[0] = unity_WorldToObject[0].xyz;
  tmpvar_7[1] = unity_WorldToObject[1].xyz;
  tmpvar_7[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_glesNormal * tmpvar_7));
  highp vec3 tmpvar_9;
  highp vec3 I_10;
  I_10 = (tmpvar_6.xyz - _WorldSpaceCameraPos);
  tmpvar_9 = (I_10 - (2.0 * (
    dot (tmpvar_8, I_10)
   * tmpvar_8)));
  tmpvar_2 = tmpvar_9;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  tmpvar_4.xyz = ((tmpvar_6.xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
  highp vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = tmpvar_1.xyz;
  tmpvar_4.w = (-((unity_MatrixV * 
    (unity_ObjectToWorld * tmpvar_11)
  ).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_8;
  xlv_TEXCOORD3 = tmpvar_6.xyz;
  xlv_TEXCOORD4 = tmpvar_3;
  xlv_TEXCOORD5 = tmpvar_4;
}


#endif
#ifdef FRAGMENT
#extension GL_EXT_draw_buffers : enable
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec3 tmpvar_1;
  highp vec3 tmpvar_2;
  tmpvar_2 = xlv_TEXCOORD1;
  tmpvar_1 = xlv_TEXCOORD2;
  lowp vec3 tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_5;
  tmpvar_5 = (tmpvar_4 * _Color);
  tmpvar_3 = tmpvar_5.xyz;
  mediump vec4 tmpvar_6;
  tmpvar_6 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_7;
  color_7 = tmpvar_6;
  mediump vec4 emission_8;
  mediump vec3 tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_9 = tmpvar_3;
  tmpvar_10 = tmpvar_1;
  mediump vec4 outGBuffer2_11;
  mediump vec4 tmpvar_12;
  tmpvar_12.xyz = tmpvar_9;
  tmpvar_12.w = 1.0;
  mediump vec4 tmpvar_13;
  tmpvar_13.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_13.w = 0.0;
  highp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = ((tmpvar_10 * 0.5) + 0.5);
  outGBuffer2_11 = tmpvar_14;
  lowp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = ((textureCube (_Cube, tmpvar_2) * tmpvar_4.w).xyz * _ReflectColor.xyz);
  emission_8 = tmpvar_15;
  emission_8.xyz = (emission_8.xyz + (tmpvar_5.xyz * (unity_Lightmap_HDR.x * color_7.xyz)));
  gl_FragData[0] = tmpvar_12;
  gl_FragData[1] = tmpvar_13;
  gl_FragData[2] = outGBuffer2_11;
  gl_FragData[3] = emission_8;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "UNITY_HDR_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  mediump vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  tmpvar_5.w = 1.0;
  tmpvar_5.xyz = tmpvar_1.xyz;
  highp vec4 tmpvar_6;
  tmpvar_6 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_7;
  tmpvar_7[0] = unity_WorldToObject[0].xyz;
  tmpvar_7[1] = unity_WorldToObject[1].xyz;
  tmpvar_7[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_glesNormal * tmpvar_7));
  highp vec3 tmpvar_9;
  highp vec3 I_10;
  I_10 = (tmpvar_6.xyz - _WorldSpaceCameraPos);
  tmpvar_9 = (I_10 - (2.0 * (
    dot (tmpvar_8, I_10)
   * tmpvar_8)));
  tmpvar_2 = tmpvar_9;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  tmpvar_4.xyz = ((tmpvar_6.xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
  highp vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = tmpvar_1.xyz;
  tmpvar_4.w = (-((unity_MatrixV * 
    (unity_ObjectToWorld * tmpvar_11)
  ).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_8;
  xlv_TEXCOORD3 = tmpvar_6.xyz;
  xlv_TEXCOORD4 = tmpvar_3;
  xlv_TEXCOORD5 = tmpvar_4;
}


#endif
#ifdef FRAGMENT
#extension GL_EXT_draw_buffers : enable
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec3 tmpvar_1;
  highp vec3 tmpvar_2;
  tmpvar_2 = xlv_TEXCOORD1;
  tmpvar_1 = xlv_TEXCOORD2;
  lowp vec3 tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_5;
  tmpvar_5 = (tmpvar_4 * _Color);
  tmpvar_3 = tmpvar_5.xyz;
  mediump vec4 tmpvar_6;
  tmpvar_6 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_7;
  color_7 = tmpvar_6;
  mediump vec4 emission_8;
  mediump vec3 tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_9 = tmpvar_3;
  tmpvar_10 = tmpvar_1;
  mediump vec4 outGBuffer2_11;
  mediump vec4 tmpvar_12;
  tmpvar_12.xyz = tmpvar_9;
  tmpvar_12.w = 1.0;
  mediump vec4 tmpvar_13;
  tmpvar_13.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_13.w = 0.0;
  highp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = ((tmpvar_10 * 0.5) + 0.5);
  outGBuffer2_11 = tmpvar_14;
  lowp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = ((textureCube (_Cube, tmpvar_2) * tmpvar_4.w).xyz * _ReflectColor.xyz);
  emission_8 = tmpvar_15;
  emission_8.xyz = (emission_8.xyz + (tmpvar_5.xyz * (unity_Lightmap_HDR.x * color_7.xyz)));
  gl_FragData[0] = tmpvar_12;
  gl_FragData[1] = tmpvar_13;
  gl_FragData[2] = outGBuffer2_11;
  gl_FragData[3] = emission_8;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "UNITY_HDR_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  mediump vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  tmpvar_5.w = 1.0;
  tmpvar_5.xyz = tmpvar_1.xyz;
  highp vec4 tmpvar_6;
  tmpvar_6 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_7;
  tmpvar_7[0] = unity_WorldToObject[0].xyz;
  tmpvar_7[1] = unity_WorldToObject[1].xyz;
  tmpvar_7[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_glesNormal * tmpvar_7));
  highp vec3 tmpvar_9;
  highp vec3 I_10;
  I_10 = (tmpvar_6.xyz - _WorldSpaceCameraPos);
  tmpvar_9 = (I_10 - (2.0 * (
    dot (tmpvar_8, I_10)
   * tmpvar_8)));
  tmpvar_2 = tmpvar_9;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  tmpvar_4.xyz = ((tmpvar_6.xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
  highp vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = tmpvar_1.xyz;
  tmpvar_4.w = (-((unity_MatrixV * 
    (unity_ObjectToWorld * tmpvar_11)
  ).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_8;
  xlv_TEXCOORD3 = tmpvar_6.xyz;
  xlv_TEXCOORD4 = tmpvar_3;
  xlv_TEXCOORD5 = tmpvar_4;
}


#endif
#ifdef FRAGMENT
#extension GL_EXT_draw_buffers : enable
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec3 tmpvar_1;
  highp vec3 tmpvar_2;
  tmpvar_2 = xlv_TEXCOORD1;
  tmpvar_1 = xlv_TEXCOORD2;
  lowp vec3 tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_5;
  tmpvar_5 = (tmpvar_4 * _Color);
  tmpvar_3 = tmpvar_5.xyz;
  mediump vec3 normalWorld_6;
  normalWorld_6 = tmpvar_1;
  mediump vec3 ambient_7;
  mediump vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = normalWorld_6;
  mediump vec3 x_9;
  x_9.x = dot (unity_SHAr, tmpvar_8);
  x_9.y = dot (unity_SHAg, tmpvar_8);
  x_9.z = dot (unity_SHAb, tmpvar_8);
  mediump vec3 x1_10;
  mediump vec4 tmpvar_11;
  tmpvar_11 = (normalWorld_6.xyzz * normalWorld_6.yzzx);
  x1_10.x = dot (unity_SHBr, tmpvar_11);
  x1_10.y = dot (unity_SHBg, tmpvar_11);
  x1_10.z = dot (unity_SHBb, tmpvar_11);
  ambient_7 = max (vec3(0.0, 0.0, 0.0), (x_9 + (x1_10 + 
    (unity_SHC.xyz * ((normalWorld_6.x * normalWorld_6.x) - (normalWorld_6.y * normalWorld_6.y)))
  )));
  mediump vec3 tmpvar_12;
  tmpvar_12 = max (((1.055 * 
    pow (max (ambient_7, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  ambient_7 = tmpvar_12;
  mediump vec4 tmpvar_13;
  tmpvar_13 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_14;
  color_14 = tmpvar_13;
  mediump vec4 emission_15;
  mediump vec3 tmpvar_16;
  highp vec3 tmpvar_17;
  tmpvar_16 = tmpvar_3;
  tmpvar_17 = tmpvar_1;
  mediump vec4 outGBuffer2_18;
  mediump vec4 tmpvar_19;
  tmpvar_19.xyz = tmpvar_16;
  tmpvar_19.w = 1.0;
  mediump vec4 tmpvar_20;
  tmpvar_20.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_20.w = 0.0;
  highp vec4 tmpvar_21;
  tmpvar_21.w = 1.0;
  tmpvar_21.xyz = ((tmpvar_17 * 0.5) + 0.5);
  outGBuffer2_18 = tmpvar_21;
  lowp vec4 tmpvar_22;
  tmpvar_22.w = 1.0;
  tmpvar_22.xyz = ((textureCube (_Cube, tmpvar_2) * tmpvar_4.w).xyz * _ReflectColor.xyz);
  emission_15 = tmpvar_22;
  emission_15.xyz = (emission_15.xyz + (tmpvar_5.xyz * (tmpvar_12 + 
    (unity_Lightmap_HDR.x * color_14.xyz)
  )));
  gl_FragData[0] = tmpvar_19;
  gl_FragData[1] = tmpvar_20;
  gl_FragData[2] = outGBuffer2_18;
  gl_FragData[3] = emission_15;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "UNITY_HDR_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  mediump vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  tmpvar_5.w = 1.0;
  tmpvar_5.xyz = tmpvar_1.xyz;
  highp vec4 tmpvar_6;
  tmpvar_6 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_7;
  tmpvar_7[0] = unity_WorldToObject[0].xyz;
  tmpvar_7[1] = unity_WorldToObject[1].xyz;
  tmpvar_7[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_glesNormal * tmpvar_7));
  highp vec3 tmpvar_9;
  highp vec3 I_10;
  I_10 = (tmpvar_6.xyz - _WorldSpaceCameraPos);
  tmpvar_9 = (I_10 - (2.0 * (
    dot (tmpvar_8, I_10)
   * tmpvar_8)));
  tmpvar_2 = tmpvar_9;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  tmpvar_4.xyz = ((tmpvar_6.xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
  highp vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = tmpvar_1.xyz;
  tmpvar_4.w = (-((unity_MatrixV * 
    (unity_ObjectToWorld * tmpvar_11)
  ).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_8;
  xlv_TEXCOORD3 = tmpvar_6.xyz;
  xlv_TEXCOORD4 = tmpvar_3;
  xlv_TEXCOORD5 = tmpvar_4;
}


#endif
#ifdef FRAGMENT
#extension GL_EXT_draw_buffers : enable
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec3 tmpvar_1;
  highp vec3 tmpvar_2;
  tmpvar_2 = xlv_TEXCOORD1;
  tmpvar_1 = xlv_TEXCOORD2;
  lowp vec3 tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_5;
  tmpvar_5 = (tmpvar_4 * _Color);
  tmpvar_3 = tmpvar_5.xyz;
  mediump vec3 normalWorld_6;
  normalWorld_6 = tmpvar_1;
  mediump vec3 ambient_7;
  mediump vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = normalWorld_6;
  mediump vec3 x_9;
  x_9.x = dot (unity_SHAr, tmpvar_8);
  x_9.y = dot (unity_SHAg, tmpvar_8);
  x_9.z = dot (unity_SHAb, tmpvar_8);
  mediump vec3 x1_10;
  mediump vec4 tmpvar_11;
  tmpvar_11 = (normalWorld_6.xyzz * normalWorld_6.yzzx);
  x1_10.x = dot (unity_SHBr, tmpvar_11);
  x1_10.y = dot (unity_SHBg, tmpvar_11);
  x1_10.z = dot (unity_SHBb, tmpvar_11);
  ambient_7 = max (vec3(0.0, 0.0, 0.0), (x_9 + (x1_10 + 
    (unity_SHC.xyz * ((normalWorld_6.x * normalWorld_6.x) - (normalWorld_6.y * normalWorld_6.y)))
  )));
  mediump vec3 tmpvar_12;
  tmpvar_12 = max (((1.055 * 
    pow (max (ambient_7, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  ambient_7 = tmpvar_12;
  mediump vec4 tmpvar_13;
  tmpvar_13 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_14;
  color_14 = tmpvar_13;
  mediump vec4 emission_15;
  mediump vec3 tmpvar_16;
  highp vec3 tmpvar_17;
  tmpvar_16 = tmpvar_3;
  tmpvar_17 = tmpvar_1;
  mediump vec4 outGBuffer2_18;
  mediump vec4 tmpvar_19;
  tmpvar_19.xyz = tmpvar_16;
  tmpvar_19.w = 1.0;
  mediump vec4 tmpvar_20;
  tmpvar_20.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_20.w = 0.0;
  highp vec4 tmpvar_21;
  tmpvar_21.w = 1.0;
  tmpvar_21.xyz = ((tmpvar_17 * 0.5) + 0.5);
  outGBuffer2_18 = tmpvar_21;
  lowp vec4 tmpvar_22;
  tmpvar_22.w = 1.0;
  tmpvar_22.xyz = ((textureCube (_Cube, tmpvar_2) * tmpvar_4.w).xyz * _ReflectColor.xyz);
  emission_15 = tmpvar_22;
  emission_15.xyz = (emission_15.xyz + (tmpvar_5.xyz * (tmpvar_12 + 
    (unity_Lightmap_HDR.x * color_14.xyz)
  )));
  gl_FragData[0] = tmpvar_19;
  gl_FragData[1] = tmpvar_20;
  gl_FragData[2] = outGBuffer2_18;
  gl_FragData[3] = emission_15;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "UNITY_HDR_ON" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  mediump vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  tmpvar_5.w = 1.0;
  tmpvar_5.xyz = tmpvar_1.xyz;
  highp vec4 tmpvar_6;
  tmpvar_6 = (unity_ObjectToWorld * _glesVertex);
  highp mat3 tmpvar_7;
  tmpvar_7[0] = unity_WorldToObject[0].xyz;
  tmpvar_7[1] = unity_WorldToObject[1].xyz;
  tmpvar_7[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_glesNormal * tmpvar_7));
  highp vec3 tmpvar_9;
  highp vec3 I_10;
  I_10 = (tmpvar_6.xyz - _WorldSpaceCameraPos);
  tmpvar_9 = (I_10 - (2.0 * (
    dot (tmpvar_8, I_10)
   * tmpvar_8)));
  tmpvar_2 = tmpvar_9;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  tmpvar_4.xyz = ((tmpvar_6.xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
  highp vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = tmpvar_1.xyz;
  tmpvar_4.w = (-((unity_MatrixV * 
    (unity_ObjectToWorld * tmpvar_11)
  ).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_8;
  xlv_TEXCOORD3 = tmpvar_6.xyz;
  xlv_TEXCOORD4 = tmpvar_3;
  xlv_TEXCOORD5 = tmpvar_4;
}


#endif
#ifdef FRAGMENT
#extension GL_EXT_draw_buffers : enable
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform mediump sampler2D unity_Lightmap;
uniform mediump vec4 unity_Lightmap_HDR;
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec3 tmpvar_1;
  highp vec3 tmpvar_2;
  tmpvar_2 = xlv_TEXCOORD1;
  tmpvar_1 = xlv_TEXCOORD2;
  lowp vec3 tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_5;
  tmpvar_5 = (tmpvar_4 * _Color);
  tmpvar_3 = tmpvar_5.xyz;
  mediump vec3 normalWorld_6;
  normalWorld_6 = tmpvar_1;
  mediump vec3 ambient_7;
  mediump vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = normalWorld_6;
  mediump vec3 x_9;
  x_9.x = dot (unity_SHAr, tmpvar_8);
  x_9.y = dot (unity_SHAg, tmpvar_8);
  x_9.z = dot (unity_SHAb, tmpvar_8);
  mediump vec3 x1_10;
  mediump vec4 tmpvar_11;
  tmpvar_11 = (normalWorld_6.xyzz * normalWorld_6.yzzx);
  x1_10.x = dot (unity_SHBr, tmpvar_11);
  x1_10.y = dot (unity_SHBg, tmpvar_11);
  x1_10.z = dot (unity_SHBb, tmpvar_11);
  ambient_7 = max (vec3(0.0, 0.0, 0.0), (x_9 + (x1_10 + 
    (unity_SHC.xyz * ((normalWorld_6.x * normalWorld_6.x) - (normalWorld_6.y * normalWorld_6.y)))
  )));
  mediump vec3 tmpvar_12;
  tmpvar_12 = max (((1.055 * 
    pow (max (ambient_7, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  ambient_7 = tmpvar_12;
  mediump vec4 tmpvar_13;
  tmpvar_13 = texture2D (unity_Lightmap, xlv_TEXCOORD4.xy);
  lowp vec4 color_14;
  color_14 = tmpvar_13;
  mediump vec4 emission_15;
  mediump vec3 tmpvar_16;
  highp vec3 tmpvar_17;
  tmpvar_16 = tmpvar_3;
  tmpvar_17 = tmpvar_1;
  mediump vec4 outGBuffer2_18;
  mediump vec4 tmpvar_19;
  tmpvar_19.xyz = tmpvar_16;
  tmpvar_19.w = 1.0;
  mediump vec4 tmpvar_20;
  tmpvar_20.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_20.w = 0.0;
  highp vec4 tmpvar_21;
  tmpvar_21.w = 1.0;
  tmpvar_21.xyz = ((tmpvar_17 * 0.5) + 0.5);
  outGBuffer2_18 = tmpvar_21;
  lowp vec4 tmpvar_22;
  tmpvar_22.w = 1.0;
  tmpvar_22.xyz = ((textureCube (_Cube, tmpvar_2) * tmpvar_4.w).xyz * _ReflectColor.xyz);
  emission_15 = tmpvar_22;
  emission_15.xyz = (emission_15.xyz + (tmpvar_5.xyz * (tmpvar_12 + 
    (unity_Lightmap_HDR.x * color_14.xyz)
  )));
  gl_FragData[0] = tmpvar_19;
  gl_FragData[1] = tmpvar_20;
  gl_FragData[2] = outGBuffer2_18;
  gl_FragData[3] = emission_15;
}


#endif
"
}
}
Program "fp" {
SubProgram "gles hw_tier00 " {
""
}
SubProgram "gles hw_tier01 " {
""
}
SubProgram "gles hw_tier02 " {
""
}
SubProgram "gles hw_tier00 " {
Keywords { "LIGHTPROBE_SH" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTPROBE_SH" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTPROBE_SH" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "LIGHTMAP_ON" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTMAP_ON" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTMAP_ON" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "LIGHTMAP_ON" "LIGHTPROBE_SH" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTMAP_ON" "LIGHTPROBE_SH" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTMAP_ON" "LIGHTPROBE_SH" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "SHADOWS_SHADOWMASK" "UNITY_HDR_ON" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "SHADOWS_SHADOWMASK" "UNITY_HDR_ON" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "SHADOWS_SHADOWMASK" "UNITY_HDR_ON" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "UNITY_HDR_ON" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "UNITY_HDR_ON" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "UNITY_HDR_ON" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "LIGHTMAP_ON" "UNITY_HDR_ON" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTMAP_ON" "UNITY_HDR_ON" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTMAP_ON" "UNITY_HDR_ON" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "LIGHTMAP_ON" "LIGHTPROBE_SH" "UNITY_HDR_ON" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTMAP_ON" "LIGHTPROBE_SH" "UNITY_HDR_ON" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTMAP_ON" "LIGHTPROBE_SH" "UNITY_HDR_ON" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "UNITY_HDR_ON" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "UNITY_HDR_ON" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "UNITY_HDR_ON" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "UNITY_HDR_ON" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "UNITY_HDR_ON" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "UNITY_HDR_ON" }
""
}
}
}
 Pass {
  Name "META"
  LOD 200
  Tags { "LIGHTMODE" = "META" "RenderType" = "Opaque" }
  Cull Off
  GpuProgramID 346002
Program "vp" {
SubProgram "gles hw_tier00 " {
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesMultiTexCoord2;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 unity_DynamicLightmapST;
uniform bvec4 unity_MetaVertexControl;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 vertex_2;
  vertex_2 = _glesVertex;
  if (unity_MetaVertexControl.x) {
    vertex_2.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
    highp float tmpvar_3;
    if ((_glesVertex.z > 0.0)) {
      tmpvar_3 = 0.0001;
    } else {
      tmpvar_3 = 0.0;
    };
    vertex_2.z = tmpvar_3;
  };
  if (unity_MetaVertexControl.y) {
    vertex_2.xy = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
    highp float tmpvar_4;
    if ((vertex_2.z > 0.0)) {
      tmpvar_4 = 0.0001;
    } else {
      tmpvar_4 = 0.0;
    };
    vertex_2.z = tmpvar_4;
  };
  highp vec4 tmpvar_5;
  tmpvar_5.w = 1.0;
  tmpvar_5.xyz = vertex_2.xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_7;
  tmpvar_7[0] = unity_WorldToObject[0].xyz;
  tmpvar_7[1] = unity_WorldToObject[1].xyz;
  tmpvar_7[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_glesNormal * tmpvar_7));
  highp vec3 tmpvar_9;
  highp vec3 I_10;
  I_10 = (tmpvar_6 - _WorldSpaceCameraPos);
  tmpvar_9 = (I_10 - (2.0 * (
    dot (tmpvar_8, I_10)
   * tmpvar_8)));
  tmpvar_1 = tmpvar_9;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
uniform bvec4 unity_MetaFragmentControl;
uniform highp float unity_OneOverOutputBoost;
uniform highp float unity_MaxOutputValue;
uniform highp float unity_UseLinearSpace;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  highp vec3 tmpvar_4;
  tmpvar_4 = xlv_TEXCOORD1;
  lowp vec3 tmpvar_5;
  lowp vec3 tmpvar_6;
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_MainTex, xlv_TEXCOORD0);
  tmpvar_5 = (tmpvar_7 * _Color).xyz;
  tmpvar_6 = ((textureCube (_Cube, tmpvar_4) * tmpvar_7.w).xyz * _ReflectColor.xyz);
  tmpvar_2 = tmpvar_5;
  tmpvar_3 = tmpvar_6;
  mediump vec4 res_8;
  res_8 = vec4(0.0, 0.0, 0.0, 0.0);
  if (unity_MetaFragmentControl.x) {
    mediump vec4 tmpvar_9;
    tmpvar_9.w = 1.0;
    tmpvar_9.xyz = tmpvar_2;
    res_8.w = tmpvar_9.w;
    highp vec3 tmpvar_10;
    tmpvar_10 = clamp (pow (tmpvar_2, vec3(clamp (unity_OneOverOutputBoost, 0.0, 1.0))), vec3(0.0, 0.0, 0.0), vec3(unity_MaxOutputValue));
    res_8.xyz = tmpvar_10;
  };
  if (unity_MetaFragmentControl.y) {
    mediump vec3 emission_11;
    if (bool(unity_UseLinearSpace)) {
      emission_11 = tmpvar_3;
    } else {
      emission_11 = (tmpvar_3 * ((tmpvar_3 * 
        ((tmpvar_3 * 0.305306) + 0.6821711)
      ) + 0.01252288));
    };
    mediump vec4 tmpvar_12;
    tmpvar_12.w = 1.0;
    tmpvar_12.xyz = emission_11;
    res_8 = tmpvar_12;
  };
  tmpvar_1 = res_8;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesMultiTexCoord2;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 unity_DynamicLightmapST;
uniform bvec4 unity_MetaVertexControl;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 vertex_2;
  vertex_2 = _glesVertex;
  if (unity_MetaVertexControl.x) {
    vertex_2.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
    highp float tmpvar_3;
    if ((_glesVertex.z > 0.0)) {
      tmpvar_3 = 0.0001;
    } else {
      tmpvar_3 = 0.0;
    };
    vertex_2.z = tmpvar_3;
  };
  if (unity_MetaVertexControl.y) {
    vertex_2.xy = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
    highp float tmpvar_4;
    if ((vertex_2.z > 0.0)) {
      tmpvar_4 = 0.0001;
    } else {
      tmpvar_4 = 0.0;
    };
    vertex_2.z = tmpvar_4;
  };
  highp vec4 tmpvar_5;
  tmpvar_5.w = 1.0;
  tmpvar_5.xyz = vertex_2.xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_7;
  tmpvar_7[0] = unity_WorldToObject[0].xyz;
  tmpvar_7[1] = unity_WorldToObject[1].xyz;
  tmpvar_7[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_glesNormal * tmpvar_7));
  highp vec3 tmpvar_9;
  highp vec3 I_10;
  I_10 = (tmpvar_6 - _WorldSpaceCameraPos);
  tmpvar_9 = (I_10 - (2.0 * (
    dot (tmpvar_8, I_10)
   * tmpvar_8)));
  tmpvar_1 = tmpvar_9;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
uniform bvec4 unity_MetaFragmentControl;
uniform highp float unity_OneOverOutputBoost;
uniform highp float unity_MaxOutputValue;
uniform highp float unity_UseLinearSpace;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  highp vec3 tmpvar_4;
  tmpvar_4 = xlv_TEXCOORD1;
  lowp vec3 tmpvar_5;
  lowp vec3 tmpvar_6;
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_MainTex, xlv_TEXCOORD0);
  tmpvar_5 = (tmpvar_7 * _Color).xyz;
  tmpvar_6 = ((textureCube (_Cube, tmpvar_4) * tmpvar_7.w).xyz * _ReflectColor.xyz);
  tmpvar_2 = tmpvar_5;
  tmpvar_3 = tmpvar_6;
  mediump vec4 res_8;
  res_8 = vec4(0.0, 0.0, 0.0, 0.0);
  if (unity_MetaFragmentControl.x) {
    mediump vec4 tmpvar_9;
    tmpvar_9.w = 1.0;
    tmpvar_9.xyz = tmpvar_2;
    res_8.w = tmpvar_9.w;
    highp vec3 tmpvar_10;
    tmpvar_10 = clamp (pow (tmpvar_2, vec3(clamp (unity_OneOverOutputBoost, 0.0, 1.0))), vec3(0.0, 0.0, 0.0), vec3(unity_MaxOutputValue));
    res_8.xyz = tmpvar_10;
  };
  if (unity_MetaFragmentControl.y) {
    mediump vec3 emission_11;
    if (bool(unity_UseLinearSpace)) {
      emission_11 = tmpvar_3;
    } else {
      emission_11 = (tmpvar_3 * ((tmpvar_3 * 
        ((tmpvar_3 * 0.305306) + 0.6821711)
      ) + 0.01252288));
    };
    mediump vec4 tmpvar_12;
    tmpvar_12.w = 1.0;
    tmpvar_12.xyz = emission_11;
    res_8 = tmpvar_12;
  };
  tmpvar_1 = res_8;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesMultiTexCoord2;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 unity_DynamicLightmapST;
uniform bvec4 unity_MetaVertexControl;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 vertex_2;
  vertex_2 = _glesVertex;
  if (unity_MetaVertexControl.x) {
    vertex_2.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
    highp float tmpvar_3;
    if ((_glesVertex.z > 0.0)) {
      tmpvar_3 = 0.0001;
    } else {
      tmpvar_3 = 0.0;
    };
    vertex_2.z = tmpvar_3;
  };
  if (unity_MetaVertexControl.y) {
    vertex_2.xy = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
    highp float tmpvar_4;
    if ((vertex_2.z > 0.0)) {
      tmpvar_4 = 0.0001;
    } else {
      tmpvar_4 = 0.0;
    };
    vertex_2.z = tmpvar_4;
  };
  highp vec4 tmpvar_5;
  tmpvar_5.w = 1.0;
  tmpvar_5.xyz = vertex_2.xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_7;
  tmpvar_7[0] = unity_WorldToObject[0].xyz;
  tmpvar_7[1] = unity_WorldToObject[1].xyz;
  tmpvar_7[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_glesNormal * tmpvar_7));
  highp vec3 tmpvar_9;
  highp vec3 I_10;
  I_10 = (tmpvar_6 - _WorldSpaceCameraPos);
  tmpvar_9 = (I_10 - (2.0 * (
    dot (tmpvar_8, I_10)
   * tmpvar_8)));
  tmpvar_1 = tmpvar_9;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_1;
  xlv_TEXCOORD2 = tmpvar_6;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform lowp samplerCube _Cube;
uniform lowp vec4 _Color;
uniform lowp vec4 _ReflectColor;
uniform bvec4 unity_MetaFragmentControl;
uniform highp float unity_OneOverOutputBoost;
uniform highp float unity_MaxOutputValue;
uniform highp float unity_UseLinearSpace;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  highp vec3 tmpvar_4;
  tmpvar_4 = xlv_TEXCOORD1;
  lowp vec3 tmpvar_5;
  lowp vec3 tmpvar_6;
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_MainTex, xlv_TEXCOORD0);
  tmpvar_5 = (tmpvar_7 * _Color).xyz;
  tmpvar_6 = ((textureCube (_Cube, tmpvar_4) * tmpvar_7.w).xyz * _ReflectColor.xyz);
  tmpvar_2 = tmpvar_5;
  tmpvar_3 = tmpvar_6;
  mediump vec4 res_8;
  res_8 = vec4(0.0, 0.0, 0.0, 0.0);
  if (unity_MetaFragmentControl.x) {
    mediump vec4 tmpvar_9;
    tmpvar_9.w = 1.0;
    tmpvar_9.xyz = tmpvar_2;
    res_8.w = tmpvar_9.w;
    highp vec3 tmpvar_10;
    tmpvar_10 = clamp (pow (tmpvar_2, vec3(clamp (unity_OneOverOutputBoost, 0.0, 1.0))), vec3(0.0, 0.0, 0.0), vec3(unity_MaxOutputValue));
    res_8.xyz = tmpvar_10;
  };
  if (unity_MetaFragmentControl.y) {
    mediump vec3 emission_11;
    if (bool(unity_UseLinearSpace)) {
      emission_11 = tmpvar_3;
    } else {
      emission_11 = (tmpvar_3 * ((tmpvar_3 * 
        ((tmpvar_3 * 0.305306) + 0.6821711)
      ) + 0.01252288));
    };
    mediump vec4 tmpvar_12;
    tmpvar_12.w = 1.0;
    tmpvar_12.xyz = emission_11;
    res_8 = tmpvar_12;
  };
  tmpvar_1 = res_8;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
}
Program "fp" {
SubProgram "gles hw_tier00 " {
""
}
SubProgram "gles hw_tier01 " {
""
}
SubProgram "gles hw_tier02 " {
""
}
}
}
}
Fallback "Legacy Shaders/Reflective/VertexLit"
}